From: =?gb2312?B?0tHTySBXaW5kb3dzIEludGVybmV0IEV4cGxvcmVyIDEwILGjtOY=?=
Subject: =?gb2312?B?R2x1c3RlckZTvK/Ius7EvP7Ptc2z0dC+vyAtIMH1sK6587XE16jAuCAtILKp?=
	=?gb2312?B?v83GtbXAIC0gQ1NETi5ORVQ=?=
Date: Fri, 29 Jan 2016 13:39:36 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01D15A9A.7EA6D060"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7601.17609

这是 MIME 格式的多方邮件。

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: base64
Content-Location: http://blog.csdn.net/liuaigui/article/details/6284551

77u/PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlv
bmFsLy9FTiIgImh0dHA6Ly93d3cudzNjLm9yZy9UUi8xOTk5L1JFQy1odG1sNDAxLTE5OTkxMjI0
L2xvb3NlLmR0ZCI+DQo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEu
MCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRt
bDEtc3RyaWN0LmR0ZCI+PEhUTUwgDQp4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRt
bCI+PEhFQUQ+PE1FVEEgY29udGVudD0iSUU9MTAuMDAwIiANCmh0dHAtZXF1aXY9IlgtVUEtQ29t
cGF0aWJsZSI+DQogICAgICAgICAgICAgICAgDQo8U0NSSVBUIHNyYz0iaHR0cDovL2MuY3Nkbmlt
Zy5jbi9wdWJmb290ZXIvanMvdHJhY2tpbmcuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgY2hh
cnNldD0idXRmLTgiPjwvU0NSSVBUPg0KICAgICAgDQo8U0NSSVBUIHR5cGU9InRleHQvamF2YXNj
cmlwdCI+CiAgICAgICAgdmFyIHByb3RvY29sID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sOwog
ICAgICAgIGRvY3VtZW50LndyaXRlKCc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3Jj
PSInICsgcHJvdG9jb2wgKyAnLy9jc2RuaW1nLmNuL3B1YmZvb3Rlci9qcy9yZXBvQWRkcjIuanM/
dj0nICsgTWF0aC5yYW5kb20oKSArICciPjwvJyArICdzY3JpcHQ+Jyk7CiAgICA8L1NDUklQVD4N
CiAgICANCjxNRVRBIGh0dHAtZXF1aXY9IkNhY2hlLUNvbnRyb2wiIGNvbnRlbnQ9Im5vLXNpdGVh
cHAiPjxMSU5LIGhyZWY9IiMiIHJlbD0iYWx0ZXJuYXRlIiANCm1lZGlhPSJoYW5kaGVsZCI+ICAg
ICA8VElUTEU+R2x1c3RlckZT6ZuG576k5paH5Lu257O757uf56CU56m2IC0g5YiY54ix6LS155qE
5LiT5qCPICAgICAgICAgLSDljZrlrqLpopHpgZMgLSANCkNTRE4uTkVUPC9USVRMRT4gICAgIA0K
PE1FVEEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJz
ZXQ9dXRmLTgiPiAgICAgDQo8TUVUQSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iSGlnaENo
YXJ05piv6ZuG5ZCI5LqG5ZCE56eN5bi46KeB55qEd2Vi5Zu+6KGo55qE5byA5rqQ5ZCI6ZuG77yM
5YW25Lit5Lqn55Sf6IKh56WoS+e6v+WbvueahOmDqOWIhuWPq+WBmuKAnEhpZ2hTdG9ja+KAneOA
guWkp+WutuWmguaenOmcgOimgeWPr+S7peWIsOaIkeeahOi1hOa6kOmhteS4i+i9ve+8jOaYr+ac
gOaWsOeJiO+8mmh0dHA6Ly9kb3dubG9hZC5jc2RuLm5ldC9kZXRhaWwvd2FuZ3l1Y2h1bl83OTkv
OTM1MzUyNeW9k+eEtu+8jOWkp+WutuS5n+WPr+S7peWOu0hpZ2hDaGFydOWumOe9keS4i+i9veOA
guS9huaYr+eUseS6juS4jeWQjOeJiOacrOWvueWPguaVsOeahOiuvue9ruaWueW8j+S4jeWQjO+8
jOaJgOS7pe+8jOi/mOaYr+W7uuiurumYheivu+acrOaWh+eahOivu+iAheWcqOaIkeeahOi1hOa6
kCI+IA0KICAgIA0KPFNDUklQVCBzcmM9Imh0dHA6Ly9zdGF0aWMuYmxvZy5jc2RuLm5ldC9zY3Jp
cHRzL2pxdWVyeS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L1NDUklQVD4NCiAgICAgDQo8
U0NSSVBUIHNyYz0iaHR0cDovL3N0YXRpYy5ibG9nLmNzZG4ubmV0L3NjcmlwdHMvYWQuanM/dj0x
LjEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQogICAgICAgICA8IS0tbmV3IHRv
cC0tPiAgICAgICAgICAgICAgICA8TElOSyBocmVmPSJodHRwOi8vYy5jc2RuaW1nLmNuL3B1Ymxp
Yy9jb21tb24vdG9vbGJhci9jc3MvaW5kZXguY3NzIiANCnJlbD0ic3R5bGVzaGVldCI+ICAgICAg
ICAgPCEtLW5ldyB0b3AtLT4gICAgIDxMSU5LIGhyZWY9Imh0dHA6Ly9zdGF0aWMuYmxvZy5jc2Ru
Lm5ldC9za2luL2xpZ2h0X2JsdWUvY3NzL3N0eWxlLmNzcz92PTEuMSIgDQpyZWw9IlN0eWxlc2hl
ZXQiIHR5cGU9InRleHQvY3NzIj4gICAgIDxMSU5LIHRpdGxlPSJSU1MiIGlkPSJSU1NMaW5rIiBo
cmVmPSIvbGl1YmVuL3Jzcy9saXN0IiANCnJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJhcHBsaWNhdGlv
bi9yc3MreG1sIj4gICAgIDxMSU5LIGhyZWY9Imh0dHA6Ly9jLmNzZG5pbWcuY24vcHVibGljL2Zh
dmljb24uaWNvIiANCnJlbD0ic2hvcnRjdXQgaWNvbiI+ICAgICA8TElOSyBocmVmPSJodHRwOi8v
c3RhdGljLmJsb2cuY3Nkbi5uZXQvc2NyaXB0cy9TeW50YXhIaWdobGlnaHRlci9zdHlsZXMvbm9i
Zy5jc3MiIA0KcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+ICANCjxNRVRBIG5hbWU9
IkdFTkVSQVRPUiIgY29udGVudD0iTVNIVE1MIDEwLjAwLjkyMDAuMTc0NTciPjwvSEVBRD4gDQo8
Qk9EWT48IS0tbmV3IHRvcC0tPiAgICAgDQo8U0NSSVBUIGlkPSJ0b29sYmFyLXRwbC1zY3JpcHRJ
ZCIgc3JjPSJodHRwOi8vYy5jc2RuaW1nLmNuL3B1YmxpYy9jb21tb24vdG9vbGJhci9qcy9odG1s
LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNraW49ImJsYWNrIiBwcm9kPSJibG9nIiBmaXhl
ZD0idHJ1ZSI+PC9TQ1JJUFQ+DQogICAgICA8IS0tbmV3IHRvcC0tPiAgICAgDQo8RElWIGlkPSJj
b250YWluZXIiPg0KPERJViBpZD0iaGVhZGVyIj4NCjxESVYgY2xhc3M9ImhlYWRlciI+DQo8RElW
IGlkPSJibG9nX3RpdGxlIj4NCjxIMj48QSBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVh
aWd1aSI+5YiY54ix6LS155qE5LiT5qCPPC9BPjwvSDI+DQo8SDM+5Lit56eR6Zmi5Y2a5aOr77yM
6ZW/5pyf5LuO5LqL5a2Y5YKo6aKG5Z+f56CU5Y+R5bel5L2c77yM5YiG5byP5a2Y5YKo6LWE5rex
55CG6K6656CU56m25LiO5a6e6Le16ICF77yMR2x1c3RlckZTIOaKgOacr+S4k+Wutu+8jOW9k+WJ
jeS4k+azqOS6jlNlcnZlciBTQU7jgII8L0gzPg0KPERJViBjbGFzcz0iY2xlYXIiPjwvRElWPjwv
RElWPg0KPERJViBjbGFzcz0iY2xlYXIiPjwvRElWPjwvRElWPjwvRElWPg0KPERJViBpZD0ibmF2
aWdhdG9yIj4NCjxESVYgY2xhc3M9Im5hdmlnYXRvcl9iZyI+PC9ESVY+DQo8RElWIGNsYXNzPSJu
YXZpZ2F0b3IiPg0KPFVMPg0KICA8TEkgaWQ9ImJ0bkNvbnRlbnRzIj48QSANCiAgaHJlZj0iaHR0
cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWk/dmlld21vZGU9Y29udGVudHMiPjxTUEFOIG9uY2xp
Y2s9Il9nYXEucHVzaChbJ190cmFja0V2ZW50JywnZnVuY3Rpb24nLCAnb25jbGljaycsICdibG9n
X2FydGljbGVzX211bHUnXSkiPjxJTUcgDQogIHNyYz0iaHR0cDovL3N0YXRpYy5ibG9nLmNzZG4u
bmV0L2ltYWdlcy9pY29fbGlzdC5naWYiPuebruW9leinhuWbvjwvU1BBTj48L0E+PC9MST4gICAg
IA0KICAgICAgICAgICAgICANCiAgPExJIGlkPSJidG5WaWV3Ij48QSBocmVmPSJodHRwOi8vYmxv
Zy5jc2RuLm5ldC9saXVhaWd1aT92aWV3bW9kZT1saXN0Ij48U1BBTiANCiAgb25jbGljaz0iX2dh
cS5wdXNoKFsnX3RyYWNrRXZlbnQnLCdmdW5jdGlvbicsICdvbmNsaWNrJywgJ2Jsb2dfYXJ0aWNs
ZXNfemhhaXlhbyddKSI+PElNRyANCiAgc3JjPSJodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQv
aW1hZ2VzL2ljb19zdW1tYXJ5LmdpZiI+5pGY6KaB6KeG5Zu+PC9TUEFOPjwvQT48L0xJPiAgDQog
ICAgICAgICAgICAgICAgIA0KICA8TEkgaWQ9ImJ0blJzcyI+PEEgaHJlZj0iaHR0cDovL2Jsb2cu
Y3Nkbi5uZXQvbGl1YWlndWkvcnNzL2xpc3QiPjxTUEFOIA0KICBvbmNsaWNrPSJfZ2FxLnB1c2go
WydfdHJhY2tFdmVudCcsJ2Z1bmN0aW9uJywgJ29uY2xpY2snLCAnYmxvZ19hcnRpY2xlc19SU1Mn
XSkiPjxJTUcgDQogIHNyYz0iaHR0cDovL3N0YXRpYy5ibG9nLmNzZG4ubmV0L2ltYWdlcy9pY29f
cnNzLmdpZiI+6K6i6ZiFPC9TUEFOPjwvQT48L0xJPiAgICAgICAgDQogICAgICAgICAgICAgICAg
ICAgICAgPC9VTD48L0RJVj48L0RJVj4NCjxTQ1JJUFQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4K
ICAgIHZhciB1c2VybmFtZSA9ICJsaXViZW4iOwogICAgdmFyIF9ibG9nZ2VyID0gdXNlcm5hbWU7
CiAgICB2YXIgYmxvZ19hZGRyZXNzID0gImh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpIjsK
ICAgIHZhciBzdGF0aWNfaG9zdCA9ICJodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQiOwogICAg
dmFyIGN1cnJlbnRVc2VyTmFtZSA9ICJuYXJyeSI7ICAKPC9TQ1JJUFQ+DQogICAgICAgICANCjxE
SVYgaWQ9ImJvZHkiPg0KPERJViBpZD0ibWFpbiI+DQo8RElWIGNsYXNzPSJtYWluIj4NCjxESVYg
Y2xhc3M9ImFkX2NsYXNzIj4NCjxESVYgY2xhc3M9Im5vdGljZSB0cmFja2luZy1hZCIgZGF0YS1t
b2Q9InBvcHVfMyI+PEEgaHJlZj0iaHR0cDovL2h1aXlpLmNzZG4ubmV0L2FjdGl2aXR5L3Byb2R1
Y3QvZ29vZHNfbGlzdD9wcm9qZWN0X2lkPTI3NDEiPjxGT05UIA0KY29sb3I9InJlZCI+MjAxNui9
r+iAg+mhueebrue7j+eQhuWunuaImOePrSA8L0ZPTlQ+PC9BPiAmbmJzcDsmbmJzcDsmbmJzcDs8
QSBocmVmPSJodHRwOi8vZWR1LmNzZG4ubmV0L3llYXJQcm9tb3Rpb24iPjxGT05UIA0KY29sb3I9
ImJsdWUiPuWtpumZouWRqOW5tOekvC3pobblsJbor77nqIvpkpzmg6DlkYjnjrAgPC9GT05UPjwv
QT4gJm5ic3A7Jm5ic3A7Jm5ic3A7PEEgaHJlZj0iaHR0cDovL2h1aXlpLmNzZG4ubmV0L2FjdGl2
aXR5L3Byb2R1Y3QvZ29vZHNfbGlzdD9wcm9qZWN0X2lkPTI3OTIiPjxGT05UIA0KY29sb3I9InJl
ZCI+SGFkb29w6Iux6ZuE5Lya4oCU5pqoSGFkb29wIDEw5ZGo5bm055Sf5pel5aSn6La0PC9GT05U
PiAmbmJzcDsmbmJzcDsmbmJzcDs8QSBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9kYmFfaHVh
bmd6ai9hcnRpY2xlL2RldGFpbHMvNTA0NjkxODUiPiANCjxGT05UIGNvbG9yPSJibHVlIj7jgJDl
jZrlrqLkuJPlrrbjgJHmnInlpZbor5Xor7vigJRXaW5kb3dzIFBvd2VyU2hlbGzlrp7miJjmjIfl
jZcgPC9GT05UPjwvQT4gPC9ESVY+PC9ESVY+PCEtLUFkRm9yd2FyZCBCZWdpbjotLT4gDQo8U0NS
SVBUIHNyYz0iaHR0cDovL2NyZWF0aW0ucXRtb2pvLmNuL3RkL0FsbHllc0RlbGl2ZXIubWluLmpz
IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9ImdiayIgYWRzLXNyYz0iaHR0cDovL2Nz
ZG5pbS5xdG1vam8uY29tL21haW4vcz91c2VyPWNzZG58YmxvZ3xmdW1laXRpJmFtcDtkYj1jc2Ru
aW0mYW1wO2JvcmRlcj0wJmFtcDtsb2NhbD15ZXMmYW1wO2pzPWllIj48L1NDUklQVD4NCiA8IS0t
QWRGb3J3YXJkIEVuZC0tPiAgIDxMSU5LIGhyZWY9Imh0dHA6Ly9zdGF0aWMuYmxvZy5jc2RuLm5l
dC9jc3MvY29tbWVudDEuY3NzIiANCnJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiPiA8
TElOSyBocmVmPSJodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvY3NzL3N0eWxlMS5jc3MiIA0K
cmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+IA0KPFNDUklQVCBsYW5ndWFnZT0iSmF2
YVNjcmlwdCIgc3JjPSJodHRwOi8vZG93bmxvYWQuY3Nkbi5uZXQvanMvanF1ZXJ5LmNvb2tpZS5q
cyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L1NDUklQVD4NCiANCjxTQ1JJUFQgc3JjPSJodHRw
Oi8vYy5jc2RuaW1nLmNuL3JhYmJpdC9zZWFyY2gtc2VydmljZS9tYWluLmpzIiB0eXBlPSJ0ZXh0
L2phdmFzY3JpcHQiPjwvU0NSSVBUPg0KIDxMSU5LIGhyZWY9Imh0dHA6Ly9zdGF0aWMuYmxvZy5j
c2RuLm5ldC9wdWJsaWMvcmVzLW1pbi9tYXJrZG93bl92aWV3cy5jc3M/dj0xLjAiIA0KcmVsPSJz
dHlsZXNoZWV0Ij4gPExJTksgaHJlZj0iaHR0cDovL3N0YXRpYy5ibG9nLmNzZG4ubmV0L2Nzcy9j
YXRlZ29yeS5jc3M/dj0xLjAiIA0KcmVsPSJzdHlsZXNoZWV0Ij4gDQo8U0NSSVBUIHNyYz0iaHR0
cDovL3N0YXRpYy5ibG9nLmNzZG4ubmV0L3B1YmxpYy9yZXMvYm93ZXItbGlicy9NYXRoSmF4L01h
dGhKYXguanM/Y29uZmlnPVRlWC1BTVNfSFRNTCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L1ND
UklQVD4NCiAgIA0KPFNDUklQVCB0eXBlPSJ0ZXh0L2VjbWFzY3JpcHQiPgogICAgICB3aW5kb3cu
cXVpY2tSZXBseWZsYWcgPSB0cnVlOwogICAgICAgICAgIAogICAgICAgICAgICB2YXIgaXNCb2xl
ID0gZmFsc2U7CiAgICAgICAgICAgIAogICAgICAgICAgCiAgICA8L1NDUklQVD4NCiANCjxESVYg
Y2xhc3M9ImRldGFpbHMiIGlkPSJhcnRpY2xlX2RldGFpbHMiPg0KPERJViBjbGFzcz0iYXJ0aWNs
ZV90aXRsZSI+PFNQQU4gY2xhc3M9ImljbyBpY29fdHlwZV9PcmlnaW5hbCI+PC9TUEFOPiAgICAg
DQo8SDE+PFNQQU4gY2xhc3M9ImxpbmtfdGl0bGUiPjxBIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4u
bmV0L2xpdWFpZ3VpL2FydGljbGUvZGV0YWlscy82Mjg0NTUxIj4gDQogICAgICAgR2x1c3RlckZT
6ZuG576k5paH5Lu257O757uf56CU56m2ICAgICAgICAgICAgICAgICAgICAgPC9BPjwvU1BBTj4g
ICAgIDwvSDE+IDwvRElWPg0KPERJViBjbGFzcz0iYXJ0aWNsZV9tYW5hZ2UgY2xlYXJmaXgiPg0K
PERJViBjbGFzcz0iYXJ0aWNsZV9sIj48U1BBTiBjbGFzcz0ibGlua19jYXRlZ29yaWVzIj4gICAg
ICAgICAgICDmoIfnrb7vvJogICAgICAgICAgICAgDQogIDxBIG9uY2xpY2s9Il9nYXEucHVzaChb
J190cmFja0V2ZW50JywnZnVuY3Rpb24nLCAnb25jbGljaycsICdibG9nX2FydGljbGVzX3RhZydd
KTsiIA0KaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvJWU1JTg4JTg2JWU1JWI4JTgzJWU1
JWJjJThmJWU2JTk2JTg3JWU0JWJiJWI2JWU3JWIzJWJiJWU3JWJiJTlmIiANCnRhcmdldD0iX2Js
YW5rIj7liIbluIPlvI/mlofku7bns7vnu588L0E+PEEgb25jbGljaz0iX2dhcS5wdXNoKFsnX3Ry
YWNrRXZlbnQnLCdmdW5jdGlvbicsICdvbmNsaWNrJywgJ2Jsb2dfYXJ0aWNsZXNfdGFnJ10pOyIg
DQpocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy9HbHVzdGVyRlMiIHRhcmdldD0iX2JsYW5r
Ij5HbHVzdGVyRlM8L0E+ICAgICAgICAgICANCiAgPC9TUEFOPiAgICAgICAgIDwvRElWPg0KPERJ
ViBjbGFzcz0iYXJ0aWNsZV9yIj48U1BBTiBjbGFzcz0ibGlua19wb3N0ZGF0ZSI+MjAxMS0wMy0y
OCAyMTowMTwvU1BBTj4gICAgICAgDQogICAgICA8U1BBTiB0aXRsZT0i6ZiF6K+75qyh5pWwIiBj
bGFzcz0ibGlua192aWV3Ij42MzE5NuS6uumYheivuzwvU1BBTj4gICAgICAgICAgICAgPFNQQU4g
DQp0aXRsZT0i6K+E6K665qyh5pWwIiBjbGFzcz0ibGlua19jb21tZW50cyI+PEEgb25jbGljaz0i
X2dhcS5wdXNoKFsnX3RyYWNrRXZlbnQnLCdmdW5jdGlvbicsICdvbmNsaWNrJywgJ2Jsb2dfYXJ0
aWNsZXNfcGluZ2x1biddKSIgDQpocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9h
cnRpY2xlL2RldGFpbHMvNjI4NDU1MSNjb21tZW50cyI+6K+E6K66PC9BPigyMTQpPC9TUEFOPiAN
CiAgICAgICAgICAgIDxTUEFOIGNsYXNzPSJsaW5rX2NvbGxlY3QgdHJhY2tpbmctYWQiIGRhdGEt
bW9kPSJwb3B1XzE3MSI+PEEgdGl0bGU9IuaUtuiXjyIgDQpvbmNsaWNrPSJqYXZhc2NyaXB0OmNv
bGxlY3RBcnRpY2xlKCdHbHVzdGVyRlPpm4bnvqTmlofku7bns7vnu5/noJTnqbYnLCc2Mjg0NTUx
Jyk7cmV0dXJuIGZhbHNlOyIgDQpocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7mlLbol488L0E+
PC9TUEFOPiAgICAgICAgICAgICAgPFNQQU4gDQpjbGFzcz0ibGlua19yZXBvcnQiPjxBIHRpdGxl
PSLkuL7miqUiIG9uY2xpY2s9ImphdmFzY3JpcHQ6cmVwb3J0KDYyODQ1NTEsMik7cmV0dXJuIGZh
bHNlOyIgDQpocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRpY2xlL2RldGFp
bHMvNjI4NDU1MSNyZXBvcnQiPuS4vuaKpTwvQT48L1NQQU4+IA0KICAgICAgICA8L0RJVj48L0RJ
Vj4NCjxESVYgY2xhc3M9ImNhdGVnb3J5IGNsZWFyZml4Ij4NCjxESVYgY2xhc3M9ImNhdGVnb3J5
X2wiPjxJTUcgc3JjPSJodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvaW1hZ2VzL2NhdGVnb3J5
X2ljb24uanBnIj4gDQogICAgICAgICAgICA8U1BBTj7liIbnsbvvvJo8L1NQQU4+ICAgICAgICAg
PC9ESVY+DQo8RElWIGNsYXNzPSJjYXRlZ29yeV9yIj48TEFCRUwgb25jbGljaz0iR2V0Q2F0ZWdv
cnlBcnRpY2xlcygnNjE2NjI1JywnbGl1YmVuJywndG9wJywnNjI4NDU1MScpOyI+PFNQQU4gDQpv
bmNsaWNrPSJfZ2FxLnB1c2goWydfdHJhY2tFdmVudCcsJ2Z1bmN0aW9uJywgJ29uY2xpY2snLCAn
YmxvZ19hcnRpY2xlc19mZW5sZWknXSk7Ij7orqHnrpfmnLrnkIborro8RU0+77yIMjHvvIk8L0VN
PjwvU1BBTj4gDQogICAgICAgICAgICAgICAgICAgICAgPElNRyBjbGFzcz0iYXJyb3ctZG93biIg
c3R5bGU9ImRpc3BsYXk6IGlubGluZTsiIHNyYz0iaHR0cDovL3N0YXRpYy5ibG9nLmNzZG4ubmV0
L2ltYWdlcy9hcnJvd190cmlhbmdsZSUyMF9kb3duLmpwZyI+IA0KICAgICAgICAgICAgICAgICAg
ICAgIDxJTUcgY2xhc3M9ImFycm93LXVwIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiIHNyYz0iaHR0
cDovL3N0YXRpYy5ibG9nLmNzZG4ubmV0L2ltYWdlcy9hcnJvd190cmlhbmdsZV91cC5qcGciPiAN
CiAgICAgICAgICAgICAgICAgICAgICAgIA0KPERJViBjbGFzcz0ic3ViSXRlbSI+DQo8RElWIGNs
YXNzPSJzdWJJdGVtX3QiPjxBIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRp
Y2xlL2NhdGVnb3J5LzYxNjYyNSIgDQp0YXJnZXQ9Il9ibGFuayI+5L2c6ICF5ZCM57G75paH56ug
PC9BPjxJIGNsYXNzPSJKX2Nsb3NlIj5YPC9JPjwvRElWPg0KPFVMIGNsYXNzPSJzdWJJdGVtX2wi
IGlkPSJ0b3BfNjE2NjI1Ij48L1VMPjwvRElWPjwvTEFCRUw+PExBQkVMIG9uY2xpY2s9IkdldENh
dGVnb3J5QXJ0aWNsZXMoJzM3Mzc1MScsJ2xpdWJlbicsJ3RvcCcsJzYyODQ1NTEnKTsiPjxTUEFO
IA0Kb25jbGljaz0iX2dhcS5wdXNoKFsnX3RyYWNrRXZlbnQnLCdmdW5jdGlvbicsICdvbmNsaWNr
JywgJ2Jsb2dfYXJ0aWNsZXNfZmVubGVpJ10pOyI+5pWw5o2u5a2Y5YKoPEVNPu+8iDc477yJPC9F
TT48L1NQQU4+IA0KICAgICAgICAgICAgICAgICAgICAgIDxJTUcgY2xhc3M9ImFycm93LWRvd24i
IHN0eWxlPSJkaXNwbGF5OiBpbmxpbmU7IiBzcmM9Imh0dHA6Ly9zdGF0aWMuYmxvZy5jc2RuLm5l
dC9pbWFnZXMvYXJyb3dfdHJpYW5nbGUlMjBfZG93bi5qcGciPiANCiAgICAgICAgICAgICAgICAg
ICAgICA8SU1HIGNsYXNzPSJhcnJvdy11cCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7IiBzcmM9Imh0
dHA6Ly9zdGF0aWMuYmxvZy5jc2RuLm5ldC9pbWFnZXMvYXJyb3dfdHJpYW5nbGVfdXAuanBnIj4g
DQogICAgICAgICAgICAgICAgICAgICAgICANCjxESVYgY2xhc3M9InN1Ykl0ZW0iPg0KPERJViBj
bGFzcz0ic3ViSXRlbV90Ij48QSBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0
aWNsZS9jYXRlZ29yeS8zNzM3NTEiIA0KdGFyZ2V0PSJfYmxhbmsiPuS9nOiAheWQjOexu+aWh+er
oDwvQT48SSBjbGFzcz0iSl9jbG9zZSI+WDwvST48L0RJVj4NCjxVTCBjbGFzcz0ic3ViSXRlbV9s
IiBpZD0idG9wXzM3Mzc1MSI+PC9VTD48L0RJVj48L0xBQkVMPjwvRElWPjwvRElWPg0KPFNDUklQ
VCBzcmM9Imh0dHA6Ly9zdGF0aWMuYmxvZy5jc2RuLm5ldC9zY3JpcHRzL2NhdGVnb3J5LmpzIiB0
eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvU0NSSVBUPg0KICAgICAgICAgIA0KPERJViBjbGFzcz0i
Ym9nX2NvcHlyaWdodCI+DQo8UCBjbGFzcz0iY29weXJpZ2h0X3AiPueJiOadg+WjsOaYju+8muac
rOaWh+S4uuWNmuS4u+WOn+WIm+aWh+eroO+8jOacque7j+WNmuS4u+WFgeiuuOS4jeW+l+i9rOi9
veOAgjwvUD48L0RJVj4NCjxESVYgY2xhc3M9ImFydGljbGVfY29udGVudCIgaWQ9ImFydGljbGVf
Y29udGVudCI+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBw
dDsgdGV4dC1hbGlnbjogY2VudGVyOyI+PEEgbmFtZT0iX1RvYzI4ODU4MDIzNyIgDQp0YXJnZXQ9
Il9ibGFuayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1Nzk4OTAiIHRhcmdldD0iX2JsYW5rIj48L0E+
PEEgbmFtZT0iX1RvYzI4ODU3OTgxNSIgDQp0YXJnZXQ9Il9ibGFuayI+PC9BPjxBIG5hbWU9Il9U
b2MyODg1Nzk3MDgiIHRhcmdldD0iX2JsYW5rIj48L0E+PEEgbmFtZT0iX1RvYzI4ODU3OTYwMCIg
DQp0YXJnZXQ9Il9ibGFuayI+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gbGFuZz0iRU4t
VVMiPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsgZm9udC1zaXplOiAxMnB4OyI+
Jm5ic3A7PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9BPjxTUEFO
PjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxBIA0KbmFtZT0iX1RvYzI4OTA5NTg3MyIgdGFyZ2V0
PSJfYmxhbmsiPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0ibGluZS1oZWlnaHQ6IDI0MCU7IGZv
bnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMjZwdDsiPkdsdXN0ZXJGUzwvU1BBTj48L0E+
PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BB
Tj48U1BBTj48U1BBTj48U1BBTiANCnN0eWxlPSJsaW5lLWhlaWdodDogMjQwJTsgZm9udC1mYW1p
bHk6IOWui+S9kzsgZm9udC1zaXplOiAyNnB0OyI+6ZuG576k5paH5Lu257O757uf56CU56m2PC9T
UEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvUD4NCjxQIGFs
aWduPSJjZW50ZXIiIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0
OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAyMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJNc29Ob3Jt
YWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48U1BB
TiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAyMnB0OyI+PC9TUEFOPjwvUD4NCjxQ
IGFsaWduPSJjZW50ZXIiIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20g
MHB0OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9u
dC1zaXplOiAyMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJNc29O
b3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48
U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAyMnB0OyI+PC9TUEFOPjwvUD4N
CjxQIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAw
Y20gMHB0OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDIycHQ7Ij7liJjniLHotLU8L1NQQU4+PFNQQU4gbGFuZz0iRU4t
VVMiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyBmb250LXNpemU6IDEycHg7
Ij4mbmJzcDs8L1NQQU4+PC9TUEFOPjwvUD4NCjxIMiBzdHlsZT0ibWFyZ2luOiAxM3B0IDBjbSAx
M3B0IDIxcHQ7IGxpbmUtaGVpZ2h0OiAxNzIlOyB0ZXh0LWluZGVudDogLTIxcHQ7IHBhZ2UtYnJl
YWstYmVmb3JlOiBhbHdheXM7Ij48QSANCm5hbWU9Il9Ub2MyODkwOTU4NzQiIHRhcmdldD0iX2Js
YW5rIj48L0E+PEEgbmFtZT0iX1RvYzI4ODU4MDIzOSIgDQp0YXJnZXQ9Il9ibGFuayI+PC9BPjxB
IG5hbWU9Il9Ub2MyODg1Nzk4OTEiIHRhcmdldD0iX2JsYW5rIj48L0E+PEEgbmFtZT0iX1RvYzI4
ODU3OTgxNiIgDQp0YXJnZXQ9Il9ibGFuayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1Nzk2MDEiIA0K
dGFyZ2V0PSJfYmxhbmsiPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIGxhbmc9IkVOLVVT
Ij48U1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbWJyaWE7IGZvbnQtc2l6ZTogMThw
eDsiPjEuPC9TUEFOPjxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBS
b21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5i
c3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTiBs
YW5nPSJFTi1VUyI+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYW1icmlhOyBmb250LXNpemU6
IDE4cHg7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BB
Tj48L0E+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMThweDsiPuamgui/sDwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L0gyPg0KPFA+
PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRl
eHQtaW5kZW50OiAyMXB0OyI+PFNQQU4gbGFuZz0iRU4tVVMiPjxBIA0KaHJlZj0iaHR0cDovL3d3
dy5nbHVzdGVyLmNvbS9wcm9kdWN0cy9nbHVzdGVyZnMvIiB0YXJnZXQ9Il9ibGFuayI+PFNQQU4g
c3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImNvbG9yOiByZ2IoMCwgMCwg
MjU1KTsgZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjwvQT48
L1NQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0
OyI+5pivPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5TY2FsZS1PdXQ8L1NQQU4+PC9T
UEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7l
rZjlgqjop6PlhrPmlrnmoYg8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQt
c2l6ZTogMTJwdDsiPjxBIGhyZWY9Imh0dHA6Ly93d3cuZ2x1c3Rlci5jb20vIiB0YXJnZXQ9Il9i
bGFuayI+PFNQQU4gDQpzdHlsZT0iY29sb3I6IHJnYigwLCAwLCAyNTUpOyBmb250LWZhbWlseTog
Q2FsaWJyaTsiPkdsdXN0ZXI8L1NQQU4+PC9BPjwvU1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZh
bWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nmoTmoLjlv4PvvIzlroPmmK/kuIDkuKrl
vIDmupDnmoTliIbluIPlvI/mlofku7bns7vnu5/vvIzlhbfmnInlvLrlpKfnmoTmqKrlkJHmianl
sZXog73lipvvvIzpgJrov4fmianlsZXog73lpJ/mlK/mjIHmlbA8L1NQQU4+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiBDYWxpYnJpOyI+UEI8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lrZjlgqjlrrnph4/lkozlpITnkIbmlbDljYPlrqLm
iLfnq6/jgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJw
dDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFO
PjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0
OyI+5YCf5YqpPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEy
cHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPlRDUC9JUDwvU1BBTj48
L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsi
PuaIljwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5JbmZpbmlCYW5kIFJETUE8L1NQ
QU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEy
cHQ7Ij7nvZHnu5zlsIbniannkIbliIbluIPnmoTlrZjlgqjotYTmupDogZrpm4blnKjkuIDotbfv
vIzkvb/nlKjljZXkuIDlhajlsYDlkb3lkI3nqbrpl7TmnaXnrqHnkIbmlbDmja7jgII8L1NQQU4+
PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBz
dHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Z+65LqO5Y+v5aCG
5Y+g55qE55So5oi356m66Ze06K6+6K6h77yM5Y+v5Li65ZCE56eN5LiN5ZCM55qE5pWw5o2u6LSf
6L295o+Q5L6b5LyY5byC55qE5oCn6IO944CCPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgYWxpZ249ImNlbnRlciIgY2xh
c3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtYWxpZ246IGNl
bnRlcjsiPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQ
QU4+PFNQQU4gbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9Q
Pg0KPFAgYWxpZ249ImNlbnRlciIgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNt
IDBjbSAwcHQ7IHRleHQtYWxpZ246IGNlbnRlcjsiPjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IOWNjuaWh+S7v+WuizsgZm9udC1zaXplOiAxMnB0OyI+PElNRyB3aWR0aD0iMzAw
IiBoZWlnaHQ9IjI0MiIgYWx0PSIiIA0Kc3JjPSJodHRwOi8vaGkuY3Nkbi5uZXQvYXR0YWNobWVu
dC8yMDExMDMvMjUvNDQxNjRfMTMwMTA0ODgxMjFQNXQucG5nIj48L1NQQU4+PC9TVFJPTkc+PC9Q
Pg0KPFAgYWxpZ249ImNlbnRlciIgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNt
IDBjbSAwcHQ7IHRleHQtYWxpZ246IGNlbnRlcjsiPjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IOWNjuaWh+S7v+WuizsgZm9udC1zaXplOiAxMnB0OyI+5Zu+PFNQQU4gbGFuZz0i
RU4tVVMiPjEgDQpHbHVzdGVyRlM8L1NQQU4+57uf5LiA55qE5oyC6L2954K5PFNQQU4gbGFuZz0i
RU4tVVMiPjwvU1BBTj48L1NQQU4+PC9TVFJPTkc+PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIg
c3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4gbGFu
Zz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQt
ZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9u
dC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5pSv5oyB6L+Q6KGM5Zyo5Lu75L2V
5qCH5YeGPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7
Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPklQPC9TUEFOPjwvU1BBTj48
U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+572R57uc
5LiK5qCH5YeG5bqU55So56iL5bqP55qE5qCH5YeG5a6i5oi356uv77yM5aaC5Zu+PC9TUEFOPjxT
UEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxl
PSJmb250LWZhbWlseTogQ2FsaWJyaTsiPjI8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250
LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7miYDnpLrvvIznlKjmiLflj6/ku6Xl
nKjlhajlsYDnu5/kuIDnmoTlkb3lkI3nqbrpl7TkuK3kvb/nlKg8L1NQQU4+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiBDYWxpYnJpOyI+TkZTL0NJRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZh
bWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nrYnmoIflh4bljY/orq7mnaXorr/pl67l
upTnlKjmlbDmja7jgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6
ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZT
PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXpl
OiAxMnB0OyI+5L2/5b6X55So5oi35Y+v5pGG6ISx5Y6f5pyJ55qE54us56uL44CB6auY5oiQ5pys
55qE5bCB6Zet5a2Y5YKo57O757uf77yM6IO95aSf5Yip55So5pmu6YCa5buJ5Lu355qE5a2Y5YKo
6K6+5aSH5p2l6YOo572y5Y+v6ZuG5Lit566h55CG44CB5qiq5ZCR5omp5bGV44CB6Jma5ouf5YyW
55qE5a2Y5YKo5rGg77yM5a2Y5YKo5a656YeP5Y+v5omp5bGV6IezPC9TUEFOPjxTUEFOIA0KbGFu
Zz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZh
bWlseTogQ2FsaWJyaTsiPlRCL1BCPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1p
bHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+57qn44CCPC9TUEFOPjxTUEFOIA0KbGFuZz0i
RU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWls
eTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFt
aWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuS4u+imgeeJueW+geWmguS4i++8mjwvU1BB
Tj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwv
UD4NCjxQIGNsYXNzPSJNc29MaXN0UGFyYWdyYXBoIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBw
dCA0MnB0OyB0ZXh0LWluZGVudDogLTIxcHQ7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1mYW1pbHk6IFdpbmdkaW5nczsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+bDxTUEFOIA0K
c3R5bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1
c3Q6IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwv
U1BBTj48U1RST05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6
ZTogMTJwdDsiPuaJqeWxleaAp+WSjOmrmOaAp+iDvTwvU1BBTj48U1BBTiBsYW5nPSJFTi1VUyIg
DQpzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvU1RST05HPjwvUD4NCjxQIGNsYXNz
PSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFw
dDsiPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiAN
CnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQ
QU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWIqeeUqOWP
jOmHjeeJueaAp+adpeaPkOS+m+WHoDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5U
QjwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6
ZTogMTJwdDsiPuiHs+aVsDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5QQjwvU1BB
Tj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJw
dDsiPueahOmrmOaJqeWxleWtmOWCqOino+WGs+aWueahiOOAgjwvU1BBTj48U1BBTiANCmxhbmc9
IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1p
bHk6IENhbGlicmk7Ij5TY2FsZS1PdXQ8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZh
bWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7mnrbmnoTlhYHorrjpgJrov4fnroDljZXl
nLDlop7liqDotYTmupDmnaXmj5Dpq5jlrZjlgqjlrrnph4/lkozmgKfog73vvIzno4Hnm5jjgIHo
rqHnrpflkow8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJw
dDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+SS9PPC9TUEFOPjwvU1BB
Tj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+6LWE
5rqQ6YO95Y+v5Lul54us56uL5aKe5Yqg77yM5pSv5oyBPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4t
VVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog
Q2FsaWJyaTsiPjEwR2JFPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5ZKMPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPkluZmluaUJhbmQ8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nrYnpq5jpgJ/nvZHnu5zkupLogZTjgII8L1NQQU4+PFNQ
QU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9
ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlcjwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9
ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuW8ueaAp+WTiOW4jO+8iDwv
U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4g
DQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5FbGFzdGljIEhhc2g8L1NQQU4+PC9TUEFO
PjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7vvIno
p6PpmaTkuoY8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJw
dDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFO
PjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0
OyI+5a+55YWD5pWw5o2u5pyN5Yqh5Zmo55qE6ZyA5rGC77yM5raI6Zmk5LqG5Y2V54K55pWF6Zqc
5ZKM5oCn6IO955O26aKI77yM55yf5q2j5a6e546w5LqG5bm26KGM5YyW5pWw5o2u6K6/6Zeu44CC
PC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQ
QU4+PC9QPg0KPFAgY2xhc3M9Ik1zb0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAw
Y20gMHB0IDQycHQ7IHRleHQtaW5kZW50OiAtMjFwdDsiPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LWZhbWlseTogV2luZ2RpbmdzOyBmb250LXNpemU6IDEycHQ7Ij48U1BBTj5sPFNQ
QU4gDQpzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3IFJvbWFuIjsgZm9udC1zaXpl
LWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4mbmJzcDsNCjwvU1BBTj48L1NQ
QU4+PC9TUEFOPjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9u
dC1zaXplOiAxMnB0OyI+6auY5Y+v55So5oCnPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHls
ZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvU1RST05HPjwvUD4NCjxQIGNsYXNzPSJNc29O
b3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxT
UEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxl
PSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5
bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWPr+S7peWvueaWh+S7
tui/m+ihjOiHquWKqOWkjeWItu+8jOWmgumVnOWDj+aIluWkmuasoeWkjeWItu+8jOS7juiAjOeh
ruS/neaVsOaNruaAu+aYr+WPr+S7peiuv+mXru+8jOeUmuiHs+aYr+WcqOehrOS7tuaVhemanOea
hOaDheWGteS4i+S5n+iDveato+W4uOiuv+mXruOAguiHquaIkeS/ruWkjeWKn+iDveiDveWkn+aK
iuaVsOaNruaBouWkjeWIsOato+ehrueahOeKtuaAge+8jOiAjOS4lOS/ruWkjeaYr+S7peWinumH
j+eahOaWueW8j+WcqOWQjuWPsOaJp+ihjO+8jOWHoOS5juS4jeS8muS6p+eUn+aAp+iDvei0n+i9
veOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9T
UEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7m
sqHmnInorr7orqHoh6rlt7HnmoTnp4HmnInmlbDmja7mlofku7bmoLzlvI/vvIzogIzmmK/ph4fn
lKjmk43kvZzns7vnu5/kuK3kuLvmtYHmoIflh4bnmoTno4Hnm5jmlofku7bns7vnu5/vvIjlpoI8
L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFO
IA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+RVhUMzwvU1BBTj48L1NQQU4+PFNQQU4g
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuOAgTwvU1BBTj48
U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHls
ZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5aRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJm
b250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7vvInmnaXlrZjlgqjmlofku7bv
vIzlm6DmraTmlbDmja7lj6/ku6Xkvb/nlKjlkITnp43moIflh4blt6Xlhbfov5vooYzlpI3liLbl
kozorr/pl67jgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTog
MTJwdDsiPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9Im1h
cmdpbjogMGNtIDBjbSAwcHQgNDJwdDsgdGV4dC1pbmRlbnQ6IC0yMXB0OyI+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiBXaW5nZGluZ3M7IGZvbnQtc2l6ZTogMTJwdDsi
PjxTUEFOPmw8U1BBTiANCnN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBOZXcgUm9tYW4i
OyBmb250LXNpemUtYWRqdXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsnPiZuYnNwOw0K
PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNUUk9ORz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lhajlsYDnu5/kuIDlkb3lkI3nqbrpl7Q8L1NQQU4+
PFNQQU4gbGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1NU
Uk9ORz48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBw
dDsgdGV4dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2T
OyBmb250LXNpemU6IDEycHQ7Ij7lhajlsYDnu5/kuIDlkb3lkI3nqbrpl7TlsIbno4Hnm5jlkozl
hoXlrZjotYTmupDogZrpm4bmiJDkuIDkuKrljZXkuIDnmoTomZrmi5/lrZjlgqjmsaDvvIzlr7nk
uIrlsYLnlKjmiLflkozlupTnlKjlsY/olL3kuoblupXlsYLnmoTniannkIbnoazku7bjgILlrZjl
gqjotYTmupDlj6/ku6XmoLnmja7pnIDopoHlnKjomZrmi5/lrZjlgqjmsaDkuK3ov5vooYzlvLnm
gKfmianlsZXvvIzmr5TlpoLmianlrrnmiJbmlLbnvKnjgILlvZPlrZjlgqjomZrmi5/mnLrmmKDl
g4/ml7bvvIzlrZjlgqjnmoTomZrmi5/mmKDlg4/mlofku7bmsqHmnInmlbDph4/pmZDliLbvvIzm
iJDljYPomZrmi5/mnLrlnYfpgJrov4fljZXkuIDmjILovb3ngrnov5vooYzmlbDmja7lhbHkuqvj
gILomZrmi5/mnLo8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTog
MTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+SS9PPC9TUEFOPjwv
U1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+
5Y+v5Zyo5ZG95ZCN56m66Ze05YaF55qE5omA5pyJ5pyN5Yqh5Zmo5LiK6Ieq5Yqo6L+b6KGM6LSf
6L295Z2H6KGh77yM5raI6Zmk5LqGPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPlNB
TjwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6
ZTogMTJwdDsiPueOr+Wig+S4ree7j+W4uOWPkeeUn+eahOiuv+mXrueDreeCueWSjOaAp+iDveeT
tumiiOmXrumimOOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29MaXN0UGFyYWdyYXBoIiBzdHlsZT0i
bWFyZ2luOiAwY20gMGNtIDBwdCA0MnB0OyB0ZXh0LWluZGVudDogLTIxcHQ7Ij48U1BBTiANCmxh
bmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IFdpbmdkaW5nczsgZm9udC1zaXplOiAxMnB0
OyI+PFNQQU4+bDxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21h
biI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7
DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1RST05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuW8ueaAp+WTiOW4jOeul+azlTwvU1BBTj48U1BB
TiBsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1NUUk9ORz48
L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4
dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1zaXplOiAx
MnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQ
QU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEy
cHQ7Ij7ph4fnlKjlvLnmgKflk4jluIznrpfms5XlnKjlrZjlgqjmsaDkuK3lrprkvY3mlbDmja7v
vIzogIzkuI3mmK/ph4fnlKjpm4bkuK3lvI/miJbliIbluIPlvI/lhYPmlbDmja7mnI3liqHlmajn
tKLlvJXjgILlnKjlhbbku5bnmoQ8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZv
bnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+U2Nh
bGUtT3V0PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9u
dC1zaXplOiAxMnB0OyI+5a2Y5YKo57O757uf5Lit77yM5YWD5pWw5o2u5pyN5Yqh5Zmo6YCa5bi4
5Lya5a+86Ie0PC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEy
cHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkkvTzwvU1BBTj48L1NQ
QU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaA
p+iDveeTtumiiOWSjOWNleeCueaVhemanOmXrumimOOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVO
LVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6
IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWls
eTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7kuK3vvIzmiYDmnInlnKg8L1NQQU4+PFNQQU4g
DQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiBDYWxpYnJpOyI+U2NhbGUtT3V0PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0i
Zm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5a2Y5YKo6YWN572u5Lit55qE
5a2Y5YKo57O757uf6YO95Y+v5Lul5pm66IO95Zyw5a6a5L2N5Lu75oSP5pWw5o2u5YiG54mH77yM
5LiN6ZyA6KaB5p+l55yL57Si5byV5oiW6ICF5ZCR5YW25LuW5pyN5Yqh5Zmo5p+l6K+i44CC6L+Z
56eN6K6+6K6h5py65Yi25a6M5YWo5bm26KGM5YyW5LqG5pWw5o2u6K6/6Zeu77yM5a6e546w5LqG
55yf5q2j55qE57q/5oCn5oCn6IO95omp5bGV44CCPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMi
IHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb0xpc3RQ
YXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0IDQycHQ7IHRleHQtaW5kZW50OiAt
MjFwdDsiPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTogV2luZ2Rpbmdz
OyBmb250LXNpemU6IDEycHQ7Ij48U1BBTj5sPFNQQU4gDQpzdHlsZT0nZm9udDogN3B0L25vcm1h
bCAiVGltZXMgTmV3IFJvbWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNo
OiBub3JtYWw7Jz4mbmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTVFJPTkc+PFNQQU4gDQpz
dHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5by55oCn5Y23566h
55CGPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9T
UEFOPjwvU1RST05HPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBj
bSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaVsOaNruWCqOWtmOWcqOmAu+i+keWNt+S4re+8
jOmAu+i+keWNt+WPr+S7peS7juiZmuaLn+WMlueahOeJqeeQhuWtmOWCqOaxoOi/m+ihjOeLrOer
i+mAu+i+keWIkuWIhuiAjOW+l+WIsOOAguWtmOWCqOacjeWKoeWZqOWPr+S7peWcqOe6v+i/m+ih
jOWinuWKoOWSjOenu+mZpO+8jOS4jeS8muWvvOiHtOW6lOeUqOS4reaWreOAgumAu+i+keWNt+WP
r+S7peWcqOaJgOaciemFjee9ruacjeWKoeWZqOS4reWinumVv+WSjOe8qeWHj++8jOWPr+S7peWc
qOS4jeWQjOacjeWKoeWZqOi/geenu+i/m+ihjOWuuemHj+Wdh+ihoe+8jOaIluiAheWinuWKoOWS
jOenu+mZpOezu+e7n++8jOi/meS6m+aTjeS9nOmDveWPr+WcqOe6v+i/m+ihjOOAguaWh+S7tuez
u+e7n+mFjee9ruabtOaUueS5n+WPr+S7peWunuaXtuWcqOe6v+i/m+ihjOW5tuW6lOeUqO+8jOS7
juiAjOWPr+S7pemAguW6lOW3peS9nOi0n+i9veadoeS7tuWPmOWMluaIluWcqOe6v+aAp+iDveiw
g+S8mOOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0
OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29MaXN0UGFyYWdyYXBoIiBzdHlsZT0ibWFyZ2lu
OiAwY20gMGNtIDBwdCA0MnB0OyB0ZXh0LWluZGVudDogLTIxcHQ7Ij48U1BBTiANCmxhbmc9IkVO
LVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IFdpbmdkaW5nczsgZm9udC1zaXplOiAxMnB0OyI+PFNQ
QU4+bDxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZv
bnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7DQo8L1NQ
QU4+PC9TUEFOPjwvU1BBTj48U1RST05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovk
vZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWfuuS6juagh+WHhuWNj+iurjwvU1BBTj48U1BBTiBsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1NUUk9ORz48L1A+DQo8
UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4dC1pbmRl
bnQ6IDIxcHQ7Ij48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyPC9TUEFOPjwvU1BB
Tj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5a2Y
5YKo5pyN5Yqh5pSv5oyBPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNp
emU6IDEycHQ7Ij48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5ORlMsIA0KQ0lG
UywgSFRUUCwgRlRQPC9TUEFOPjwvU1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyBmb250LXNpemU6IDEycHQ7Ij7ku6Xlj4o8L1NQQU4+PFNQQU4gbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPkdsdXN0ZXI8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2T
OyBmb250LXNpemU6IDEycHQ7Ij7ljp/nlJ/ljY/orq7vvIzlrozlhajkuI48L1NQQU4+PFNQQU4g
DQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiBDYWxpYnJpOyI+UE9TSVg8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250
LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7moIflh4blhbzlrrnjgILnjrDmnInl
upTnlKjnqIvluo/kuI3pnIDopoHkvZzku7vkvZXkv67mlLnmiJbkvb/nlKjkuJPnlKg8L1NQQU4+
PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+QVBJPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0i
Zm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77yM5bCx5Y+v5Lul5a+5PC9T
UEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiAN
CnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXI8L1NQQU4+PC9TUEFOPjxTUEFO
IHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7kuK3nmoTmlbDm
ja7ov5vooYzorr/pl67jgILov5nlnKjlhazmnInkupHnjq/looPkuK3pg6jnvbI8L1NQQU4+PFNQ
QU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9
ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlcjwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9
ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaXtumdnuW4uOacieeUqO+8
jDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQ
QU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyPC9TUEFOPjwvU1BBTj48
U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5a+55LqR
5pyN5Yqh5o+Q5L6b5ZWG5LiT55SoPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkFQ
STwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6
ZTogMTJwdDsiPui/m+ihjOaKveixoe+8jOeEtuWQjuaPkOS+m+agh+WHhjwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij5QT1NJWDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQt
ZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaOpeWPo+OAgjwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxIMiBz
dHlsZT0ibWFyZ2luOiAxM3B0IDBjbSAxM3B0IDIxcHQ7IHRleHQtaW5kZW50OiAtMjFwdDsiPjxB
IG5hbWU9Il9Ub2MyODkwOTU4NzUiIA0KdGFyZ2V0PSJfYmxhbmsiPjwvQT48QSBuYW1lPSJfVG9j
Mjg4NTgwMjQwIiB0YXJnZXQ9Il9ibGFuayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1Nzk4OTIiIA0K
dGFyZ2V0PSJfYmxhbmsiPjwvQT48QSBuYW1lPSJfVG9jMjg4NTc5ODE3IiB0YXJnZXQ9Il9ibGFu
ayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1Nzk2MDIiIA0KdGFyZ2V0PSJfYmxhbmsiPjxTUEFOPjxT
UEFOPjxTUEFOPjxTUEFOPjxTUEFOIGxhbmc9IkVOLVVTIj48U1BBTj48U1BBTiBzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbWJyaWE7IGZvbnQtc2l6ZTogMThweDsiPjIuPC9TUEFOPjxTUEFOIA0Kc3R5
bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6
IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5i
c3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9
kzsiPjxTUEFOIHN0eWxlPSJmb250LXNpemU6IDE4cHg7Ij7orr7orqHnm67moIc8L1NQQU4+PC9T
UEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L0E+PC9IMj4NCjxQIGNsYXNzPSJNc29O
b3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxT
UEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxl
PSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5
bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPueahOiuvuiuoeaAneaD
s+aYvuiRl+WMuuWIq+acieeOsOacieW5tuihjDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBz
dHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGli
cmk7Ij4vPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9u
dC1zaXplOiAxMnB0OyI+6ZuG576kPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPi88
L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6
IDEycHQ7Ij7liIbluIPlvI/mlofku7bns7vnu5/jgILlpoLmnpw8L1NQQU4+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Zyo6K6+6K6h5LiK5rKh5pyJ5pys6LSo
5oCn55qE56qB56C077yM6Zq+5Lul5Zyo5LiOPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPkx1c3RyZTwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7
IGZvbnQtc2l6ZTogMTJwdDsiPuOAgTwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5Q
VkZTMjwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQt
c2l6ZTogMTJwdDsiPuOAgTwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5DZXBoPC9T
UEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAx
MnB0OyI+562J55qE56ue5LqJ5Lit5Y2g5o2u5LyY5Yq/77yM5pu05Yir5o+Q5LiOPC9TUEFOPjxT
UEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxl
PSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdQRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJm
b250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7jgIE8L1NQQU4+PFNQQU4gDQps
YW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQt
ZmFtaWx5OiBDYWxpYnJpOyI+U3Rvck5leHQ8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250
LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7jgIE8L1NQQU4+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiBDYWxpYnJpOyI+SVNJTE9OPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1p
bHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+44CBPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4t
VVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog
Q2FsaWJyaTsiPklCUklYPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+562J5YW35pyJ5aSa5bm05oqA5pyv5rKJ5reA5ZKM5biC
5Zy656ev57Sv55qE5ZWG55So5paH5Lu257O757uf56ue5LqJ44CC5YW25qC45b+D6K6+6K6h55uu
5qCH5YyF5ous5aaC5LiL5LiJ5Liq77yaPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxl
PSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb0xpc3RQYXJhZ3Jh
cGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0IDQycHQ7IHRleHQtaW5kZW50OiAtMjFwdDsi
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTogV2luZ2RpbmdzOyBmb250
LXNpemU6IDEycHQ7Ij48U1BBTj5sPFNQQU4gDQpzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGlt
ZXMgTmV3IFJvbWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3Jt
YWw7Jz4mbmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0i
Zm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5by55oCn5a2Y5YKo57O757uf
77yIPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48
U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkVsYXN0aWNpdHk8L1NQQU4+PC9T
UEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7v
vIk8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwv
U1BBTj48L1NUUk9ORz48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAw
Y20gMGNtIDBwdDsgdGV4dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWls
eTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lrZjlgqjns7vnu5/lhbfmnInlvLnmgKfog73l
ipvvvIzmhI/lkbPnnYDkvIHkuJrlj6/ku6XmoLnmja7kuJrliqHpnIDopoHngbXmtLvlnLDlop7l
iqDmiJbnvKnlh4/mlbDmja7lrZjlgqjku6Xlj4rlop7liKDlrZjlgqjmsaDkuK3nmoTotYTmupDv
vIzogIzkuI3pnIDopoHkuK3mlq3ns7vnu5/ov5DooYzjgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1p
bHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+6K6+6K6h55uu5qCH5LmL5LiA5bCx5piv5by5
5oCn77yM5YWB6K645Yqo5oCB5aKe5Yig5pWw5o2u5Y2344CB5omp5bGV5oiW57yp5YeP5pWw5o2u
5Y2344CB5aKe5Yig5a2Y5YKo5pyN5Yqh5Zmo562J77yM5LiN5b2x5ZON57O757uf5q2j5bi46L+Q
6KGM5ZKM5Lia5Yqh5pyN5Yqh44CCPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkds
dXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZv
bnQtc2l6ZTogMTJwdDsiPuaXqeacn+eJiOacrOS4reW8ueaAp+S4jei2s++8jOmDqOWIhueuoeeQ
huW3peS9nOmcgOimgeS4reaWreacjeWKoe+8jOebruWJjeacgOaWsOeahDwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij4zLjEuWDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQt
ZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPueJiOacrOW3sue7j+W8ueaAp+WNgei2
s++8jOiDveWkn+a7oei2s+WvueWtmOWCqOezu+e7n+W8ueaAp+imgeaxgumrmOeahOW6lOeUqOmc
gOaxgu+8jOWwpOWFtuaYr+WvueS6keWtmOWCqOacjeWKoeezu+e7n+iAjOiogOaEj+S5ieabtOWk
p+OAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9T
UEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7k
uLvopoHpgJrov4flrZjlgqjomZrmi5/ljJbmioDmnK/lkozpgLvovpHljbfnrqHnkIbmnaXlrp7n
jrDov5nkuIDorr7orqHnm67moIfjgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9
ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTGlzdFBhcmFncmFw
aCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQgNDJwdDsgdGV4dC1pbmRlbnQ6IC0yMXB0OyI+
PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiBXaW5nZGluZ3M7IGZvbnQt
c2l6ZTogMTJwdDsiPjxTUEFOPmw8U1BBTiANCnN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1l
cyBOZXcgUm9tYW4iOyBmb250LXNpemUtYWRqdXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1h
bDsnPiZuYnNwOw0KPC9TUEFOPjwvU1BBTj48L1NQQU4+PFNUUk9ORz48U1BBTiANCnN0eWxlPSJm
b250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nur/mgKfmqKrlkJHmianlsZXv
vIg8L1NQQU4+PFNQQU4gbGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxT
UEFOIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkxpbmVhciANClNjYWxlLU91dDwvU1BB
Tj48L1NQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAx
MnB0OyI+77yJPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0
OyI+PC9TUEFOPjwvU1RST05HPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJn
aW46IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQt
ZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPue6v+aAp+aJqeWxleWvueS6juWtmOWC
qOezu+e7n+iAjOiogOaYr+mdnuW4uOmavuS7peWunueOsOeahO+8jOmAmuW4uOezu+e7n+inhOao
oeaJqeWxleS4juaAp+iDveaPkOWNh+S5i+mXtOaYrzwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVT
IiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENh
bGlicmk7Ij5MT0c8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2T
OyBmb250LXNpemU6IDEycHQ7Ij7lr7nmlbDmm7Lnur/lhbPns7vvvIzlm6DkuLrlkIzml7bkvJrk
uqfnlJ/nm7jlupTotJ/ovb3ogIzmtojogJfkuobpg6jliIbmgKfog73nmoTmj5DljYfjgILnjrDl
nKjnmoTlvojlpJo8QSANCm5hbWU9Ik9MRV9MSU5LMiIgdGFyZ2V0PSJfYmxhbmsiPjwvQT48QSBu
YW1lPSJPTEVfTElOSzEiIA0KdGFyZ2V0PSJfYmxhbmsiPjxTUEFOPuW5tuihjDwvU1BBTj48L0E+
PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAx
MnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4vPC9TUEFOPjwvU1BB
Tj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDl
rovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPumbhue+pDwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFO
PjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BB
TiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPi88L1NQQU4+PC9TUEFOPjwvU1BBTj48
L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9u
dC1zaXplOiAxMnB0OyI+5YiG5biD5byP5paH5Lu257O757ufPC9TUEFOPjwvU1BBTj48L1NQQU4+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+6YO9
5YW35b6I6auY55qE5omp5bGV6IO95Yqb77yMPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPkx1c3RlcjwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7
IGZvbnQtc2l6ZTogMTJwdDsiPuWtmOWCqOiKgueCueWPr+S7pei+vuWIsDwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij4xMDAwPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Liq5Lul5LiK77yM5a6i5oi356uv5pWw
6YeP6IO95aSf6L6+5YiwPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNp
emU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPjI1MDAwPC9T
UEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAx
MnB0OyI+5Lul5LiK77yM6L+Z5Liq5omp5bGV6IO95Yqb5piv6Z2e5bi45by65aSn55qE77yM5L2G
5pivPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48
U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkx1c3RyZTwvU1BBTj48L1NQQU4+
PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuS5n+S4
jeaYr+e6v+aAp+aJqeWxleeahOOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxl
PSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOIA0Kc3R5bGU9
ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPue6teWQkeaJqeWxle+8iDwv
U1BBTj48U1BBTiBsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0K
c3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+U2NhbGUtVXA8L1NQQU4+PC9TUEFOPjxTUEFO
IHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7vvInml6jlnKjm
j5Dpq5jljZXkuKroioLngrnnmoTlrZjlgqjlrrnph4/miJbmgKfog73vvIzlvoDlvoDlrZjlnKjn
kIborrrkuIrmiJbniannkIbkuIrnmoTlkITnp43pmZDliLbvvIzogIzml6Dms5Xmu6HotrPlrZjl
gqjpnIDmsYLjgILmqKrlkJHmianlsZXvvIg8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5
bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJp
OyI+U2NhbGUtT3V0PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9
kzsgZm9udC1zaXplOiAxMnB0OyI+77yJ6YCa6L+H5aKe5Yqg5a2Y5YKo6IqC54K55p2l5o+Q5Y2H
5pW05Liq57O757uf55qE5a656YeP5oiW5oCn6IO977yM6L+Z5LiA5omp5bGV5py65Yi25piv55uu
5YmN55qE5a2Y5YKo5oqA5pyv54Ot54K577yM6IO95pyJ5pWI5bqU5a+55a656YeP44CB5oCn6IO9
562J5a2Y5YKo6ZyA5rGC44CC55uu5YmN55qE5bm26KGMPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4t
VVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog
Q2FsaWJyaTsiPi88L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2T
OyBmb250LXNpemU6IDEycHQ7Ij7pm4bnvqQ8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5
bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJp
OyI+LzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQt
c2l6ZTogMTJwdDsiPuWIhuW4g+W8j+aWh+S7tuezu+e7n+Wkp+WkmumDveWFt+Wkh+aoquWQkeaJ
qeWxleiDveWKm+OAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46
IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovk
vZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaYr+e6v+aAp+aoquWQkeaJqeWxleaetuaehO+8jOWug+mA
mui/h+aoquWQkeaJqeWxleWtmOWCqOiKgueCueWNs+WPr+S7peiOt+W+l+e6v+aAp+eahOWtmOWC
qOWuuemHj+WSjOaAp+iDveeahOaPkOWNh+OAguWboOatpO+8jOe7k+WQiOe6teWQkeaJqeWxlTwv
U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4g
DQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxT
UEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lj6/ku6Xo
jrflvpflpJrnu7TmianlsZXog73lipvvvIzlop7liqDmr4/kuKroioLngrnnmoTno4Hnm5jlj6/l
op7liqDlrZjlgqjlrrnph4/vvIzlop7liqDlrZjlgqjoioLngrnlj6/ku6Xmj5Dpq5jmgKfog73v
vIzku47ogIzlsIbmm7TlpJrno4Hnm5jjgIHlhoXlrZjjgIE8L1NQQU4+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiBDYWxpYnJpOyI+SS9PPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+6LWE5rqQ6IGa6ZuG5oiQ5pu05aSn5a656YeP44CB5pu0
6auY5oCn6IO955qE6Jma5ouf5a2Y5YKo5rGg44CCPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMi
IHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2Fs
aWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDl
rovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWIqeeUqOS4ieenjeWfuuacrOaKgOacr+adpeiOt+W+
l+e6v+aAp+aoquWQkeaJqeWxleiDveWKm++8mjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBz
dHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29MaXN0UGFy
YWdyYXBoIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdCA0MnB0OyB0ZXh0LWluZGVudDogLTIx
cHQ7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7IGZv
bnQtc2l6ZTogMTJwdDsiPjxTUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsi
PjEpPC9TUEFOPjxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21h
biI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7
Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BB
Tj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7m
tojpmaTlhYPmlbDmja7mnI3liqE8L1NQQU4+PFNQQU4gbGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZv
bnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTGlzdFBhcmFncmFwaCIg
c3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQgNDJwdDsgdGV4dC1pbmRlbnQ6IC0yMXB0OyI+PFNQ
QU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyBmb250LXNpemU6
IDEycHQ7Ij48U1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4yKTwvU1BB
Tj48U1BBTiANCnN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBOZXcgUm9tYW4iOyBmb250
LXNpemUtYWRqdXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsnPiZuYnNwOyZuYnNwOyZu
YnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOw0KPC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4g
DQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+6auY5pWI5pWw
5o2u5YiG5biD77yM6I635b6X5omp5bGV5oCn5ZKM5Y+v6Z2g5oCnPC9TUEFOPjxTUEFOIGxhbmc9
IkVOLVVTIiANCnN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgY2xhc3M9
Ik1zb0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0IDQycHQ7IHRleHQt
aW5kZW50OiAtMjFwdDsiPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTog
Q2FsaWJyaTsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5
OiBDYWxpYnJpOyI+Myk8L1NQQU4+PFNQQU4gDQpzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGlt
ZXMgTmV3IFJvbWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3Jt
YWw7Jz4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsNCjwvU1BBTj48
L1NQQU4+PC9TUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6
ZTogMTJwdDsiPumAmui/h+WujOWFqOWIhuW4g+W8j+aetuaehOeahOW5tuihjOWMluiOt+W+l+aA
p+iDveeahOacgOWkp+WMljwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29MaXN0UGFyYWdyYXBoIiBzdHls
ZT0ibWFyZ2luOiAwY20gMGNtIDBwdCA0MnB0OyB0ZXh0LWluZGVudDogLTIxcHQ7Ij48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IFdpbmdkaW5nczsgZm9udC1zaXplOiAx
MnB0OyI+PFNQQU4+bDxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBS
b21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5i
c3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1RST05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPumrmOWPr+mdoOaAp++8iDwvU1BBTj48U1BB
TiBsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiBDYWxpYnJpOyI+UmVsaWFiaWxpdHk8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxl
PSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7vvIk8L1NQQU4+PFNQQU4g
DQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1NUUk9ORz48
L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4
dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250
LXNpemU6IDEycHQ7Ij7kuI48L1NQQU4+PFNQQU4gbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNp
emU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdGUzwvU1BB
Tj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJw
dDsiPu+8iDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0
OyI+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R29vZ2xlIA0KRmlsZSBTeXN0
ZW08L1NQQU4+PC9TUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQt
c2l6ZTogMTJwdDsiPu+8ieexu+S8vO+8jDwvU1BBTj48U1BBTiBsYW5nPSJFTi1VUyIgc3R5bGU9
ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+
R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsg
Zm9udC1zaXplOiAxMnB0OyI+5Y+v5Lul5p6E5bu65Zyo5pmu6YCa55qE5pyN5Yqh5Zmo5ZKM5a2Y
5YKo6K6+5aSH5LmL5LiK77yM5Zug5q2k5Y+v6Z2g5oCn5pi+5b6X5bCk5Li65YWz6ZSu44CCPC9T
UEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiAN
CnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQ
QU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuS7juiuvuiu
oeS5i+WIneWwseWwhuWPr+mdoOaAp+e6s+WFpeaguOW/g+iuvuiuoe+8jOmHh+eUqOS6huWkmuen
jeaKgOacr+adpeWunueOsOi/meS4gOiuvuiuoeebruagh+OAgummluWFiO+8jOWug+WBh+iuvuaV
hemanOaYr+ato+W4uOS6i+S7tu+8jOWMheaLrOehrOS7tuOAgeejgeebmOOAgee9kee7nOaVhema
nOS7peWPiueuoeeQhuWRmOivr+aTjeS9nOmAoOaIkOeahOaVsOaNruaNn+Wdj+etieOAgjwvU1BB
Tj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpz
dHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFO
IHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7orr7orqHmlK/m
jIHoh6rliqjlpI3liLblkozoh6rliqjkv67lpI3lip/og73mnaXkv53or4HmlbDmja7lj6/pnaDm
gKfvvIzkuI3pnIDopoHnrqHnkIblkZjnmoTlubLpooTjgILlhbbmrKHvvIw8L1NQQU4+PFNQQU4g
DQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0i
Zm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Yip55So5LqG5bqV5bGCPC9T
UEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiAN
CnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkVYVDMvWkZTPC9TUEFOPjwvU1BBTj48U1BB
TiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+562J56OB55uY
5paH5Lu257O757uf55qE5pel5b+X5Yqf6IO95p2l5o+Q5L6b5LiA5a6a55qE5pWw5o2u5Y+v6Z2g
5oCn77yM6ICM5rKh5pyJ6Ieq5bex6YeN5paw5Y+R5piO6L2u5a2Q44CC5YaN5qyh77yMPC9TUEFO
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0
eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4g
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaYr+aXoOWFg+aV
sOaNruacjeWKoeWZqOiuvuiuoe+8jOS4jemcgOimgeWFg+aVsOaNrueahOWQjOatpeaIluiAheS4
gOiHtOaAp+e7tOaKpO+8jOW+iOWkp+eoi+W6puS4iumZjeS9juS6huezu+e7n+WkjeadguaAp++8
jOS4jeS7heaPkOmrmOS6huaAp+iDve+8jOi/mOWkp+Wkp+aPkOmrmOS6huezu+e7n+WPr+mdoOaA
p+OAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+
PC9TUEFOPjwvUD4NCjxIMiBzdHlsZT0ibWFyZ2luOiAxM3B0IDBjbSAxM3B0IDIxcHQ7IHRleHQt
aW5kZW50OiAtMjFwdDsiPjxBIG5hbWU9Il9Ub2MyODkwOTU4NzYiIA0KdGFyZ2V0PSJfYmxhbmsi
PjwvQT48QSBuYW1lPSJfVG9jMjg4NTgwMjQxIiB0YXJnZXQ9Il9ibGFuayI+PC9BPjxBIG5hbWU9
Il9Ub2MyODg1Nzk4OTMiIA0KdGFyZ2V0PSJfYmxhbmsiPjwvQT48QSBuYW1lPSJfVG9jMjg4NTc5
ODE4IiB0YXJnZXQ9Il9ibGFuayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1Nzk2MDMiIA0KdGFyZ2V0
PSJfYmxhbmsiPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIGxhbmc9IkVOLVVTIj48U1BB
Tj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbWJyaWE7IGZvbnQtc2l6ZTogMThweDsiPjMu
PC9TUEFOPjxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7
IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7Jm5i
c3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0i
Zm9udC1mYW1pbHk6IOWui+S9kzsiPjxTUEFOIHN0eWxlPSJmb250LXNpemU6IDE4cHg7Ij7mioDm
nK/nibk8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L0E+PFNQQU4+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQt
c2l6ZTogMThweDsiPueCuTwvU1BBTj48L1NQQU4+PC9TUEFOPjwvSDI+DQo8UCBjbGFzcz0iTXNv
Tm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4dC1pbmRlbnQ6IDIxcHQ7Ij48
U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHls
ZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0
eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lnKjmioDmnK/lrp7n
jrDkuIrkuI7kvKDnu5/lrZjlgqjns7vnu5/miJbnjrDmnInlhbbku5bliIbluIPlvI/mlofku7bn
s7vnu5/mnInmmL7okZfkuI3lkIzkuYvlpITvvIzkuLvopoHkvZPnjrDlnKjlpoLkuIvlh6DkuKrm
lrnpnaLjgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJw
dDsiPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9Im1hcmdp
bjogMGNtIDBjbSAwcHQgNDJwdDsgdGV4dC1pbmRlbnQ6IC0yMXB0OyI+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiBXaW5nZGluZ3M7IGZvbnQtc2l6ZTogMTJwdDsiPjxT
UEFOPmw8U1BBTiANCnN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBOZXcgUm9tYW4iOyBm
b250LXNpemUtYWRqdXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsnPiZuYnNwOw0KPC9T
UEFOPjwvU1BBTj48L1NQQU4+PFNUUk9ORz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lrozlhajova/ku7blrp7njrDvvIg8L1NQQU4+PFNQQU4g
bGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIHN0eWxlPSJmb250
LWZhbWlseTogQ2FsaWJyaTsiPlNvZnR3YXJlIA0KT25seTwvU1BBTj48L1NQQU4+PFNQQU4gc3R5
bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8iTwvU1BBTj48U1BB
TiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvU1RST05H
PjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0
ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJmb250LXNpemU6
IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwv
U1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTog
MTJwdDsiPuiupOS4uuWtmOWCqOaYr+i9r+S7tumXrumimO+8jOS4jeiDveWkn+aKiueUqOaIt+Wx
gOmZkOS6juS9v+eUqOeJueWumueahOS+m+W6lOWVhuaIluehrOS7tumFjee9ruadpeino+WGs+OA
gjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQ
QU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFO
PjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7ph4fn
lKjlvIDmlL7lvI/orr7orqHvvIzlub/ms5vmlK/mjIHlt6XkuJrmoIflh4bnmoTlrZjlgqjjgIHn
vZHnu5zlkozorqHnrpfmnLrorr7lpIfvvIzogIzpnZ7kuI7lrprliLbljJbnmoTkuJPnlKjnoazk
u7borr7lpIfmjYbnu5HjgILlr7nkuo7llYbkuJrlrqLmiLfvvIw8L1NQQU4+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Y+v5Lul5Lul6Jma5ouf6KOF572u55qE
5b2i5byP5Lqk5LuY77yM5Lmf5Y+v5Lul5LiO6Jma5ouf5py65a655Zmo5omT5YyF77yM5oiW6ICF
5piv5YWs5pyJ5LqR5Lit6YOo572y55qE5pig5YOP44CC5byA5rqQ56S+5Yy65Lit77yMPC9TUEFO
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0
eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4g
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuiiq+Wkp+mHj+mD
qOe9suWcqOWfuuS6juW7ieS7t+mXsue9ruehrOS7tueahOWQhOenjeaTjeS9nOezu+e7n+S4iu+8
jOaehOaIkOmbhuS4ree7n+S4gOeahOiZmuaLn+WtmOWCqOi1hOa6kOaxoOOAgueugOiAjOiogOS5
i++8jDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9T
UEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7m
mK/lvIDmlL7nmoTlhajova/ku7blrp7njrDvvIzlrozlhajni6znq4vkuo7noazku7blkozmk43k
vZzns7vnu5/jgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTog
MTJwdDsiPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9Im1h
cmdpbjogMGNtIDBjbSAwcHQgNDJwdDsgdGV4dC1pbmRlbnQ6IC0yMXB0OyI+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiBXaW5nZGluZ3M7IGZvbnQtc2l6ZTogMTJwdDsi
PjxTUEFOPmw8U1BBTiANCnN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBOZXcgUm9tYW4i
OyBmb250LXNpemUtYWRqdXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsnPiZuYnNwOw0K
PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNUUk9ORz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lrozmlbTnmoTlrZjlgqjmk43kvZzns7vnu5/moIjv
vIg8L1NQQU4+PFNQQU4gbGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxT
UEFOIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkNvbXBsZXRlIFN0b3JhZ2UgDQpPcGVy
YXRpbmcgU3lzdGVtIFN0YWNrPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6
IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77yJPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMi
IHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9TVFJPTkc+PC9QPg0KPFAgY2xhc3M9
Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0
OyI+PFNQQU4gbGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0K
c3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BB
TiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5LiN5LuF5o+Q
5L6b5LqG5LiA5Liq5YiG5biD5byP5paH5Lu257O757uf77yM6ICM5LiU6L+Y5o+Q5L6b5LqG6K64
5aSa5YW25LuW6YeN6KaB55qE5YiG5biD5byP5Yqf6IO977yM5q+U5aaC5YiG5biD5byP5YaF5a2Y
566h55CG44CBPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEy
cHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkkvTzwvU1BBTj48L1NQ
QU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuiw
g+W6puOAgei9rzwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAx
MnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5SQUlEPC9TUEFOPjwv
U1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+
5ZKM6Ieq5oiR5L+u5aSN562J44CCPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkds
dXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZv
bnQtc2l6ZTogMTJwdDsiPuaxsuWPluS6huW+ruWGheaguOaetuaehOeahOe7j+mqjOaVmeiure+8
jOWAn+mJtOS6hjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAx
MnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HTlUvSHVyZDwvU1BB
Tj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJw
dDsiPuaTjeS9nOezu+e7n+eahOiuvuiuoeaAneaDs++8jOWcqOeUqOaIt+epuumXtOWunueOsOS6
huWujOaVtOeahOWtmOWCqOaTjeS9nOezu+e7n+agiOOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVO
LVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29M
aXN0UGFyYWdyYXBoIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdCA0MnB0OyB0ZXh0LWluZGVu
dDogLTIxcHQ7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IFdpbmdk
aW5nczsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+bDxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9u
b3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3Ry
ZXRjaDogbm9ybWFsOyc+Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1RST05HPjxTUEFO
IA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPueUqOaIt+ep
uumXtOWunueOsO+8iDwvU1BBTj48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+VXNlciANClNwYWNl
PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXpl
OiAxMnB0OyI+77yJPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6
IDEycHQ7Ij48L1NQQU4+PC9TVFJPTkc+PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9
Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4gDQpzdHlsZT0i
Zm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5LiO5Lyg57uf55qE5paH5Lu2
57O757uf5LiN5ZCM77yMPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJmb250LXNp
emU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJG
UzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6
ZTogMTJwdDsiPuWcqOeUqOaIt+epuumXtOWunueOsO+8jOi/meS9v+W+l+WFtuWuieijheWSjOWN
h+e6p+eJueWIq+eugOS+v+OAguWPpuWklu+8jOi/meS5n+aegeWkp+mZjeS9juS6huaZrumAmueU
qOaIt+WfuuS6jua6kOeggeS/ruaUuTwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5H
bHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBm
b250LXNpemU6IDEycHQ7Ij7nmoTpl6jmp5vvvIzku4Xku4XpnIDopoHpgJrnlKjnmoQ8L1NQQU4+
PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+QzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZv
bnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPueoi+W6j+iuvuiuoeaKgOiDve+8
jOiAjOS4jemcgOimgeeJueWIq+eahOWGheaguOe8lueoi+e7j+mqjOOAgjwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNs
YXNzPSJNc29MaXN0UGFyYWdyYXBoIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdCA0MnB0OyB0
ZXh0LWluZGVudDogLTIxcHQ7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1p
bHk6IFdpbmdkaW5nczsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+bDxTUEFOIA0Kc3R5bGU9J2Zv
bnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7
IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1RS
T05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsi
PuaooeWdl+WMluWghuagiOW8j+aetuaehO+8iDwvU1BBTj48U1BBTiBsYW5nPSJFTi1VUyIgDQpz
dHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJp
OyI+TW9kdWxhciBTdGFja2FibGUgDQpBcmNoaXRlY3R1cmU8L1NQQU4+PC9TUEFOPjxTUEFOIA0K
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8iTwvU1BBTj48
U1BBTiBsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1NUUk9O
Rz48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsg
dGV4dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8
L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6
IDEycHQ7Ij7ph4fnlKjmqKHlnZfljJbjgIHloIbmoIjlvI/nmoTmnrbmnoTvvIzlj6/pgJrov4fn
gbXmtLvnmoTphY3nva7mlK/mjIHpq5jluqblrprliLbljJbnmoTlupTnlKjnjq/looPvvIzmr5Tl
poLlpKfmlofku7blrZjlgqjjgIHmtbfph4/lsI/mlofku7blrZjlgqjjgIHkupHlrZjlgqjjgIHl
pJrkvKDovpPljY/orq7lupTnlKjnrYnjgILmr4/kuKrlip/og73ku6XmqKHlnZflvaLlvI/lrp7n
jrDvvIznhLblkI7ku6Xnp6/mnKjmlrnlvI/ov5vooYznroDljZXnmoTnu4TlkIjvvIzljbPlj6/l
rp7njrDlpI3mnYLnmoTlip/og73jgILmr5TlpoLvvIw8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1V
UyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBD
YWxpYnJpOyI+UmVwbGljYXRlPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6
IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5qih5Z2X5Y+v5a6e546wPC9TUEFOPjxTUEFOIA0K
bGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250
LWZhbWlseTogQ2FsaWJyaTsiPlJBSUQxPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77yMPC9TUEFOPjxTUEFOIA0KbGFuZz0i
RU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWls
eTogQ2FsaWJyaTsiPlN0cmlwZTwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5
OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaooeWdl+WPr+WunueOsDwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij5SQUlEMDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQt
ZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8jOmAmui/h+S4pOiAheeahOe7hOWQ
iOWPr+WunueOsDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAx
MnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5SQUlEMTA8L1NQQU4+
PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7
Ij7lkow8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsi
PjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+UkFJRDAxPC9TUEFOPjwvU1BB
Tj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77yM
5ZCM5pe26I635b6X6auY5oCn6IO95ZKM6auY5Y+v6Z2g5oCn44CCPC9TUEFOPjxTUEFOIA0KbGFu
Zz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgY2xhc3M9
Ik1zb0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0IDQycHQ7IHRleHQt
aW5kZW50OiAtMjFwdDsiPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTog
V2luZ2RpbmdzOyBmb250LXNpemU6IDEycHQ7Ij48U1BBTj5sPFNQQU4gDQpzdHlsZT0nZm9udDog
N3B0L25vcm1hbCAiVGltZXMgTmV3IFJvbWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9u
dC1zdHJldGNoOiBub3JtYWw7Jz4mbmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTVFJPTkc+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Y6f
5aeL5pWw5o2u5qC85byP5a2Y5YKo77yIPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0eWxl
PSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5E
YXRhIFN0b3JlZCBpbiANCk5hdGl2ZSBGb3JtYXRzPC9TUEFOPjwvU1BBTj48L1NUUk9ORz48U1BB
TiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77yJPC9TUEFO
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9Q
Pg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQt
aW5kZW50OiAyMXB0OyI+PFNQQU4gbGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJw
dDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFO
PjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0
OyI+5Lul5Y6f5aeL5pWw5o2u5qC85byP77yI5aaCPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMi
IHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2Fs
aWJyaTsiPkVYVDM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2T
OyBmb250LXNpemU6IDEycHQ7Ij7jgIE8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9
ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+
RVhUNDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQt
c2l6ZTogMTJwdDsiPuOAgTwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5YRlM8L1NQ
QU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEy
cHQ7Ij7jgIE8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJw
dDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+WkZTPC9TUEFOPjwvU1BB
Tj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77yJ
5YKo5a2Y5pWw5o2u77yM5bm25a6e546w5aSa56eN5pWw5o2u6Ieq5Yqo5L+u5aSN5py65Yi244CC
5Zug5q2k77yM57O757uf5p6B5YW35by55oCn77yM5Y2z5L2/56a757q/5oOF5b2i5LiL5paH5Lu2
5Lmf5Y+v5Lul6YCa6L+H5YW25LuW5qCH5YeG5bel5YW36L+b6KGM6K6/6Zeu44CC5aaC5p6c55So
5oi36ZyA6KaB5LuOPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6
IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwv
U1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTog
MTJwdDsiPuS4rei/geenu+aVsOaNru+8jOS4jemcgOimgeS9nOS7u+S9leS/ruaUueS7jeeEtuWP
r+S7peWujOWFqOS9v+eUqOi/meS6m+aVsOaNruOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVT
IiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29MaXN0
UGFyYWdyYXBoIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdCA0MnB0OyB0ZXh0LWluZGVudDog
LTIxcHQ7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IFdpbmdkaW5n
czsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+bDxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9ub3Jt
YWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3RyZXRj
aDogbm9ybWFsOyc+Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1RST05HPjxTUEFOIA0K
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaXoOWFg+aVsOaN
ruacjeWKoeiuvuiuoe+8iDwvU1BBTj48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+Tm8gTWV0YWRh
dGEgd2l0aCANCnRoZSBFbGFzdGljIEhhc2ggQWxnb3JpdGhtPC9TUEFOPjwvU1BBTj48U1BBTiBz
dHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77yJPC9TUEFOPjxT
UEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9TVFJP
Tkc+PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7
IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsg
Zm9udC1zaXplOiAxMnB0OyI+5a+5PC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9u
dC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5TY2Fs
ZS1PdXQ8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250
LXNpemU6IDEycHQ7Ij7lrZjlgqjns7vnu5/ogIzoqIDvvIzmnIDlpKfnmoTmjJHmiJjkuYvkuIDl
sLHmmK/orrDlvZXmlbDmja7pgLvovpHkuI7niannkIbkvY3nva7nmoTmmKDlg4/lhbPns7vvvIzl
jbPmlbDmja7lhYPmlbDmja7vvIzlj6/og73ov5jljIXmi6zor7jlpoLlsZ7mgKflkozorr/pl67m
nYPpmZDnrYnkv6Hmga/jgILkvKDnu5/liIbluIPlvI/lrZjlgqjns7vnu5/kvb/nlKjpm4bkuK3l
vI/miJbliIbluIPlvI/lhYPmlbDmja7mnI3liqHmnaXnu7TmiqTlhYPmlbDmja7vvIzpm4bkuK3l
vI/lhYPmlbDmja7mnI3liqHkvJrlr7zoh7TljZXngrnmlYXpmpzlkozmgKfog73nk7bpoojpl67p
opjvvIzogIzliIbluIPlvI/lhYPmlbDmja7mnI3liqHlrZjlnKjmgKfog73otJ/ovb3lkozlhYPm
lbDmja7lkIzmraXkuIDoh7TmgKfpl67popjjgILnibnliKvmmK/lr7nkuo7mtbfph4/lsI/mlofk
u7bnmoTlupTnlKjvvIzlhYPmlbDmja7pl67popjmmK/kuKrpnZ7luLjlpKfnmoTmjJHmiJjjgII8
L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BB
Tj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsg
dGV4dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8
L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6
IDEycHQ7Ij7ni6znibnlnLDph4fnlKjml6DlhYPmlbDmja7mnI3liqHnmoTorr7orqHvvIzlj5bo
gIzku6PkuYvkvb/nlKjnrpfms5XmnaXlrprkvY3mlofku7bvvIzlhYPmlbDmja7lkozmlbDmja7m
sqHmnInliIbnprvogIzmmK/kuIDotbflrZjlgqjjgILpm4bnvqTkuK3nmoTmiYDmnInlrZjlgqjn
s7vnu5/mnI3liqHlmajpg73lj6/ku6Xmmbrog73lnLDlr7nmlofku7bmlbDmja7liIbniYfov5vo
oYzlrprkvY3vvIzku4Xku4XmoLnmja7mlofku7blkI3lkozot6/lvoTlubbov5DnlKjnrpfms5Xl
jbPlj6/vvIzogIzkuI3pnIDopoHmn6Xor6LntKLlvJXmiJbogIXlhbbku5bmnI3liqHlmajjgILo
v5nkvb/lvpfmlbDmja7orr/pl67lrozlhajlubbooYzljJbvvIzku47ogIzlrp7njrDnnJ/mraPn
moTnur/mgKfmgKfog73mianlsZXjgILml6DlhYPmlbDmja7mnI3liqHlmajmnoHlpKfmj5Dpq5jk
uoY8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxT
UEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BB
Tj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+55qE
5oCn6IO944CB5Y+v6Z2g5oCn5ZKM56iz5a6a5oCn44CCPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4t
VVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPEgyIHN0eWxlPSJtYXJn
aW46IDEzcHQgMGNtIDEzcHQgMjFwdDsgdGV4dC1pbmRlbnQ6IC0yMXB0OyI+PEEgbmFtZT0iX1Rv
YzI4OTA5NTg3NyIgDQp0YXJnZXQ9Il9ibGFuayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1ODAyNDIi
IHRhcmdldD0iX2JsYW5rIj48L0E+PEEgbmFtZT0iX1RvYzI4ODU3OTg5NCIgDQp0YXJnZXQ9Il9i
bGFuayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1Nzk4MTkiIHRhcmdldD0iX2JsYW5rIj48L0E+PEEg
bmFtZT0iX1RvYzI4ODU3OTYwNCIgDQp0YXJnZXQ9Il9ibGFuayI+PFNQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4gbGFuZz0iRU4tVVMiPjxTUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog
Q2FtYnJpYTsgZm9udC1zaXplOiAxOHB4OyI+NC48L1NQQU4+PFNQQU4gDQpzdHlsZT0nZm9udDog
N3B0L25vcm1hbCAiVGltZXMgTmV3IFJvbWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9u
dC1zdHJldGNoOiBub3JtYWw7Jz4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsNCjwvU1BB
Tj48L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyI+PFNQQU4g
c3R5bGU9ImZvbnQtc2l6ZTogMThweDsiPuaAu+S9k+aetuaehOS4juiuvuiuoTwvU1BBTj48L1NQ
QU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvQT48L0gyPg0KPFAgYWxpZ249ImNlbnRl
ciIgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtYWxp
Z246IGNlbnRlcjsiPiZuYnNwOzwvUD4NCjxQIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJNc29Ob3Jt
YWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48U1RS
T05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDljY7mlofku7/lros7IGZvbnQtc2l6ZTog
MTJwdDsiPjxJTUcgd2lkdGg9IjgwNiIgaGVpZ2h0PSI1NTYiIGFsdD0iIiANCnNyYz0iaHR0cDov
L2hpLmNzZG4ubmV0L2F0dGFjaG1lbnQvMjAxMTAzLzI1LzQ0MTY0XzEzMDEwNDg4MDh5MVJZLnBu
ZyI+PC9TUEFOPjwvU1RST05HPjwvUD4NCjxQIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJNc29Ob3Jt
YWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48U1RS
T05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDljY7mlofku7/lros7IGZvbnQtc2l6ZTog
MTJwdDsiPuWbvjxTUEFOIGxhbmc9IkVOLVVTIj4yIA0KR2x1c3RlckZTPC9TUEFOPuaetuaehOWS
jOe7hOaIkDxTUEFOIGxhbmc9IkVOLVVTIj48L1NQQU4+PC9TUEFOPjwvU1RST05HPjwvUD4NCjxQ
IGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVu
dDogMjFwdDsiPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48
U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQ
QU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaA
u+S9k+aetuaehOS4jue7hOaIkOmDqOWIhuWmguWbvjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVT
IiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENh
bGlicmk7Ij4yPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsg
Zm9udC1zaXplOiAxMnB0OyI+5omA56S677yM5a6D5Li76KaB55Sx5a2Y5YKo5pyN5Yqh5Zmo77yI
PC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BB
TiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5CcmljayANClNlcnZlcjwvU1BBTj48L1NQ
QU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+
77yJ44CB5a6i5oi356uv5Lul5Y+KPC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPk5G
Uy9TYW1iYTwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZv
bnQtc2l6ZTogMTJwdDsiPuWtmOWCqOe9keWFs+e7hOaIkOOAguS4jemavuWPkeeOsO+8jDwvU1BB
Tj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpz
dHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFO
IHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7mnrbmnoTkuK3m
sqHmnInlhYPmlbDmja7mnI3liqHlmajnu4Tku7bvvIzov5nmmK/lhbbmnIDlpKfnmoTorr7orqHo
v5nngrnvvIzlr7nkuo7mj5DljYfmlbTkuKrns7vnu5/nmoTmgKfog73jgIHlj6/pnaDmgKflkozn
qLPlrprmgKfpg73mnInnnYDlhrPlrprmgKfnmoTmhI/kuYnjgII8L1NQQU4+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5pSv5oyBPC9TUEFOPjxTUEFOIA0KbGFu
Zz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZh
bWlseTogQ2FsaWJyaTsiPlRDUC9JUDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFt
aWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWSjDwvU1BBTj48U1BBTiANCmxhbmc9IkVO
LVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6
IENhbGlicmk7Ij5JbmZpbmlCYW5kIFJETUE8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250
LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7pq5jpgJ/nvZHnu5zkupLogZTvvIzl
rqLmiLfnq6/lj6/pgJrov4fljp/nlJ88L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9
ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+
R2x1c3RlcmZzPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsg
Zm9udC1zaXplOiAxMnB0OyI+5Y2P6K6u6K6/6Zeu5pWw5o2u77yM5YW25LuW5rKh5pyJ6L+Q6KGM
PC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BB
TiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+
PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWuouaI
t+err+eahOe7iOerr+WPr+mAmui/hzwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5O
RlMvQ0lGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZv
bnQtc2l6ZTogMTJwdDsiPuagh+WHhuWNj+iurumAmui/h+WtmOWCqOe9keWFs+iuv+mXruaVsOaN
ruOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+
PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20g
MHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovk
vZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWtmOWCqOacjeWKoeWZqOS4u+imgeaPkOS+m+WfuuacrOea
hOaVsOaNruWtmOWCqOWKn+iDve+8jOacgOe7iOeahOaWh+S7tuaVsOaNrumAmui/h+e7n+S4gOea
hOiwg+W6puetlueVpeWIhuW4g+WcqOS4jeWQjOeahOWtmOWCqOacjeWKoeWZqOS4iuOAguWug+S7
rOS4iumdoui/kOihjOedgDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVy
ZnNkPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1z
aXplOiAxMnB0OyI+6L+b6KGM77yM6LSf6LSj5aSE55CG5p2l6Ieq5YW25LuW57uE5Lu255qE5pWw
5o2u5pyN5Yqh6K+35rGC44CC5aaC5YmN5omA6L+w77yM5pWw5o2u5Lul5Y6f5aeL5qC85byP55u0
5o6l5a2Y5YKo5Zyo5pyN5Yqh5Zmo55qE5pys5Zyw5paH5Lu257O757uf5LiK77yM5aaCPC9TUEFO
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0
eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkVYVDM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxl
PSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7jgIE8L1NQQU4+PFNQQU4g
DQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiBDYWxpYnJpOyI+RVhUNDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQt
ZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuOAgTwvU1BBTj48U1BBTiANCmxhbmc9
IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1p
bHk6IENhbGlicmk7Ij5YRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7jgIE8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIg
c3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxp
YnJpOyI+WkZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsg
Zm9udC1zaXplOiAxMnB0OyI+562J77yM6L+Q6KGM5pyN5Yqh5pe25oyH5a6a5pWw5o2u5a2Y5YKo
6Lev5b6E44CC5aSa5Liq5a2Y5YKo5pyN5Yqh5Zmo5Y+v5Lul6YCa6L+H5a6i5oi356uv5oiW5a2Y
5YKo572R5YWz5LiK55qE5Y23566h55CG5Zmo57uE5oiQ6ZuG576k77yM5aaCPC9TUEFOPjxTUEFO
IA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJm
b250LWZhbWlseTogQ2FsaWJyaTsiPlN0cmlwZTwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZv
bnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8iDwvU1BBTj48U1BBTiANCmxh
bmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1m
YW1pbHk6IENhbGlicmk7Ij5SQUlEMDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFt
aWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8ieOAgTwvU1BBTj48U1BBTiANCmxhbmc9
IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1p
bHk6IENhbGlicmk7Ij5SZXBsaWNhdGU8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZh
bWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7vvIg8L1NQQU4+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiBDYWxpYnJpOyI+UkFJRDE8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7vvInlkow8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1V
UyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBD
YWxpYnJpOyI+REhUPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9
kzsgZm9udC1zaXplOiAxMnB0OyI+77yI5YiG5biD5byPPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4t
VVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog
Q2FsaWJyaTsiPkhhc2g8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyBmb250LXNpemU6IDEycHQ7Ij7vvInlrZjlgqjpm4bnvqTvvIzkuZ/lj6/liKnnlKjltYzl
pZfnu4TlkIjmnoTmiJDmm7TliqDlpI3mnYLnmoTpm4bnvqTvvIzlpoI8L1NQQU4+PFNQQU4gDQps
YW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQt
ZmFtaWx5OiBDYWxpYnJpOyI+UkFJRDEwPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+44CCPC9TUEFOPjxTUEFOIA0KbGFuZz0i
RU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1z
b05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+55Sx
5LqO5rKh5pyJ5LqG5YWD5pWw5o2u5pyN5Yqh5Zmo77yM5a6i5oi356uv5om/5ouF5LqG5pu05aSa
55qE5Yqf6IO977yM5YyF5ous5pWw5o2u5Y23566h55CG44CBPC9TUEFOPjxTUEFOIA0KbGFuZz0i
RU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWls
eTogQ2FsaWJyaTsiPkkvTzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDl
rovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuiwg+W6puOAgeaWh+S7tuWumuS9jeOAgeaVsOaNrue8
k+WtmOetieWKn+iDveOAguWuouaIt+err+S4iui/kOihjDwvU1BBTj48U1BBTiANCmxhbmc9IkVO
LVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6
IENhbGlicmk7Ij5HbHVzdGVyZnM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWls
eTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7ov5vnqIvvvIzlroPlrp7pmYXmmK88L1NQQU4+
PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlcmZzZDwvU1BBTj48L1NQQU4+PFNQQU4g
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPueahOespuWPt+mT
vuaOpe+8jOWIqeeUqDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5GVVNFPC9TUEFO
PjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0
OyI+77yIPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7
Ij48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5GaWxlIA0Kc3lzdGVtIGluIFVz
ZXIgU3BhY2U8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBm
b250LXNpemU6IDEycHQ7Ij7vvInmqKHlnZflsIY8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIg
c3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxp
YnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5oyC6L295Yiw5pys5Zyw5paH5Lu257O757uf5LmL5LiK
77yM5a6e546wPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEy
cHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPlBPU0lYPC9TUEFOPjwv
U1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+
5YW85a6555qE5pa55byP5p2l6K6/6Zeu57O757uf5pWw5o2u44CC5Zyo5pyA5paw55qEPC9TUEFO
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0
eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPjMuMS5YPC9TUEFOPjwvU1BBTj48U1BBTiBzdHls
ZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+54mI5pys5Lit77yM5a6i
5oi356uv5LiN5YaN6ZyA6KaB54us56uL57u05oqk5Y236YWN572u5L+h5oGv77yM5pS55oiQ6Ieq
5Yqo5LuO6L+Q6KGM5Zyo572R5YWz5LiK55qEPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPmdsdXN0ZXJkPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9
kzsgZm9udC1zaXplOiAxMnB0OyI+5by55oCn5Y23566h55CG5pyN5Yqh6L+b6KGM6I635Y+W5ZKM
5pu05paw77yM5p6B5aSn566A5YyW5LqG5Y23566h55CG44CCPC9TUEFOPjxTUEFOIA0KbGFuZz0i
RU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWls
eTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFt
aWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWuouaIt+err+i0n+i9veebuOWvueS8oOe7
n+WIhuW4g+W8j+aWh+S7tuezu+e7n+imgemrmO+8jOWMheaLrDwvU1BBTj48U1BBTiANCmxhbmc9
IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1p
bHk6IENhbGlicmk7Ij5DUFU8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7ljaDnlKjnjoflkozlhoXlrZjljaDnlKjjgII8L1NQ
QU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48
L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4
dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1zaXplOiAx
MnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQ
QU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEy
cHQ7Ij7lrZjlgqjnvZHlhbPmj5DkvpvlvLnmgKfljbfnrqHnkIblkow8L1NQQU4+PFNQQU4gDQps
YW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQt
ZmFtaWx5OiBDYWxpYnJpOyI+TkZTL0NJRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250
LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7orr/pl67ku6PnkIblip/og73vvIzl
hbbkuIrov5DooYw8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTog
MTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlcmQ8L1NQ
QU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEy
cHQ7Ij7lkow8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJw
dDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlcmZzPC9TUEFO
PjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0
OyI+6L+b56iL77yM5Lik6ICF6YO95pivPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxl
PSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsi
PkdsdXN0ZXJmc2Q8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2T
OyBmb250LXNpemU6IDEycHQ7Ij7nrKblj7fpk77mjqXjgILljbfnrqHnkIblmajotJ/otKPpgLvo
vpHljbfnmoTliJvlu7rjgIHliKDpmaTjgIHlrrnph4/mianlsZXkuI7nvKnlh4/jgIHlrrnph4/l
ubPmu5HnrYnlip/og73vvIzlubbotJ/otKPlkJHlrqLmiLfnq6/mj5DkvpvpgLvovpHljbfkv6Hm
ga/lj4rkuLvliqjmm7TmlrDpgJrnn6Xlip/og73nrYnjgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiBDYWxpYnJpOyI+R2x1c3RlckZTIDMuMS5YPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9u
dC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5a6e546w5LqG6YC76L6R5Y2355qE
5by55oCn5ZKM6Ieq5Yqo5YyW566h55CG77yM5LiN6ZyA6KaB5Lit5pat5pWw5o2u5pyN5Yqh5oiW
5LiK5bGC5bqU55So5Lia5Yqh44CC5a+55LqOPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPldpbmRvd3M8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2T
OyBmb250LXNpemU6IDEycHQ7Ij7lrqLmiLfnq6/miJbmsqHmnInlronoo4U8L1NQQU4+PFNQQU4g
DQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0i
Zm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+55qE5a6i5oi356uv77yM6ZyA
6KaB6YCa6L+HPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEy
cHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPk5GUy9DSUZTPC9TUEFO
PjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0
OyI+5Luj55CG572R5YWz5p2l6K6/6Zeu77yM6L+Z5pe2572R5YWz6KKr6YWN572u5oiQPC9TUEFO
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0
eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPk5GUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9
ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaIljwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij5TYW1iYTwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQt
ZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuacjeWKoeWZqOOAguebuOWvueWOn+eU
n+WuouaIt+err++8jOe9keWFs+WcqOaAp+iDveS4iuimgeWPl+WIsDwvU1BBTj48U1BBTiANCmxh
bmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1m
YW1pbHk6IENhbGlicmk7Ij5ORlMvU2FtYmE8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250
LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nmoTliLbnuqbjgII8L1NQQU4+PC9Q
Pg0KPFAgYWxpZ249ImNlbnRlciIgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNt
IDBjbSAwcHQ7IHRleHQtYWxpZ246IGNlbnRlcjsiPiZuYnNwOzwvUD4NCjxQIGFsaWduPSJjZW50
ZXIiIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFs
aWduOiBjZW50ZXI7Ij48U1RST05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDljY7mlofk
u7/lros7IGZvbnQtc2l6ZTogMTJwdDsiPjxJTUcgd2lkdGg9Ijg0NCIgaGVpZ2h0PSI1NjMiIGFs
dD0iIiANCnNyYz0iaHR0cDovL2hpLmNzZG4ubmV0L2F0dGFjaG1lbnQvMjAxMTAzLzI1LzQ0MTY0
XzEzMDEwNDg4MTdsNzZKLnBuZyI+PC9TUEFOPjwvU1RST05HPjwvUD4NCjxQIGFsaWduPSJjZW50
ZXIiIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFs
aWduOiBjZW50ZXI7Ij48U1RST05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDljY7mlofk
u7/lros7IGZvbnQtc2l6ZTogMTJwdDsiPuWbvjxTUEFOIGxhbmc9IkVOLVVTIj4zIA0KR2x1c3Rl
ckZTPC9TUEFOPuaooeWdl+WMluWghuagiOW8j+iuvuiuoTxTUEFOIGxhbmc9IkVOLVVTIj48L1NQ
QU4+PC9TUEFOPjwvU1RST05HPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJn
aW46IDBjbSAwY20gMHB0OyI+PFNUUk9ORz48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+Jm5ic3A7Jm5ic3A7DQo8
L1NQQU4+PC9TUEFOPjwvU1RST05HPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1p
bHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+R2x1c3RlckZTPC9TUEFOPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaYr+aooeWdl+WMluWg
huagiOW8j+eahOaetuaehOiuvuiuoe+8jOWmguWbvjxTUEFOIA0KbGFuZz0iRU4tVVMiPjM8L1NQ
QU4+5omA56S644CC5qih5Z2X56ew5Li6PFNQQU4gbGFuZz0iRU4tVVMiPlRyYW5zbGF0b3I8L1NQ
QU4+77yM5pivPFNQQU4gbGFuZz0iRU4tVVMiPkdsdXN0ZXJGUzwvU1BBTj7mj5DkvpvnmoTkuIDn
p43lvLrlpKfmnLrliLbvvIzlgJ/liqnov5nnp43oia/lpb3lrprkuYnnmoTmjqXlj6Plj6/ku6Xp
q5jmlYjnroDkvr/lnLDmianlsZXmlofku7bns7vnu5/nmoTlip/og73jgILmnI3liqHnq6/kuI7l
rqLmiLfnq6/mqKHlnZfmjqXlj6PmmK/lhbzlrrnnmoTvvIzlkIzkuIDkuKo8U1BBTiANCmxhbmc9
IkVOLVVTIj50cmFuc2xhdG9yPC9TUEFOPuWPr+WQjOaXtuWcqOS4pOi+ueWKoOi9veOAguavj+S4
qjxTUEFOIA0KbGFuZz0iRU4tVVMiPnRyYW5zbGF0b3I8L1NQQU4+6YO95pivPFNQQU4gDQpsYW5n
PSJFTi1VUyI+U088L1NQQU4+5Yqo5oCB5bqT77yM6L+Q6KGM5pe25qC55o2u6YWN572u5Yqo5oCB
5Yqg6L2944CC5q+P5Liq5qih5Z2X5a6e546w54m55a6a5Z+65pys5Yqf6IO977yMPFNQQU4gDQps
YW5nPSJFTi1VUyI+R2x1c3RlckZTPC9TUEFOPuS4reaJgOacieeahOWKn+iDvemDveaYr+mAmui/
hzxTUEFOIA0KbGFuZz0iRU4tVVMiPnRyYW5zbGF0b3I8L1NQQU4+5a6e546w77yM5q+U5aaCPFNQ
QU4gbGFuZz0iRU4tVVMiPkNsdXN0ZXIsIFN0b3JhZ2UsIA0KUGVyZm9ybWFuY2UsIFByb3RvY29s
LCBGZWF0dXJlczwvU1BBTj7nrYnvvIzln7rmnKznroDljZXnmoTmqKHlnZflj6/ku6XpgJrov4fl
oIbmoIjlvI/nmoTnu4TlkIjmnaXlrp7njrDlpI3mnYLnmoTlip/og73jgILov5nkuIDorr7orqHm
gJ3mg7PlgJ/pibTkuoY8U1BBTiANCmxhbmc9IkVOLVVTIj5HTlUvSHVyZDwvU1BBTj7lvq7lhoXm
oLjnmoTomZrmi5/mlofku7bns7vnu5/orr7orqHvvIzlj6/ku6Xmiorlr7nlpJbpg6jns7vnu5/n
moTorr/pl67ovazmjaLmiJDnm67moIfns7vnu5/nmoTpgILlvZPosIPnlKjjgILlpKfpg6jliIbm
qKHlnZfpg73ov5DooYzlnKjlrqLmiLfnq6/vvIzmr5TlpoLlkIjmiJDlmajjgIE8U1BBTiANCmxh
bmc9IkVOLVVTIj5JL088L1NQQU4+6LCD5bqm5Zmo5ZKM5oCn6IO95LyY5YyW562J77yM5pyN5Yqh
56uv55u45a+5566A5Y2V6K645aSa44CC5a6i5oi356uv5ZKM5a2Y5YKo5pyN5Yqh5Zmo5Z2H5pyJ
6Ieq5bex55qE5a2Y5YKo5qCI77yM5p6E5oiQ5LqG5LiA5qO1PFNQQU4gbGFuZz0iRU4tVVMiPlRy
YW5zbGF0b3I8L1NQQU4+5Yqf6IO95qCR77yM5bqU55So5LqG6Iul5bmy5qih5Z2X44CC5qih5Z2X
5YyW5ZKM5aCG5qCI5byP55qE5p625p6E6K6+6K6h77yM5p6B5aSn6ZmN5L2O5LqG57O757uf6K6+
6K6h5aSN5p2C5oCn77yM566A5YyW5LqG57O757uf55qE5a6e546w44CB5Y2H57qn5Lul5Y+K57O7
57uf57u05oqk44CCPFNQQU4gDQpsYW5nPSJFTi1VUyI+PC9TUEFOPjwvU1BBTj48L1A+DQo8SDIg
c3R5bGU9Im1hcmdpbjogMTNwdCAwY20gMTNwdCAyMXB0OyB0ZXh0LWluZGVudDogLTIxcHQ7Ij48
QSBuYW1lPSJfVG9jMjg5MDk1ODc4IiANCnRhcmdldD0iX2JsYW5rIj48L0E+PEEgbmFtZT0iX1Rv
YzI4ODU4MDI0NCIgdGFyZ2V0PSJfYmxhbmsiPjwvQT48QSBuYW1lPSJfVG9jMjg4NTc5ODk2IiAN
CnRhcmdldD0iX2JsYW5rIj48L0E+PEEgbmFtZT0iX1RvYzI4ODU3OTgyMSIgdGFyZ2V0PSJfYmxh
bmsiPjwvQT48QSBuYW1lPSJfVG9jMjg4NTc5NjA2IiANCnRhcmdldD0iX2JsYW5rIj48U1BBTj48
U1BBTj48U1BBTj48U1BBTj48U1BBTiBsYW5nPSJFTi1VUyI+PFNQQU4+PFNQQU4gc3R5bGU9ImZv
bnQtZmFtaWx5OiBDYW1icmlhOyBmb250LXNpemU6IDE4cHg7Ij41LjwvU1BBTj48U1BBTiANCnN0
eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBOZXcgUm9tYW4iOyBmb250LXNpemUtYWRqdXN0
OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsnPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZu
YnNwOw0KPC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovk
vZM7Ij48U1BBTiBzdHlsZT0iZm9udC1zaXplOiAxOHB4OyI+5by55oCn5ZOI5biM566X5rOVPC9T
UEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9BPjwvSDI+DQo8UCBjbGFz
cz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4dC1pbmRlbnQ6IDIx
cHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7
Ij7lr7nkuo7liIbluIPlvI/ns7vnu5/ogIzoqIDvvIzlhYPmlbDmja7lpITnkIbmmK/lhrPlrprn
s7vnu5/mianlsZXmgKfjgIHmgKfog73ku6Xlj4rnqLPlrprmgKfnmoTlhbPplK7jgII8L1NQQU4+
PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48U1BBTiBz
dHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Y+m6L6f6LmK5b6E
77yM5b275bqV5pGS5byD5LqG5YWD5pWw5o2u5pyN5Yqh77yM5L2/55So5by55oCn5ZOI5biM566X
5rOV5Luj5pu/5Lyg57uf5YiG5biD5byP5paH5Lu257O757uf5Lit55qE6ZuG5Lit5oiW5YiG5biD
5byP5YWD5pWw5o2u5pyN5Yqh44CC6L+Z5qC55pys5oCn6Kej5Yaz5LqG5YWD5pWw5o2u6L+Z5LiA
6Zq+6aKY77yM5LuO6ICM6I635b6X5LqG5o6l6L+R57q/5oCn55qE6auY5omp5bGV5oCn77yM5ZCM
5pe25Lmf5o+Q6auY5LqG57O757uf5oCn6IO95ZKM5Y+v6Z2g5oCn44CCPC9TUEFOPjxTUEFOIA0K
bGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250
LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZv
bnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuS9v+eUqOeul+azlei/m+ihjOaV
sOaNruWumuS9je+8jOmbhue+pOS4reeahOS7u+S9leacjeWKoeWZqOWSjOWuouaIt+err+WPqumc
gOagueaNrui3r+W+hOWSjOaWh+S7tuWQjeWwseWPr+S7peWvueaVsOaNrui/m+ihjOWumuS9jeWS
jOivu+WGmeiuv+mXruOAguaNouWPpeivneivtO+8jDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVT
IiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENh
bGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7kuI3pnIDopoHlsIblhYPmlbDmja7kuI7mlbDmja7o
v5vooYzliIbnprvvvIzlm6DkuLrmlofku7blrprkvY3lj6/ni6znq4vlubbooYzljJbov5vooYzj
gII8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxT
UEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BB
Tj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Lit
5pWw5o2u6K6/6Zeu5rWB56iL5aaC5LiL77yaPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIg
c3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4gbGFu
Zz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQt
ZmFtaWx5OiBDYWxpYnJpOyI+MTwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5
OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuOAgeiuoeeulzwvU1BBTj48U1BBTiANCmxhbmc9
IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1p
bHk6IENhbGlicmk7Ij5oYXNoPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6
IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5YC877yM6L6T5YWl5Y+C5pWw5Li65paH5Lu26Lev
5b6E5ZKM5paH5Lu25ZCN77ybPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250
LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1h
cmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4gbGFuZz0iRU4tVVMi
IA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBD
YWxpYnJpOyI+MjwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7
IGZvbnQtc2l6ZTogMTJwdDsiPuOAgeagueaNrjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBz
dHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGli
cmk7Ij5oYXNoPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsg
Zm9udC1zaXplOiAxMnB0OyI+5YC85Zyo6ZuG576k5Lit6YCJ5oup5a2Q5Y2377yI5a2Y5YKo5pyN
5Yqh5Zmo77yJ77yM6L+b6KGM5paH5Lu25a6a5L2N77ybPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4t
VVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb05v
cm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQ
QU4gbGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9
ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+MzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQt
ZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuOAgeWvueaJgOmAieaLqeeahOWtkOWN
t+i/m+ihjOaVsOaNruiuv+mXruOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxl
PSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOIGxhbmc9IkVO
LVVTIiANCnN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWls
eTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFt
aWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuebruWJjeS9v+eUqDwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij5EYXZpZXMtTWV5ZXI8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxl
PSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nrpfms5XorqHnrpfmlofk
u7blkI08L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsi
PjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+aGFzaDwvU1BBTj48L1NQQU4+
PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWAvO+8
jOiOt+W+l+S4gOS4qjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4zMjwvU1BBTj48
L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsi
PuS9jeaVtOaVsOOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5EYXZpZXMtTWV5
ZXI8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNp
emU6IDEycHQ7Ij7nrpfms5XlhbfmnInpnZ7luLjlpb3nmoQ8L1NQQU4+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiBDYWxpYnJpOyI+aGFzaDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDl
rovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWIhuW4g+aAp++8jOiuoeeul+aViOeOh+W+iOmrmOOA
guWBh+iuvumAu+i+keWNt+S4reeahOWtmOWCqOacjeWKoeWZqOaciTwvU1BBTj48U1BBTiANCmxh
bmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1m
YW1pbHk6IENhbGlicmk7Ij5OPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6
IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Liq77yM5YiZPC9TUEFOPjxTUEFOIA0KbGFuZz0i
RU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWls
eTogQ2FsaWJyaTsiPjMyPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5L2N5pW05pWw56m66Ze06KKr5bmz5Z2H5YiS5YiG5Li6
PC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BB
TiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPk48L1NQQU4+PC9TUEFOPjxTUEFOIHN0
eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7kuKrov57nu63lrZDn
qbrpl7TvvIzmr4/kuKrnqbrpl7TliIbliKvmmKDlsITliLDkuIDkuKrlrZjlgqjmnI3liqHlmajj
gILov5nmoLfvvIzorqHnrpflvpfliLDnmoQ8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5
bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJp
OyI+MzI8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250
LXNpemU6IDEycHQ7Ij7kvY08L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQt
c2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+aGFzaDwv
U1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTog
MTJwdDsiPuWAvOWwseS8muiiq+aKleWwhOWIsOS4gOS4quWtmOWCqOacjeWKoeWZqO+8jOWNs+aI
keS7rOimgemAieaLqeeahOWtkOWNt+OAgumavumBk+ecn+aYr+WmguatpOeugOWNle+8n+eOsOWc
qOiuqeaIkeS7rOadpeiAg+iZkeS4gOS4i+WtmOWCqOiKgueCueWKoOWFpeWSjOWIoOmZpOOAgeaW
h+S7tuaUueWQjeetieaDheWGte+8jDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5H
bHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBm
b250LXNpemU6IDEycHQ7Ij7lpoLkvZXop6PlhrPov5nkupvpl67popjogIzlhbflpIflvLnmgKfn
moTlkaLvvJ88L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJw
dDsiPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20g
MGNtIDBwdDsgdGV4dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7pgLvovpHljbfkuK3liqDlhaXkuIDkuKrmlrDlrZjl
gqjoioLngrnvvIzlpoLmnpzkuI3kvZzlhbbku5bku7vkvZXlpITnkIbvvIw8L1NQQU4+PFNQQU4g
DQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiBDYWxpYnJpOyI+aGFzaDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQt
ZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWAvOaYoOWwhOepuumXtOWwhuS8muWP
keeUn+WPmOWMlu+8jOeOsOacieeahOaWh+S7tuebruW9leWPr+iDveS8muiiq+mHjeaWsOWumuS9
jeWIsOWFtuS7lueahOWtmOWCqOacjeWKoeWZqOS4iu+8jOS7juiAjOWvvOiHtOWumuS9jeWksei0
peOAguino+WGs+mXrumimOeahOaWueazleaYr+WvueaWh+S7tuebruW9lei/m+ihjOmHjeaWsOWI
huW4g++8jOaKiuaWh+S7tuenu+WKqOWIsOato+ehrueahOWtmOWCqOacjeWKoeWZqOS4iuWOu++8
jOS9hui/meWkp+Wkp+WKoOmHjeS6huezu+e7n+i0n+i9ve+8jOWwpOWFtuaYr+WvueS6juW3sue7
j+WtmOWCqOWkp+mHj+eahOaVsOaNrueahOa1t+mHj+WtmOWCqOezu+e7n+adpeivtOaYvueEtuaY
r+S4jeWPr+ihjOeahOOAguWPpuS4gOenjeaWueazleaYr+S9v+eUqOS4gOiHtOaAp+WTiOW4jOeu
l+azle+8jOS/ruaUueaWsOWinuiKgueCueWPiuebuOmCu+iKgueCueeahDwvU1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij5oYXNoPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5pig5bCE56m66Ze077yM5LuF6ZyA6KaB
56e75Yqo55u46YK76IqC54K55LiK55qE6YOo5YiG5pWw5o2u6Iez5paw5aKe6IqC54K577yM5b2x
5ZON55u45a+55bCP5LqG5b6I5aSa44CC54S26ICM77yM6L+Z5Y+I5bim5p2l5Y+m5aSW5LiA5Liq
6Zeu6aKY77yM5Y2z57O757uf5pW05L2T6LSf6L295LiN5Z2H6KGh44CCPC9TUEFOPjxTUEFOIA0K
bGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250
LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZv
bnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuayoeaciemHh+eUqOS4iui/sOS4
pOenjeaWueazle+8jOiAjOaYr+iuvuiuoeS6huabtOS4uuW8ueaAp+eahOeul+azleOAgjwvU1BB
Tj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpz
dHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFO
IHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nmoTlk4jluIzl
iIbluIPmmK/ku6Xnm67lvZXkuLrln7rmnKzljZXkvY3nmoTvvIzmlofku7bnmoTniLbnm67lvZXl
iKnnlKjmianlsZXlsZ7mgKforrDlvZXkuoblrZDljbfmmKDlsITkv6Hmga/vvIzlhbbkuIvpnaLl
rZDmlofku7bnm67lvZXlnKjniLbnm67lvZXmiYDlsZ7lrZjlgqjmnI3liqHlmajkuK3ov5vooYzl
iIbluIPjgILnlLHkuo7mlofku7bnm67lvZXkuovlhYjkv53lrZjkuobliIbluIPkv6Hmga/vvIzl
m6DmraTmlrDlop7oioLngrnkuI3kvJrlvbHlk43njrDmnInmlofku7blrZjlgqjliIbluIPvvIzl
roPlsIbku47mraTlkI7nmoTmlrDliJvlu7rnm67lvZXlvIDlp4vlj4LkuI7lrZjlgqjliIbluIPo
sIPluqbjgILov5nnp43orr7orqHvvIzmlrDlop7oioLngrnkuI3pnIDopoHnp7vliqjku7vkvZXm
lofku7bvvIzkvYbmmK/otJ/ovb3lnYfooaHmsqHmnInlubPmu5HlpITnkIbvvIzogIHoioLngrno
tJ/ovb3ovoPph43jgII8L1NQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6
ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZT
PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXpl
OiAxMnB0OyI+5Zyo6K6+6K6h5Lit6ICD6JmR5LqG6L+Z5LiA6Zeu6aKY77yM5Zyo5paw5bu65paH
5Lu25pe25Lya5LyY5YWI6ICD6JmR5a656YeP6LSf6L295pyA6L2755qE6IqC54K577yM5Zyo55uu
5qCH5a2Y5YKo6IqC54K55LiK5Yib5bu65paH5Lu26ZO+5o6l55u05ZCR55yf5q2j5a2Y5YKo5paH
5Lu255qE6IqC54K544CC5Y+m5aSW77yMPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxl
PSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsi
PkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7
IGZvbnQtc2l6ZTogMTJwdDsiPuW8ueaAp+WNt+euoeeQhuW3peWFt+WPr+S7peWcqOWQjuWPsOS7
peS6uuW3peaWueW8j+adpeaJp+ihjOi0n+i9veW5s+a7ke+8jOWwhui/m+ihjOaWh+S7tuenu+WK
qOWSjOmHjeaWsOWIhuW4g++8jOatpOWQjuaJgOacieWtmOWCqOacjeWKoeWZqOmDveS8muWdh+S8
muiiq+iwg+W6puOAgjwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46
IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovk
vZM7IGZvbnQtc2l6ZTogMTJwdDsiPuebruWJjeWvueWtmOWCqOiKgueCueWIoOmZpOaUr+aMgeac
iemZkO+8jOi/mOaXoOazleWBmuWIsOWujOWFqOaXoOS6uuW5sumihOeahOeoi+W6puOAguWmguae
nOebtOaOpeWIoOmZpOiKgueCue+8jOmCo+S5iOaJgOWcqOWtmOWCqOacjeWKoeWZqOS4iueahOaW
h+S7tuWwhuaXoOazlea1j+iniOWSjOiuv+mXru+8jOWIm+W7uuaWh+S7tuebruW9leS5n+S8muWk
sei0peOAguW9k+WJjeS6uuW3peino+WGs+aWueazleacieS4pOS4qu+8jOS4gOaYr+WwhuiKgueC
ueS4iueahOaVsOaNrumHjeaWsOWkjeWItuWIsDwvU1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBz
dHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGli
cmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyBmb250LXNpemU6IDEycHQ7Ij7kuK3vvIzkuozmmK/kvb/nlKjmlrDnmoToioLngrnmnaXm
m7/mjaLliKDpmaToioLngrnlubbkv53mjIHljp/mnInmlbDmja7jgII8L1NQQU4+PFNQQU4gDQps
YW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1A+DQo8UCBjbGFz
cz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4dC1pbmRlbnQ6IDIx
cHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7
Ij7lpoLmnpzkuIDkuKrmlofku7booqvmlLnlkI3vvIzmmL7nhLY8L1NQQU4+PFNQQU4gbGFuZz0i
RU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiBDYWxpYnJpOyI+aGFzaDwvU1BBTj48L1NQQU4+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5
OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPueul+azleWwhuS6p+eUn+S4jeWQjOeahOWAvO+8
jOmdnuW4uOWPr+iDveS8muWPkeeUn+aWh+S7tuiiq+WumuS9jeWIsOS4jeWQjOeahOWtmOWCqOac
jeWKoeWZqOS4iu+8jOS7juiAjOWvvOiHtOaWh+S7tuiuv+mXruWksei0peOAgumHh+eUqOaVsOaN
ruenu+WKqOeahOaWueazle+8jOWvueS6juWkp+aWh+S7tuaYr+W+iOmavuWcqOWunuaXtuWujOaI
kOeahOOAguS4uuS6huS4jeW9seWTjeaAp+iDveWSjOacjeWKoeS4reaWre+8jDwvU1BBTj48U1BB
TiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0i
Zm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxl
PSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7ph4fnlKjkuobmlofku7bp
k77mjqXmnaXop6PlhrPmlofku7bph43lkb3lkI3pl67popjvvIzlnKjnm67moIflrZjlgqjmnI3l
iqHlmajkuIrliJvlu7rkuIDkuKrpk77mjqXmjIflkJHlrp7pmYXnmoTlrZjlgqjmnI3liqHlmajv
vIzorr/pl67ml7bnlLHns7vnu5/op6PmnpDlubbov5vooYzph43lrprlkJHjgILlj6blpJbvvIzl
kI7lj7DlkIzml7bov5vooYzmlofku7bov4Hnp7vvvIzmiJDlip/lkI7mlofku7bpk77mjqXlsIbo
oqvoh6rliqjliKDpmaTjgILlr7nkuo7mlofku7bnp7vliqjkuZ/kvZznsbvkvLzlpITnkIbvvIzl
pb3lpITmmK/liY3lj7Dmk43kvZzlj6/lrp7ml7blpITnkIbvvIzniannkIbmlbDmja7ov4Hnp7vn
va7kuo7lkI7lj7DpgInmi6npgILlvZPml7bmnLrmiafooYzjgII8L1NQQU4+PFNQQU4gDQpsYW5n
PSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1A+DQo8UCBhbGlnbj0i
Y2VudGVyIiBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4
dC1hbGlnbjogY2VudGVyOyI+Jm5ic3A7PC9QPg0KPFAgYWxpZ249ImNlbnRlciIgY2xhc3M9Ik1z
b05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtYWxpZ246IGNlbnRlcjsi
PjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWNjuaWh+S7v+WuizsgZm9udC1z
aXplOiAxMnB0OyI+PElNRyB3aWR0aD0iOTAwIiBoZWlnaHQ9IjY0OCIgYWx0PSIiIA0Kc3JjPSJo
dHRwOi8vaGkuY3Nkbi5uZXQvYXR0YWNobWVudC8yMDExMDMvMjUvNDQxNjRfMTMwMTA0ODgxOXUw
SnMucG5nIj48L1NQQU4+PC9TVFJPTkc+PC9QPg0KPFAgYWxpZ249ImNlbnRlciIgY2xhc3M9Ik1z
b05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtYWxpZ246IGNlbnRlcjsi
PjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWNjuaWh+S7v+WuizsgZm9udC1z
aXplOiAxMnB0OyI+5Zu+PFNQQU4gbGFuZz0iRU4tVVMiPjQgDQpHbHVzdGVyRlM8L1NQQU4+5by5
5oCn5Y23566h55CGPFNQQU4gbGFuZz0iRU4tVVMiPjwvU1BBTj48L1NQQU4+PC9TVFJPTkc+PC9Q
Pg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7Ij48U1RS
T05HPjxTUEFOIGxhbmc9IkVOLVVTIiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250
LXNpemU6IDEycHQ7Ij48U1BBTj4mbmJzcDsmbmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TVFJPTkc+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5by5
5oCn5ZOI5biM566X5rOV5Li65paH5Lu25YiG6YWN6YC76L6R5Y2377yM6YKj5LmIPFNQQU4gDQps
YW5nPSJFTi1VUyI+R2x1c3RlckZTPC9TUEFOPuWmguS9leS4uumAu+i+keWNt+WIhumFjeeJqeeQ
huWNt+WRou+8nzxTUEFOIA0KbGFuZz0iRU4tVVMiPkdsdXN0ZXJGUzMuMS5YPC9TUEFOPuWunueO
sOS6huecn+ato+eahOW8ueaAp+WNt+euoeeQhu+8jOWmguWbvjxTUEFOIA0KbGFuZz0iRU4tVVMi
PjQ8L1NQQU4+5omA56S644CC5a2Y5YKo5Y235piv5a+55bqV5bGC56Gs5Lu255qE5oq96LGh77yM
5Y+v5Lul5qC55o2u6ZyA6KaB6L+b6KGM5omp5a655ZKM57yp5YeP77yM5Lul5Y+K5Zyo5LiN5ZCM
54mp55CG57O757uf5LmL6Ze06L+b6KGM6L+B56e744CC5a2Y5YKo5pyN5Yqh5Zmo5Y+v5Lul5Zyo
57q/5aKe5Yqg5ZKM56e76Zmk77yM5bm26IO95Zyo6ZuG576k5LmL6Ze06Ieq5Yqo6L+b6KGM5pWw
5o2u6LSf6L295bmz6KGh77yM5pWw5o2u5oC75piv5Zyo57q/5Y+v55So77yM5rKh5pyJ5bqU55So
5Lit5pat44CC5paH5Lu257O757uf6YWN572u5pu05paw5Lmf5Y+v5Lul5Zyo57q/5omn6KGM77yM
5omA5L2c6YWN572u5Y+Y5Yqo6IO95aSf5b+r6YCf5Yqo5oCB5Zyw5Zyo6ZuG576k5Lit5Lyg5pKt
77yM5LuO6ICM6Ieq5Yqo6YCC5bqU6LSf6L295rOi5Yqo5ZKM5oCn6IO96LCD5LyY44CCPFNQQU4g
DQpsYW5nPSJFTi1VUyI+PC9TUEFOPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBz
dHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsiPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9u
dC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+Jm5ic3A7Jm5ic3A7Jm5i
c3A7DQo8L1NQQU4+PC9TUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZv
bnQtc2l6ZTogMTJwdDsiPuW8ueaAp+WTiOW4jOeul+azleacrOi6q+W5tuayoeacieaPkOS+m+aV
sOaNruWuuemUmeWKn+iDve+8jDxTUEFOIA0KbGFuZz0iRU4tVVMiPkdsdXN0ZXJGUzwvU1BBTj7k
vb/nlKjplZzlg4/miJblpI3liLbmnaXkv53or4HmlbDmja7lj6/nlKjmgKfvvIzmjqjojZDkvb/n
lKjplZzlg4/miJY8U1BBTiANCmxhbmc9IkVOLVVTIj4zPC9TUEFOPui3r+WkjeWItuOAguWkjeWI
tuaooeW8j+S4i++8jOWtmOWCqOacjeWKoeWZqOS9v+eUqOWQjOatpeWGmeWkjeWItuWIsOWFtuS7
lueahOWtmOWCqOacjeWKoeWZqO+8jOWNleS4quacjeWKoeWZqOaVhemanOWujOWFqOWvueWuouaI
t+err+mAj+aYjuOAguatpOWklu+8jDxTUEFOIA0KbGFuZz0iRU4tVVMiPkdsdXN0ZXJGUzwvU1BB
Tj7msqHmnInlr7nlpI3liLbmlbDph4/ov5vooYzpmZDliLbvvIzor7vooqvliIbmlaPliLDmiYDm
nInnmoTplZzlg4/lrZjlgqjoioLngrnvvIzlj6/ku6Xmj5Dpq5jor7vmgKfog73jgILlvLnmgKfl
k4jluIznrpfms5XliIbphY3mlofku7bliLDllK/kuIDnmoTpgLvovpHljbfvvIzogIzlpI3liLbl
j6/ku6Xkv53or4HmlbDmja7oh7PlsJHkv53lrZjlnKjkuKTkuKrkuI3lkIzlrZjlgqjoioLngrnv
vIzkuKTogIXnu5PlkIjkvb/lvpc8U1BBTiANCmxhbmc9IkVOLVVTIj5HbHVzdGVyRlM8L1NQQU4+
5YW35aSH5pu06auY55qE5by55oCn44CCPFNQQU4gbGFuZz0iRU4tVVMiPjwvU1BBTj48L1NQQU4+
PC9QPg0KPEgyIHN0eWxlPSJtYXJnaW46IDEzcHQgMGNtIDEzcHQgMjFwdDsgdGV4dC1pbmRlbnQ6
IC0yMXB0OyI+PEEgbmFtZT0iX1RvYzI4OTA5NTg3OSIgDQp0YXJnZXQ9Il9ibGFuayI+PC9BPjxB
IG5hbWU9Il9Ub2MyODg1ODAyNDUiIHRhcmdldD0iX2JsYW5rIj48L0E+PEEgbmFtZT0iX1RvYzI4
ODU3OTg5NyIgDQp0YXJnZXQ9Il9ibGFuayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1Nzk4MjIiIHRh
cmdldD0iX2JsYW5rIj48L0E+PEEgbmFtZT0iX1RvYzI4ODU3OTYwNyIgDQp0YXJnZXQ9Il9ibGFu
ayI+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gbGFuZz0iRU4tVVMiPjxTUEFOPjxTUEFO
IHN0eWxlPSJmb250LWZhbWlseTogQ2FtYnJpYTsgZm9udC1zaXplOiAxOHB4OyI+Ni48L1NQQU4+
PFNQQU4gDQpzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3IFJvbWFuIjsgZm9udC1z
aXplLWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4mbmJzcDsmbmJzcDsmbmJz
cDsmbmJzcDsmbmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOIGxhbmc9IkVOLVVTIj48
U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbWJyaWE7IGZvbnQtc2l6ZTogMThweDsiPlRyYW5z
bGF0b3JzPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9BPjwvSDI+
DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4dC1p
bmRlbnQ6IDIxcHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNp
emU6IDEycHQ7Ij7lpoLliY3miYDov7DvvIw8L1NQQU4+PFNQQU4gbGFuZz0iRU4tVVMiIHN0eWxl
PSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsi
PlRyYW5zbGF0b3JzPC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9
kzsgZm9udC1zaXplOiAxMnB0OyI+5pivPC9TUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxl
PSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij5HbHVzdGVyRlM8L1NQQU4+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5o+Q
5L6b55qE5LiA56eN5by65aSn5paH5Lu257O757uf5Yqf6IO95omp5bGV5py65Yi277yM6L+Z5LiA
6K6+6K6h5oCd5oOz5YCf6Ym05LqOPFNQQU4gbGFuZz0iRU4tVVMiPkdOVS9IdXJkPC9TUEFOPuW+
ruWGheaguOaTjeS9nOezu+e7n+OAgjxTUEFOIA0KbGFuZz0iRU4tVVMiPkdsdXN0ZXJGUzwvU1BB
Tj7kuK3miYDmnInnmoTlip/og73pg73pgJrov4c8U1BBTiANCmxhbmc9IkVOLVVTIj5UcmFuc2xh
dG9yPC9TUEFOPuacuuWItuWunueOsO+8jOi/kOihjOaXtuS7peWKqOaAgeW6k+aWueW8j+i/m+ih
jOWKoOi9ve+8jOacjeWKoeerr+WSjOWuouaIt+err+ebuOS6kuWFvOWuueOAgjxTUEFOIA0KbGFu
Zz0iRU4tVVMiPkdsdXN0ZXJGUyAzLjEuWDwvU1BBTj7kuK3vvIzkuLvopoHljIXmi6zku6XkuIvl
h6Dnsbs8U1BBTiANCmxhbmc9IkVOLVVTIj5UcmFuc2xhdG9yPC9TUEFOPu+8mjxTUEFOIGxhbmc9
IkVOLVVTIj48L1NQQU4+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29MaXN0UGFyYWdyYXBoIiBz
dHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdCA1N3B0OyB0ZXh0LWluZGVudDogLTM2cHQ7Ij48U1BB
TiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAx
MnB0OyI+PFNQQU4+77yIMe+8iTxTUEFOIHN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBO
ZXcgUm9tYW4iOyBmb250LXNpemUtYWRqdXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsn
PiZuYnNwOw0KPC9TUEFOPjwvU1BBTj48L1NQQU4+PFNUUk9ORz48U1BBTiBsYW5nPSJFTi1VUyIg
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPkNsdXN0ZXI8L1NQ
QU4+PC9TVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXpl
OiAxMnB0OyI+77ya5a2Y5YKo6ZuG576k5YiG5biD77yM55uu5YmN5pyJPFNQQU4gbGFuZz0iRU4t
VVMiPkFGUiwgDQpESFQsIFN0cmlwZTwvU1BBTj7kuInnp43mlrnlvI88U1BBTiBsYW5nPSJFTi1V
UyI+PC9TUEFOPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9
Im1hcmdpbjogMGNtIDBjbSAwcHQgNTdwdDsgdGV4dC1pbmRlbnQ6IC0zNnB0OyI+PFNQQU4gDQps
YW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsi
PjxTUEFOPu+8iDLvvIk8U1BBTiBzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3IFJv
bWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4mbmJz
cDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTVFJPTkc+PFNQQU4gbGFuZz0iRU4tVVMiIHN0eWxl
PSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij5EZWJ1ZzwvU1BBTj48L1NU
Uk9ORz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7
Ij7vvJrot5/ouKo8U1BBTiANCmxhbmc9IkVOLVVTIj5HbHVzdGVyRlM8L1NQQU4+5YaF6YOo5Ye9
5pWw5ZKM57O757uf6LCD55SoPFNQQU4gbGFuZz0iRU4tVVMiPjwvU1BBTj48L1NQQU4+PC9QPg0K
PFAgY2xhc3M9Ik1zb0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0IDU3
cHQ7IHRleHQtaW5kZW50OiAtMzZwdDsiPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250
LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij48U1BBTj7vvIgz77yJPFNQQU4gc3R5
bGU9J2ZvbnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6
IG5vbmU7IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BB
Tj48U1RST05HPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsg
Zm9udC1zaXplOiAxMnB0OyI+RW5jcnlwdGlvbjwvU1BBTj48L1NUUk9ORz48U1BBTiANCnN0eWxl
PSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7vvJrnroDljZXnmoTmlbDm
ja7liqDlr4blrp7njrA8U1BBTiANCmxhbmc9IkVOLVVTIj48L1NQQU4+PC9TUEFOPjwvUD4NCjxQ
IGNsYXNzPSJNc29MaXN0UGFyYWdyYXBoIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdCA1N3B0
OyB0ZXh0LWluZGVudDogLTM2cHQ7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+77yINO+8iTxTUEFOIHN0eWxl
PSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBOZXcgUm9tYW4iOyBmb250LXNpemUtYWRqdXN0OiBu
b25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsnPiZuYnNwOw0KPC9TUEFOPjwvU1BBTj48L1NQQU4+
PFNUUk9ORz48U1BBTiBsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZv
bnQtc2l6ZTogMTJwdDsiPkZlYXR1cmVzPC9TUEFOPjwvU1RST05HPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8muiuv+mXruaOp+WItuOAgemU
geOAgTxTUEFOIA0KbGFuZz0iRU4tVVMiPk1hYzwvU1BBTj7lhbzlrrnjgIHpnZnpu5jjgIHphY3p
op3jgIHlj6ror7vjgIHlm57mlLbnq5nnrYk8U1BBTiBsYW5nPSJFTi1VUyI+PC9TUEFOPjwvU1BB
Tj48L1A+DQo8UCBjbGFzcz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9Im1hcmdpbjogMGNtIDBj
bSAwcHQgNTdwdDsgdGV4dC1pbmRlbnQ6IC0zNnB0OyI+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5
bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOPu+8iDXvvIk8
U1BBTiBzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3IFJvbWFuIjsgZm9udC1zaXpl
LWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4mbmJzcDsNCjwvU1BBTj48L1NQ
QU4+PC9TUEFOPjxTVFJPTkc+PFNQQU4gbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTog
5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij5NZ210PC9TUEFOPjwvU1RST05HPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8muW8ueaAp+WNt+eu
oeeQhjxTUEFOIA0KbGFuZz0iRU4tVVMiPjwvU1BBTj48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1z
b0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0IDU3cHQ7IHRleHQtaW5k
ZW50OiAtMzZwdDsiPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyBmb250LXNpemU6IDEycHQ7Ij48U1BBTj7vvIg277yJPFNQQU4gc3R5bGU9J2ZvbnQ6IDdw
dC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQt
c3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1RST05HPjxT
UEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAx
MnB0OyI+TW91bnQ8L1NQQU4+PC9TVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77yaPFNQQU4gDQpsYW5nPSJFTi1VUyI+RlVTRTwvU1BB
Tj7mjqXlj6Plrp7njrA8U1BBTiBsYW5nPSJFTi1VUyI+PC9TUEFOPjwvU1BBTj48L1A+DQo8UCBj
bGFzcz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQgNTdwdDsg
dGV4dC1pbmRlbnQ6IC0zNnB0OyI+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFt
aWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOPu+8iDfvvIk8U1BBTiBzdHlsZT0n
Zm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3IFJvbWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9u
ZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4mbmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxT
VFJPTkc+PFNQQU4gbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250
LXNpemU6IDEycHQ7Ij5OZnM8L1NQQU4+PC9TVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1p
bHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77ya5YaF6YOoPFNQQU4gDQpsYW5nPSJFTi1V
UyI+TkZTPC9TUEFOPuacjeWKoeWZqDxTUEFOIGxhbmc9IkVOLVVTIj48L1NQQU4+PC9TUEFOPjwv
UD4NCjxQIGNsYXNzPSJNc29MaXN0UGFyYWdyYXBoIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBw
dCA1N3B0OyB0ZXh0LWluZGVudDogLTM2cHQ7Ij48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0i
Zm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+77yIOO+8iTxTUEFO
IHN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBOZXcgUm9tYW4iOyBmb250LXNpemUtYWRq
dXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsnPiZuYnNwOw0KPC9TUEFOPjwvU1BBTj48
L1NQQU4+PFNUUk9ORz48U1BBTiBsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovk
vZM7IGZvbnQtc2l6ZTogMTJwdDsiPlBlcmZvcm1hbmNlPC9TUEFOPjwvU1RST05HPjxTUEFOIA0K
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8mjxTUEFOIGxh
bmc9IkVOLVVTIj5pby1jYWNoZSwgDQppby10aHJlYWRzLCBxdWljay1yZWFkLCByZWFkLWFoZWFk
LCBzdGF0LXByZWZldGNoLCBzeXNtbGluay1jYWNoZSwgDQp3cml0ZS1iZWhpbmQ8L1NQQU4+562J
5oCn6IO95LyY5YyWPFNQQU4gbGFuZz0iRU4tVVMiPjwvU1BBTj48L1NQQU4+PC9QPg0KPFAgY2xh
c3M9Ik1zb0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0IDU3cHQ7IHRl
eHQtaW5kZW50OiAtMzZwdDsiPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWls
eTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij48U1BBTj7vvIg577yJPFNQQU4gc3R5bGU9J2Zv
bnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7
IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1RS
T05HPjxTUEFOIGxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1z
aXplOiAxMnB0OyI+UHJvdG9jb2w8L1NQQU4+PC9TVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77ya5pyN5Yqh5Zmo5ZKM5a6i5oi356uv
5Y2P6K6u5a6e546wPFNQQU4gDQpsYW5nPSJFTi1VUyI+PC9TUEFOPjwvU1BBTj48L1A+DQo8UCBj
bGFzcz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQgNTdwdDsg
dGV4dC1pbmRlbnQ6IC0zNnB0OyI+PFNQQU4gDQpsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+PFNQQU4+77yIMTDvvIk8L1NQQU4+PC9T
UEFOPjxTVFJPTkc+PFNQQU4gDQpsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+U3RvcmFnZTwvU1BBTj48L1NUUk9ORz48U1BBTiBzdHls
ZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+77ya5bqV5bGC5paH5Lu2
57O757ufPFNQQU4gDQpsYW5nPSJFTi1VUyI+UE9TSVg8L1NQQU4+5o6l5Y+j5a6e546wPFNQQU4g
bGFuZz0iRU4tVVMiPjwvU1BBTj48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIgc3R5
bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4gDQpzdHls
ZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+6L+Z6YeM5oiR5Lus6YeN
54K55LuL57uN5LiA5LiLPFNQQU4gbGFuZz0iRU4tVVMiPkNsdXN0ZXIgDQpUcmFuc2xhdG9yczwv
U1BBTj7vvIzlroPmmK/lrp7njrA8U1BBTiBsYW5nPSJFTi1VUyI+R2x1c3RlckZTPC9TUEFOPumb
hue+pOWtmOWCqOeahOaguOW/g++8jOWug+WMheaLrDxTUEFOIGxhbmc9IkVOLVVTIj5BRlI8L1NQ
QU4+77yIPFNQQU4gDQpsYW5nPSJFTi1VUyI+QXV0b21hdGljIEZpbGUgUmVwbGljYXRpb248L1NQ
QU4+77yJ44CBPFNQQU4gDQpsYW5nPSJFTi1VUyI+REhUPC9TUEFOPu+8iDxTUEFOIGxhbmc9IkVO
LVVTIj5EaXN0cmlidXRlZCBIYXNoIFRhYmxlPC9TUEFOPu+8ieWSjDxTUEFOIA0KbGFuZz0iRU4t
VVMiPlN0cmlwZTwvU1BBTj7kuInnp43nsbvlnovjgII8U1BBTiBsYW5nPSJFTi1VUyI+PC9TUEFO
PjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNt
IDBwdDsgdGV4dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+QUZSPC9TUEFOPjxTUEFOIHN0eWxl
PSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nm7jlvZPkuo48U1BBTiAN
Cmxhbmc9IkVOLVVTIj5SQUlEMTwvU1BBTj7vvIzlkIzkuIDmlofku7blnKjlpJrkuKrlrZjlgqjo
ioLngrnkuIrkv53nlZnlpJrku73vvIzkuLvopoHnlKjkuo7lrp7njrDpq5jlj6/nlKjmgKfku6Xl
j4rmlbDmja7oh6rliqjkv67lpI3jgII8U1BBTiANCmxhbmc9IkVOLVVTIj5BRlI8L1NQQU4+5omA
5pyJ5a2Q5Y235LiK5YW35pyJ55u45ZCM55qE5ZCN5a2X56m66Ze077yM5p+l5om+5paH5Lu25pe2
5LuO56ys5LiA5Liq6IqC54K55byA5aeL77yM55u05Yiw5pCc57Si5oiQ5Yqf5oiW5pyA5ZCO6IqC
54K55pCc57Si5a6M5q+V44CC6K+75pWw5o2u5pe277yMPFNQQU4gDQpsYW5nPSJFTi1VUyI+QUZS
PC9TUEFOPuS8muaKiuaJgOacieivt+axguiwg+W6puWIsOaJgOacieWtmOWCqOiKgueCue+8jOi/
m+ihjOi0n+i9veWdh+ihoeS7peaPkOmrmOezu+e7n+aAp+iDveOAguWGmeaVsOaNruaXtu+8jOmm
luWFiOmcgOimgeWcqOaJgOaciemUgeacjeWKoeWZqOS4iuWvueaWh+S7tuWKoOmUge+8jOm7mOiu
pOesrOS4gOS4quiKgueCueS4uumUgeacjeWKoeWZqO+8jOWPr+S7peaMh+WumuWkmuS4quOAgueE
tuWQju+8jDxTUEFOIA0KbGFuZz0iRU4tVVMiPkFGUjwvU1BBTj7ku6Xml6Xlv5fkuovku7bmlrnl
vI/lr7nmiYDmnInmnI3liqHlmajov5vooYzlhpnmlbDmja7mk43kvZzvvIzmiJDlip/lkI7liKDp
maTml6Xlv5flubbop6PplIHjgII8U1BBTiANCmxhbmc9IkVOLVVTIj5BRlI8L1NQQU4+5Lya6Ieq
5Yqo5qOA5rWL5bm25L+u5aSN5ZCM5LiA5paH5Lu255qE5pWw5o2u5LiN5LiA6Ie05oCn77yM5a6D
5L2/55So5pu05pS55pel5b+X5p2l56Gu5a6a5aW955qE5pWw5o2u5Ymv5pys44CC6Ieq5Yqo5L+u
5aSN5Zyo5paH5Lu255uu5b2V6aaW5qyh6K6/6Zeu5pe26Kem5Y+R77yM5aaC5p6c5piv55uu5b2V
5bCG5Zyo5omA5pyJ5a2Q5Y235LiK5aSN5Yi25q2j56Gu5pWw5o2u77yM5aaC5p6c5paH5Lu25LiN
5a2Y5YiZ5Yib5bu677yM5paH5Lu25L+h5oGv5LiN5Yy56YWN5YiZ5L+u5aSN77yM5pel5b+X5oyH
56S65pu05paw5YiZ6L+b6KGM5pu05paw44CCPFNQQU4gDQpsYW5nPSJFTi1VUyI+PC9TUEFOPjwv
U1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBw
dDsgdGV4dC1pbmRlbnQ6IDIxcHQ7Ij48U1BBTiBsYW5nPSJFTi1VUyIgDQpzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+REhUPC9TUEFOPjxTUEFOIHN0eWxlPSJm
b250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7ljbPkuIrpnaLmiYDku4vnu43n
moTlvLnmgKflk4jluIznrpfms5XvvIzlroPph4fnlKg8U1BBTiANCmxhbmc9IkVOLVVTIj5oYXNo
PC9TUEFOPuaWueW8j+i/m+ihjOaVsOaNruWIhuW4g++8jOWQjeWtl+epuumXtOWIhuW4g+WcqOaJ
gOacieiKgueCueS4iuOAguafpeaJvuaWh+S7tuaXtu+8jOmAmui/h+W8ueaAp+WTiOW4jOeul+az
lei/m+ihjO+8jOS4jeS+nei1luWQjeWtl+epuumXtOOAguS9humBjeWOhuaWh+S7tuebruW9leaX
tu+8jOWImeWunueOsOi+g+S4uuWkjeadguWSjOS9juaViO+8jOmcgOimgeaQnOe0ouaJgOacieea
hOWtmOWCqOiKgueCueOAguWNleS4gOaWh+S7tuWPquS8muiwg+W6puWIsOWUr+S4gOeahOWtmOWC
qOiKgueCue+8jOS4gOaXpuaWh+S7tuiiq+WumuS9jeWQju+8jOivu+WGmeaooeW8j+ebuOWvueeu
gOWNleOAgjxTUEFOIA0KbGFuZz0iRU4tVVMiPkRIVDwvU1BBTj7kuI3lhbflpIflrrnplJnog73l
ipvvvIzpnIDopoHlgJ/liqk8U1BBTiBsYW5nPSJFTi1VUyI+QUZSPC9TUEFOPuWunueOsOmrmOWP
r+eUqOaApzxTUEFOIA0KbGFuZz0iRU4tVVMiPiwgPC9TUEFOPuWmguWbvjxTUEFOIGxhbmc9IkVO
LVVTIj41PC9TUEFOPuaJgOekuuW6lOeUqOahiOS+i+OAgjxTUEFOIA0KbGFuZz0iRU4tVVMiPjwv
U1BBTj48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1hbCIgc3R5bGU9Im1hcmdpbjogMGNt
IDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4gbGFuZz0iRU4tVVMiIA0Kc3R5bGU9
ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPlN0cmlwZTwvU1BBTj48U1BB
TiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+55u45b2T5LqO
PFNQQU4gDQpsYW5nPSJFTi1VUyI+UkFJRDA8L1NQQU4+77yM5Y2z5YiG54mH5a2Y5YKo77yM5paH
5Lu26KKr5YiS5YiG5oiQ5Zu65a6a6ZW/5bqm55qE5pWw5o2u5YiG54mH5LulPFNQQU4gDQpsYW5n
PSJFTi1VUyI+Um91bmQtUm9iaW48L1NQQU4+6L2u6L2s5pa55byP5a2Y5YKo5Zyo5omA5pyJ5a2Y
5YKo6IqC54K544CCPFNQQU4gDQpsYW5nPSJFTi1VUyI+U3RyaXBlPC9TUEFOPuaJgOacieWtmOWC
qOiKgueCuee7hOaIkOWujOaVtOeahOWQjeWtl+epuumXtO+8jOafpeaJvuaWh+S7tuaXtumcgOim
geivoumXruaJgOacieiKgueCue+8jOi/meeCuemdnuW4uOS9juaViOOAguivu+WGmeaVsOaNruaX
tu+8jDxTUEFOIGxhbmc9IkVOLVVTIj5TdHJpcGU8L1NQQU4+5raJ5Y+K5YWo6YOo5YiG54mH5a2Y
5YKo6IqC54K577yM5pON5L2c5Y+v5Lul5Zyo5aSa5Liq6IqC54K55LmL6Ze05bm25Y+R5omn6KGM
77yM5oCn6IO96Z2e5bi46auY44CCPFNQQU4gDQpsYW5nPSJFTi1VUyI+U3RyaXBlPC9TUEFOPumA
muW4uOS4jjxTUEFOIGxhbmc9IkVOLVVTIj5BRlI8L1NQQU4+57uE5ZCI5L2/55So77yM5p6E5oiQ
PFNQQU4gbGFuZz0iRU4tVVMiPlJBSUQxMC9SQUlEMDE8L1NQQU4+77yM5ZCM5pe26I635b6X6auY
5oCn6IO95ZKM6auY5Y+v55So5oCn77yM5b2T54S25a2Y5YKo5Yip55So546H5Lya5L2O5LqOPFNQ
QU4gDQpsYW5nPSJFTi1VUyI+NTAlPC9TUEFOPuOAgjxTUEFOIGxhbmc9IkVOLVVTIj48L1NQQU4+
PC9TUEFOPjwvUD4NCjxQIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJt
YXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48QSANCm5hbWU9Il9Ub2My
ODg1ODAyNTAiIHRhcmdldD0iX2JsYW5rIj48L0E+PEEgbmFtZT0iX1RvYzI4ODU3OTkwMiIgDQp0
YXJnZXQ9Il9ibGFuayI+PC9BPjxBIG5hbWU9Il9Ub2MyODg1Nzk4MjciIHRhcmdldD0iX2JsYW5r
Ij48L0E+PEEgbmFtZT0iX1RvYzI4ODU3OTYxMiIgDQp0YXJnZXQ9Il9ibGFuayI+PFNQQU4+PFNQ
QU4+PFNQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9BPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFO
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9T
UEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvUD4NCjxQIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJN
c29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFsaWduOiBjZW50ZXI7
Ij48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1RST05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFt
aWx5OiDljY7mlofku7/lros7IGZvbnQtc2l6ZTogMTJwdDsiPjxJTUcgYWx0PSIiIHNyYz0iaHR0
cDovL2hpLmNzZG4ubmV0L2F0dGFjaG1lbnQvMjAxMTAzLzI1LzQ0MTY0XzEzMDEwNDg4MjE5SUxm
LnBuZyI+PC9TUEFOPjwvU1RST05HPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1A+DQo8
UCBhbGlnbj0iY2VudGVyIiBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNt
IDBwdDsgdGV4dC1hbGlnbjogY2VudGVyOyI+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNUUk9O
Rz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5Y2O5paH5Lu/5a6LOyBmb250LXNpemU6IDEy
cHQ7Ij7lm748U1BBTiBsYW5nPSJFTi1VUyI+NTwvU1BBTj7jgIA8U1BBTiANCmxhbmc9IkVOLVVT
Ij5HbHVzdGVyRlM8L1NQQU4+5bqU55So5qGI5L6L77yaPFNQQU4gDQpsYW5nPSJFTi1VUyI+QUZS
K0RIVDwvU1BBTj48L1NQQU4+PC9TVFJPTkc+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwv
UD4NCjxIMiANCnN0eWxlPSJtYXJnaW46IDEzcHQgMGNtIDEzcHQgMjFwdDsgdGV4dC1pbmRlbnQ6
IC0yMXB0OyI+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PEEgDQpuYW1lPSJfVG9jMjg5MDk1ODgw
IiB0YXJnZXQ9Il9ibGFuayI+PFNQQU4gbGFuZz0iRU4tVVMiPjxTUEFOPjxTUEFOIHN0eWxlPSJm
b250LWZhbWlseTogQ2FtYnJpYTsgZm9udC1zaXplOiAxOHB4OyI+Ny48L1NQQU4+PFNQQU4gDQpz
dHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3IFJvbWFuIjsgZm9udC1zaXplLWFkanVz
dDogbm9uZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsm
bmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyI+PFNQQU4gc3R5bGU9ImZvbnQtc2l6ZTogMThweDsiPuiuvuiuoeiuqOiuujwvU1BBTj48
L1NQQU4+PC9BPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L0gyPg0KPFAgY2xhc3M9Ik1z
b05vcm1hbCIgDQpzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4dC1pbmRlbnQ6IDIxcHQ7
Ij48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9u
dC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVz
dGVyRlM8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BB
Tj48U1BBTj48U1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNp
emU6IDEycHQ7Ij7mmK/kuIDkuKrlhbfmnInpq5jmianlsZXmgKfjgIHpq5jmgKfog73jgIHpq5jl
j6/nlKjmgKfjgIHlj6/mqKrlkJHmianlsZXnmoTlvLnmgKfliIbluIPlvI/mlofku7bns7vnu5/v
vIzlnKjmnrbmnoTorr7orqHkuIrpnZ7luLjmnInnibnngrnvvIzmr5TlpoLml6DlhYPmlbDmja7m
nI3liqHlmajorr7orqHjgIHloIbmoIjlvI/mnrbmnoTnrYnjgILnhLbogIzvvIzlrZjlgqjlupTn
lKjpl67popjmmK/lvojlpI3mnYLnmoTvvIw8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9T
UEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkds
dXN0ZXJGUzwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxT
UEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQt
c2l6ZTogMTJwdDsiPuS5n+S4jeWPr+iDvea7oei2s+aJgOacieeahOWtmOWCqOmcgOaxgu+8jOiu
vuiuoeWunueOsOS4iuS5n+S4gOWumuacieiAg+iZkeS4jei2s+S5i+WkhO+8jOS4i+mdouaIkeS7
rOS9nOeugOimgeWIhuaekOOAgjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQ
QU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6
ZTogMTJwdDsiPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9QPg0KPFAgY2xh
c3M9Ik1zb0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0IDQycHQ7IHRl
eHQtaW5kZW50OiAtMjFwdDsiPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0i
RU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTogV2luZ2RpbmdzOyBmb250LXNpemU6IDEycHQ7Ij48
U1BBTj5sPFNQQU4gDQpzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3IFJvbWFuIjsg
Zm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4mbmJzcDsNCjwv
U1BBTj48L1NQQU4+PC9TUEFOPjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5peg5YWD5pWw5o2u5pyN5Yqh5ZmoPC9TUEFOPjwvU1RS
T05HPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48
U1RST05HPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BB
TiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4gIHZzIA0KPC9TUEFOPjwvU1BBTj48L1NU
Uk9ORz48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+
PFNUUk9ORz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEy
cHQ7Ij7lhYPmlbDmja7mnI3liqHlmag8L1NQQU4+PC9TVFJPTkc+PC9TUEFOPjwvU1BBTj48L1NQ
QU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTVFJPTkc+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgDQpzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvU1RST05HPjwvU1BBTj48
L1NQQU4+PC9TUEFOPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiANCnN0eWxlPSJt
YXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOPjxTUEFOPjxTUEFO
PjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJw
dDsiPuaXoOWFg+aVsOaNruacjeWKoeWZqOiuvuiuoeeahOWlveWkhOaYr+ayoeacieWNleeCueaV
hemanOWSjOaAp+iDveeTtumiiOmXrumimO+8jOWPr+aPkOmrmOezu+e7n+aJqeWxleaAp+OAgeaA
p+iDveOAgeWPr+mdoOaAp+WSjOeos+WumuaAp+OAguWvueS6jua1t+mHj+Wwj+aWh+S7tuW6lOeU
qO+8jOi/meenjeiuvuiuoeiDveWkn+acieaViOino+WGs+WFg+aVsOaNrueahOmavueCuemXrumi
mOOAguWug+eahOi0n+mdouW9seWTjeaYr++8jOaVsOaNruS4gOiHtOmXrumimOabtOWKoOWkjead
gu+8jOaWh+S7tuebruW9lemBjeWOhuaTjeS9nOaViOeOh+S9juS4i++8jOe8uuS5j+WFqOWxgOeb
keaOp+euoeeQhuWKn+iDveOAguWQjOaXtuS5n+WvvOiHtOWuouaIt+err+aJv+aLheS6huabtOWk
mueahOiBjOiDve+8jOavlOWmguaWh+S7tuWumuS9jeOAgeWQjeWtl+epuumXtOe8k+WtmOOAgemA
u+i+keWNt+inhuWbvue7tOaKpOetieetie+8jOi/meS6m+mDveWinuWKoOS6huWuouaIt+err+ea
hOi0n+i9ve+8jOWNoOeUqOebuOW9k+eahDwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQ
QU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZv
bnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+Q1BV
PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQ
QU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAx
MnB0OyI+5ZKM5YaF5a2Y44CCPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BB
Tj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1A+DQo8UCBjbGFz
cz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAwcHQgNDJwdDsgdGV4
dC1pbmRlbnQ6IC0yMXB0OyI+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiBXaW5nZGluZ3M7IGZvbnQtc2l6ZTogMTJwdDsiPjxT
UEFOPmw8U1BBTiANCnN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1lcyBOZXcgUm9tYW4iOyBm
b250LXNpemUtYWRqdXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1hbDsnPiZuYnNwOw0KPC9T
UEFOPjwvU1BBTj48L1NQQU4+PFNUUk9ORz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nlKjmiLfnqbrpl7Q8L1NQQU4+PC9TVFJPTkc+PC9TUEFO
PjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTVFJPTkc+PFNQ
QU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIHN0eWxlPSJm
b250LWZhbWlseTogQ2FsaWJyaTsiPiAgdnMgDQo8L1NQQU4+PC9TUEFOPjwvU1RST05HPjwvU1BB
Tj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1RST05HPjxT
UEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWGheag
uOepuumXtDwvU1BBTj48L1NUUk9ORz48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+
PFNQQU4+PFNQQU4+PFNQQU4+PFNUUk9ORz48U1BBTiANCmxhbmc9IkVOLVVTIiANCnN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9TVFJPTkc+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9T
UEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIA0Kc3R5bGU9Im1hcmdpbjogMGNtIDBjbSAw
cHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpz
dHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+55So5oi356m66Ze0
5a6e546w6LW35p2l55u45a+56KaB566A5Y2V6K645aSa77yM5a+55byA5Y+R6ICF5oqA6IO96KaB
5rGC6L6D5L2O77yM6L+Q6KGM55u45a+55a6J5YWo44CC55So5oi356m66Ze05pWI546H5L2O77yM
5pWw5o2u6ZyA6KaB5aSa5qyh5LiO5YaF5qC456m66Ze05Lqk5o2i77yM5Y+m5aSWPC9TUEFOPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+
PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCnN0eWxlPSJmb250
LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lgJ/liqk8L1NQQU4+PC9TUEFOPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0i
RU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWls
eTogQ2FsaWJyaTsiPkZVU0U8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BB
Tj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L
5L2TOyBmb250LXNpemU6IDEycHQ7Ij7mnaXlrp7njrDmoIflh4bmlofku7bns7vnu5/mjqXlj6Pv
vIzmgKfog73kuIrlj4jmnInmiYDmjZ/ogJfjgILlhoXmoLjnqbrpl7Tlrp7njrDlj6/ku6Xojrfl
vpflvojpq5jnmoTmlbDmja7lkJ7lkJDph4/vvIznvLrngrnmmK/lrp7njrDlkozosIPor5XpnZ7l
uLjlm7Dpmr7vvIznqIvluo/lh7rplJnnu4/luLjkvJrlr7zoh7Tns7vnu5/ltKnmuoPvvIzlronl
hajmgKfkvY7jgILnurXlkJHmianlsZXkuIrvvIzlhoXmoLjnqbrpl7TopoHkvJjkuo7nlKjmiLfn
qbrpl7TvvIw8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxT
UEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48
U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQ
QU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxT
UEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuacieao
quWQkeaJqeWxleiDveWKm+adpeW8peihpeOAgjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48
L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9
ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9Q
Pg0KPFAgY2xhc3M9Ik1zb0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0
IDQycHQ7IHRleHQtaW5kZW50OiAtMjFwdDsiPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFO
IA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTogV2luZ2RpbmdzOyBmb250LXNpemU6
IDEycHQ7Ij48U1BBTj5sPFNQQU4gDQpzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3
IFJvbWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4m
bmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5aCG5qCI5byPPC9TUEFOPjwvU1RST05H
PjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1RS
T05HPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiBz
dHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4gIHZzIA0KPC9TUEFOPjwvU1BBTj48L1NUUk9O
Rz48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNU
Uk9ORz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7
Ij7pnZ7loIbmoIjlvI88L1NQQU4+PC9TVFJPTkc+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFO
PjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTVFJPTkc+PFNQQU4gDQpsYW5nPSJFTi1VUyIgDQpz
dHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvU1RST05HPjwvU1BBTj48L1NQQU4+PC9T
UEFOPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiANCnN0eWxlPSJtYXJnaW46IDBj
bSAwY20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxT
UEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPui/meac
ieeCueWDj+aTjeS9nOezu+e7n+eahOW+ruWGheaguOiuvuiuoeS4juWNleS4gOWGheaguOiuvuiu
oeS5i+S6ieOAgjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsi
PjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5aCG
5qCI5byP6K6+6K6h5oCd5oOz5rqQ6IeqPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BB
Tj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9u
dC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HTlUv
SHVyZDwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFO
PjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6
ZTogMTJwdDsiPuW+ruWGheaguOaTjeS9nOezu+e7n++8jOWFt+acieW+iOW8uueahOezu+e7n+aJ
qeWxleiDveWKm++8jOezu+e7n+iuvuiuoeWunueOsOWkjeadguaAp+mZjeS9juW+iOWkmu+8jOWf
uuacrOWKn+iDveaooeWdl+eahOWghuagiOW8j+e7hOWQiOWwseWPr+S7peWunueOsOW8uuWkp+ea
hOWKn+iDveOAguafpeecizwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+
PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTog
MTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9T
UEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0
OyI+5Y236YWN572u5paH5Lu25oiR5Lus5Y+v5Lul5Y+R546w77yMPC9TUEFOPjwvU1BBTj48L1NQ
QU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVO
LVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6
IENhbGlicmk7Ij50cmFuc2xhdG9yPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48
L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6
IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5Yqf6IO95qCR6YCa5bi45rex6L6+PC9TUEFOPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiAN
Cmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9u
dC1mYW1pbHk6IENhbGlicmk7Ij4xMDwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+
PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWxguS7peS4iu+8jOS4gOWxguS4gOWxgui/m+ih
jOiwg+eUqO+8jOaViOeOh+WPr+ingeS4gOaWkeOAgumdnuWghuagiOW8j+iuvuiuoeWPr+eci+aI
kOexu+S8vDwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQ
QU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxT
UEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+TGludXg8L1NQQU4+PC9TUEFOPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiAN
CnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7nmoTljZXkuIDl
hoXmoLjorr7orqHvvIzns7vnu5/osIPnlKjpgJrov4fkuK3mlq3lrp7njrDvvIzpnZ7luLjpq5jm
lYjjgILlkI7ogIXnmoTpl67popjmmK/ns7vnu5/moLjlv4Poh4Pogr/vvIzlrp7njrDlkozmianl
sZXlpI3mnYLvvIzlh7rnjrDpl67popjosIPor5Xlm7Dpmr7jgII8L1NQQU4+PC9TUEFOPjwvU1BB
Tj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4t
VVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+
PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29MaXN0UGFyYWdyYXBoIiBzdHlsZT0ibWFyZ2luOiAw
Y20gMGNtIDBwdCA0MnB0OyB0ZXh0LWluZGVudDogLTIxcHQ7Ij48U1BBTj48U1BBTj48U1BBTj48
U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1mYW1pbHk6IFdpbmdkaW5nczsg
Zm9udC1zaXplOiAxMnB0OyI+PFNQQU4+bDxTUEFOIA0Kc3R5bGU9J2ZvbnQ6IDdwdC9ub3JtYWwg
IlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGZvbnQtc3RyZXRjaDog
bm9ybWFsOyc+Jm5ic3A7DQo8L1NQQU4+PC9TUEFOPjwvU1BBTj48U1RST05HPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWOn+Wni+WtmOWCqOag
vOW8jzwvU1BBTj48L1NUUk9ORz48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQ
QU4+PFNQQU4+PFNQQU4+PFNUUk9ORz48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PFNQQU4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+ICB2cyANCjwv
U1BBTj48L1NQQU4+PC9TVFJPTkc+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxT
UEFOPjxTUEFOPjxTUEFOPjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9
kzsgZm9udC1zaXplOiAxMnB0OyI+56eB5pyJ5a2Y5YKo5qC85byPPC9TUEFOPjwvU1RST05HPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1RST05H
PjxTUEFOIA0KbGFuZz0iRU4tVVMiIA0Kc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48
L1NUUk9ORz48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb05v
cm1hbCIgDQpzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4dC1pbmRlbnQ6IDIxcHQ7Ij48
U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVy
RlM8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48
U1BBTj48U1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6
IDEycHQ7Ij7kvb/nlKjljp/lp4vmoLzlvI/lrZjlgqjmlofku7bmiJbmlbDmja7liIbniYfvvIzl
j6/ku6Xnm7TmjqXkvb/nlKjlkITnp43moIflh4bnmoTlt6Xlhbfov5vooYzorr/pl67vvIzmlbDm
ja7kupLmk43kvZzmgKflpb3vvIzov4Hnp7vlkozmlbDmja7nrqHnkIbpnZ7luLjmlrnkvr/jgILn
hLbogIzvvIzmlbDmja7lronlhajmiJDkuobpl67popjvvIzlm6DkuLrmlbDmja7mmK/ku6XlubPl
h6HnmoTmlrnlvI/kv53lrZjnmoTvvIzmjqXop6bmlbDmja7nmoTkurrlj6/ku6Xnm7TmjqXlpI3l
iLblkozmn6XnnIvjgILov5nlr7nlvojlpJrlupTnlKjmmL7nhLbmmK/kuI3og73mjqXlj5fnmoTv
vIzmr5TlpoLkupHlrZjlgqjns7vnu5/vvIznlKjmiLfnibnliKvlhbPlv4PmlbDmja7lronlhajv
vIzov5nkuZ/mmK/lvbHlk43lhazmnInkupHlrZjlgqjlj5HlsZXnmoTkuIDkuKrph43opoHljp/l
m6DjgILnp4HmnInlrZjlgqjmoLzlvI/lj6/ku6Xkv53or4HmlbDmja7nmoTlronlhajmgKfvvIzl
jbPkvb/ms4TpnLLkuZ/mmK/kuI3lj6/nn6XnmoTjgII8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQ
QU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0
eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxT
UEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7
IGZvbnQtc2l6ZTogMTJwdDsiPuimgeWunueOsOiHquW3seeahOengeacieagvOW8j++8jOWcqOiu
vuiuoeWunueOsOWSjOaVsOaNrueuoeeQhuS4iuebuOWvueWkjeadguS4gOS6m++8jOS5n+S8muWv
ueaAp+iDveS6p+eUn+S4gOWumuW9seWTjeOAgjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48
L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9
ImZvbnQtc2l6ZTogMTJwdDsiPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9Q
Pg0KPFAgY2xhc3M9Ik1zb0xpc3RQYXJhZ3JhcGgiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0
IDQycHQ7IHRleHQtaW5kZW50OiAtMjFwdDsiPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFO
IA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LWZhbWlseTogV2luZ2RpbmdzOyBmb250LXNpemU6
IDEycHQ7Ij48U1BBTj5sPFNQQU4gDQpzdHlsZT0nZm9udDogN3B0L25vcm1hbCAiVGltZXMgTmV3
IFJvbWFuIjsgZm9udC1zaXplLWFkanVzdDogbm9uZTsgZm9udC1zdHJldGNoOiBub3JtYWw7Jz4m
bmJzcDsNCjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTVFJPTkc+PFNQQU4gDQpzdHlsZT0iZm9udC1m
YW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5aSn5paH5Lu2PC9TUEFOPjwvU1RST05H
PjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1RS
T05HPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiBz
dHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4gIHZzIA0KPC9TUEFOPjwvU1BBTj48L1NUUk9O
Rz48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNU
Uk9ORz48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7
Ij7lsI/mlofku7Y8L1NQQU4+PC9TVFJPTkc+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxT
UEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTVFJPTkc+PFNQQU4gDQpsYW5nPSJFTi1VUyIgDQpzdHls
ZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvU1RST05HPjwvU1BBTj48L1NQQU4+PC9TUEFO
PjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiANCnN0eWxlPSJtYXJnaW46IDBjbSAw
Y20gMHB0OyB0ZXh0LWluZGVudDogMjFwdDsiPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFO
IA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJm
b250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BB
Tj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZv
bnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPumAguWQiOWkp+aWh+S7tui/mOaY
r+Wwj+aWh+S7tuWtmOWCqO+8n+W8ueaAp+WTiOW4jOeul+azleWSjDwvU1BBTj48L1NQQU4+PC9T
UEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiBDYWxpYnJpOyI+U3RyaXBlPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQ
QU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWu
i+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5pWw5o2u5YiG5biD562W55Wl77yM56e76Zmk5LqG5YWD
5pWw5o2u5L6d6LWW77yM5LyY5YyW5LqG5pWw5o2u5YiG5biD77yM5o+Q6auY5pWw5o2u6K6/6Zeu
5bm26KGM5oCn77yM6IO95aSf5aSn5bmF5o+Q6auY5aSn5paH5Lu25a2Y5YKo55qE5oCn6IO944CC
5a+55LqO5bCP5paH5Lu277yM5peg5YWD5pWw5o2u5pyN5Yqh6K6+6K6h6Kej5Yaz5LqG5YWD5pWw
5o2u55qE6Zeu6aKY44CC5L2GPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BB
Tj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5HbHVzdGVyRlM8
L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BB
Tj48U1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEy
cHQ7Ij7lubbmsqHmnInlnKg8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFO
PjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6
IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkkvTzwvU1BBTj48
L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFO
PjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaW
uemdouS9nOS8mOWMlu+8jOWcqOWtmOWCqOacjeWKoeWZqOW6leWxguaWh+S7tuezu+e7n+S4iuS7
jeeEtuaYr+Wkp+mHj+Wwj+aWh+S7tu+8jOacrOWcsOaWh+S7tuezu+e7n+WFg+aVsOaNruiuv+mX
ruaYr+S4gOS4queTtumiiO+8jOaVsOaNruWIhuW4g+WSjOW5tuihjOaAp+S5n+aXoOazleWFheWI
huWPkeaMpeS9nOeUqOOAguWboOatpO+8jDwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQ
QU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZv
bnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1
c3RlckZTPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQ
QU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1z
aXplOiAxMnB0OyI+6YCC5ZCI5a2Y5YKo5aSn5paH5Lu277yM5bCP5paH5Lu25oCn6IO96L6D5beu
77yM6L+Y5a2Y5Zyo5b6I5aSn5LyY5YyW56m66Ze044CCPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9T
UEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBz
dHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BB
Tj48L1A+DQo8UCBjbGFzcz0iTXNvTGlzdFBhcmFncmFwaCIgc3R5bGU9Im1hcmdpbjogMGNtIDBj
bSAwcHQgNDJwdDsgdGV4dC1pbmRlbnQ6IC0yMXB0OyI+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+
PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtZmFtaWx5OiBXaW5nZGluZ3M7IGZvbnQt
c2l6ZTogMTJwdDsiPjxTUEFOPmw8U1BBTiANCnN0eWxlPSdmb250OiA3cHQvbm9ybWFsICJUaW1l
cyBOZXcgUm9tYW4iOyBmb250LXNpemUtYWRqdXN0OiBub25lOyBmb250LXN0cmV0Y2g6IG5vcm1h
bDsnPiZuYnNwOw0KPC9TUEFOPjwvU1BBTj48L1NQQU4+PFNUUk9ORz48U1BBTiANCnN0eWxlPSJm
b250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7lj6/nlKjmgKc8L1NQQU4+PC9T
VFJPTkc+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFO
PjxTVFJPTkc+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxT
UEFOIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPiAgdnMgDQo8L1NQQU4+PC9TUEFOPjwv
U1RST05HPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BB
Tj48U1RST05HPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTog
MTJwdDsiPuWtmOWCqOWIqeeUqOeOhzwvU1BBTj48L1NUUk9ORz48L1NQQU4+PC9TUEFOPjwvU1BB
Tj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNUUk9ORz48U1BBTiANCmxhbmc9IkVO
LVVTIiANCnN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48L1NQQU4+PC9TVFJPTkc+PC9TUEFOPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIA0Kc3R5bGU9Im1h
cmdpbjogMGNtIDBjbSAwcHQ7IHRleHQtaW5kZW50OiAyMXB0OyI+PFNQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFO
IA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwvU1BBTj48
L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4g
DQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5L2/55So5aSN
5Yi25oqA5pyv5p2l5o+Q5L6b5pWw5o2u6auY5Y+v55So5oCn77yM5aSN5Yi25pWw6YeP5rKh5pyJ
6ZmQ5Yi277yM6Ieq5Yqo5L+u5aSN5Yqf6IO95Z+65LqO5aSN5Yi25p2l5a6e546w44CC5Y+v55So
5oCn5LiO5a2Y5YKo5Yip55So546H5piv5LiA5Liq55+b55u+5L2T77yM5Y+v55So5oCn6auY5a2Y
5YKo5Yip55So546H5bCx5L2O77yM5Y+N5LmL5Lqm54S244CC6YeH55So5aSN5Yi25oqA5pyv77yM
5a2Y5YKo5Yip55So546H5Li6PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BB
Tj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXpl
OiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4xLzwvU1BBTj48
L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFO
PjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuWk
jeWItuaVsO+8jOmVnOWDj+aYrzwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQ
QU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6
ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+NTAlPC9TUEFO
PjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQ
QU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+
77yM5LiJ6Lev5aSN5Yi25YiZ5Y+q5pyJPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BB
Tj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9u
dC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4zMyU8
L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BB
Tj48U1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEy
cHQ7Ij7jgILlhbblrp7vvIzlj6/ku6XmnInmlrnms5XmnaXlkIzml7bmj5Dpq5jlj6/nlKjmgKfl
kozlrZjlgqjliKnnlKjnjofvvIzmr5TlpoI8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9T
UEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPlJB
SUQ1PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXpl
OiAxMnB0OyI+55qE5Yip55So546H5pivPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BB
Tj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9u
dC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij4obi0x
KS9uPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXpl
OiAxMnB0OyI+77yMPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BB
Tj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1zaXplOiAxMnB0
OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmk7Ij5SQUlENjwvU1BBTj48L1NQ
QU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxT
UEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaYrzwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+
PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5
bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+KG4tMikvbjwvU1BBTj48L1NQQU4+PC9TUEFOPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9
ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPu+8jOiAjOe6oOWIoOeggeaK
gOacr+WPr+S7peaPkOS+m+abtOmrmOeahOWtmOWCqOWIqeeUqOeOh+OAguS9huaYr++8jOmxvOWS
jOeGiuaOjOS4jeWPr+W+l+WFvO+8jOWug+S7rOmDveS8muWvueaAp+iDveS6p+eUn+i+g+Wkp+W9
seWTjeOAgjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQ
QU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9QPg0KPFAgY2xhc3M9Ik1zb05vcm1h
bCIgDQpzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsgdGV4dC1pbmRlbnQ6IDIxcHQ7Ij48U1BB
Tj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBm
b250LXNpemU6IDEycHQ7Ij7lj6blpJbvvIw8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9T
UEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJm
b250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkds
dXN0ZXJGUzwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxT
UEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQt
c2l6ZTogMTJwdDsiPuebruWJjeeahOS7o+eggeWunueOsOS4jeWkn+Wlve+8jOezu+e7n+S4jeWk
n+eos+Wumu+8jDwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsi
PjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+QlVHUzwvU1BBTj48L1NQQU4+
PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFO
IA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuaVsOmHj+eb
uOWvuei/mOavlOi+g+WkmuOAguS7juWFtuWumOaWuee9keermeeahOmDqOe9suaDheWGteadpeec
i++8jOa1i+ivleeUqOaIt+mdnuW4uOWkmu+8jOS9huaYr+ecn+ato+WcqOeUn+S6p+eOr+Wig+S4
reeahOW6lOeUqOi+g+Wwke+8jOWtmOWCqOmDqOe9suWuuemHj+WHoDwvU1BBTj48L1NQQU4+PC9T
UEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJF
Ti1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5
OiBDYWxpYnJpOyI+VEI8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48
U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2T
OyBmb250LXNpemU6IDEycHQ7Ij7vvI3lh6DljYE8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+
PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxl
PSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsi
PlRCPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXpl
OiAxMnB0OyI+55qE5Y2g5b6I5aSn5q+U546H77yM5pWw55m+PC9TUEFOPjwvU1BBTj48L1NQQU4+
PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVT
IiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IENh
bGlicmk7Ij5UQjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFO
PjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZv
bnQtc2l6ZTogMTJwdDsiPu+8jTwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQ
QU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6
ZTogMTJwdDsiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+UEI8L1NQQU4+
PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BB
Tj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTog5a6L5L2TOyBmb250LXNpemU6IDEycHQ7Ij7n
uqfmoYjkvovpnZ7luLjlsJHjgILov5nkuZ/lj6/ku6Xku47lj6bkuIDkuKrmlrnpnaLor7TmmI7v
vIw8L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxT
UEFOPjxTUEFOIA0KbGFuZz0iRU4tVVMiIHN0eWxlPSJmb250LXNpemU6IDEycHQ7Ij48U1BBTiAN
CnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsiPkdsdXN0ZXJGUzwvU1BBTj48L1NQQU4+PC9T
UEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOIA0K
c3R5bGU9ImZvbnQtZmFtaWx5OiDlrovkvZM7IGZvbnQtc2l6ZTogMTJwdDsiPuebruWJjei/mOS4
jeWkn+eos+Wumu+8jOmcgOimgeabtOmVv+eahOaXtumXtOadpeajgOmqjOOAgueEtuiAjOS4jeWP
r+WQpuiupO+8jDwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+
PFNQQU4+PFNQQU4+PFNQQU4gDQpsYW5nPSJFTi1VUyIgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsi
PjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpOyI+R2x1c3RlckZTPC9TUEFOPjwv
U1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PFNQQU4+PFNQQU4+PFNQQU4+PFNQQU4+
PFNQQU4gDQpzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsgZm9udC1zaXplOiAxMnB0OyI+5piv
5LiA5Liq5pyJ552A5YWJ5piO5YmN5pmv55qE6ZuG576k5paH5Lu257O757uf77yM57q/5oCn5qiq
5ZCR5omp5bGV6IO95Yqb5L2/5a6D5YW35pyJ5aSp55Sf55qE5LyY5Yq/77yM5bCk5YW25piv5a+5
5LqO5LqR5a2Y5YKo57O757uf44CCPC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48
U1BBTj48U1BBTj48U1BBTj48U1BBTj48U1BBTiANCmxhbmc9IkVOLVVTIiBzdHlsZT0iZm9udC1z
aXplOiAxMnB0OyI+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1A+DQo8SDIg
DQpzdHlsZT0ibWFyZ2luOiAxM3B0IDBjbSAxM3B0IDIxcHQ7IHRleHQtaW5kZW50OiAtMjFwdDsi
PjxTUEFOPjxTUEFOPjxTUEFOPjxTUEFOPjxBIA0KbmFtZT0iX1RvYzI4OTA5NTg4MSIgdGFyZ2V0
PSJfYmxhbmsiPjxTUEFOIGxhbmc9IkVOLVVTIj48U1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1p
bHk6IENhbWJyaWE7IGZvbnQtc2l6ZTogMThweDsiPjguPC9TUEFOPjxTUEFOIA0Kc3R5bGU9J2Zv
bnQ6IDdwdC9ub3JtYWwgIlRpbWVzIE5ldyBSb21hbiI7IGZvbnQtc2l6ZS1hZGp1c3Q6IG5vbmU7
IGZvbnQtc3RyZXRjaDogbm9ybWFsOyc+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7DQo8
L1NQQU4+PC9TUEFOPjwvU1BBTj48U1BBTiBzdHlsZT0iZm9udC1mYW1pbHk6IOWui+S9kzsiPjxT
UEFOIHN0eWxlPSJmb250LXNpemU6IDE4cHg7Ij7lj4LogIPmlofnjK48L1NQQU4+PC9TUEFOPjwv
QT48L1NQQU4+PC9TUEFOPjwvU1BBTj48L1NQQU4+PC9IMj4NCjxQIGFsaWduPSJsZWZ0IiBjbGFz
cz0iTXNvTm9ybWFsIiANCnN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0OyB0ZXh0LWFsaWduOiBs
ZWZ0OyI+PFNQQU4gbGFuZz0iRU4tVVMiPjxTUEFOIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJy
aTsgZm9udC1zaXplOiAxMnB4OyI+WzFdIA0KR2x1c3RlcjogPC9TUEFOPjxBIGhyZWY9Imh0dHA6
Ly93d3cuZ2x1c3Rlci5jb20vcHJvZHVjdHMvZ2x1c3Rlci1maWxlLXN5c3RlbS1hcmNoaXRlY3R1
cmUtd2hpdGUtcGFwZXIvIiANCnRhcmdldD0iX2JsYW5rIj48U1BBTiBzdHlsZT0iY29sb3I6IHJn
YigwLCAwLCAyNTUpOyBmb250LWZhbWlseTogQ2FsaWJyaTsgZm9udC1zaXplOiAxMnB4OyI+aHR0
cDovL3d3dy5nbHVzdGVyLmNvbS9wcm9kdWN0cy9nbHVzdGVyLWZpbGUtc3lzdGVtLWFyY2hpdGVj
dHVyZS13aGl0ZS1wYXBlci88L1NQQU4+PC9BPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9y
bWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsiPjxTUEFOIGxhbmc9IkVOLVVTIj48U1BB
TiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsgZm9udC1zaXplOiAxMnB4OyI+WzJdIEds
dXN0ZXI6IDwvU1BBTj48QSBocmVmPSJodHRwOi8vd3d3LmdsdXN0ZXIuY29tL3Byb2R1Y3RzL3Bl
cmZvcm1hbmNlLWluLWEtZ2x1c3Rlci1zeXN0ZW0td2hpdGUtcGFwZXIvIiANCnRhcmdldD0iX2Js
YW5rIj48U1BBTiBzdHlsZT0iY29sb3I6IHJnYigwLCAwLCAyNTUpOyBmb250LWZhbWlseTogQ2Fs
aWJyaTsgZm9udC1zaXplOiAxMnB4OyI+aHR0cDovL3d3dy5nbHVzdGVyLmNvbS9wcm9kdWN0cy9w
ZXJmb3JtYW5jZS1pbi1hLWdsdXN0ZXItc3lzdGVtLXdoaXRlLXBhcGVyLzwvU1BBTj48L0E+PC9T
UEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20gMHB0
OyI+PFNQQU4gbGFuZz0iRU4tVVMiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJp
OyBmb250LXNpemU6IDEycHg7Ij5bM10gR2x1c3RlcjogPC9TUEFOPjxBIGhyZWY9Imh0dHA6Ly9n
bHVzdGVyLmNvbS9jb21tdW5pdHkvZG9jdW1lbnRhdGlvbi9pbmRleC5waHAvTWFpbl9QYWdlIiAN
CnRhcmdldD0iX2JsYW5rIj48U1BBTiBzdHlsZT0iY29sb3I6IHJnYigwLCAwLCAyNTUpOyBmb250
LWZhbWlseTogQ2FsaWJyaTsgZm9udC1zaXplOiAxMnB4OyI+aHR0cDovL2dsdXN0ZXIuY29tL2Nv
bW11bml0eS9kb2N1bWVudGF0aW9uL2luZGV4LnBocC9NYWluX1BhZ2U8L1NQQU4+PC9BPjwvU1BB
Tj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFyZ2luOiAwY20gMGNtIDBwdDsi
PjxTUEFOIGxhbmc9IkVOLVVTIj48U1BBTiANCnN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaTsg
Zm9udC1zaXplOiAxMnB4OyI+WzRdIEdsdXN0ZXJGUy1EZXNpZ246IDwvU1BBTj48QSANCmhyZWY9
Imh0dHA6Ly9lZHd5c2VndXJ1LndvcmRwcmVzcy5jb20vMjAxMC8wNi8xMS9nbHVzdGVyZnMtZGVz
aWduLyIgdGFyZ2V0PSJfYmxhbmsiPjxTUEFOIA0Kc3R5bGU9ImNvbG9yOiByZ2IoMCwgMCwgMjU1
KTsgZm9udC1mYW1pbHk6IENhbGlicmk7IGZvbnQtc2l6ZTogMTJweDsiPmh0dHA6Ly9lZHd5c2Vn
dXJ1LndvcmRwcmVzcy5jb20vMjAxMC8wNi8xMS9nbHVzdGVyZnMtZGVzaWduLzwvU1BBTj48L0E+
PC9TUEFOPjwvUD4NCjxQIGNsYXNzPSJNc29Ob3JtYWwiIHN0eWxlPSJtYXJnaW46IDBjbSAwY20g
MHB0OyI+PFNQQU4gbGFuZz0iRU4tVVMiPjxTUEFOIA0Kc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxp
YnJpOyBmb250LXNpemU6IDEycHg7Ij5bNV0gR2x1c3RlckZTIHVzZXJzOiA8L1NQQU4+PEEgDQpo
cmVmPSJodHRwOi8vd3d3LmdsdXN0ZXIub3JnL2dsdXN0ZXItdXNlcnMvIiB0YXJnZXQ9Il9ibGFu
ayI+PFNQQU4gc3R5bGU9ImNvbG9yOiByZ2IoMCwgMCwgMjU1KTsgZm9udC1mYW1pbHk6IENhbGli
cmk7IGZvbnQtc2l6ZTogMTJweDsiPmh0dHA6Ly93d3cuZ2x1c3Rlci5vcmcvZ2x1c3Rlci11c2Vy
cy88L1NQQU4+PC9BPjwvU1BBTj48L1A+DQo8UCBjbGFzcz0iTXNvTm9ybWFsIiBzdHlsZT0ibWFy
Z2luOiAwY20gMGNtIDBwdDsiPjxTUEFOIGxhbmc9IkVOLVVTIj48U1BBTiANCnN0eWxlPSJmb250
LWZhbWlseTogQ2FsaWJyaTsgZm9udC1zaXplOiAxMnB4OyI+WzZdIEdsdXN0ZXJGUyBzb3VyY2Vz
OiA8L1NQQU4+PEEgDQpocmVmPSJodHRwOi8vZG93bmxvYWQuZ2x1c3Rlci5jb20vcHViL2dsdXN0
ZXIvZ2x1c3RlcmZzLzMuMS8iIA0KdGFyZ2V0PSJfYmxhbmsiPjxTUEFOIHN0eWxlPSJjb2xvcjog
cmdiKDAsIDAsIDI1NSk7IGZvbnQtZmFtaWx5OiBDYWxpYnJpOyBmb250LXNpemU6IDEycHg7Ij5o
dHRwOi8vZG93bmxvYWQuZ2x1c3Rlci5jb20vcHViL2dsdXN0ZXIvZ2x1c3RlcmZzLzMuMS88L1NQ
QU4+PC9BPjwvU1BBTj48L1A+DQo8UD4mbmJzcDs8L1A+PC9ESVY+PCEtLSBCYWlkdSBCdXR0b24g
QkVHSU4gLS0+IA0KPERJViBjbGFzcz0iYmRzaGFyZWJ1dHRvbmJveCB0cmFja2luZy1hZCIgc3R5
bGU9ImZsb2F0OiByaWdodDsiIGRhdGEtbW9kPSJwb3B1XzE3MiI+PEEgDQpjbGFzcz0iYmRzX21v
cmUiIHN0eWxlPSdiYWNrZ3JvdW5kLWltYWdlOiB1cmwoImh0dHA6Ly9iZGltZy5zaGFyZS5iYWlk
dS5jb20vc3RhdGljL2FwaS9pbWcvc2hhcmUvaWNvbnNfMF8xNi5wbmc/dj1kNzU0ZGNjMC5wbmci
KSAhaW1wb3J0YW50OycgDQpocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRp
Y2xlL2RldGFpbHMvNjI4NDU1MSMiIA0KZGF0YS1jbWQ9Im1vcmUiPjwvQT4gPEEgdGl0bGU9IuWI
huS6q+WIsFFR56m66Ze0IiBjbGFzcz0iYmRzX3F6b25lIiBzdHlsZT0iYmFja2dyb3VuZC1wb3Np
dGlvbjogMHB4IC01MnB4ICFpbXBvcnRhbnQ7IiANCmhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0
L2xpdWFpZ3VpL2FydGljbGUvZGV0YWlscy82Mjg0NTUxIyIgDQpkYXRhLWNtZD0icXpvbmUiPjwv
QT4gPEEgdGl0bGU9IuWIhuS6q+WIsOaWsOa1quW+ruWNmiIgY2xhc3M9ImJkc190c2luYSIgc3R5
bGU9ImJhY2tncm91bmQtcG9zaXRpb246IDBweCAtMTA0cHggIWltcG9ydGFudDsiIA0KaHJlZj0i
aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxzLzYyODQ1NTEjIiAN
CmRhdGEtY21kPSJ0c2luYSI+PC9BPiA8QSB0aXRsZT0i5YiG5Lqr5Yiw6IW+6K6v5b6u5Y2aIiBj
bGFzcz0iYmRzX3RxcSIgc3R5bGU9ImJhY2tncm91bmQtcG9zaXRpb246IDBweCAtMjYwcHggIWlt
cG9ydGFudDsiIA0KaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9k
ZXRhaWxzLzYyODQ1NTEjIiANCmRhdGEtY21kPSJ0cXEiPjwvQT4gPEEgdGl0bGU9IuWIhuS6q+WI
sOS6uuS6uue9kSIgY2xhc3M9ImJkc19yZW5yZW4iIHN0eWxlPSJiYWNrZ3JvdW5kLXBvc2l0aW9u
OiAwcHggLTIwOHB4ICFpbXBvcnRhbnQ7IiANCmhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xp
dWFpZ3VpL2FydGljbGUvZGV0YWlscy82Mjg0NTUxIyIgDQpkYXRhLWNtZD0icmVucmVuIj48L0E+
IDxBIHRpdGxlPSLliIbkuqvliLDlvq7kv6EiIGNsYXNzPSJiZHNfd2VpeGluIiBzdHlsZT0iYmFj
a2dyb3VuZC1wb3NpdGlvbjogMHB4IC0xNjEycHggIWltcG9ydGFudDsiIA0KaHJlZj0iaHR0cDov
L2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxzLzYyODQ1NTEjIiANCmRhdGEt
Y21kPSJ3ZWl4aW4iPjwvQT4gPC9ESVY+DQo8U0NSSVBUPndpbmRvdy5fYmRfc2hhcmVfY29uZmln
ID0geyAiY29tbW9uIjogeyAiYmRTbnNLZXkiOiB7fSwgImJkVGV4dCI6ICIiLCAiYmRNaW5pIjog
IjEiLCAiYmRNaW5pTGlzdCI6IGZhbHNlLCAiYmRQaWMiOiAiIiwgImJkU3R5bGUiOiAiMCIsICJi
ZFNpemUiOiAiMTYiIH0sICJzaGFyZSI6IHt9IH07IHdpdGggKGRvY3VtZW50KSAwWyhnZXRFbGVt
ZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdIHx8IGJvZHkpLmFwcGVuZENoaWxkKGNyZWF0ZUVsZW1l
bnQoJ3NjcmlwdCcpKS5zcmMgPSAnaHR0cDovL2JkaW1nLnNoYXJlLmJhaWR1LmNvbS9zdGF0aWMv
YXBpL2pzL3NoYXJlLmpzP3Y9ODk4NjA1OTMuanM/Y2RudmVyc2lvbj0nICsgfigtbmV3IERhdGUo
KSAvIDM2ZTUpXTs8L1NDUklQVD4NCiA8IS0tIEJhaWR1IEJ1dHRvbiBFTkQgLS0+ICAgIDxMSU5L
IGhyZWY9Imh0dHA6Ly9zdGF0aWMuYmxvZy5jc2RuLm5ldC9jc3MvYmxvZ19kZXRhaWwuY3NzIiAN
CnJlbD0ic3R5bGVzaGVldCI+ICAgICA8IS0tMTcyLjE2LjE0MC4xNC0tPiA8IS0tIEJhaWR1IEJ1
dHRvbiBCRUdJTiAtLT4gDQo8U0NSSVBUIGlkPSJiZHNoYXJlX2pzIiB0eXBlPSJ0ZXh0L2phdmFz
Y3JpcHQiIGRhdGE9InR5cGU9dG9vbHMmYW1wO3VpZD0xNTM2NDM0Ij48L1NDUklQVD4NCiANCjxT
Q1JJUFQgaWQ9ImJkc2hlbGxfanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQog
DQo8U0NSSVBUIHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICBkb2N1bWVudC5nZXRFbGVtZW50
QnlJZCgiYmRzaGVsbF9qcyIpLnNyYyA9ICJodHRwOi8vYmRpbWcuc2hhcmUuYmFpZHUuY29tL3N0
YXRpYy9qcy9zaGVsbF92Mi5qcz9jZG52ZXJzaW9uPSIgKyBNYXRoLmNlaWwobmV3IERhdGUoKS8z
NjAwMDAwKQo8L1NDUklQVD4NCiA8IS0tIEJhaWR1IEJ1dHRvbiBFTkQgLS0+ICAgICAgICAgIA0K
PERJViBpZD0iZGlnZyIgYXJ0aWNsZWlkPSI2Mjg0NTUxIj4NCjxETCBjbGFzcz0iZGlnZyBkaWdn
X2VuYWJsZSIgaWQ9ImJ0bkRpZ2ciPg0KICA8RFQ+6aG2PC9EVD4NCiAgPEREPjE8L0REPjwvREw+
DQo8REwgY2xhc3M9ImRpZ2cgZGlnZ19lbmFibGUiIGlkPSJidG5CdXJ5Ij4NCiAgPERUPui4qTwv
RFQ+DQogIDxERD4wPC9ERD48L0RMPjwvRElWPg0KPFVMIGNsYXNzPSJhcnRpY2xlX25leHRfcHJl
diI+DQogIDxMSSBjbGFzcz0icHJldl9hcnRpY2xlIj48U1BBTiBvbmNsaWNrPSJfZ2FxLnB1c2go
WydfdHJhY2tFdmVudCcsJ2Z1bmN0aW9uJywgJ29uY2xpY2snLCAnYmxvZ19hcnRpY2xlc19zaGFu
Z3lpcGlhbiddKTtsb2NhdGlvbi5ocmVmPScvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxzLzYyNzg3
NzQnOyI+5LiK5LiA56+HPC9TUEFOPjxBIA0KICBvbmNsaWNrPSJfZ2FxLnB1c2goWydfdHJhY2tF
dmVudCcsJ2Z1bmN0aW9uJywgJ29uY2xpY2snLCAnYmxvZ19hcnRpY2xlc19zaGFuZ3lpcGlhbidd
KSIgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGljbGUvZGV0YWls
cy82Mjc4Nzc0Ij7mqKrlkJHmianlsZXvvIhTY2FsZS1PdXTvvInlrZjlgqg8L0E+PC9MST4NCiAg
PExJIGNsYXNzPSJuZXh0X2FydGljbGUiPjxTUEFOIG9uY2xpY2s9Il9nYXEucHVzaChbJ190cmFj
a0V2ZW50JywnZnVuY3Rpb24nLCAnb25jbGljaycsICdibG9nX2FydGljbGVzX3hpYXlpcGlhbidd
KTtsb2NhdGlvbi5ocmVmPScvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxzLzYzMjQxMzMnOyI+5LiL
5LiA56+HPC9TUEFOPjxBIA0KICBvbmNsaWNrPSJfZ2FxLnB1c2goWydfdHJhY2tFdmVudCcsJ2Z1
bmN0aW9uJywgJ29uY2xpY2snLCAnYmxvZ19hcnRpY2xlc194aWF5aXBpYW4nXSkiIA0KICBocmVm
PSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRpY2xlL2RldGFpbHMvNjMyNDEzMyI+
5rex5YWl55CG6Kej5pWw5o2u5Y6L57yp5LiO6YeN5aSN5pWw5o2u5Yig6ZmkPC9BPjwvTEk+PC9V
TD4NCjxESVYgc3R5bGU9ImhlaWdodDogMTBweDsgY2xlYXI6IGJvdGg7Ij48L0RJVj4NCjxESVYg
Y2xhc3M9InNpbWlsYXJfYXJ0aWNsZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCjxIND7miJHn
moTlkIznsbvmlofnq6A8L0g0Pg0KPERJViBjbGFzcz0ic2ltaWxhcl9jIiBzdHlsZT0ibWFyZ2lu
OiAyMHB4IDBweCAwcHg7Ij4NCjxESVYgY2xhc3M9InNpbWlsYXJfY190Ij48TEFCRUwgY2xhc3M9
InNpbWlsYXJfY3VyIj48U1BBTiBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyIgDQpvbmNsaWNrPSJH
ZXRDYXRlZ29yeUFydGljbGVzKCc2MTY2MjUnLCdsaXViZW4nLCdmb290JywnNjI4NDU1MScpOyI+
6K6h566X5py655CG6K66PEVNPu+8iDIx77yJPC9FTT48L1NQQU4+IA0KICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICA8L0xBQkVMPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IA0KPExBQkVMPjxTUEFOIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IiBvbmNsaWNrPSJHZXRDYXRl
Z29yeUFydGljbGVzKCczNzM3NTEnLCdsaXViZW4nLCdmb290JywnNjI4NDU1MScpOyI+5pWw5o2u
5a2Y5YKoPEVNPu+8iDc477yJPC9FTT48L1NQQU4+IA0KICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICA8L0xBQkVMPiAgICAgICAgICAgICAgICAgICAgIDwvRElWPg0KPERJViBjbGFzcz0i
c2ltaWxhcl93cmFwIHRyYWNraW5nLWFkIiBzdHlsZT0ibWF4LWhlaWdodDogMTk1cHg7IiBkYXRh
LW1vZD0icG9wdV8xNDEiPjxBIA0Kc3R5bGU9ImRpc3BsYXk6IG5vbmU7IiBocmVmPSJodHRwOi8v
YmxvZy5jc2RuLm5ldC8iPmh0dHA6Ly9ibG9nLmNzZG4ubmV0LzwvQT4gICAgDQogICAgICAgICAg
ICAgICAgICAgICANCjxVTCBjbGFzcz0ic2ltaWxhcl9saXN0IGZsIj48L1VMPg0KPFVMIGNsYXNz
PSJzaW1pbGFyX2xpc3QgZnIiPjwvVUw+PC9ESVY+PC9ESVY+PC9ESVY+DQo8U0NSSVBUIHR5cGU9
InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgJChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIEdl
dENhdGVnb3J5QXJ0aWNsZXMoJzYxNjYyNScsICdsaXViZW4nLCdmb290JywnNjI4NDU1MScpOwog
ICAgICAgIH0pOwogICAgPC9TQ1JJUFQ+DQogICAgICAgPC9ESVY+DQo8RElWIGlkPSJzdWdnZXN0
Ij48L0RJVj4NCjxTQ1JJUFQgbGFuZ3VhZ2U9ImphdmFzY3JpcHQiIHR5cGU9InRleHQvamF2YXNj
cmlwdCI+ICAgICAKICAgICAgICAgICAgICQoZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAk
LmdldCgiL2xpdWJlbi9zdmMvR2V0U3VnZ2VzdENvbnRlbnQvNjI4NDU1MSIsZnVuY3Rpb24oZGF0
YSl7CiAgICAgICAgICAgICAgICAgICAgICQoIiNzdWdnZXN0IikuaHRtbChkYXRhKTsKICAgICAg
ICAgICAgICAgICB9KTsgICAgIAogICAgICAgICAgICAgfSk7ICAgICAgICAgICAgIAogICAgICAg
ICA8L1NDUklQVD4NCiAgDQo8U1RZTEU+Ci5ibG9nLWFzcy1hcnRpY2wgZGQgewpjb2xvcjogIzM2
OTsKd2lkdGg6IDk5JTsgLyrkv67mlLnooYwqLwpmbG9hdDogbGVmdDsKb3ZlcmZsb3c6IGhpZGRl
bjsKZm9udDogbm9ybWFsIG5vcm1hbCAxMnB4LzIzcHggIlNpbVN1biI7CmhlaWdodDogMjNweDsK
bWFyZ2luOiAwOwpwYWRkaW5nOiAwIDAgMCAxMHB4OwptYXJnaW4tcmlnaHQ6IDMwcHg7CmJhY2tn
cm91bmQ6IHVybChodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvc2tpbi9kZWZhdWx0L2ltYWdl
cy9ibG9nLWRvdC1yZWQzLmdpZikgbm8tcmVwZWF0IDAgMTBweDsKfQo8L1NUWUxFPg0KIA0KPERM
IGNsYXNzPSJibG9nLWFzcy1hcnRpY2wiIGlkPSJyZXMtcmVsYXRpdmVkIj4NCiAgPERUPjxTUEFO
PueMnOS9oOWcqOaJvjwvU1BBTj48L0RUPg0KICA8RElWIGlkPSJhZENvbGxlZ2UiIHN0eWxlPSJ3
aWR0aDogNDIlOyBmbG9hdDogbGVmdDsiPg0KPFNDUklQVCBzcmM9Imh0dHA6Ly9jc2RuaW1nLmNu
L2pvYnJlY28vam9iX3JlY28uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQog
ICAgICAgICAgIA0KPFNDUklQVCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICBj
c2RuLnBvc2l0aW9uLnNob3dFZHUoewogICAgICAgICAgICAgICAgc291cmNlVHlwZTogImJsb2ci
LAogICAgICAgICAgICAgICAgc2VhcmNoVHlwZTogImRldGFpbCIsCiAgICAgICAgICAgICAgICBz
ZWFyY2hLZXk6ICI2Mjg0NTUxIiwKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAibmFycnkiLAog
ICAgICAgICAgICAgICAgcmVjb3JkY291bnQ6ICI1IiwKICAgICAgICAgICAgICAgIGNvbnRhaW5l
cklkOiAiYWRDb2xsZWdlIiAvL+WuueWZqERJVueahGlk44CCIAogICAgICAgICAgICB9KTsKICAg
ICAgICA8L1NDUklQVD4NCiAgICAgICA8L0RJVj4NCiAgPERJViBjbGFzcz0idHJhY2tpbmctYWQi
IGlkPSJyZXMiIHN0eWxlPSJ3aWR0aDogNDIlOyBtYXJnaW4tcmlnaHQ6IDMwcHg7IGZsb2F0OiBs
ZWZ0OyIgDQogIGRhdGEtbW9kPSJwb3B1XzM2Ij48L0RJVj48L0RMPg0KPFNDUklQVCB0eXBlPSJ0
ZXh0L2phdmFzY3JpcHQiPgogICAgJChmdW5jdGlvbiAoKSB7CiAgICAgICAgc2V0VGltZW91dChm
dW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBzZWFyY2h0aXRsZXRhZ3MgPSAnR2x1c3RlckZT
6ZuG576k5paH5Lu257O757uf56CU56m2JyArICcsJyArICQoIiN0YWdzIikuaHRtbCgpOwogICAg
ICAgICAgICBzZWFyY2hTZXJ2aWNlKHsKICAgICAgICAgICAgICAgIGluZGV4OiAnYmxvZycsCiAg
ICAgICAgICAgICAgICBxdWVyeTogc2VhcmNodGl0bGV0YWdzLAogICAgICAgICAgICAgICAgZnJv
bTogNSwKICAgICAgICAgICAgICAgIHNpemU6IDUsCiAgICAgICAgICAgICAgICBhcHBlbmRUbzog
JyNyZXMnLAogICAgICAgICAgICAgICAgdXJsOiAncmVjb21tZW5kJywKICAgICAgICAgICAgICAg
IGhpczogMiwKICAgICAgICAgICAgICAgIGNsaWVudDogImJsb2dfY2ZfZW5oYW5jZSIsCiAgICAg
ICAgICAgICAgICB0bXBsOiAnPGRkIHN0eWxlPSJiYWNrZ3JvdW5kOnVybChodHRwOi8vc3RhdGlj
LmJsb2cuY3Nkbi5uZXQvc2tpbi9kZWZhdWx0L2ltYWdlcy9ibG9nLWRvdC1yZWQzLmdpZikgbm8t
cmVwZWF0IDAgMTBweDsiPjxhIGhyZWY9IiN7IHVybCB9IiB0aXRsZT0iI3sgdGl0bGUgfSIgc3Ry
YXRlZ3k9IiN7IHN0cmF0ZWd5IH0iPiN7IHRpdGxlIH08L2E+PC9kZD4nCiAgICAgICAgICAgIH0p
OwogICAgICAgIH0sIDUwMCk7CiAgICB9KTsgICAgCgogPC9TQ1JJUFQ+DQogICAgICAgDQo8RElW
IGlkPSJhZF9jZW4iPjwhLS1BZEZvcndhcmQgQmVnaW46LS0+IA0KPFNDUklQVCBzcmM9Imh0dHA6
Ly9jc2RuaW0ucXRtb2pvLmNvbS9tYWluL3M/dXNlcj1jc2RufGJsb2d8YmFubmVyMiZhbXA7ZGI9
Y3NkbmltJmFtcDtib3JkZXI9MCZhbXA7bG9jYWw9eWVzJmFtcDtqcz1pZSIgdHlwZT0idGV4dC9q
YXZhc2NyaXB0IiBjaGFyc2V0PSJnYmsiPjwvU0NSSVBUPg0KIDwhLS1BZEZvcndhcmQgRW5kLS0+
ICAgIDwvRElWPg0KPERJViBjbGFzcz0iY29tbWVudF9jbGFzcyI+DQo8RElWIGNsYXNzPSJwYW5l
bF9oZWFkIiBpZD0iY29tbWVudF90aXRsZSI+PFNQQU4gDQpjbGFzcz0ic2VlX2NvbW1lbnQiPuaf
peeci+ivhOiuujwvU1BBTj48QSBuYW1lPSJjb21tZW50cyI+PC9BPjwvRElWPg0KPERJViBpZD0i
Y29tbWVudF9saXN0Ij48L0RJVj4NCjxESVYgaWQ9ImNvbW1lbnRfYmFyIj48L0RJVj4NCjxESVYg
aWQ9ImNvbW1lbnRfZm9ybSI+PC9ESVY+DQo8RElWIGNsYXNzPSJhbm5vdW5jZSI+KiDku6XkuIrn
lKjmiLfoqIDorrrlj6rku6PooajlhbbkuKrkurrop4LngrnvvIzkuI3ku6PooahDU0RO572R56uZ
55qE6KeC54K55oiW56uL5Zy6PEEgbmFtZT0icmVwbHkiPjwvQT48QSANCm5hbWU9InF1b3RlIj48
L0E+PC9ESVY+PC9ESVY+DQo8U0NSSVBUIHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICB2YXIg
ZmlsZU5hbWUgPSAnNjI4NDU1MSc7CiAgICB2YXIgY29tbWVudHNjb3VudCA9IDIxNDsKICAgIHZh
ciBpc2xvY2sgPSBmYWxzZQo8L1NDUklQVD4NCiANCjxTQ1JJUFQgc3JjPSJodHRwOi8vc3RhdGlj
LmJsb2cuY3Nkbi5uZXQvc2NyaXB0cy9jb21tZW50LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQi
PjwvU0NSSVBUPg0KICAgICANCjxESVYgaWQ9ImFkX2JvdCI+PC9ESVY+DQo8RElWIGlkPSJyZXBv
cnRfZGlhbG9nIj48L0RJVj4NCjxESVYgaWQ9ImQtdG9wIiBzdHlsZT0iYm90dG9tOiA2MHB4OyI+
PEEgdGl0bGU9IuW/q+mAn+WbnuWkjSIgY2xhc3M9ImJ0biBidG4tdG9wIHEtcmVwbHkiIA0KaWQ9
InF1aWNrLXJlcGx5IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPjxJTUcgYWx0PSLlv6vpgJ/lm57l
pI0iIHNyYz0iaHR0cDovL3N0YXRpYy5ibG9nLmNzZG4ubmV0L2ltYWdlcy9ibG9nLWljb24tcmVw
bHkucG5nIj4gDQogICAgICAgIDwvQT4gICAgICAgIDxBIHRpdGxlPSLov5Tlm57pobbpg6giIGNs
YXNzPSJidG4gYnRuLXRvcCBiYWNrdG9wIiBpZD0iZC10b3AtYSIgDQpzdHlsZT0iZGlzcGxheTog
bm9uZTsiIG9uY2xpY2s9Il9nYXEucHVzaChbJ190cmFja0V2ZW50JywnZnVuY3Rpb24nLCAnb25j
bGljaycsICdibG9nX2FydGljbGVzX2h1aWRhb2RpbmdidSddKSI+PElNRyANCmFsdD0iVE9QIiBz
cmM9Imh0dHA6Ly9zdGF0aWMuYmxvZy5jc2RuLm5ldC9pbWFnZXMvdG9wLnBuZyI+ICAgICA8L0E+
IDwvRElWPg0KPFNDUklQVCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChmdW5jdGlvbiAo
KQogICAgewogICAgICAgICQoIiNhZF9mcm1fMCIpLmhlaWdodCgiOTBweCIpOwogICAgICAgIAog
ICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICAgICAgICAgJCgiI2FkX2ZybV8yIiku
aGVpZ2h0KCIyMDBweCIpOwogICAgICAgIH0sMTAwMCk7ICAgIAogICAgfSk7CiAgCjwvU0NSSVBU
Pg0KIA0KPFNUWUxFIHR5cGU9InRleHQvY3NzIj4KICAgIC50YWdfbGlzdAogICAgewogICAgICAg
IGJhY2tncm91bmQ6IG5vbmUgcmVwZWF0IHNjcm9sbCAwIDAgI0ZGRkZGRjsKICAgICAgICBib3Jk
ZXI6IDFweCBzb2xpZCAjRDdDQkMxOwogICAgICAgIGNvbG9yOiAjMDAwMDAwOwogICAgICAgIGZv
bnQtc2l6ZTogMTJweDsKICAgICAgICBsaW5lLWhlaWdodDogMjBweDsKICAgICAgICBsaXN0LXN0
eWxlOiBub25lIG91dHNpZGUgbm9uZTsKICAgICAgICBtYXJnaW46IDEwcHggMiUgMCAxJTsKICAg
ICAgICBwYWRkaW5nOiAxcHg7CiAgICB9CiAgICAudGFnX2xpc3QgaDUKICAgIHsKICAgICAgICBi
YWNrZ3JvdW5kOiBub25lIHJlcGVhdCBzY3JvbGwgMCAwICNFMERCRDM7CiAgICAgICAgY29sb3I6
ICM0NzM4MUM7CiAgICAgICAgZm9udC1zaXplOiAxMnB4OwogICAgICAgIGhlaWdodDogMjRweDsK
ICAgICAgICBsaW5lLWhlaWdodDogMjRweDsKICAgICAgICBwYWRkaW5nOiAwIDVweDsKICAgICAg
ICBtYXJnaW46IDA7CiAgICB9CiAgICAudGFnX2xpc3QgaDUgYQogICAgewogICAgICAgIGNvbG9y
OiAjNDczODFDOwogICAgfQogICAgLmNsYXNzaWZ5CiAgICB7CiAgICAgICAgbWFyZ2luOiAxMHB4
IDA7CiAgICAgICAgcGFkZGluZzogNHB4IDEycHggOHB4OwogICAgfQogICAgLmNsYXNzaWZ5IGEK
ICAgIHsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgICAgICAgd2hpdGUtc3BhY2U6IG5v
d3JhcDsKICAgIH0KPC9TVFlMRT4NCiANCjxESVYgY2xhc3M9InRhZ19saXN0IiBzdHlsZT0iZGlz
cGxheTogbm9uZTsiPjwvRElWPg0KPFNDUklQVCBsYW5ndWFnZT0iamF2YXNjcmlwdCIgdHlwZT0i
dGV4dC9qYXZhc2NyaXB0Ij4gICAgIAogICAgICAkKGZ1bmN0aW9uKCl7CiAgICAgICAgICAgICAg
c2V0VGltZW91dChmdW5jdGlvbigpewogICAgICAgICAgICAgICAgICAkLmdldCgiL2xpdWJlbi9z
dmMvR2V0VGFnQ29udGVudCIsZnVuY3Rpb24oZGF0YSl7CiAgICAgICAgICAgICAgICAgICAgICAk
KCIudGFnX2xpc3QiKS5odG1sKGRhdGEpLnNob3coKTsKICAgICAgICAgICAgICAgICAgfSk7ICAg
ICAKICAgICAgICAgICAgICB9KTsKICAgICAgICAgIH0sNTAwKTsgICAgICAgICAgICAgICAgICAg
ICAgIAogPC9TQ1JJUFQ+DQogDQo8RElWIGlkPSJwb3Bfd2luIiBzdHlsZT0iYmFja2dyb3VuZDog
MHB4IDBweCByZ2IoMjU1LCAyNTUsIDI1NSk7IGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMjAsIDIy
MCwgMjIwKTsgbGVmdDogNjMwcHg7IHRvcDogMjIyLjVweDsgZGlzcGxheTogbm9uZTsgcG9zaXRp
b246IGFic29sdXRlOyB6LWluZGV4OiAxMDAwMDsgb3BhY2l0eTogMTsiPjwvRElWPg0KPERJViBp
ZD0icG9wdXBfbWFzayI+PC9ESVY+DQo8U1RZTEU+CiAgICAjcG9wdXBfbWFzawogICAgewogICAg
ICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWln
aHQ6IDEwMCU7CiAgICAgICAgYmFja2dyb3VuZDogIzAwMDsKICAgICAgICB6LWluZGV4OiA5OTk5
OwogICAgICAgIGxlZnQ6IDBweDsKICAgICAgICB0b3A6IDBweDsKICAgICAgICBvcGFjaXR5OiAw
LjM7CiAgICAgICAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTMwKTsKICAgICAgICBkaXNwbGF5OiBu
b25lOwogICAgfQoKPC9TVFlMRT4NCiANCjxTQ1JJUFQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4K
ICAgICQoZnVuY3Rpb24oKXsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICAgICAg
ICAgICQoIi5jb21tZW50X2JvZHk6Y29udGFpbnMoJ+WbnuWkjScpIikuZWFjaChmdW5jdGlvbihp
bmRleCxpdGVtKXsKICAgICAgICAgICAgICAgIHZhciB1PSQodGhpcykudGV4dCgpLnNwbGl0KCfv
vJonKVswXS50b1N0cmluZygpLnJlcGxhY2UoIuWbnuWkjSIsIiIpCiAgICAgICAgICAgICAgICB2
YXIgdGhpc0NvbW1lbnQ9JCh0aGlzKTsKICAgICAgICAgICAgICAgIGlmKHUpCiAgICAgICAgICAg
ICAgICB7CiAgICAgICAgICAgICAgICAgICAgJC5nZXRKU09OKCJodHRwczovL3Bhc3Nwb3J0LmNz
ZG4ubmV0L2dldC9uaWNrP2NhbGxiYWNrPT8iLCB7dXNlcnM6IHV9LCBmdW5jdGlvbihhKSB7CiAg
ICAgICAgICAgICAgICAgICAgICAgIGlmKGEhPW51bGwmJmEuZGF0YSE9bnVsbCYmYS5kYXRhLmxl
bmd0aD4wKQogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBuaWNrPWEuZGF0YVswXS5uOyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHUh
PW5pY2spCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgdGhpc0NvbW1lbnQudGV4dCh0aGlzQ29tbWVudC50ZXh0KCkucmVwbGFjZSh1
LG5pY2spKTsgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAg
ICAgICAgICB9ICAgICAgIAogICAgICAgICAgICAgICAgICAgIH0pOyAgCiAgICAgICAgICAgICAg
ICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sMjAwKTsgIAogICAgICAgIAogICAgICAgIHNl
dFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICAgICAgICAgJCgiYSBpbWdbc3JjPSdodHRwOi8vanMu
dG9uZ2ppLmxpbmV6aW5nLmNvbS9zdGF0cy5naWYnXSIpLnBhcmVudCgpLmNzcyh7InBvc2l0aW9u
IjoiYWJzb2x1dGUiLCJsZWZ0IjoiNTAlIn0pOwogICAgICAgIH0sMzAwKTsKICAgIH0pOwoKICAg
IGZ1bmN0aW9uIGxvZ2luYm94KCl7CiAgICAgICAgdmFyICRsb2dwb3A9JCgiI3BvcF93aW4iKTsK
ICAgICAgICAkbG9ncG9wLmh0bWwoJzxpZnJhbWUgc3JjPSJodHRwczovL3Bhc3Nwb3J0LmNzZG4u
bmV0L2FjY291bnQvbG9naW5ib3g/c2VydmljZT1odHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQv
Y2FsbGJhY2suaHRtIiBmcmFtZWJvcmRlcj0iMCIgaGVpZ2h0PSI2MDAiIHdpZHRoPSI0MDAiIHNj
cm9sbGluZz0ibm8iPjwvaWZyYW1lPicpOwoKICAgICAgICAkKCcjcG9wdXBfbWFzaycpLmNzcyh7
CiAgICAgICAgICAgIG9wYWNpdHk6IDAuNSwKICAgICAgICAgICAgd2lkdGg6ICQoIGRvY3VtZW50
ICkud2lkdGgoKSArICdweCcsCiAgICAgICAgICAgIGhlaWdodDogICQoIGRvY3VtZW50ICkuaGVp
Z2h0KCkgKyAncHgnCiAgICAgICAgfSk7CiAgICAgICAgJCgnI3BvcHVwX21hc2snKS5jc3MoImRp
c3BsYXkiLCJibG9jayIpOwogCiAgICAgICAgJGxvZ3BvcC5jc3MoIHsKICAgICAgICAgICAgdG9w
OiAoJCggd2luZG93ICkuaGVpZ2h0KCkgLSAkbG9ncG9wLmhlaWdodCgpKS8gMiAgKyAkKCB3aW5k
b3cgCiAgICAgICApLnNjcm9sbFRvcCgpICsgJ3B4JywKICAgICAgICAgICAgbGVmdDooJCggd2lu
ZG93ICkud2lkdGgoKSAtICRsb2dwb3Aud2lkdGgoKSkvIDIKICAgICAgICB9ICk7CiAKICAgICAg
ICBzZXRUaW1lb3V0KCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICRsb2dwb3Auc2hvdygpOwog
ICAgICAgICAgICAkbG9ncG9wLmNzcyggewogICAgICAgICAgICAgICAgb3BhY2l0eTogMQogICAg
ICAgICAgICB9ICk7CiAgICAgICAgfSwgMjAwICk7CiAKICAgICAgICAkKCcjcG9wdXBfbWFzaycp
LnVuYmluZCgiY2xpY2siKTsKICAgICAgICAkKCcjcG9wdXBfbWFzaycpLmJpbmQoImNsaWNrIiwg
ZnVuY3Rpb24oKXsKICAgICAgICAgICAgJCgnI3BvcHVwX21hc2snKS5oaWRlKCk7CiAgICAgICAg
ICAgIHZhciAkY2xvcG9wID0gJCgiI3BvcF93aW4iKTsKICAgICAgICAgICAgJCgiI2NvbW1vbl9h
c2tfZGl2X3NjIikuY3NzKCJkaXNwbGF5Iiwibm9uZSIpOwogICAgICAgICAgICAkY2xvcG9wLmNz
cyggewogICAgICAgICAgICAgICAgb3BhY2l0eTogMAogICAgICAgICAgICB9ICk7CiAgICAgICAg
ICAgIHNldFRpbWVvdXQoIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICRjbG9wb3AuaGlk
ZSgpOwogICAgICAgICAgICB9LCAzNTAgKTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAg
ICAgIH0pOwogICAgfSAgICAKCjwvU0NSSVBUPg0KICAgICAgICAgICAgICAgICAgICAgICAgIA0K
PERJViBjbGFzcz0iY2xlYXIiPjwvRElWPjwvRElWPjwvRElWPg0KPERJViBpZD0ic2lkZSI+DQo8
RElWIGNsYXNzPSJzaWRlIj4NCjxESVYgY2xhc3M9InBhbmVsIiBpZD0icGFuZWxfUHJvZmlsZSI+
DQo8VUwgY2xhc3M9InBhbmVsX2hlYWQiPjxTUEFOPuS4quS6uui1hOaWmTwvU1BBTj48L1VMPg0K
PFVMIGNsYXNzPSJwYW5lbF9ib2R5IHByb2ZpbGUiPg0KICA8RElWIGlkPSJibG9nX3VzZXJmYWNl
Ij48QSBocmVmPSJodHRwOi8vbXkuY3Nkbi5uZXQvbGl1YmVuIiANCiAgdGFyZ2V0PSJfYmxhbmsi
PjxJTUcgdGl0bGU9Iuiuv+mXruaIkeeahOepuumXtCIgc3R5bGU9Im1heC13aWR0aDogOTAlOyIg
c3JjPSJodHRwOi8vYXZhdGFyLmNzZG4ubmV0L0EvQS9BLzFfbGl1YmVuLmpwZyI+IA0KICAgICAg
PC9BPiAgICAgPEJSPjxTUEFOPjxBIGNsYXNzPSJ1c2VyX25hbWUiIGhyZWY9Imh0dHA6Ly9teS5j
c2RuLm5ldC9saXViZW4iIA0KICB0YXJnZXQ9Il9ibGFuayI+bGl1YmVuPC9BPjwvU1BBTj48L0RJ
Vj4NCiAgPERJViBjbGFzcz0iaW50ZXJhY3QiPjxBIHRpdGxlPSJb5Yqg5YWz5rOoXSIgY2xhc3M9
ImF0dGVudCIgaWQ9InNwYW5fYWRkX2ZvbGxvdyIgDQogIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgw
KTsiPjwvQT4gIDxBIHRpdGxlPSJb5Y+R56eB5L+hXSIgY2xhc3M9ImxldHRlciIgb25jbGljaz0i
d2luZG93Lm9wZW4oJ2h0dHA6Ly9tc2cuY3Nkbi5uZXQvbGV0dGVycy9tb2RlbD9yZWNlaXZlcj1s
aXViZW4nLCdfYmxhbmsnLCdoZWlnaHQ9MzUwLHdpZHRoPTcwMCcpO19nYXEucHVzaChbJ190cmFj
a0V2ZW50JywnZnVuY3Rpb24nLCAnb25jbGljaycsICdibG9nX2FydGljbGVzX3NpeGluJ10pIiAN
CiAgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+PC9BPiAgPC9ESVY+DQogIDxESVYgaWQ9ImJs
b2dfbWVkYWwiPg0KICA8RElWIGlkPSJibXNfYm94Ij48L0RJVj48L0RJVj4NCiAgPFVMIGlkPSJi
bG9nX3JhbmsiPg0KICAgIDxMST7orr/pl67vvJo8U1BBTj4xMTgyMjg25qyhPC9TUEFOPjwvTEk+
DQogICAgPExJPuenr+WIhu+8mjxTUEFOPjEyMDY4PC9TUEFOPiA8L0xJPg0KICAgIDxMST7nrYnn
uqfvvJogPFNQQU4gDQogICAgc3R5bGU9ImRpc3BsYXk6IGlubGluZS1ibG9jazsgcG9zaXRpb246
IHJlbGF0aXZlOyB6LWluZGV4OiAxOyI+PElNRyBpZD0ibGV2ZUltZyIgDQogICAgc3R5bGU9InZl
cnRpY2FsLWFsaWduOiBtaWRkbGU7IiBhbHQ9IiIgc3JjPSJodHRwOi8vYy5jc2RuaW1nLmNuL2pp
ZmVuL2ltYWdlcy94dW56aGFuZy9qaWFuemhhbmcvYmxvZzcucG5nIj4gDQogICAgICAgICAgICAg
ICAgDQogICAgPERJViBpZD0ic21hbGxUaXR0bGUiIHN0eWxlPSJib3JkZXI6IDJweCBzb2xpZCBy
Z2IoMjIxLCAyMjEsIDIyMSk7IGxlZnQ6IC0yNHB4OyB0b3A6IDI1cHg7IHdpZHRoOiAxMDFweDsg
aGVpZ2h0OiAzMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGxpbmUtaGVpZ2h0OiAzMnB4OyBkaXNw
bGF5OiBub25lOyBwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDk5OTsgYm94LXNoYWRvdzog
bm9uZTsgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpOyI+DQogICAgPERJViBz
dHlsZT0ibGVmdDogNDIlOyB0b3A6IC04cHg7IHdpZHRoOiAwcHg7IGhlaWdodDogMHB4OyBib3Jk
ZXItcmlnaHQtY29sb3I6IHRyYW5zcGFyZW50OyBib3JkZXItYm90dG9tLWNvbG9yOiByZ2IoMjM0
LCAyMzQsIDIzNCk7IGJvcmRlci1sZWZ0LWNvbG9yOiB0cmFuc3BhcmVudDsgYm9yZGVyLXJpZ2h0
LXdpZHRoOiAxMHB4OyBib3JkZXItYm90dG9tLXdpZHRoOiA4cHg7IGJvcmRlci1sZWZ0LXdpZHRo
OiAxMHB4OyBib3JkZXItcmlnaHQtc3R5bGU6IHNvbGlkOyBib3JkZXItYm90dG9tLXN0eWxlOiBz
b2xpZDsgYm9yZGVyLWxlZnQtc3R5bGU6IHNvbGlkOyBwb3NpdGlvbjogYWJzb2x1dGU7Ij48L0RJ
Vj4gDQogICAgICAgICAgICAgICDnp6/liIbvvJoxMjA2OCA8L0RJVj48L1NQQU4+ICA8L0xJPg0K
ICAgIDxMST7mjpLlkI3vvJo8U1BBTj7nrKw1ODjlkI08L1NQQU4+PC9MST48L1VMPg0KICA8VUwg
aWQ9ImJsb2dfc3RhdGlzdGljcyI+DQogICAgPExJPuWOn+WIm++8mjxTUEFOPjE0NOevhzwvU1BB
Tj48L0xJPg0KICAgIDxMST7ovazovb3vvJo8U1BBTj4xN+evhzwvU1BBTj48L0xJPg0KICAgIDxM
ST7or5HmlofvvJo8U1BBTj4w56+HPC9TUEFOPjwvTEk+DQogICAgPExJPuivhOiuuu+8mjxTUEFO
PjIyMzTmnaE8L1NQQU4+PC9MST48L1VMPjwvVUw+PC9ESVY+DQo8RElWIGNsYXNzPSJwYW5lbCIg
aWQ9InBhbmVsX1NlYXJjaCI+DQo8VUwgY2xhc3M9InBhbmVsX2hlYWQiPjxTUEFOPuaWh+eroOaQ
nOe0ojwvU1BBTj48L1VMPg0KPFVMIGNsYXNzPSJwYW5lbF9ib2R5Ij4NCiAgPEZPUk0gY2xhc3M9
ImZvcm1fc2VhcmNoIiBpZD0iZnJtU2VhcmNoIiBhY3Rpb249Imh0dHA6Ly9zby5jc2RuLm5ldC9z
ZWFyY2giIA0KICB0YXJnZXQ9Il9ibGFuayI+PFNQQU4+PElOUFVUIHRpdGxlPSLor7fovpPlhaXl
hbPplK7lrZciIGNsYXNzPSJibG9nc2VhcmNoIiBpZD0iaW5wdXRTZWFyY2giIA0KICB0eXBlPSJ0
ZXh0Ij48L1NQQU4+ICAgICAgICAgPElOUFVUIHRpdGxlPSJzZWFyY2ggaW4gYmxvZyIgaWQ9ImJ0
blN1Ym1pdCIgdHlwZT0iYnV0dG9uIiB2YWx1ZT0i5pCc57SiIj4gDQogICAgICAgICAgPElOUFVU
IG5hbWU9InEiIGlkPSJpbnB1dFEiIHR5cGU9ImhpZGRlbiI+ICAgICAgICAgPElOUFVUIG5hbWU9
InQiIA0KICB0eXBlPSJoaWRkZW4iIHZhbHVlPSJibG9nIj4gICAgICAgICA8QSBpZD0iYnRuU2Vh
cmNoQmxvZyIgdGFyZ2V0PSJfYmxhbmsiPjwvQT4gDQogICAgICAgICAgPC9GT1JNPjwvVUw+PC9E
SVY+DQo8U0NSSVBUIHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAkKGZ1bmN0aW9uICgpIHsK
ICAgICAgICAkKCIjYnRuU3VibWl0IikuY2xpY2soZnVuY3Rpb24gKCkgeyAgICAgICAgICAgCiAg
ICAgICAgICAgIHNlYXJjaCgpOwogICAgICAgIH0pOwoKICAgICAgICAkKCIjZnJtU2VhcmNoIiku
c3VibWl0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgc2VhcmNoKCk7CiAgICAgICAgICAgIHJl
dHVybiBmYWxzZTsKICAgICAgICB9KTsKCiAgICAgICAgZnVuY3Rpb24gc2VhcmNoKCkKICAgICAg
ICB7CiAgICAgICAgICAgIHZhciB1cmwgPSAiaHR0cDovL3NvLmNzZG4ubmV0L3NvL3NlYXJjaC9z
LmRvP3E9IiArIGVuY29kZVVSSUNvbXBvbmVudCgkKCIjaW5wdXRTZWFyY2giKS52YWwoKSkgKyAi
JnU9IiArIHVzZXJuYW1lICsgIiZ0PWJsb2ciOwogICAgICAgICAgICB3aW5kb3cubG9jYXRpb24u
aHJlZiA9IHVybDsKICAgICAgICB9ICAgCiAgICB9KTsKPC9TQ1JJUFQ+DQoNCjxESVYgY2xhc3M9
InBhbmVsIiBpZD0icGFuZWxfQ2F0ZWdvcnkiPiANCjxVTCBjbGFzcz0icGFuZWxfaGVhZCI+PFNQ
QU4+5paH56ug5YiG57G7PC9TUEFOPjwvVUw+DQo8VUwgY2xhc3M9InBhbmVsX2JvZHkiPg0KICA8
TEk+PEEgb25jbGljaz0iX2dhcS5wdXNoKFsnX3RyYWNrRXZlbnQnLCdmdW5jdGlvbicsICdvbmNs
aWNrJywgJ2Jsb2dfYXJ0aWNsZXNfd2VuemhhbmdmZW5sZWknXSk7ICIgDQogIGhyZWY9Imh0dHA6
Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL2NhdGVnb3J5LzM3ODE4MyI+Qy9DKys8L0E+
PFNQQU4+KDI2KTwvU1BBTj4gDQogICAgICAgICAgICAgICAgICA8L0xJPg0KICA8TEk+PEEgb25j
bGljaz0iX2dhcS5wdXNoKFsnX3RyYWNrRXZlbnQnLCdmdW5jdGlvbicsICdvbmNsaWNrJywgJ2Js
b2dfYXJ0aWNsZXNfd2VuemhhbmdmZW5sZWknXSk7ICIgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNz
ZG4ubmV0L2xpdWJlbi9hcnRpY2xlL2NhdGVnb3J5LzM3MzA1MCI+R05VL0xJTlVYPC9BPjxTUEFO
PigzOSk8L1NQQU4+IA0KICAgICAgICAgICAgICAgICAgPC9MST4NCiAgPExJPjxBIG9uY2xpY2s9
Il9nYXEucHVzaChbJ190cmFja0V2ZW50JywnZnVuY3Rpb24nLCAnb25jbGljaycsICdibG9nX2Fy
dGljbGVzX3dlbnpoYW5nZmVubGVpJ10pOyAiIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5l
dC9saXViZW4vYXJ0aWNsZS9jYXRlZ29yeS81MjQ5NDEiPldpbmRvd3Pnm7jlhbM8L0E+PFNQQU4+
KDMpPC9TUEFOPiANCiAgICAgICAgICAgICAgICAgIDwvTEk+DQogIDxMST48QSBvbmNsaWNrPSJf
Z2FxLnB1c2goWydfdHJhY2tFdmVudCcsJ2Z1bmN0aW9uJywgJ29uY2xpY2snLCAnYmxvZ19hcnRp
Y2xlc193ZW56aGFuZ2ZlbmxlaSddKTsgIiANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQv
bGl1YmVuL2FydGljbGUvY2F0ZWdvcnkvMzczNzUxIj7mlbDmja7lrZjlgqg8L0E+PFNQQU4+KDc5
KTwvU1BBTj4gDQogICAgICAgICAgICAgICAgICA8L0xJPg0KICA8TEk+PEEgb25jbGljaz0iX2dh
cS5wdXNoKFsnX3RyYWNrRXZlbnQnLCdmdW5jdGlvbicsICdvbmNsaWNrJywgJ2Jsb2dfYXJ0aWNs
ZXNfd2VuemhhbmdmZW5sZWknXSk7ICIgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xp
dWJlbi9hcnRpY2xlL2NhdGVnb3J5LzM3Mzc1MiI+5pWw5o2u5oyW5o6YPC9BPjxTUEFOPig0KTwv
U1BBTj4gDQogICAgICAgICAgICAgICAgICA8L0xJPg0KICA8TEk+PEEgb25jbGljaz0iX2dhcS5w
dXNoKFsnX3RyYWNrRXZlbnQnLCdmdW5jdGlvbicsICdvbmNsaWNrJywgJ2Jsb2dfYXJ0aWNsZXNf
d2VuemhhbmdmZW5sZWknXSk7ICIgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJl
bi9hcnRpY2xlL2NhdGVnb3J5LzM3Mzc1NyI+5pWw5o2u57uT5p6E5LiO566X5rOVPC9BPjxTUEFO
PigyOCk8L1NQQU4+IA0KICAgICAgICAgICAgICAgICAgPC9MST4NCiAgPExJPjxBIG9uY2xpY2s9
Il9nYXEucHVzaChbJ190cmFja0V2ZW50JywnZnVuY3Rpb24nLCAnb25jbGljaycsICdibG9nX2Fy
dGljbGVzX3dlbnpoYW5nZmVubGVpJ10pOyAiIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5l
dC9saXViZW4vYXJ0aWNsZS9jYXRlZ29yeS8zNzMwMzUiPueoi+W6j+S6uueUnzwvQT48U1BBTj4o
NDApPC9TUEFOPiANCiAgICAgICAgICAgICAgICAgIDwvTEk+DQogIDxMST48QSBvbmNsaWNrPSJf
Z2FxLnB1c2goWydfdHJhY2tFdmVudCcsJ2Z1bmN0aW9uJywgJ29uY2xpY2snLCAnYmxvZ19hcnRp
Y2xlc193ZW56aGFuZ2ZlbmxlaSddKTsgIiANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQv
bGl1YmVuL2FydGljbGUvY2F0ZWdvcnkvNjE2NjI1Ij7orqHnrpfmnLrnkIborro8L0E+PFNQQU4+
KDIyKTwvU1BBTj4gDQogICAgICAgICAgICAgICAgICA8L0xJPjwvVUw+PC9ESVY+DQo8RElWIGNs
YXNzPSJwYW5lbCIgaWQ9InBhbmVsX0FyY2hpdmUiPg0KPFVMIGNsYXNzPSJwYW5lbF9oZWFkIj48
U1BBTj7mlofnq6DlrZjmoaM8L1NQQU4+PC9VTD4NCjxVTCBjbGFzcz0icGFuZWxfYm9keSI+DQog
IDxESVYgaWQ9ImFyY2hpdmVfbGlzdCI+PCEtLeW9kuaho+e7n+iuoS0tPiANCiAgPExJPjxBIA0K
ICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDE1LzEx
Ij4yMDE15bm0MTHmnIg8L0E+PFNQQU4+KDEpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJl
Zj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAxNS8wNiI+MjAx
NeW5tDA25pyIPC9BPjxTUEFOPigxKTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0
dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTQvMTIiPjIwMTTlubQx
MuaciDwvQT48U1BBTj4oMSk8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8v
YmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDE0LzA4Ij4yMDE05bm0MDjmnIg8
L0E+PFNQQU4+KDIpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cu
Y3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAxNC8wNyI+MjAxNOW5tDA35pyIPC9BPjxT
UEFOPigxKTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4u
bmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTQvMDYiPjIwMTTlubQwNuaciDwvQT48U1BBTj4o
Mik8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9s
aXViZW4vYXJ0aWNsZS9tb250aC8yMDE0LzAzIj4yMDE05bm0MDPmnIg8L0E+PFNQQU4+KDEpPC9T
UEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVu
L2FydGljbGUvbW9udGgvMjAxNC8wMSI+MjAxNOW5tDAx5pyIPC9BPjxTUEFOPigyKTwvU1BBTj48
L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRp
Y2xlL21vbnRoLzIwMTMvMTIiPjIwMTPlubQxMuaciDwvQT48U1BBTj4oMyk8L1NQQU4+PC9MST4N
CiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9t
b250aC8yMDEzLzA4Ij4yMDEz5bm0MDjmnIg8L0E+PFNQQU4+KDEpPC9TUEFOPjwvTEk+DQogIDxM
ST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgv
MjAxMy8wNSI+MjAxM+W5tDA15pyIPC9BPjxTUEFOPigxKTwvU1BBTj48L0xJPg0KICA8TEk+PEEg
DQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTIv
MTEiPjIwMTLlubQxMeaciDwvQT48U1BBTj4oMSk8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBo
cmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDEyLzA3Ij4y
MDEy5bm0MDfmnIg8L0E+PFNQQU4+KDIpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0i
aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAxMi8wNSI+MjAxMuW5
tDA15pyIPC9BPjxTUEFOPigxKTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6
Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTIvMDMiPjIwMTLlubQwM+ac
iDwvQT48U1BBTj4oMSk8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxv
Zy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDEyLzAyIj4yMDEy5bm0MDLmnIg8L0E+
PFNQQU4+KDMpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nk
bi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAxMS8xMiI+MjAxMeW5tDEy5pyIPC9BPjxTUEFO
Pig0KTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0
L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTEvMTEiPjIwMTHlubQxMeaciDwvQT48U1BBTj4oMSk8
L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVi
ZW4vYXJ0aWNsZS9tb250aC8yMDExLzEwIj4yMDEx5bm0MTDmnIg8L0E+PFNQQU4+KDEpPC9TUEFO
PjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2Fy
dGljbGUvbW9udGgvMjAxMS8wOSI+MjAxMeW5tDA55pyIPC9BPjxTUEFOPigxKTwvU1BBTj48L0xJ
Pg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xl
L21vbnRoLzIwMTEvMDgiPjIwMTHlubQwOOaciDwvQT48U1BBTj4oMSk8L1NQQU4+PC9MST4NCiAg
PExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250
aC8yMDExLzA3Ij4yMDEx5bm0MDfmnIg8L0E+PFNQQU4+KDIpPC9TUEFOPjwvTEk+DQogIDxMST48
QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAx
MS8wNiI+MjAxMeW5tDA25pyIPC9BPjxTUEFOPigxKTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQog
IGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTEvMDUi
PjIwMTHlubQwNeaciDwvQT48U1BBTj4oMik8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVm
PSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDExLzA0Ij4yMDEx
5bm0MDTmnIg8L0E+PFNQQU4+KDMpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0
cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAxMS8wMyI+MjAxMeW5tDAz
5pyIPC9BPjxTUEFOPigzKTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9i
bG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTEvMDIiPjIwMTHlubQwMuaciDwv
QT48U1BBTj4oMSk8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5j
c2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDExLzAxIj4yMDEx5bm0MDHmnIg8L0E+PFNQ
QU4+KDIpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5u
ZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAxMC8xMiI+MjAxMOW5tDEy5pyIPC9BPjxTUEFOPigy
KTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xp
dWJlbi9hcnRpY2xlL21vbnRoLzIwMTAvMTEiPjIwMTDlubQxMeaciDwvQT48U1BBTj4oMik8L1NQ
QU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4v
YXJ0aWNsZS9tb250aC8yMDEwLzEwIj4yMDEw5bm0MTDmnIg8L0E+PFNQQU4+KDIpPC9TUEFOPjwv
TEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGlj
bGUvbW9udGgvMjAxMC8wOSI+MjAxMOW5tDA55pyIPC9BPjxTUEFOPigzKTwvU1BBTj48L0xJPg0K
ICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21v
bnRoLzIwMTAvMDgiPjIwMTDlubQwOOaciDwvQT48U1BBTj4oMik8L1NQQU4+PC9MST4NCiAgPExJ
PjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8y
MDEwLzA3Ij4yMDEw5bm0MDfmnIg8L0E+PFNQQU4+KDMpPC9TUEFOPjwvTEk+DQogIDxMST48QSAN
CiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAxMC8w
NiI+MjAxMOW5tDA25pyIPC9BPjxTUEFOPigzKTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhy
ZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTAvMDUiPjIw
MTDlubQwNeaciDwvQT48U1BBTj4oMyk8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJo
dHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDEwLzA0Ij4yMDEw5bm0
MDTmnIg8L0E+PFNQQU4+KDMpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDov
L2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAxMC8wMyI+MjAxMOW5tDAz5pyI
PC9BPjxTUEFOPigyKTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9n
LmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMTAvMDIiPjIwMTDlubQwMuaciDwvQT48
U1BBTj4oMik8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2Ru
Lm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDEwLzAxIj4yMDEw5bm0MDHmnIg8L0E+PFNQQU4+
KDIpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQv
bGl1YmVuL2FydGljbGUvbW9udGgvMjAwOS8xMiI+MjAwOeW5tDEy5pyIPC9BPjxTUEFOPig4KTwv
U1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJl
bi9hcnRpY2xlL21vbnRoLzIwMDkvMTEiPjIwMDnlubQxMeaciDwvQT48U1BBTj4oOCk8L1NQQU4+
PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0
aWNsZS9tb250aC8yMDA5LzEwIj4yMDA55bm0MTDmnIg8L0E+PFNQQU4+KDQpPC9TUEFOPjwvTEk+
DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUv
bW9udGgvMjAwOS8wOSI+MjAwOeW5tDA55pyIPC9BPjxTUEFOPigzKTwvU1BBTj48L0xJPg0KICA8
TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRo
LzIwMDkvMDgiPjIwMDnlubQwOOaciDwvQT48U1BBTj4oMik8L1NQQU4+PC9MST4NCiAgPExJPjxB
IA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDA5
LzA3Ij4yMDA55bm0MDfmnIg8L0E+PFNQQU4+KDEpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAg
aHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAwOS8wNiI+
MjAwOeW5tDA25pyIPC9BPjxTUEFOPigzKTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9
Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMDkvMDUiPjIwMDnl
ubQwNeaciDwvQT48U1BBTj4oNik8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRw
Oi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDA5LzA0Ij4yMDA55bm0MDTm
nIg8L0E+PFNQQU4+KDIpPC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Js
b2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAwOS8wMyI+MjAwOeW5tDAz5pyIPC9B
PjxTUEFOPig3KTwvU1BBTj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNz
ZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIwMDkvMDIiPjIwMDnlubQwMuaciDwvQT48U1BB
Tj4oMSk8L1NQQU4+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5l
dC9saXViZW4vYXJ0aWNsZS9tb250aC8yMDA5LzAxIj4yMDA55bm0MDHmnIg8L0E+PFNQQU4+KDIp
PC9TUEFOPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1
YmVuL2FydGljbGUvbW9udGgvMjAwOC8xMiI+MjAwOOW5tDEy5pyIPC9BPjxTUEFOPigxKTwvU1BB
Tj48L0xJPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9h
cnRpY2xlL21vbnRoLzIwMDgvMTEiPjIwMDjlubQxMeaciDwvQT48U1BBTj4oMSk8L1NQQU4+PC9M
ST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJ0aWNs
ZS9tb250aC8yMDA4LzA2Ij4yMDA45bm0MDbmnIg8L0E+PFNQQU4+KDEpPC9TUEFOPjwvTEk+DQog
IDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9u
dGgvMjAwOC8wNSI+MjAwOOW5tDA15pyIPC9BPjxTUEFOPigyKTwvU1BBTj48L0xJPg0KICA8TEk+
PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcnRpY2xlL21vbnRoLzIw
MDgvMDQiPjIwMDjlubQwNOaciDwvQT48U1BBTj4oMTEpPC9TUEFOPjwvTEk+DQogIDxMST48QSAN
CiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FydGljbGUvbW9udGgvMjAwOC8w
MyI+MjAwOOW5tDAz5pyIPC9BPjxTUEFOPigyNCk8L1NQQU4+PC9MST48L0RJVj48L1VMPjwvRElW
Pg0KPERJViBjbGFzcz0icGFuZWwiIGlkPSJob3RhcnRpY2xzIj4NCjxVTCBjbGFzcz0icGFuZWxf
aGVhZCI+PFNQQU4+6ZiF6K+75o6S6KGMICAgIDwvU1BBTj4gPC9VTD4NCjxVTCBjbGFzcz0icGFu
ZWxfYm9keSBpdGVtbGlzdCI+DQogIDxMST48QSB0aXRsZT0iS01Q566X5rOV5rex5bqm6Kej5p6Q
IiBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRpY2xlL2RldGFpbHMvNDQw
OTUwNSI+S01Q566X5rOV5rex5bqm6Kej5p6QPC9BPjxTUEFOPig2MzY3Mik8L1NQQU4+IA0KICA8
L0xJPg0KICA8TEk+PEEgdGl0bGU9IkdsdXN0ZXJGU+mbhue+pOaWh+S7tuezu+e7n+eglOeptiIg
aHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxzLzYyODQ1
NTEiPkdsdXN0ZXJGU+mbhue+pOaWh+S7tuezu+e7n+eglOeptjwvQT48U1BBTj4oNjMxODEpPC9T
UEFOPiANCiAgPC9MST4NCiAgPExJPjxBIHRpdGxlPSLkuIDkvY3ogIHnoIHlhpznmoTnvJbnqIvn
roDlj7IiIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGljbGUvZGV0YWls
cy83MzQwOTk1Ij7kuIDkvY3ogIHnoIHlhpznmoTnvJbnqIvnroDlj7I8L0E+PFNQQU4+KDQyODg3
KTwvU1BBTj4gDQogIDwvTEk+DQogIDxMST48QSB0aXRsZT0iVGFvYmFv5YiG5biD5byP5paH5Lu2
57O757ufVEZT566A5p6QIiBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRp
Y2xlL2RldGFpbHMvNTk0NjU4MyI+VGFvYmFv5YiG5biD5byP5paH5Lu257O757ufVEZT566A5p6Q
PC9BPjxTUEFOPigzNzE4MSk8L1NQQU4+IA0KICA8L0xJPg0KICA8TEk+PEEgdGl0bGU9IumHjeWk
jeaVsOaNruWIoOmZpChEZS1kdXBsaWNhdGlvbinmioDmnK/noJTnqbYiIGhyZWY9Imh0dHA6Ly9i
bG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGljbGUvZGV0YWlscy81ODI5MDgzIj7ph43lpI3mlbDm
ja7liKDpmaQoRGUtZHVwbGljYXRpb24p5oqA5pyv56CU56m2PC9BPjxTUEFOPigzMjAyOCk8L1NQ
QU4+IA0KICA8L0xJPg0KICA8TEk+PEEgdGl0bGU9IuWIhuW4g+W8j+WtmOWCqOezu+e7n+iuvuiu
oeeahOiLpeW5suWOn+WImSIgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0
aWNsZS9kZXRhaWxzLzYxOTYyOTAiPuWIhuW4g+W8j+WtmOWCqOezu+e7n+iuvuiuoeeahOiLpeW5
suWOn+WImTwvQT48U1BBTj4oMzEyNDMpPC9TUEFOPiANCiAgPC9MST4NCiAgPExJPjxBIHRpdGxl
PSLno4Hnm5hJT1BT6K6h566X5LiO5rWL6YePIiBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9s
aXVhaWd1aS9hcnRpY2xlL2RldGFpbHMvNjE2ODE4NiI+56OB55uYSU9QU+iuoeeul+S4jua1i+mH
jzwvQT48U1BBTj4oMjkyMDcpPC9TUEFOPiANCiAgPC9MST4NCiAgPExJPjxBIHRpdGxlPSLmlbDm
ja7lkIzmraXnrpfms5XnoJTnqbYiIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3Vp
L2FydGljbGUvZGV0YWlscy81NzkzNzA2Ij7mlbDmja7lkIzmraXnrpfms5XnoJTnqbY8L0E+PFNQ
QU4+KDI5MDE1KTwvU1BBTj4gDQogIDwvTEk+DQogIDxMST48QSB0aXRsZT0i6ZuG576kTkFT5oqA
5pyv5p625p6EIiBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRpY2xlL2Rl
dGFpbHMvNjQyMjcwMCI+6ZuG576kTkFT5oqA5pyv5p625p6EPC9BPjxTUEFOPigyNDkwNSk8L1NQ
QU4+IA0KICA8L0xJPg0KICA8TEk+PEEgdGl0bGU9Ikx1c3RyZSBJL0/mgKfog73nibnngrnkuI7m
nIDkvbPlrp7ot7UiIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGljbGUv
ZGV0YWlscy82NDU1NzM2Ij5MdXN0cmUgDQogIEkvT+aAp+iDveeJueeCueS4juacgOS9s+Wunui3
tTwvQT48U1BBTj4oMjI4NjcpPC9TUEFOPiA8L0xJPjwvVUw+PC9ESVY+DQo8RElWIGNsYXNzPSJw
YW5lbCIgaWQ9ImhvdGFydGljbHMyIj4NCjxVTCBjbGFzcz0icGFuZWxfaGVhZCI+PFNQQU4+6K+E
6K665o6S6KGMPC9TUEFOPjwvVUw+DQo8VUwgY2xhc3M9InBhbmVsX2JvZHkgaXRlbWxpc3QiPg0K
ICA8TEk+PEEgdGl0bGU9IuS4uuS7gOS5iOWSseS4reWbveacieW9seWTjeWKm+eahOW8gOa6kOi9
r+S7tumCo+S5iOWwke+8nyIgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0
aWNsZS9kZXRhaWxzLzU4NjQ1ODMiPuS4uuS7gOS5iOWSseS4reWbveacieW9seWTjeWKm+eahOW8
gOa6kOi9r+S7tumCo+S5iOWwke+8nzwvQT48U1BBTj4oMjYzKTwvU1BBTj4gDQogIDwvTEk+DQog
IDxMST48QSB0aXRsZT0i5LiA5L2N6ICB56CB5Yac55qE57yW56iL566A5Y+yIiBocmVmPSJodHRw
Oi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRpY2xlL2RldGFpbHMvNzM0MDk5NSI+5LiA5L2N
6ICB56CB5Yac55qE57yW56iL566A5Y+yPC9BPjxTUEFOPigyMTkpPC9TUEFOPiANCiAgPC9MST4N
CiAgPExJPjxBIHRpdGxlPSJHbHVzdGVyRlPpm4bnvqTmlofku7bns7vnu5/noJTnqbYiIGhyZWY9
Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGljbGUvZGV0YWlscy82Mjg0NTUxIj5H
bHVzdGVyRlPpm4bnvqTmlofku7bns7vnu5/noJTnqbY8L0E+PFNQQU4+KDIxNCk8L1NQQU4+IA0K
ICA8L0xJPg0KICA8TEk+PEEgdGl0bGU9IumHjeWkjeaVsOaNruWIoOmZpChEZS1kdXBsaWNhdGlv
binmioDmnK/noJTnqbYiIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGlj
bGUvZGV0YWlscy81ODI5MDgzIj7ph43lpI3mlbDmja7liKDpmaQoRGUtZHVwbGljYXRpb24p5oqA
5pyv56CU56m2PC9BPjxTUEFOPigxMjApPC9TUEFOPiANCiAgPC9MST4NCiAgPExJPjxBIHRpdGxl
PSLmlbDmja7lkIzmraXnrpfms5XnoJTnqbYiIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xp
dWFpZ3VpL2FydGljbGUvZGV0YWlscy81NzkzNzA2Ij7mlbDmja7lkIzmraXnrpfms5XnoJTnqbY8
L0E+PFNQQU4+KDExMSk8L1NQQU4+IA0KICA8L0xJPg0KICA8TEk+PEEgdGl0bGU9IuWfuuS6juW8
gOa6kOi9r+S7tuaehOW7uumrmOaAp+iDvembhue+pE5BU+ezu+e7nyIgaHJlZj0iaHR0cDovL2Js
b2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxzLzcxNjM0ODIiPuWfuuS6juW8gOa6
kOi9r+S7tuaehOW7uumrmOaAp+iDvembhue+pE5BU+ezu+e7nzwvQT48U1BBTj4oODIpPC9TUEFO
PiANCiAgPC9MST4NCiAgPExJPjxBIHRpdGxlPSJUYW9iYW/liIbluIPlvI/mlofku7bns7vnu59U
RlPnroDmnpAiIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGljbGUvZGV0
YWlscy81OTQ2NTgzIj5UYW9iYW/liIbluIPlvI/mlofku7bns7vnu59URlPnroDmnpA8L0E+PFNQ
QU4+KDczKTwvU1BBTj4gDQogIDwvTEk+DQogIDxMST48QSB0aXRsZT0i5LiA5L2N5a2Y5YKo56CU
5Y+R6ICF55qE5Zu+5Lmm5riF5Y2VIiBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1
aS9hcnRpY2xlL2RldGFpbHMvNzI5NTQzOCI+5LiA5L2N5a2Y5YKo56CU5Y+R6ICF55qE5Zu+5Lmm
5riF5Y2VPC9BPjxTUEFOPig2Mik8L1NQQU4+IA0KICA8L0xJPg0KICA8TEk+PEEgdGl0bGU9IktN
UOeul+azlea3seW6puino+aekCIgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkv
YXJ0aWNsZS9kZXRhaWxzLzQ0MDk1MDUiPktNUOeul+azlea3seW6puino+aekDwvQT48U1BBTj4o
NDYpPC9TUEFOPiANCiAgPC9MST4NCiAgPExJPjxBIHRpdGxlPSLliIbluIPlvI/mlofku7bns7vn
u5/mtYvor5Xmlrnms5XkuI7mtYvor5Xlt6XlhbciIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0
L2xpdWFpZ3VpL2FydGljbGUvZGV0YWlscy83MjQwNzA2Ij7liIbluIPlvI/mlofku7bns7vnu5/m
tYvor5Xmlrnms5XkuI7mtYvor5Xlt6Xlhbc8L0E+PFNQQU4+KDM5KTwvU1BBTj4gDQogIDwvTEk+
PC9VTD48L0RJVj4NCjxESVYgY2xhc3M9InBhbmVsIiBpZD0ibmV3Y29tbWVudHMiPg0KPFVMIGNs
YXNzPSJwYW5lbF9oZWFkIj48U1BBTj7mnIDmlrDor4Torro8L1NQQU4+PC9VTD4NCjxVTCBjbGFz
cz0icGFuZWxfYm9keSBpdGVtbGlzdCI+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cu
Y3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxzLzcxNjM0ODIjY29tbWVudHMiPuWfuuS6
juW8gOa6kOi9r+S7tuaehOW7uumrmOaAp+iDvembhue+pE5BU+ezu+e7nzwvQT4gDQogICAgICAN
CiAgPFAgc3R5bGU9Im1hcmdpbjogMHB4OyI+PEEgY2xhc3M9InVzZXJfbmFtZSIgaHJlZj0iaHR0
cDovL2Jsb2cuY3Nkbi5uZXQvYmpxMTAxNiI+YmpxMTAxNjwvQT46IA0KICDlj6rpnIDopoHmiops
b2Nr5paH5Lu25pS+5Zyo5YWx5Lqr56m66Ze05Y2z5Y+v44CC5YW25LuW6YWN572u5paH5Lu25ZCE
5Liq6IqC54K55L+d5oyB5LiA6Ie044CCICAgICA8L1A+PC9MST4NCiAgPExJPjxBIA0KICBocmVm
PSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRpY2xlL2RldGFpbHMvNzE2MzQ4MiNj
b21tZW50cyI+5Z+65LqO5byA5rqQ6L2v5Lu25p6E5bu66auY5oCn6IO96ZuG576kTkFT57O757uf
PC9BPiANCiAgICAgIA0KICA8UCBzdHlsZT0ibWFyZ2luOiAwcHg7Ij48QSBjbGFzcz0idXNlcl9u
YW1lIiBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9ianExMDE2Ij5ianExMDE2PC9BPjogDQog
IOWPr+S7peS9v+eUqGtlZXBhbGl2ZWTmnaXmm7/ku6NsdnNtYXN0ZXIuc2jvvIzku47ogIzlrp7n
jrBsdnPnmoTpq5jlj6/nlKjvvIzljbPlhYvmnI1sdnPnmoTljZUuLi4gICAgIDwvUD48L0xJPg0K
ICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGljbGUv
ZGV0YWlscy83MTYzNDgyI2NvbW1lbnRzIj7ln7rkuo7lvIDmupDova/ku7bmnoTlu7rpq5jmgKfo
g73pm4bnvqROQVPns7vnu588L0E+IA0KICAgICAgDQogIDxQIHN0eWxlPSJtYXJnaW46IDBweDsi
PjxBIGNsYXNzPSJ1c2VyX25hbWUiIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2JqcTEwMTYi
PmJqcTEwMTY8L0E+OiANCiAg5aW95paH56ug77yB5oSf6LCi5YiG5Lqr77yBICAgICA8L1A+PC9M
ST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRp
Y2xlL2RldGFpbHMvNTgyOTA4MyNjb21tZW50cyI+6YeN5aSN5pWw5o2u5Yig6ZmkKERlLWR1cGxp
Y2F0aW9uKeaKgOacr+eglOeptjwvQT4gDQogICAgICANCiAgPFAgc3R5bGU9Im1hcmdpbjogMHB4
OyI+PEEgY2xhc3M9InVzZXJfbmFtZSIgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMTY3
NzM1NjUiPnFxXzE2NzczNTY1PC9BPjogDQogIOiAgeW4iO+8jOS9oOWlve+8jOaIkeaYr+WImuaO
peinpui/meS4quWMuuWfn++8jOWFs+S6juWbuuWumuWIhuWdl+eul+azle+8jOaIkeeQhuino+aY
r+aMieeFp+WbuuWumuWkp+Wwj+i/m+ihjOWIhuWdl++8jOeEtuWQjui/m+ihjOWCqOWtmO+8jOWG
jeaMieeFpy4uLiAgICAgPC9QPjwvTEk+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cu
Y3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxzLzk5ODExMzUjY29tbWVudHMiPua1t+mH
j+Wwj+aWh+S7tumXrumimOe7vOi/sDwvQT4gDQogICAgICANCiAgPFAgc3R5bGU9Im1hcmdpbjog
MHB4OyI+PEEgY2xhc3M9InVzZXJfbmFtZSIgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvcmFu
bHVjayI+cmFubHVjazwvQT46IA0KICDpq5jlsYvlu7rnk7TvvIzlpb3mlocgICAgIDwvUD48L0xJ
Pg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWFpZ3VpL2FydGlj
bGUvZGV0YWlscy81NjQxODkxI2NvbW1lbnRzIj5Tb3VyY2VGb3JnZeS4iuWPkeW4g2RlZHVwIA0K
ICB1dGlsPC9BPiAgICAgDQogIDxQIHN0eWxlPSJtYXJnaW46IDBweDsiPjxBIGNsYXNzPSJ1c2Vy
X25hbWUiIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbiI+bGl1YmVuPC9BPjoNCiAg
IEBsb25nc2h1YWkwODIxOuWkp+aVsOmHj+ayoeaciea1i+ivlei/h++8jFRC57qn5rWL6K+V6L+H
ICAgICA8L1A+PC9MST4NCiAgPExJPjxBIA0KICBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9s
aXVhaWd1aS9hcnRpY2xlL2RldGFpbHMvNTY0MTg5MSNjb21tZW50cyI+U291cmNlRm9yZ2XkuIrl
j5HluINkZWR1cCANCiAgdXRpbDwvQT4gICAgIA0KICA8UCBzdHlsZT0ibWFyZ2luOiAwcHg7Ij48
QSBjbGFzcz0idXNlcl9uYW1lIiBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9sb25nc2h1YWkw
ODIxIj5sb25nc2h1YWkwODIxPC9BPjogDQogIOaCqOWlve+8jOaCqOeahOezu+e7n+WkhOeQhuaV
sOaNrueahOacgOWkp+aVsOmHj+e6p+aYr+WkmuWwke+8nyAgICAgPC9QPjwvTEk+DQogIDxMST48
QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxz
LzQxNjM0ODgjY29tbWVudHMiPuWKqOaAgeWIhumFjeS6jOe7tOaVsOe7hDwvQT4gDQogICAgICAN
CiAgPFAgc3R5bGU9Im1hcmdpbjogMHB4OyI+PEEgY2xhc3M9InVzZXJfbmFtZSIgaHJlZj0iaHR0
cDovL2Jsb2cuY3Nkbi5uZXQvd2Fsa2luZ3NrIj53YWxraW5nc2s8L0E+OiANCiAg55yL6ZSZ5LqG
77yM5L2g5piv5Lit56eR6Zmi5Y2a5aOrICAgICA8L1A+PC9MST4NCiAgPExJPjxBIA0KICBocmVm
PSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXVhaWd1aS9hcnRpY2xlL2RldGFpbHMvNDE2MzQ4OCNj
b21tZW50cyI+5Yqo5oCB5YiG6YWN5LqM57u05pWw57uEPC9BPiANCiAgICAgIA0KICA8UCBzdHls
ZT0ibWFyZ2luOiAwcHg7Ij48QSBjbGFzcz0idXNlcl9uYW1lIiBocmVmPSJodHRwOi8vYmxvZy5j
c2RuLm5ldC93YWxraW5nc2siPndhbGtpbmdzazwvQT46IA0KICDmpbzkuIrov5nkuYjlpJrkurrv
vIzmsqHmnInlj5HnjrDlkJfvvJ9MWuiDveWGmee8luivkeWZqOaAjuS5iOi/mOeKr+i/meagt+ea
hOmUmeivr++8n+S9oOecn+aYr+S4reenkemZouWjq++8nyAgICAgPC9QPjwvTEk+DQogIDxMST48
QSANCiAgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YWlndWkvYXJ0aWNsZS9kZXRhaWxz
LzQxNjM0ODgjY29tbWVudHMiPuWKqOaAgeWIhumFjeS6jOe7tOaVsOe7hDwvQT4gDQogICAgICAN
CiAgPFAgc3R5bGU9Im1hcmdpbjogMHB4OyI+PEEgY2xhc3M9InVzZXJfbmFtZSIgaHJlZj0iaHR0
cDovL2Jsb2cuY3Nkbi5uZXQvd2Fsa2luZ3NrIj53YWxraW5nc2s8L0E+OiANCiAg5pa55rOV5LqM
ICDmmK/plJnor6/nmoQxLiBwcCA9IG1hbGxvYyhyb3cgKiBzaXplb2YoaW50ICopKTsg55Sz6K+3
5LqG5rKhLi4uICAgICA8L1A+PC9MST48L1VMPjwvRElWPg0KPERJViBjbGFzcz0icGFuZWwiIGlk
PSJjdXN0b21fY29sdW1uXzk1OTQ4NSI+DQo8VUwgY2xhc3M9InBhbmVsX2hlYWQiPjxTUEFOPuWN
muaWh+iHquiNkDwvU1BBTj48L1VMPg0KPFVMIGNsYXNzPSJwYW5lbF9ib2R5Ij4NCiAgPFVMPg0K
ICAgIDxMST48QSBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJjaGl2ZS8yMDA5
LzEyLzIxLzUwNTA2OTcuYXNweCIgDQogICAgdGFyZ2V0PSJfYmxhbmsiPuWtl+espuS4skhhc2jl
h73mlbDor4TkvLA8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5u
ZXQvbGl1YmVuL2FyY2hpdmUvMjAwOS8wOC8wNC80NDA5NTA1LmFzcHgiIA0KICAgIHRhcmdldD0i
X2JsYW5rIj5LTVDnrpfms5Xmt7Hluqbop6PmnpA8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0i
aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FyY2hpdmUvMjAwOS8wOS8yMi80NTgxOTcwLmFz
cHgiIA0KICAgIHRhcmdldD0iX2JsYW5rIj5SQUlE5oqA5pyv5Y+R5bGV57u86L+wPC9BPjwvTEk+
DQogICAgPExJPjxBIGhyZWY9Imh0dHA6Ly9ibG9nLmNzZG4ubmV0L2xpdWJlbi9hcmNoaXZlLzIw
MDkvMDgvMjgvNDQ5NDU1NS5hc3B4IiANCiAgICB0YXJnZXQ9Il9ibGFuayI+5b+r54Wn77yIU25h
cHNob3TvvInmioDmnK/lj5HlsZXnu7zov7A8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0
cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FyY2hpdmUvMjAxMC8wMi8yOC81MzMzNzUyLmFzcHgi
IA0KICAgIHRhcmdldD0iX2JsYW5rIj7ku47noJTlj5Hop5LluqbosIjlrZjlgqjmioDmnK/nmoTl
rabkuaA8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1
YmVuL2FyY2hpdmUvMjAxMC8wMy8xMS81MzY4MzAwLmFzcHgiIA0KICAgIHRhcmdldD0iX2JsYW5r
Ij7lrZjlgqjlrabkuaDkuYvot688L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL2Js
b2cuY3Nkbi5uZXQvbGl1YmVuL2FyY2hpdmUvMjAxMC8wMS8wOS81MTY2NTM4LmFzcHgiIA0KICAg
IHRhcmdldD0iX2JsYW5rIj7ln7rkuo5EZWR1cOeahOaVsOaNruaJk+WMheaKgOacrzwvQT48L0xJ
Pg0KICAgIDxMST48QSBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJjaGl2ZS8y
MDEwLzAzLzE5LzUzOTU4MzEuYXNweCIgDQogICAgdGFyZ2V0PSJfYmxhbmsiPldTSU/vvI3ln7rk
uo5XRULmnI3liqHnmoTov5znqIvmlofku7ZJL088L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0i
aHR0cDovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy9kZWR1cHV0aWwvIiANCiAgICB0YXJnZXQ9
Il9ibGFuayI+ZGVkdXAgdXRpbDwvQT48L0xJPg0KICAgIDxMST48QSBocmVmPSJodHRwOi8vYmxv
Zy5jc2RuLm5ldC9saXViZW4vYXJjaGl2ZS8yMDEwLzA4LzA2LzU3OTM3MDYuYXNweCIgDQogICAg
dGFyZ2V0PSJfYmxhbmsiPuaVsOaNruWQjOatpeeul+azleeglOeptjwvQT48L0xJPg0KICAgIDxM
ST48QSBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJjaGl2ZS8yMDEwLzA4LzIx
LzU4MjkwODMuYXNweCIgDQogICAgdGFyZ2V0PSJfYmxhbmsiPumHjeWkjeaVsOaNruWIoOmZpChE
ZS1kdXBsaWNhdGlvbinmioDmnK/noJTnqbY8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0
cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FyY2hpdmUvMjAxMC8xMi8wOC82MDY0MDQ1LmFzcHgi
IA0KICAgIHRhcmdldD0iX2JsYW5rIj7pq5jmlYjlrZjlgqjmioDmnK/noJTnqbY8L0E+PC9MST4N
CiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1YmVuL2FyY2hpdmUvMjAx
MS8wMy8yOC82Mjg0NTUxLmFzcHgiIA0KICAgIHRhcmdldD0iX2JsYW5rIj5HbHVzdGVyRlPpm4bn
vqTmlofku7bns7vnu5/noJTnqbY8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL2Js
b2cuY3Nkbi5uZXQvbGl1YmVuL2FyY2hpdmUvMjAxMS8wNC8xNC82MzI0MTMzLmFzcHgiIA0KICAg
IHRhcmdldD0iX2JsYW5rIj7mt7HlhaXnkIbop6PmlbDmja7ljovnvKnkuI7ph43lpI3mlbDmja7l
iKDpmaQ8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1
YmVuL2FyY2hpdmUvMjAxMS8wNC8yOS82MzcyODIzLmFzcHgiIA0KICAgIHRhcmdldD0iX2JsYW5r
Ij5TdG9yTmV4dOa1t+mHj+Wwj+aWh+S7tuaAp+iDvea1i+ivleS4juiwg+S8mDwvQT48L0xJPg0K
ICAgIDxMST48QSBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9saXViZW4vYXJjaGl2ZS8yMDEx
LzA1LzE1LzY0MjI3MDAuYXNweCIgDQogICAgdGFyZ2V0PSJfYmxhbmsiPumbhue+pE5BU+aKgOac
r+aetuaehDwvQT48L0xJPg0KICAgIDxMST48QSBocmVmPSJodHRwOi8vYmxvZy5jc2RuLm5ldC9s
aXViZW4vYXJjaGl2ZS8yMDExLzA1LzMwLzY0NTU3MzYuYXNweCIgDQogICAgdGFyZ2V0PSJfYmxh
bmsiPkx1c3RyZSBJL0/mgKfog73nibnngrnkuI7mnIDkvbPlrp7ot7U8L0E+PC9MST48L1VMPjwv
VUw+PC9ESVY+DQo8RElWIGNsYXNzPSJwYW5lbCIgaWQ9ImN1c3RvbV9jb2x1bW5fOTU5NDg2Ij4N
CjxVTCBjbGFzcz0icGFuZWxfaGVhZCI+PFNQQU4+5oiR55qE6L2v5Lu2PC9TUEFOPjwvVUw+DQo8
VUwgY2xhc3M9InBhbmVsX2JvZHkiPg0KICA8VUw+DQogICAgPExJPjxBIGhyZWY9Imh0dHA6Ly9i
bG9nLmNzZG4ubmV0L2xpdWJlbi9hcmNoaXZlLzIwMTAvMDYvMDIvNTY0MTg5MS5hc3B4IiANCiAg
ICB0YXJnZXQ9Il9ibGFuayI+ZGVkdXAgdXRpbDwvQT48L0xJPg0KICAgIDxMST48QSBocmVmPSJo
dHRwOi8vZG93bmxvYWQuZW5ldC5jb20uY24vaHRtbC8wNjA0ODIwMDUwODE2MDEuaHRtbCIgdGFy
Z2V0PSJfYmxhbmsiPkJvb3RVPC9BPjwvTEk+DQogICAgPExJPjxBIGhyZWY9Imh0dHA6Ly9kb3du
bG9hZC5lbmV0LmNvbS5jbi9odG1sLzA4MDU4MjAwNTA4MTYwMi5odG1sIiB0YXJnZXQ9Il9ibGFu
ayI+SUhFUOS6lOWtkOajizwvQT48L0xJPg0KICAgIDxMST48QSBocmVmPSJodHRwOi8vYmxvZy5j
c2RuLm5ldC9saXViZW4vYXJjaGl2ZS8yMDEwLzAzLzE5LzUzOTU4MzEuYXNweCIgDQogICAgdGFy
Z2V0PSJfYmxhbmsiPldTSU88L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL2Rvd25s
b2FkLmVuZXQuY29tLmNuL2h0bWwvMjcyNDQyMDA2MDUxMjAxLmh0bWwiIHRhcmdldD0iX2JsYW5r
Ij5TUEHnm7jlhow8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL2Rvd25sb2FkLmVu
ZXQuY29tLmNuL2h0bWwvMDMwNzkyMDA1MDgxNzAyLmh0bWwiIHRhcmdldD0iX2JsYW5rIj5UaW55
57yW6K+R5ZmoPC9BPjwvTEk+DQogICAgPExJPjxBIGhyZWY9Imh0dHA6Ly9jb2RlLmdvb2dsZS5j
b20vcC9saWJzeW5jIiANCiAgICB0YXJnZXQ9Il9ibGFuayI+bGlic3luYzwvQT48L0xJPjwvVUw+
PC9VTD48L0RJVj4NCjxESVYgY2xhc3M9InBhbmVsIiBpZD0iY3VzdG9tX2NvbHVtbl85NTk0ODci
Pg0KPFVMIGNsYXNzPSJwYW5lbF9oZWFkIj48U1BBTj7otYTmupDpk77mjqU8L1NQQU4+PC9VTD4N
CjxVTCBjbGFzcz0icGFuZWxfYm9keSI+DQogIDxVTD4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDov
L29sZGJveS5ibG9nLjUxY3RvLmNvbS8iIA0KICAgIHRhcmdldD0iX2JsYW5rIj7ogIHnlLflrals
aW51eOi/kOe7tDwvQT48L0xJPg0KICAgIDxMST48QSBocmVmPSJodHRwOi8vYmJzLmRvaXQuY29t
LmNuLyIgdGFyZ2V0PSJfYmxhbmsiPkRPSVTorrrlnZs8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJl
Zj0iaHR0cDovL2Jicy5jaGluYXVuaXgubmV0LyIgdGFyZ2V0PSJfYmxhbmsiPkNoaW5hVW5peOiu
uuWdmzwvQT48L0xJPg0KICAgIDxMST48QSBocmVmPSJodHRwOi8vd3d3LmRvc3Rvci5jb20vIiB0
YXJnZXQ9Il9ibGFuayI+5a2Y5YKo5Zyo57q/PC9BPjwvTEk+DQogICAgPExJPjxBIGhyZWY9Imh0
dHA6Ly93d3cud2F0Y2hzdG9yLmNvbS8iIHRhcmdldD0iX2JsYW5rIj5XYXRjaFN0b3I8L0E+PC9M
ST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5pbmZvc3Rvci5jb20vaW5kZXguaHRtbCIg
DQogICAgdGFyZ2V0PSJfYmxhbmsiPkluZm9TdG9yPC9BPjwvTEk+DQogICAgPExJPjxBIGhyZWY9
Imh0dHA6Ly93d3cuZ2FydG5lci5jb20vdGVjaG5vbG9neS9ob21lLmpzcCIgDQogICAgdGFyZ2V0
PSJfYmxhbmsiPkdhcnRuZXI8L0E+PC9MST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy51
c2VuaXgub3JnL2V2ZW50cy9mYXN0LyIgDQogICAgdGFyZ2V0PSJfYmxhbmsiPkZBU1Q8L0E+PC9M
ST4NCiAgICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5zbmlhLm9yZy8iIHRhcmdldD0iX2JsYW5r
Ij5TTklBPC9BPjwvTEk+DQogICAgPExJPjxBIGhyZWY9Imh0dHBzOi8vc291cmNlZm9yZ2UubmV0
L3Byb2plY3RzL2RlZHVwdXRpbC8iIA0KICAgIHRhcmdldD0iX2JsYW5rIj5kZWR1cCB1dGlsPC9B
PjwvTEk+DQogICAgPExJPjxBIGhyZWY9Imh0dHA6Ly93d3cudGVrdGFsay5vcmcvIiANCnRhcmdl
dD0iX2JsYW5rIj7lvK/mm7Lor4Torro8L0E+PC9MST48L1VMPjwvVUw+PC9ESVY+PC9ESVY+DQo8
RElWIGNsYXNzPSJjbGVhciI+PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPSJjbGVhciI+PC9ESVY+
PC9ESVY+DQo8U0NSSVBUIHNyYz0iaHR0cDovL2MuY3NkbmltZy5jbi9yYWJiaXQvY25pY2svY25p
Y2suanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQogDQo8U0NSSVBUIHNyYz0i
aHR0cDovL3N0YXRpYy5ibG9nLmNzZG4ubmV0L3NjcmlwdHMvbmV3YmxvZy5taW4uanMiIHR5cGU9
InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQogDQo8U0NSSVBUIHNyYz0iaHR0cDovL21lZGFs
LmJsb2cuY3Nkbi5uZXQvc2hvd2Jsb2dtZWRhbC5hc2h4P2Jsb2dpZD03OTUxNyIgdHlwZT0idGV4
dC9qYXZhc2NyaXB0Ij48L1NDUklQVD4NCiANCjxTQ1JJUFQgc3JjPSJodHRwOi8vc3RhdGljLmJs
b2cuY3Nkbi5uZXQvc2NyaXB0cy9KYXZhU2NyaXB0MS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0
Ij48L1NDUklQVD4NCiANCjxTQ1JJUFQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5kb2N1bWVudC53
cml0ZSgiPGltZyBzcmM9aHR0cDovL2NvdW50ZXIuY3Nkbi5uZXQvcHYuYXNweD9pZD0yNCBib3Jk
ZXI9MCB3aWR0aD0wIGhlaWdodD0wPiIpOzwvU0NSSVBUPg0KIA0KPFNDUklQVCBzcmM9Imh0dHA6
Ly93d3cuY3Nkbi5uZXQvdWkvc2NyaXB0cy9Dc2RuL2NvdW50ZXIuanMiIHR5cGU9InRleHQvamF2
YXNjcmlwdCI+PC9TQ1JJUFQ+DQogDQo8U0NSSVBUIHNyYz0iaHR0cDovL2FkLmNzZG4ubmV0L3Nj
cmlwdHMvYWQtYmxvZy5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L1NDUklQVD4NCiANCjxT
Q1JJUFQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICQoZnVuY3Rpb24gKCkgewogICAgICAg
IGZ1bmN0aW9uIF9fZ2V0X2NvZGVfdG9vbGJhcihzbmlwcGV0X2lkKSB7CiAgICAgICAgICAgIHJl
dHVybiAkKCI8c3BhbiBjbGFzcz0ndHJhY2tpbmctYWQnIGRhdGEtbW9kPSdwb3B1XzE2Nyc+PGEg
aHJlZj0naHR0cHM6Ly9jb2RlLmNzZG4ubmV0L3NuaXBwZXRzLyIKICAgICAgICAgICAgICAgICAg
ICArIHNuaXBwZXRfaWQKICAgICAgICAgICAgICAgICAgICArICInIHRhcmdldD0nX2JsYW5rJyB0
aXRsZT0n5ZyoQ09EReS4iuafpeeci+S7o+eggeeJhycgIHN0eWxlPSd0ZXh0LWluZGVudDowOyc+
PGltZyBzcmM9J2h0dHBzOi8vY29kZS5jc2RuLm5ldC9hc3NldHMvQ09ERV9pY28ucG5nJyB3aWR0
aD0xMiBoZWlnaHQ9MTIgYWx0PSflnKhDT0RF5LiK5p+l55yL5Luj56CB54mHJyBzdHlsZT0ncG9z
aXRpb246cmVsYXRpdmU7dG9wOjFweDtsZWZ0OjJweDsnLz48L2E+PC9zcGFuPiIKICAgICAgICAg
ICAgICAgICAgICArICI8c3BhbiBjbGFzcz0ndHJhY2tpbmctYWQnIGRhdGEtbW9kPSdwb3B1XzE3
MCc+PGEgaHJlZj0naHR0cHM6Ly9jb2RlLmNzZG4ubmV0L3NuaXBwZXRzLyIKICAgICAgICAgICAg
ICAgICAgICArIHNuaXBwZXRfaWQKICAgICAgICAgICAgICAgICAgICArICIvZm9yaycgdGFyZ2V0
PSdfYmxhbmsnIHRpdGxlPSfmtL7nlJ/liLDmiJHnmoTku6PnoIHniYcnIHN0eWxlPSd0ZXh0LWlu
ZGVudDowOyc+PGltZyBzcmM9J2h0dHBzOi8vY29kZS5jc2RuLm5ldC9hc3NldHMvaWNvX2Zvcmsu
c3ZnJyB3aWR0aD0xMiBoZWlnaHQ9MTIgYWx0PSfmtL7nlJ/liLDmiJHnmoTku6PnoIHniYcnIHN0
eWxlPSdwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MnB4O2xlZnQ6MnB4OycvPjwvYT48L3NwYW4+Iik7
CiAgICAgICAgfQogICAgICAgIAogICAgICAgICQoIltjb2RlX3NuaXBwZXRfaWRdIikuZWFjaChm
dW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF9fc19pZCA9ICQodGhpcykuYXR0cigiY29kZV9zbmlw
cGV0X2lkIik7CiAgICAgICAgICAgIGlmIChfX3NfaWQgIT0gbnVsbCAmJiBfX3NfaWQgIT0gIiIg
JiYgX19zX2lkICE9IDAgJiYgcGFyc2VJbnQoX19zX2lkKSA+IDcwMDIwKSB7CiAgICAgICAgICAg
ICAgICBfX2NvZGVfdG9vbCA9IF9fZ2V0X2NvZGVfdG9vbGJhcihfX3NfaWQpOwogICAgICAgICAg
ICAgICAgJCh0aGlzKS5wcmV2KCkuZmluZCgiLnRvb2xzIikuYXBwZW5kKF9fY29kZV90b29sKTsK
ICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICAkKCIuYmFyIikuc2hvdygpOwogICAg
fSk7CjwvU0NSSVBUPg0KICAgICA8L0RJVj48IS0tbmV3IHRvcC0tPiAgICAgICAgIA0KPFNDUklQ
VCBpZD0iY3Nkbi10b29sYmFyLWlkIiBzcmM9Imh0dHA6Ly9jLmNzZG5pbWcuY24vcHVibGljL2Nv
bW1vbi90b29sYmFyL2pzL3Rvb2xiYXIuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3ViY291
bnQ9IjUiIGNvdW50PSI1IiB3cmFwaWQ9Im5vdGUxIiBidG5pZD0iaGVhZGVyX25vdGljZV9udW0i
PjwvU0NSSVBUPg0KICAgICAgPCEtLW5ldyB0b3AtLT4gICAgICAgIDxMSU5LIGhyZWY9Imh0dHA6
Ly9jLmNzZG5pbWcuY24vY29tbV9hc2svY3NzL2Fza19mbG9hdF9ibG9jay5jc3MiIA0KcmVsPSJz
dHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+ICAgICANCjxTQ1JJUFQgbGFuZ3VhZ2U9IkphdmFT
Y3JpcHQiIHNyYz0iaHR0cDovL2MuY3NkbmltZy5jbi9jb21tX2Fzay9qcy9saWJzL3dtZC5qcyIg
dHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L1NDUklQVD4NCiAgICAgDQo8U0NSSVBUIGxhbmd1YWdl
PSJKYXZhU2NyaXB0IiBzcmM9Imh0dHA6Ly9jLmNzZG5pbWcuY24vY29tbV9hc2svanMvbGlicy9z
aG93ZG93bi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L1NDUklQVD4NCiAgICAgDQo8U0NS
SVBUIGxhbmd1YWdlPSJKYXZhU2NyaXB0IiBzcmM9Imh0dHA6Ly9jLmNzZG5pbWcuY24vY29tbV9h
c2svanMvbGlicy9wcmV0dGlmeS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L1NDUklQVD4N
CiAgICAgDQo8U0NSSVBUIGxhbmd1YWdlPSJKYXZhU2NyaXB0IiBzcmM9Imh0dHA6Ly9jLmNzZG5p
bWcuY24vY29tbV9hc2svanMvYXBwcy9hc2tfZmxvYXRfYmxvY2suanMiIHR5cGU9InRleHQvamF2
YXNjcmlwdCI+PC9TQ1JJUFQ+DQogICAgICAgIDwvQk9EWT48L0hUTUw+DQo=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_list.gif

R0lGODlhEAAQAIAAAGZmZv///yH5BAEAAAEALAAAAAAQABAAAAIejI+pmwDnojQOysmy3rvSG30W
+HDmqXkB6alsicYFADs=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_summary.gif

R0lGODlhEAAQAIAAAGZmZv///yH5BAEAAAEALAAAAAAQABAAAAIajI+pmwDnojQOysmyVrfHDW6e
F5bL2JnqGhQAOw==

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_rss.gif

R0lGODlhHAAQAOYAAP///v/+/P737f3s1v716f/68/758v/8+PaUHfaVH/aWIfaXIvaXJPaYJvaZ
KPaaKfebK/ecLfeeM/egN/ehOPeiOvekP/imRPinRvipSPipSviqTPirT/iuVfiwWPmyXfmzX/m1
Y/m2Zvm3Z/m5bPm7b/m9c/q+dvq+d/q/ePrAefrCfvrGhvrHiPrHifrIi/rIjPvMlPvNlfvNlvvO
mPvPmfvQm/vQnfvTo/vUpfvVpvzZrvzasfzasvzbtPzctfzfvP3iwf3jxP3kxv3lx/3nzP3ozv3p
0f7u2/7v3P7v3f7w3/7x4f7y4/7z5f727P737v/69P/79v3lyf7t2v7u3P7v3v7w4P7y5P716/74
8f/58//69f/79//8+f/9+//+/f///////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAGIALAAAAAAcABAAAAfTgGJiCISFhoeIhYKDiY2OCIyPko8XKi4rFYUcNzQfCQgQLTgnEo5F
AFpeBygIL18HX1gNFk9fUl4wjldYChlQBRFdSAwTHQhTXxsIHpmNSkmEP18UX0WGVAcPk1UEHStc
1kBhTCaEJAFRNw6PA2ACYAbaCTNaYEILCCJJYFAhjklYLMQIwMLQjzApCpUAk8WREiuEniwxVAFA
DUNPvDhq4oTQkC8ajvCwkRHDjiIyiAAI4qiHD3NUQBjhIoXACAQ6CkjZkoPBpJ+JIgF1tGgoUTGB
AAA7

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/category_icon.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABkAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOkJDRjYxODRDOEU2MzExRTU4MTZEQTgxMjlCOUE4QzUzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOkJDRjYxODRCOEU2MzExRTU4MTZEQTgxMjlCOUE4QzUzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQAAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMDAwMDAwEB
AQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMD/8AAEQgADQAPAwERAAIRAQMRAf/EAGIAAQEAAAAAAAAAAAAAAAAAAAYIAQEAAAAAAAAA
AAAAAAAAAAAAEAAAAwUFCAMAAAAAAAAAAAACAwUBEwQGBwARNjcIEhU1VmZnCjoyFiYRAQAAAAAA
AAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/ALalMDuhKSFz5RJF+pPUwPYoO2+oQnsFRk19VBron8zE
7bxDZc26YBTOzaF8mg0pbiZT9urLmsOaWGcpJ34Z3G5O6u3bYDiKUgFUPQgy7G+U1HwYtQ+o8cWZ
RpLgkmpBSwNOow1YhakkQKwtFREmw6g8DLx4jCjTl77OIZJQrw2BHS3Eyn7dWXNYc0sM5STvwzuN
yd1du2wf/9k=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/arrow_triangle%20_down.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABGAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOjEzMjQzMjREOERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOjEzMjQzMjRDOERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQABAMDAwMDBAMD
BAYEAwQGBwUEBAUHCAYGBwYGCAoICQkJCQgKCgwMDAwMCgwMDQ0MDBERERERFBQUFBQUFBQUFAEE
BQUIBwgPCgoPFA4ODhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQU/8AAEQgABQAKAwERAAIRAQMRAf/EAF8AAQAAAAAAAAAAAAAAAAAAAAcBAQAAAAAAAAAA
AAAAAAAAAAAQAAADBQUJAAAAAAAAAAAAAAECAwAREhMEIUFxoSJi0jNjNAUlFgcRAQAAAAAAAAAA
AAAAAAAAAAD/2gAMAwEAAhEDEQA/AHeoJ8v95jBaoDsc1yiJEiDRTn2iVQFI5L7gTw0sD94/k8HY
6fcyYP/Z

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/arrow_triangle_up.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABGAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOjEzMjQzMjQ5OERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOjEzMjQzMjQ4OERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQABAMDAwMDBAMD
BAYEAwQGBwUEBAUHCAYGBwYGCAoICQkJCQgKCgwMDAwMCgwMDQ0MDBERERERFBQUFBQUFBQUFAEE
BQUIBwgPCgoPFA4ODhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQU/8AAEQgABQAJAwERAAIRAQMRAf/EAFgAAQEAAAAAAAAAAAAAAAAAAAcIAQEAAAAAAAAA
AAAAAAAAAAAAEAABAwIHAQAAAAAAAAAAAAABEQISAAMiMlOTBAUH0xEBAAAAAAAAAAAAAAAAAAAA
AP/aAAwDAQACEQMRAD8AprkH1Q+iW3NY0YVtW2veerHDUSBfEFVzGM5IgRKBbn2GhZ3n/Kg//9k=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://hi.csdn.net/attachment/201103/25/44164_13010488121P5t.png

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
dOhXjPH/A1WBbalIbCqoAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://hi.csdn.net/attachment/201103/25/44164_1301048808y1RY.png

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
/wcpXev7ArfveQAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://hi.csdn.net/attachment/201103/25/44164_1301048817l76J.png

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
dHh0LdVV3dSpqWpLqaqqpmlmdTWbNXVVp2SqSVWrKqWUGtPKEoljUa0qBOkkGDWjOCkUEaTS28bL
wpbCI+OHzZUvfj4JPGkW6SIoTCpCZiA0UGH2xKWrVw4caVASQfF+GKgGq1HYqyAUMZVSLSygzYGR
cpoMwv2ie0T5553niOzu/ZD7UU11fT/knIch98OQPff90PX9cT/ceP9WfveD0b3PvSksVXVKTV3P
6mo2b2bNbNY0zaxZzudNU8+apq7rqqrNTEVSVamKWI3KQKoJ+/7v/sP3bx2vvvnl55577suXLl9i
yTYUbI+piA45I1zUzFTvH6OnnMV3fP7HvQhz5UApMqTChFolQOnk2EZJUJVASaAO1IEZecHH/NjD
lk+GkQcgY7ThKFCDmFSadDTr9toT7qIRpXFTiD4il/+85W4XYao+Li0LBCqSROT9d9/9xS9+/o//
+IN3r7/zL/71v3jq6aeB3G63Xd+7h5L90Ldt37dt1/W568KjH3Luh2EYhqH37J5zRCjbhA4QM7tU
Jz1Y1nXTNI3V86pKVs2rppnNF/V80TQztSqZaVUlM0upqiuICIwiQlqhy/dcCq4YIcEBwkCMpXDw
HIBqhu7SioIcBVkjudQOmyIlIBQCRQ9XESQbOx9FlQVh2hzMC4LTCTEV1RG6OXmIY0MksETX1aqS
wi65U6mQ6lmtO3jdiP+GKCMiYhinyCUPHDznYRi6dpRu6NvIecjD0LX9MPgwDH2XfduvVv0Kx6Co
UCQ0JdOqqauUqlRbSk1dNXVlak1dzWbzxXxWJXv3vRs//Ye/fevtt99++bn3n//u73zj68trz1ap
DqWQFEkmIokRENWxY9m95RES4em0hdPeIESYLAAkTbSUIEX1i1U5gvEb6/v2kUT2aHsDQhnbLYnA
RFHgp+6ISCamMqu0omSRsWr5/+uyX1/xEd8YJf5ZVUrw9q1br/3qtX/60Y9+8qOffvt3v/PlL33e
a91s267rIoLEkIeu7bZtl7tWt8ee8+C574ch577vh5yHIdN9UhWAyEGySweLuq6bpq7rOlnKiyOb
zWbNbFECdKkqoLWUzEzLP1UbO/yN8AkAEM+MnqodSc9CKXUFPuTJY0FASyuORJBQukKp2ilkPncf
IGFJLcbsnhFQ9KruzsqqeW0h2QWqpklTEIUbeQTO2FQMV8JoWlBtBSwn0FSlSkygIjQMQhlxwWCA
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
EzD33sB+ssuzOfa9n+1Wq7WZ3Xn71u03b853TmM/93nOFB1tmtyboIiICGXYYFP5jT2UPTBtU5Jk
Zs1b9P78t777rb/4q1eefymOd+qRPXI/Rw/13jf701fe+sv/+z/8+Lt/v91sJ/f57Cy2c+767nTb
t3vQpOy7fd/v582u72ZI2+PTv/6Pf/GD7zx/eu9YPXPuUipSmSevvP7CN//me9/+zvZ0a4Qi+n6e
z3b7zdZYXV8xb3bz2abv5n66XbG52fbu8f3X7mQPzdF3e+1mE625td80XvwM+00m75cyAQOethCp
FG7VmgHQ3CVdbXY0Y/fGnXf/6Jvf+ZtXn/nql5797d969plra8Ruu7398s3XX3jlrbdev3P/Tou2
Orry9pu3Nv/mT574t39uzm1sNm/un95cOf7z7//V8z9un4zNdqvXb7c7m6f3yD/74Qvfu3nyxU9/
/ku/tXp6vW8xn21vfetHb7z+5tl7x1Nau3Xy9v/xp//p//mmTfNuvzm+tTlbNyef+P4rL7z3f778
ZJu9912cvnX8xHQ9fnjz9u3/8J//4u+uPHdjtT6aT++/8+rrJ7feazQmiyWig72A7YWKWe59NMHl
x6HEeQmN8KSzswFPXF37i+++9tYf7/7827/11S9+/ktfjCeegFm/e3L71Tde/8mL773w6pXNTjwy
b37z+PiPvvFXf/EPe++9z6fvnPY7+xe+/ndvvfgjZeLs5Oz2e8/Eke72fPeNH/6v//69L372M7/9
2Wc++8zUWp7ceePll1/70c27rx9/UeurU/v+//J/ra6Tnrv9fPvOvfXq6Gr3u9//0X9+/a3V5JG9
r+5t3r77ifur+OaLf/viO8999amnnrkx99icnt17/V3bzpTCmQsvAoEpQGDXECb/mLobKSnTlbaQ
xCA9jOkTB8YiqWDKWi4osmLsYp93SS865VS6W3PRMnu3zNamNMU8zzKaT1Mza4jc7vdUurGBqBRe
olNNpLcFAvvrsjIEUaJpUoA4Vt8712g3+pXdze3+j/72J9949f4/+fSnvvyZp577xG7F/bzbvPrO
Oz9+5Y1XXr/7zt2rAFOOdvfbL3znrf+NwGo/b27ffubU55s//usfvXXlGey2u3u3793fnHKX9vUX
f/T3d977Jzc+99tfuPr0U91t3s1vPv/S6y++unn3Dtja8f69//2Pv/Enf+Oa5v18fPfkbOVYXb/y
4/de+Df/7+tPIO2s77S7ZU/gSrx8++0/+rP5mz9YffLpo6P1Znv67ptv3b11l1xTcJvdgAR7gr+h
Qv4FRtI1MnkGkCjqk6iRc++RMfdpvU7Z9eO4860ff+cn79z89HO//ZUvX/vikza5n2F78+TVF158
4yc/Prt3X3vj+mi+s7n7H77759986Woeo2+3d/f9bv7or//+1ms/AhRn25O792/M67Y57rfvvXjr
9v0/ff5TX/n81S9+4ujoiHeO33jxlddfeP3dt97jvn12bW/+9Tffe/mHdn2t3azbZ9v762vOfOvm
T/79X77zN3+r1LW8fufNW6v7Zyc3f/hX7779ub/4wo1nng6dbbbH996+d7bd5W84+n+W/cbJ+wX2
MycNzZCZIXDwkjR30LppjUlzvvfazVv3T/mjl48mu6ptn7tO9vPZdrvbpGu9mpC2O9veOz3Zvh2J
mNfa7+epr7Z3TzYnd+bb9/bz/NRWHrm21X7Tj9+4ffLe3Zsvvp5XdeY77POJd/vu9AyZbpbzfPL2
u3dfvzldzch5nifwKkjreefVt/oU3QOw3BvJSbG5dee1u8dxtJpWk+V23m3mfUpQduNEWgmnFhLr
/K558HF/Y7+cHTYdiWAL9ZOzd19+8/S92y9974fHV67SrZ3udLKdzzZ5spm8YZoiGLvd5t3d7s7x
PPWIwGyu1fHtu3fu34LT+7YpGjxSZrZ/7+SNs5feevW16cnmbuvdydn9e7tjx25yc837e5t30PZC
74YTpTdv5pt79+b7JxOYiLP2bjImHlnPs1t3f3T/lSvXrsh9nmdtsKKlAgVg+Kk5IPJjAToTNKNk
NCplBoGZEZHT1JQpZaHKvXlmwlJgCoYB8NHC9e3eIoIMI2g0MHqHO6CJLap1XYRQSrWC5og+z9N6
HRk4JAp/Xby7g1FQRprCm4cS02ScuNNqNbXo916/ef/eu6++9OPp6vp4zf1+f/Xulvc3m+1MmTd3
mJJnd++fnr1D2tF+q0zgyXl7cuv4Ht44BW0niWygz/3s1p2Xzt5+55XX7Op6K8Q+/Fib+yfIaOZK
bW/deev23caVumYgrRHgvt9+9W1MW9mJwlbxCaYauL1979V7J/NLq/V61bHdzzttbcI6evcGJxKo
smD8+g39JTIpi19ake4+meY5T27def3eybuvvTU/LU24dtr8GGcnx317ktHBNazlHNtb93Z3Tq7r
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
dmrvu9/3Qe1cuvfe+8+eOXPu9KkPfOCD2Nj90he/GHG0d2bv3LkLXU6XL19+y6OP7+xsRdSFFkmk
FMUlmQWYVKHAE4WAenkouRkUKiEKRL7//kc//cOnBuU3P/wAEBFFsO3t0+999/s2ts5PptNzO3sZ
dsed93z04x9/6LuuLtIsBi+M6cZ0b3vjzgvnHnro4TMX93IaUHDxzgc+8SM/+vbr3Z13ntk5tfuO
xz/wmZ+cDWnj0cce25icvueed37sU9tXB7v3vr3MvUcf+3A+9ejGztnHHn0s52lEhQDSpYsXf/AH
P3XvvXeZzS6cPQNFREnGdaqzFOsECboNofK33k7400Zfba3MFwaruTIcSx54jeK4qb3hGfrtQl4A
oPDD+fypr3716aefOXVqu8sZKxdtDQJb7SdLpsDrEZx387vWf7odDrhs6xNVT2gDSabVIrbXrl59
+cqVvh+6rpvNNs+ePddlOzjcX8z7M2f3CLu2PxzNY6NLl85Mv/LlL3/+L/78mWee6Ta2777vofPn
zn3hj37z5//Nz3/t2cOPfvI/+S/+yY/fPelfeOGFfXlvTMhp2IQiNo/6WKBszPKl3b1T2b/4G7/2
b3/h175w+s53/ORn/tE9l2ZHR3M2W4u5K+VEDKUsrl2b7x+UzY3N03unc5cijog+pW7/cHj++ReG
fiF5N9ncPX3h9N5uxEAomzqq78tTL964fv2GD4uceWo2O7+3M9uaPXdt4bDdDW7bwf7+wYtHaXPr
1OndUzduXPmjP/yjy395eb44unD3PWcvXpzfuPE7v/yL//aXfu3ud73/J37yP33/2988nV+/cvXq
Im+6whSJRmMzaSfb3trems1STmN44ivsT5pqQIyCawfE2C6WMAzDS1evAtjd2Z1tzmDoe89dzjFP
pkC3f1iee/75/flRtYCe2ppdOH/x9KmdxdBnqgz99f3rNw73NzY3tncuMqVMZEiAV6QVXyyOrl+7
cXQY3e7u3t60o+LaQf/ywWDJ7j57KnfZFUWRUlJQUibIoGjwa9ev3Tg8mm5sbm3vWDetZS8BdBYG
IXxiMT+a79+Yz3ufTidbu7sGe/7K9SLNZrPZbDsRU7/28ssvHA6TbmtvZ3tjw+bXrl67OqQ03T69
NdmZ+tF8fnTVh+KTrenmzmYij668dHBw2O2c7bZObVjk2N8/OLi636Xp1u522uj6l69cPVhMZrPt
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
i4quFSD1BM/EbDwZBPWxkPFQZYiBWAWpMITgSC1pxFG8jwEvE0xiEyZLYoLqV+fx1gBuFTl65JXH
nvjh4NCGez9yz1VXXWlK+uCDP3zwsefHz09t3L52OVucXjw/Mz9Ty/Jyya4fHXXix45PDI+MVMq6
PD9x9vTExIyuX7N2y/bu2sr0oYP7H3vs6Rvfcd3gUDK3ODV1erKxVO/t79uwc9dgf9/K4vz05Nm5
xdpsXa+7dt9Ad8qg6YmpV15+ef3I2gfu/9jA4NCzTz/7+ONPHnv12O3vfnczy8bPnJmcONfwOrR+
09atGxMszZw7c+788kpmjTFJmu7auX2gO83y2tzcdG2ltmbt+omppVOnzzWbjaHBwd27d1VLfmZ6
4uy5pbmaei/vuO6arnJiEOq2i33sAsDsAoOgDgoSzwQDY4jyELEaQ0Cs8A0YU7FEW5I3CgLBwjOB
IUY9Qb2CVb14QLPcNzUHGSXrvWMyncRiQ2StaWVpiegiBvk/TOFFhEYK5a9IRYxHC0676DvFPxwY
HBGdLgDQIpkUknpt71u8SmigFRxhlbg+39zWd6ilvXrw4PmZ6WuvvvqO299XLql4uebqvdWBwdrM
dJImpbRUrVaXllaeffaF2ZmZjz/w0VJKjzz0cNLTt3nnzpmZ6T/78y8tzC8sNCu333H3dVduPrr/
xVcOTT326OO7dl5eW17+/ne/M352cjrL777rrk/cexea9W984+t/9a2/XJif/91/90fvfe97yn3W
sKl2962svHb27PiWHWvWbdz0kY+u2Xtiub+/Z/rc+A//7lvf+e536iL1RuOf/toXbrjhpgP7X/wv
/+X/nZmb6a5WNqzf8O5333nLrbf191cff/SxZ5557oP3vHds7Pi3v/292ZklZr7j3ns//JF7J8Yn
vvbXX3/x5f21lZV/89v/6tZ33pL0VNtZ/zcwkRS0bFRVQYYMszUpG44wX/QQKUQqwVByKO4txpYU
oggvUQifGCDKhM5NL9QW5yVvGIgwNyQEqwxoT1Le0NdfGR5AENkiBnMrgReyddJG4BD1TQrmcyA3
AIFGzQARs4ioKFuLsGXGoFpUWpy8S45AMP7abDReeunF9evX33333evWrRPvBvv7P/WpT8zO1ViX
64vHKuUul+fPPf/c7Gzziiuuv3LP5kOvHDy4f//uvTtXmitf/spXVjI7Nzv7iQ/fv3f3Za+9fvjJ
J56dn1/6yAeum56a+M4PH3pm/6vV7h6t9P72f//frem2j/3gh//Pf/7jifGZf/TZz376s7+2fn2X
NaZUKjWbzaNHjw2vWbt587r77//w4uJSqZROz8x9+ctffeLxH9Vq9XKp64GP3//Bu+948cUXvvvt
hw8eOLYwv0jG/fqv/5M7735PpTvZ/9JLf/vtv/vFf/TpHz311LPPPTMzM1vtqt50862/+OlffO3V
Q1//5jcffPiRnp6e3/k3vzPQ32cMoyAl/IRDo1a7iDjvQhVbWIYkIesYaBnEGv3E1opur/6wBxZJ
7kBiCRvj9NxCbXmqkWWJTUW0CSMgq7mVprFm22VXVNK0Be28nUeLi0OX3lGLhRCAybAHxPA9MmTb
G0x41+VkQlXST7odjb+q3h19/bX5uYW7br/jgx/8QJqoEu3cvvP+++6rkqvaSN9oNps/fOgRw3z3
ne8b6tbvfuvb04vJLbe9b+r8uS995Ys+9/Pnlj78oXsHRuillw/sf2XsscefuPqafU899dgjjz50
6vjpbqrecuutv/Qrnz5x6sT3/uarP/rB102p577P/ev7Pnx7V68xSVKqdFnSkyfGdvavXbtl24fW
bD+3QOXUnjh65C++8uXXDh3yufT09X3un3/u8j17Hnzwob/9xl+dOXG2pzy6devWT332V6+9Yd/0
9JknH39wcmL8kx+55xvf+NrTzx+ZX8bomjV3f+RD997zgYcefuQH3//ByVMn165ds3HTpo3r15cT
jerYb3QEhzi43EogStKSTSwxB6EHh46gryiNRCwJKrau1S4AxXZt5FUzL16FiTLRc0u1yelpcXkZ
dQYMqeFAF2WvftO2y6vd1dit4cLZcdFVxzxJB+dE1XlPhNQkrCwiIp5AjazpCfwW6PmXnkGqL7+0
f+3ate97/z3vuOkGFS9wN9/6ztE127p6+gEvImlSGhs7cfzE6fXrRj/8obuWlpf/9ItffM973rtm
oPTawee+/4MHGzLcbDZ/9Vfu6+7CoUMHD73y2iOPPN7dK0/86LEXnn6uuVhja+/5uZ+79567f/zM
M9/65tdeee1onvT/73/4B72XbbMJmzQh4NTJU0dfO3LFNaV9116zY+fOLM/Z8P4f//gb3/zmoUOv
5srV4fW/9Vtf6DaL3/ja//e9B58w5dFt27bMLSz908//2jtvvHpm+uxjjz46Nzv7nne/52+++/hz
LxzI8nx4sP/Tn/70bTfteeShh7/6tW+9Nr509RV7tm761xvXj8aiwxDQacTP3mykKGwjBJD33rss
l4QTNlyk6ynCAYWbUnjZBTulcGQi2ERMaZKqYmp2en7hPIgcJ955ZopZYIIxpq+/f3R0NE0YF07D
9vH2OXleyQkxUcIGBO/FEQsSw4aJfAiNCmsuKgqIQBVWNac0J87JZ8wAOSJiDl1aySBus21aBLX+
dZTknDouhWaCxDagDU6hKoaYCEym6B8BhIGO6d3AFXG1xemBvr4N27akFj6rHXzx+cmFpuNk3dBg
5qXhhTWjvF5fXp5bWvaqgNZqy92V0sz0uQMHD7C63/+93z0+vjK7WO/u6X7/+999w/V/+ulf/LnF
pfn9L764ccP63/zN/+bM7Px//OM/2bZmeO1g/2Jd1l/x/t/91V++cvf2vu4SyPT2X3b9u3oOHZ34
ypf+4E+/MtS7fufOHds+9Yl7mfHQw08ePj5+3wO/cPN7bv7e9777vQcfbHqdmZlCyf7Gb/2LK/Ze
8a2/+9bY2dNrTo7tTLc+9eKPh9aN/PjggfGzJ2+45aYP3HXvsWPHvvzVv9595V7vnBfceOONH73v
vl27dnRXK0SkvihdbM2eDgOkbWl9xCyBwIlmHh6GYJWMFiVlUQs6MvJ9ioZBlWL2gQJ3P6hRJASj
WqtnZ8ZfOHXiRL6yTCrEiTcVZrMIr8ybBwbNtl3bhvoS5pRgvHfNJgSeDADn1Yt0kUsgCZFHZqkh
TEBJNFYwRLyd4NVYsg7WgZ1SVAMW5VjvZKhNlcIlja4qXO5m5maq3dVt27etW7/W5fmxE0dOnzhV
8+We/rX9PXaxXs9BnJYWao255bpnmwMrWb7UyF4bO7GwON07MPSFX//CyZNn8qWl3sHha27o/8Sn
lq+55qqk1PXUM0+bcve//O3/sb+//9/+H3/yt99//OartswsrfSv3fCb/+r3d+/ZPTA66okG16y9
9l3vecehQ//LH/7boS+tWbdu875rrr/9ztsF7m+/9dcT50994hc+uveKK158af9X/+LL1924Z2Zx
ylHjzrvff8cHbv/BD79z6MgrOy/fPDIy8OorR6qV/mNHTh597di7b739xhvfcfzY2P/27//97sv2
zs4vkJbu+cB9H/vYR7ft3FEplUMZqJdIugj1AtzSwixGS5RAasAgYk4MpUSpUin37ImZVcChObey
aw2sgERhDENJ1QBElORsMq8ZWzIlw6lhJaFmpmdPn62dPLAwt0AmIcCZRMlYzRKpd1WqIyMjpeFR
YwqFlr/vnnfxw/exPmdV+qaYKj7Q7SJLKLxKbaFygliSRLOUjICNatnnAGyQiyNSZSYSrqotqSl5
sBKzScHkEbQyYDlUj/GqSDkuWEviIc5rNj5+YnRo05rh9eW01MwWjh06dHq2IWT6161JOLHczTSl
kIW5FcOVPCOv9eX5SXGjJ44ePXHyRG+l+t/+zr88deTMwuz8hq2VtHxDfWnmgY/ee+L468888+SV
V1z2z//J5+enVv7wf/6DjTs3p5VSnbq2v+ODv/yZz2zevrWvWiHiwY37rnt37z1TK//hf/3tb6zd
2NfXd9U119x1990lo3/y5b+wpvTLn//8YF/XI48+/h//6Ou/+YXNZ842BoZ233ffZ665auef/9mX
Dhw5sG7r2qlzc68emd61Y883/u7JyfPyC5/57PrNW5597vk/+9Kf33LzLUvLK329Ax//2I3vetet
69esLSUcwrQ3LalmbSmNEnInmVMn5IWcqJAhYsAIMQEccgAqRCD1Fc0B5CgDrFEMORaKCliJRGCZ
hE3FijZk8tTpuQPPLC8vU9IdwGqCFxEhJsPvLPdu37atysa0p5IKBCGYgfcKZjDEqjfwiQbFvoKw
xWTSkhfJPLEARJlSaozAaEwJ/v0iHM0aeU+1t6tc8V7rK83nXvxRs9kE924sDQRPg23SyPzKciaO
Ulsmas5OL2VNP3by9MmzZ26+7V33fvJzDz/4ZLU/Wbu251233zmXrbv/kz/3+NPfOj5+5s4Pf+Sm
q699/sWXv/gXX7v6uuvOLy6jVLnnYx+/7f13b96x2Rioyo7Ld37iU5/8/d/7vX/zP/3O8MjI5i1b
br7p5rs/eFejWfvOd/+mq7vyG1/4jWr/0Ne+89AXv/rl+269Oltp3HTdLR/66D9es2btf/q//u9T
xyZ3bVq/MDt99NDr111/w0Pf/8HynP7KL31m+46tTzz+wn/4w/+87n/4/MzE5NDQyGfv+Ohdd94x
OjpSFNEFTj7HJuodBxUrvPg/453PBbknx0ZMypYsJ06gXimULrUAh46+HazeKFhyY1xCxCABhCyT
YTINW5nLeOXMmaXjrzSzLDA9yhzyzirM5Upl544dPdXutL8vlJIEEg7zqqrbtxXJ00h7j75su/1d
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
2Xa7vWHDxnank2eZRkMGc9u6ecvu3XsXF8/dsO+GELLde/a89tqrr7zy8vT09MG33j506Pi+ffvy
LGR5FpjNnNl+sf56qz0hM3XzlCFzlGVFFFIVJAV3jX2pC8BrFGe/0ri4UfxKl+hNYtxAaHJGMmxC
TA1ricDPXBOpuVMZYytQAsS6GbOYrn3iB86JuzPxXXfdtXh28Qd//f233np7/803Hzp06CfPvriw
Ycv+G68l4l53TCSMjY6fO3f+gR89tLIy+M53/+rmm2+qKnv11TeeefapL3/pt1utzvZt26emJ/M8
GxT9Bx/88d7dO7Zs237wyPHnnnt+embyRz/60Ve+9OX2XCuEoF4xTJWYnOGzs3N7d+/+znf+sqRi
3403Lp1bfeO1tyYnx6++9vqV1f6f//lfHnj1VXO8/trrJ44f/43P3dtqtUNehhDSObx3z56Jyaej
rtxww/UEuf666194+sw7hw/nz9uZxZ89+NCPPnbHnXmet7utLM9iEogBpzPN1JnTXTY0jk2VnGrh
LzcjFnevnZHUTV1n71I6aliTbWa1WUSus4Jrq/D30EDxNz3efxOs++5D81T7pXW7sQEONcWws8x9
nREb2kZvKGAt1XndfaQ3+qlPffov7r////n3f7bv1Vd3bN/xwgsvvvzKK/fce+/09PTxkyckcLfT
npmZefeFFx56+OH5qeyN11+7/fadRVEeOvTq8y88+7n7Ptfu9BY2bB0fm+QQVlb6P3nqmdtvu3XD
wvzRI0eefPJpyYr/9Nd/feM1V+d5q9vOM2E4DCpGBpqamdm6edO3v/29/uryddfturBy7r3DJzdt
2bt//41HT97x8ss/PfDKK5Njx1966cX5uQW+JYQsT0IF6ZtetfeqhfmF2dm5nTt2hBBuvfW2++//
i1deff3cuaU3D7519szgt37ri+12293SGWm2fmKvMJpQDm7qCAynGC1GY26oTursC+pEXvOOF+Us
3v8IoOsKrH8jg5Foz5Hw4usLX9TIezII5mrKwlkQTw5IYghzc790Nn7uJd5w0823vfH697//4z/6
w//rY3fdKcTPvvDssSNnPvsbuyanJkS43enNLcyJ8Isv/VSEF8+dP3TonSzI0tKFF194erW/+tnf
+NLo6OjU/IbRkfGqGCyeXXz++ee3b9/+yKFDL750oCR/4YWfnlxe+cxnPt3KW1lYYfckW5H0iGbm
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
N+vNtte+VxDbTq04nK7u4k1K6oSXTdddXy8mk7NJCx+0w22vRNJitzfLf/j9D/LPv3hy1jRNHNmw
4gp/dbH8+utXl68uJImQfTGH9p3CmSRpMTfJmSAfnFxbV9zr9GgOy6LGjGx0NftfDTnwASh5AMVb
Q6GqSBK0YhPRFprFxIeQRsyQCzUEaMTvaOnBsUi35E6DiEjQQ/V6e7nazHVxszo/Pzo5mZ4cNymJ
m/Wdzufdq5eLi8s7szTJbbfefv/tzXqpTz86PTmZzmZNk7jt9NWrxc3N/Pp62fXNZNJcv+r/W/fC
3Lu+3F6urSSQmY6U6aVXvb1c/v3/98Px8SwDBK6vlt2qTPK0GIS8vdpuV6/uLlafnE8ePz5p29T1
tlp01zfrFy9uFvPNdHayvNU//u7i4oepO5br7fJu6x3JJE7vRvP+4bPz2ssZBEsDhEycdEmekonY
+y5uVju1JiMbkXaH4+4sG81XkmKezFL9hmNwYBL0d3ryHjpCq7l9t72+vVyfnDSPH589Opu0bYKj
bMt8sb24WMzv1st1n3Aiiosf5rr9/unT40fnJ8ez3CYSePVqeX0zXyyW601u+fjuYvu7/qLJ0qst
F5uygnt2JIDicHfr7evfv7y9XOc8MbVuUxY3hZgmwty3y/LNP17eXm4/fnp2/mh6fNymxMWyu7pY
XFxdLxaqJeUmv/phvl30INabbrnYCmYOg6fqBtkLIXJgpHgNH9lPa32o3mQE4jPhhkiMVElFmIVG
KUCBk1Sw0FVQPjRfXvDfhMvXwKCiGT6k1/8qVihC1A6C1THzgMZhc4/5rvsnveRmIrKe65/+8PLi
xeLJ+ez8/OjsdJIa0d4W8+72br1YbK6v5tuuTJqZJP7w7eV62T99enp6Nj0+amazZtvpxavFixc3
t7dLNzmenVy+WG6X1jSp6+3utqO2iZQCAK0kx+TuZvun3188nyQh3XF7u+g3DjRUJAAuL75dbFff
P318dHo6PTmZtG3qOn35Yn55cbecr7tOmnR6+Xy5WWhupOu6m9t1smrY7+NzOBiibzFiZRiXn9sC
PCTuYka3AfZxsCiFAFEYaZ1VD6PhwYQGblBL0ExvCbo19JbWmNOVnpI7aVaDkkkAmMNBcZMHmfIE
4al0JiAhDTFp2wbl7nr9j9tXt5eb00eTs5Pp6XGbs6j5arm9m28vL+Y317fFmqNm5qbXL+7K6ru7
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

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://hi.csdn.net/attachment/201103/25/44164_1301048819u0Js.png

iVBORw0KGgoAAAANSUhEUgAAA4QAAAKICAYAAAAo+zT0AAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A
/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9oIEgshCtUOUiAAAAAZdEVYdENv
bW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAgAElEQVR42uzdd3hUZf428PucMz29k4SEhNBD
C1WNUkRROiqIYkPK64qigq6CirIuawHXsrCAooioiEhZpBeRIh2pAqEkQBIChPRJpp9z3j/CzC8h
CVKSkIT7c13nIkyGyeR5DjPnnu9TBFVVVRAREREREdFtR2QTEBERERERMRASERERERERAyERERER
ERExEBIREREREREDIRERERERETEQEhEREREREQMhERERERERMRASERERERERAyERERERERExEBIR
EREREREDIRERERERETEQEhEREREREQMhERERERERMRASERERERERAyERERERERExEBIRERERERED
IRERERERETEQEhEREREREQMhERERERERMRASERERERERAyERERERERExEBIREREREREDIRERERER
ETEQEhERERERMRASERERERERAyERERERERExEBIREREREREDIRERERERETEQEhEREREREQMhERER
ERERMRASERERERERAyERERERERExEBIREREREREDIRERUSVQVZWNQEREVEk0bAIiIqopQU8QhFK3
ybIMVVXhcDjgdDqhKApkWcapU6eQl5eHAwcOQBAE5Obm4vTp02X+/bXy8/NDXFwcZFlGy5Ytodfr
0bZtW2g0GkiSBK1WC61WC1EUIUkSO4uIiOoMQeVHrUREVEPs378fSUlJyMnJwaZNm3Dp0iWoqgqb
zQabzQZVVWG32xEXFwc/Pz+0adMGqqrC398fMTExN1Q9FAQB586dQ2ZmJjQaDXbv3g2NRoP9+/dD
q9VCo9FAp9PBYDBAFEUYDAb069cPAQEBaNWqFVq1asWOIyIiBkIiIqKrubICePDgQRw8eBDJycnY
uXMnjh49ipiYGDRt2hQ6nQ7t2rVDVFQUDAYDAgICEBkZCUEQEBgY6Al+six7Hk9RlBt/MxQEz3Nz
VwAFQUBRUREsFguys7ORmZkJu92OlJQUHDx4EFarFcePH0dqaipatWqFtm3bomnTpmjVqhXat29f
4e9NRETEQEhERLdVAMzPz8fZs2exf/9+LF++HLt370ZUVBTCw8MRHh6Onj174sEHH4RWq4WqqlBV
FU6ns8bNF1RVFaIoQqvVekKky+XCokWL8Pvvv+PixYu4cOECzpw5g06dOqF79+645557UL9+fQQF
BfGkICIiBkIiIqr7QdBdrZs2bRoWLVoEi8UCSZLQrFkzPPjggxg8eLDnfnXlbcgdfkVRhCzLWLZs
GZYvX46TJ09CURSIoogBAwbgpZdegpeXF0RRZOWQiIgYCImIqPYHQHewWbVqFZYtW4akpCSkpqai
f//+6N69O9q0aQN/f394eXlBURQoilLnw5AgCBBFEXa7HdnZ2UhOTsbKlSuxbt06BAQEIDo6Gk88
8QR69+7Nk4iIiBgIiYio9nE6nVi7di22bt2K9evXw8/PD7169cKdd96Je+65B4qieFYHvd1Ds3uo
qaIoOHDgAHbt2oXly5fj3LlzuO+++5CYmIi+ffvCaDRy3iERETEQEhFRzeRwOHD+/HnMmDEDK1as
QL169ZCYmIhRo0YhKirKsxoo/TWDwYDc3FzMnTsX69evx6lTp9C3b1+89tprCAgIgMlkYjgkIiIG
QiIiqhlmzpyJ+fPno7CwEAMHDsSLL74IvV7vWZmT4eXGuedTzpkzB1988QW8vLzw2GOPYdy4cWxb
IiJiICQiolsjKSkJM2fOxPbt29GwYUOMHTsWTZo0gY+PD1wuFxuoEqmqCq1WC5vNhmPHjmHevHnY
sGEDevTogaeeegp33HEHwyERETEQEhFR1QUSQRCgKAq2bNmCadOmeea4DRs2DI0aNYLVamVDVVNf
GI1GnDt3DvPmzcPKlSvh6+uLsWPH4r777oMoigyGRETEQEhERJXH4XBg9erVmDRpEvz9/TFy5Eg8
+uijNXJPwNvqzVoQoNfrsW7dOnz88ce4ePEiXn/9dTz++OPQarVsICIiYiAkIqLrV7LC9M9//hOr
V6+GoiiYPn06mjRp4tkonmpGX7n3OExNTcXLL7+MvLw83HXXXfj888/ZQEREdENENgER0e1LEATM
mDEDrVq1wrFjx/DBBx9g27ZtiI+Ph0ajYRisYX3lDvAxMTFYvXo1ZsyYAbvdjg4dOmD69OlwOBye
8EhERHRN7y+sEBIR3T7cgcJms2H9+vV48803ER0djQkTJuDuu+9GUVER56TVsv7U6/U4cuQI3nnn
HSQnJ+Ptt9/GoEGDPIGe/UlERAyERETkCQcHDx7E3/72NwiCgClTpiAhIaFU9YlqZ78CQEpKCkaP
Hg273Y5p06ahU6dO7FciImIgJCJiYBBw/PhxvPPOO9i/fz/+8Y9/oE+fPtBqtVAUhYGhjvSzKBbP
BFmzZg0mT56MuLg4TJ8+HaGhoQyGRERULs4hJCKq4xRFwccff4zevXsjJiYGu3btwkMPPQRJkhgS
6hB3lVdRFPTq1QubN29G48aN0bFjR7z33nuQZdkTHImIiDzvH6wQEhHVXZs3b8YLL7yAkJAQzJkz
BxEREZ5gQHWbqqqQJAlFRUUYNWoUUlNTMXPmTHTs2JGNQ0REDIRERHXd8OHD8ccff2D8+PHo06cP
JElio9ymFEXBrl278NJLLyExMRGzZ89mdZiIiABwyCgRUZ3h/nxv48aNuPvuu2E2m/Hzzz/joYce
8swto9uTIAi4++67sXr1algsFiQmJmLDhg2lzhsiIrpN3yNYISQiqhsURcGHH36IefPmYciQIXjr
rbfgcDhYBaJSvLy8MGvWLMycORNDhgzB66+/Do1Gw4YhImIgJCKi2sY97C8/Px89e/aEwWDAjBkz
EBMTwyGBdFV5eXkYNmwYzp8/jy1btiAwMJCNQkR0G+IYIiKiWkwQBKxYsQI9e/ZEjx49sGzZMsTE
xHi+R1QRf39/LFq0CEOGDEGXLl0wc+ZMz4cMRER0G11LsEJIRFR7TZo0CT/99BMmTJiAIUOGwOl0
MgjSdTEYDFi3bh3efvttdO3aFVOmTIEkSTyPiIgYCImIqKbKzc3FE088gfz8fMyaNQsNGzZko9BN
KSwsxIgRIyDLMubNm4eQkBAOOyYiYiAkIqKaRFVVpKSkYODAgWjUqBFmz54Ng8HAhqFKM378eGzb
tg3z589H8+bN2SBERHUc5xASEdWSIAgA33//Pfr374+RI0fixx9/ZBikSj/P/v3vf2PChAkYOHAg
/vvf/5Y6/4iIqO7hOtNERLXgIl0QBMyYMQPTpk3D+PHjMXToUNhsNg7no0olCAKcTicGDBgAPz8/
jB8/HufPn8fkyZPZOEREdfW1n0NGiYhqfhicOHEiNmzYgJkzZ6Jx48as2FC1MJvNeOihhxAREYEf
f/wRer2ejUJExEBIRETVGQaffvppJCcnY+nSpTCZTFzog6r1/BMEAQMHDoTdbsfq1athMpl4/hER
1SGcQ0hEVEM5HA488sgjMJvNWLhwIYxGIwDuL0jVw32eKYqCJUuWID4+Hvfeey9SUlI8gZGIiBgI
iYioCuTn56N3794QRRGzZ8+Gr68vgyDd0mD4n//8B3fddReGDBmCY8eOQRAEhkIiorrwOs8ho0RE
NUPJoaB33303wsLCMHfu3FIX5US3kkajwcyZMzF//nwsWbIEUVFRHMJMRMRASERElal79+5o3rw5
PvroIzYG1TiiKGLhwoWYNm0avvnmG7Rp04aNQkRUm1/X2QRERDVDYWEhunTpgri4OEydOrVKh+Pp
dDpotVoAnAtW26iqCkmSoNfrIYpitfefLMt49NFH8eSTT2Lo0KHYt28fzyMiolpMmjRp0iQ2AxHR
rbu4FwQB6enpSExMROPGjTFjxgwoilJlw/CcTifee+89bNu2DcHBwQgKCuKQv1pEFEUsX74cX3zx
BcxmM0JDQ+Hl5VVtQzcFQYCiKOjUqRNkWca7776L9u3bo379+hw+SkRUG99X2ARERLeOIAiw2+3o
168fevfujdmzZ3tur6oAarfb4evri8jISDz33HOoV68ecnNz2Rm1hCRJ+Pe//434+HgcPnwYjRs3
xsSJEz2hsLrOW5fLheeffx5jx47Fiy++iJSUFIZBIiIGQiIiuh75+fno2bMnevXqhcmTJ1f5BbUk
Sfjtt99gMBig1RsxevRovPrqq2jZsiWGDx8Ob29vdkotOGciIiKg1enRrHk8/vOfz5GUlITIyEis
W7cOer2+WoKhOxQ+9thjGDVqFB566CHs3bvX88EDERExEBIR0V9c2Pfp0wcNGjTAe++9B1mWq/xn
6nQ6zJkzB/7+AfCvFwNjYCTiGjfDF198AYvFAr1ej/Xr10Oj0bCDaiBVVZGZmYn77rsP3kH14B1S
Hya/UDw+dCheeukl/O1vf8Njjz2G/Px8aDSaKg9mgiBAlmU88cQTGDp0KIYNG4bk5GRWComIGAiJ
iOhqF/WKoqB3794IDg7G9OnTYbFYquUiOisrCxqNBia/AKiqAlGUoPUNhUM0YejQoZgzZw6ef/55
JCYmorCwkJ1Vw2g0Ghw6dAh6nQ4ajQ5QVWiMvoAxBFExDTFz5kwEBAQgOjoa8+fP9wTCqgyG7lD4
8ssvo1evXnjyySd57hAR1SLcdoKIqJrDoCAIGDx4MEwmE6ZNm1at1ZTt27cjLS0NfmHRUCFClhXI
Kor/lBVoVBu8NAqOJiVh0rvv4plnnsHMmTNht9tZ9akBTKbi4P5gr97wDomCIstwySpkRYWsKFBl
F3wkG2w2G2bOnIkzZ87g999/R7169aq8Au1e/fSjjz7Chg0bsGHDBhiNRp43REQ1HCuERETVHAZH
jBgBh8OBKVOmeG6vjsO9mqnBYIQglvPyLwA21YBchw4tWrbGwoU/IT09HXFxcdixYweMRmO1PVce
5R+5ubmwWCwwevkC5Xyeq0BCttMIVeeLiRPfxvPPP4+2bdvilVdegdPprNLzDSjekuK1115DdHQ0
nnnmGSiKwvmEREQMhERE5A5kb7/9NpKSkvD555/DYDBU63MwGAzYt28fBFGAIFT08q/CqYo4VyCg
yKXD2HGvYuLEiXjkkUfw2GOPITc395bsfUfF59DGjRvRs2dP6Ey+V71voVPC6WwXWrRKwMoVK3Du
3DlERUVh586dEEWxyp/nDz/8gMLCQgwfPhyCIPB8ISJiICQiYhj89ttvsXbtWixZsgSBgYHVPpTO
ZrMhMzMTOsNfryQqCkCuVUXSeSvC6jfAihUr0KBBA8TExGDNmjWQJIkX+dVMEAScOnUKkZGRwDWc
O7ICpOa6cDQtD6+MHYv58+dj8ODBuOuuu+Byuar0eRYVFeG7777DH3/8gffee4/DRomIGAiJiG7v
C/mNGzfi/fffx8cffwyj0XhLnsfChQvRpUsXaI3XvrWEqqo4kWHBn6n56Nd/AJYuXYJ//vOfaNOm
DS5dusRgeA20Wi1EUcTmzZuwdetWbN68GXl5ede9Cqher0d+fj4U9fr2qTRbZRw8a4ZF0WHtmtV4
8sknERERgUmTJlXpNiM6nQ5z587Fjz/+iA0bNvBEICKqobiuOBFRFUtPT8e4cePw1ltvoX379pBl
+borJnq9HufPn0d+fj4AQBQFNG3aDDab7Zof49ixY+jSpSsUQSh3/tnVAq3Z6sLvRy8irp4vfvj+
e6xZuxbt27fH8OHDMXHiRGi1WgbDK4K0TqfD/v37sWjRYuzatROA4KkWK4qCBx98EI89NgRRUVFw
Op1/eU6Iogi73Q5Rq7/uDyRcioLk84XIzHegXcc78dtvGzF+/ARERkbi22+/xb333ouioqJKr+S1
aNEC//rXv/DKK69g6dKlaNSoEauFREQ1DFcZJSKqwlBgtVrRrVs33H///Xj33XevOcC5g4Oqqjh/
/jymT5+OP/7Yd7kiBwAqtFoNPv74Y8TFxXkqdRVdbEuShPfffx+d70yEIhkhq6pnZVHPKqOKUmLF
StVzm6wALlmBcvn7kiTgrhYR8PcxYvz48di8eTN+/fVXtG7dmp1+mdVqxeeff46tW3+vcE/H4vPD
hldeeQl9+vT5y8dctGgRrFYrouKaQ1aFUn3iXmVUllW4FAWKgsv9Wfy1S7nc14oKh1NGo0h/xMeE
4MSJ4/h//+//oX///vjkk09gMpmueh7dqPfffx/r16/HH3/8USWPT0REDIRERDXS448/jjNnzmD1
6tXXvJiHe/n+vLw8jBnzEvLy8sq9iHa/fIeGhmLOnK+hKEqFj6fX6/H555+jeasEKIKm1FYT1xMI
/+9rFQHeenRrG4XMS5cwatQoGAwG7N27t8oXLanJdDodfvzxR/z444+e4O50ugAIFU77UxQFiYl3
Yfz48VcNS2PGjMFjjz0Op2QoDn43GAhlpfjfSoKATs3qIcTfgAULfsKnn36KH3/8EQMHDqz0bUZE
UcSoUaMgiiJ++OEHhkIiohpEmjRp0iQ2AxFR5XFf7M6cORNbtmzB8uXLIUnSNV84nz17FosXL8b8
+fPh7e0FnU4Ls7l4o++SF9GCIHgW8Fi8eAn69etbbjVKEARs2rQJgAovvyCoKqCixPYDJb5W1OLR
pMWHe0sBQCnna7PViaS0bHh7eeO1MaMgShr06dMHWq0WDz744HUNZ63tBEHAH3/8gb///e/Yt28f
NBoNRFGEKIowGPRQ1eJAdmUfuv+empoKl8uBdu3alRvsZVnGyZMnEVG/ARSIpfpBKdVf7ttx+Xtl
+8/9PZeiIvl8HrLybXiwRyIG9u+H9957D1999RW6du2KkJCQCj9kuJH/E926dcNnn30Gm82GO++8
ky8UREQ1BBeVISKqgnBw/PhxfPrpp3j11VcrHDJ45QUzAOzcuRNz587FxYsXER4ejuDgYDRs2BB3
3XUngoODyp2nJwgC7HY7nnrqaRQWFpa5jyAImDNnDiIi6gOVWL0TALhkFXuOX8SizcfR5d4HsH37
NqxduxbBwcE4fPjwbTO3UFEUNGrUCHFxcYiMjIQoinA6ncUVPJcLGo0GBoO+wi0YRFHEwoWLyt0W
QlVVKIqChg0bQkHlVtVEQcDFXCt+2ngMuQ4tfvj+ewwZMgSdOnXC1KlTb2i+a0W8vb0xa9YszJkz
B0lJSXyhICKqKdctHDJKRFS5rFYrevbsiYcffhgjR4685irL2bNnMX/+fE9oKO/PnJwcJCUd91QH
rxQXF4dp0/5Tasif3W7H1KlTcV/PXnCoYulhojc8ZLT4voqqXv43xY/VokEQOreIQGrqWTz66BAM
HDgQ33zzDWRZrtPDBN2/m/vQaDQ4evQoVqxYgSNHjqCoqMhzHths9grbwuVyYsmSJdBqtZ7vC4KA
3bt3IycnByb/UCiqWqYfrnfIqPtr9/fd91VV4KG74xDga8LYsWOxZcsWbNy4EQkJCZXSd5IkYcqU
KVi8eDGOHDnCoaNERAyERER1z9ChQ5GVlYXFixdfc4VFEARMnjwZoigWrwrpcqFv377YuHGjJ9y5
L56tViv27v0DWq22nEAho1evB/DCCy94brt48SKSkpKgNfrC5Q5/VRQI3YvO3JsQjcggI779dh5m
zZqFHTt2oEWLFnW2WuhyucqtzAqCAFEUkZ+fj5ycHCxcuBDbt2+HKEoVBstu3bph3LixnsfTarUY
O3YsHhk0CA7oyu2HygqEyuVzITzIC/3uaoSUlBSMGTMG7dq1w88//wyHw3HTAU5VVQwePBitW7fG
v//9b4ZCIqJbjENGiYgq0erVq3Hs2DHMnTv3uobbnThxotSFsVarRdu2bfHiiy/C19e31PeMRiNa
tWpZbrjSaCRs3PgbnE6nJ5ScP3++ODxWw0W3IAhwuhQs356M1XtS8fSwEVi2bBmee+45JCUl1dkL
f5fLBafTWepwOByw2+2wWq3Q6XSoV68eXnvtNfznP/9B+/btyt0cXhAEbNmypdSwUavVCkVRIEja
avldVACpmWbM+N9+FKreWL9uLWJiYvDEE09USqAXBAEzZszAqlWrsGHDBoZBIiIGQiKi2s+9xcTf
//53jBgxAt7e3td1oXv27FnPXENVVREdHQ273Q5ZljFy5EiEh4dDURTPBXlAQACCg4PLvUB3OBz4
+uuvIYoidDodli1bBr3eABXVc+GtApBEAWcvmDFn1SE0iIrE7NmzMWDAAJhMpjrZ/7Isw+Vy/eVh
sVgQGBiIN954A507dyq3/5xOJ7766ivPuXDixAkMGjSo0ucPXj20AbKiYt3es9h34jxGjBiBFi1a
YMeOHZXy+GFhYXjppZcwceJEWK1WvoAQETEQEhHVboIgYPTo0ejcuTOeeeaZ666klAyPsiyjRYsW
cDgccLlccDgceOSRR9C3b19PSFBVFY0bNyo3YImiiLVr16GwsBAOhwNmsxmqKN2SdrE5XRAEARaL
BXa7vc72vyzLZSqEVzvMZjNGjhwJg8FQ5rEkScKWLVuLq4KCgNzc3OL9AVH9lTRJFOBwyQCAX3/9
tdK2FFEUBc8++yxCQ0NLDW8mIqLqp2ETEBHdvLVr12Lr1q3YuHHjDa3M6OvrC0VRPFsVxMTEwOFw
lLpPVFQURowYgYsXLyIrKwsulws6nQ4bN/5WaiVT93zD9PR05OTkYOjQoXCqAoprd9WrcYQ/FBU4
fPgwHnnkEc9Q1jr3ZqrRoKio6Lo/BGjVqhV2795dKmi5A7TT6YSfnx/+/PPPW7ZNg6yoiAj0gs1m
w65duxAdHV1pH6DY7XZ88skneOSRR7Bt2zYkJibyhYSIiIGQiKh2UVUVNpsNb7zxBiZPnoyAgADP
iprXIzY21hPwmjdvDofDAVmWy71vSEgIwsLCAACdO3fG3r1/wGKxlHleO3bsQGRkJKKjo5FbaLsl
bdMsOhCCKGH+/PmYNWtWna0SGo1GZGdnX3e/P/HE0HK3mnBXh90ry8oQAcjV/ntJooCIIC+kpmfA
y8ur3A8qbkZoaCiGDx+OV1991TMclXMKiYiqF4eMEhHdBEEQMH36dAQGBqJv374Vhri/EhER4Vk8
pmHDhrDZbFcdcmi322G321FQUICHH36o3CCybds2SJIE2eWCKADVXSFUAfj7GGCxWLBz504EBQXV
2XMgLy8PycnJ1zVs1Ol0QhRFNGnSpMxjyrKMgoICFBQUQK/Xw6TX3pLfrWlUICCIOHToEMaNG3fD
53dFXC4Xhg8fjsjISEycOLHCfRqJiIiBkIioxlFVFUeOHMF3332Hb7/9ttxVI6+V3W7HI488AqB4
Dtm1BgqHw4GGDRuW87MFpKefQ1ZWFj6aMgW2ogL4mPSozmttWVYR5GvAqVOnEBoaCl9f3zoXBFVV
xSuvvILhw0dg3rzvPCHnWg+bzYaoqPrlhCABa9euxU8//QRRFPHhhx8iyNcLkli91bN2TUIhShos
X74co0ePrvRA6N5i5e2338aCBQtgtVpZISQiqmYcMkpEdINhUBAEfPjhh+jRowe8vb1v+jEjIyMR
GBjo2cLgWgUGBsLPzw9FRUUlNjMvfo5BQSF46qmn8cuyX6AoMp548knYXBKK7K6qbR8AbeKCIQgC
9u/fj9dee63OVX42bdqEJUuWIi0tHQ6HAxcvXsSePXvQqlWr6/pdw8PDIctyqXmgoiggKioaRqMR
DWJi4efnh88+/QSdOnVC57vuQcalvCr//URRgLdBC4fDgRMnTkCn01XZz2ratCkef/xxDB06FEuW
LGEoJCJiICQiqtnc+8UdOnQImzdvrrTHHDZsGA4fPnxd1UZVVdGxYwds2lT6eSiKAh9fX1itVjzw
YC9cyryIr2bPxktjxkCv0yDHbINcVdPSVKBNoxBotVps2rQJq1evrjOBUFEUHDx4EIGBgRg1aiQ0
Gg327t2LNWvWYsGCn9CwYcPifR+vkcFgKNM2er0eJi8vAAJEFYhuEIvw8Ejs2LEN+fn5uL9nT2QX
2FFodVTZ7ymJAgw6Cfv27UNUVFSVhjS73Y4RI0bg4YcfxsGDB9G2bVu+yBARMRASEdVcLpcL7777
LsaOHVtq0/gbzk+XH0Or1WL37t1o27YtjEbjNf1bURQRGhpW5vGCg4NhtVpx+NAByLKMoOBQDBj4
ELJzcqDRaBAV7IfMfCvyiyo/VGg1IvxMOuh0epw+fRre3t51YoVRQRCQmprqGbLr1qRJEzRv3hw7
d+7ETz8txNChj19zqL/yfoqiICoqCqoKKIqMtNSzcDiK54u2a98RwUEByM3JgZ+PD/y8vJGaaa78
PK8CMeF+EAUBGzduxDPPPFOlgVAQBAQEBOCDDz7AsGHDcODAgUr5f0VERAyERERVYtmyZVBVFYMH
D77poKOqKgwGA9LS0jBx4jvIzc1FZmYmoqOj0bJly2sKhOWFj9jYGBSaC9CgQQPk5OTAXJCH3Jws
+PsHIDIyAoqiwFuvR2A9P5w+nwdXJVULBQBGvQaiKGDFihXo0qVLndluQhAEnD9/HoqilPme0+lE
u3bt0LhxY6SmpiI0NPSaqqLZ2dmeVUZtNhvatW+HPn36ITc3B0WFZvj7+8FqteLcuXPIz8vByRNJ
iItrhMIiC9LT0xHfojlUjRfOZRVU2u8pKyo6NA2FVqfDrl27MGfOnEpdXbQ8iqKgU6dOCAgIwPz5
8zF06FC+0BARMRASEdUsqqrCbrdj8uTJ+PTTT+F0Om9qKKRGo8GePXuwYMEC7N69p3gDclVFZmYm
XC4X/Pz8EB4eftWfIYoiiooKPX93uVzw9fVFnz59kJKSAlEUYTKZoNFocPr0adjtdpw+fRoxMTGI
jS3eRiAu3Ad5RS6kZ5lveminoqqoH+INQRCwcuVKPPvss3VmuKh7m5GrbdCu1+thMBjgcDggCAJE
Ubzq3pRpaekQRRFBQUEYNHgwAgMCkXH+HEKCgyGJArKysiDLMtq2bYujR49CkiQcO3YUEARcyszE
rp070LlTJ3TsfAfSs6zIK7r5LRX5xt0AACAASURBVEaMegnBvkZIkgRfX1+IolhtfThu3Di8++67
DIRERNWEq4wSEV0HQRCwZs0a+Pv7X/fiIWWCk6Jg6dKl2LjxN9x5552YMGE83nlnIt599x106dIF
giBgz549f7kFhSzLOHr0GIDiFUp79XoQ48e/gf379yMuLg5hYWEoKiqC2WxGp06dioeLRtXH2bNn
8OuvvyI3Nxe5uXnQCU60aRgCb+PNbXEgKypaxgRDFEUcPnwY/fr1q1PnwLWu/upyuWC327Fp0ybY
7fYK75uUdAyCICAzMxOHDh2EzWZBy/h4pKenw+l0olGjRgCAjIwMNGjQAA0aNEBRURGCg4Lg7e2N
gMBA7Nu/H19+MQtG1YyG4X6QROGmVpQN8DZAUVSsXLkSXbt2hc1WPftYqqqKHj16IDY2Fp999hm3
oCAiYiAkIqp5xo0bh+nTp1+1SvRXF70WiwVLliyByWRCQkJb+Pr6QqPRoKioCBaLBdnZ2Z6AZzab
r7p1wYULF3D27FkAxdXB/Pw8mEwmNGzYEGfPnkV2djZatGgBu92OI0eOoHnz5ggJCYHD4UBERASW
Ll2KNWvWwGq14vz5C6gfaECbuNAbbh8vvRZhgV7QaDRo1qzZNc+FrEuB0Ol0wuVyYffu3fjkk0+w
fv36UrfLsgyz2Ywvv5wNp9Pl6evt27Zj2rTp2Lx5M9q1awebzYaUlBS0bNkSfn5+yMjIQHp6OhIT
E2G32+Ht7Y2Q4GDo9XoAwM+LFuF/C39Am4bBCAsw3VAoVFUV9YO9oQJYuHAhevToUe4Q2ar6wMVu
t2P06NGYP38+9yUkIqqO116Vr7RERNdsypQp2LlzJ7755purDgP8q4veNWvWlHux697k/MiRI1BV
FbIs45577in354iiiMLCQixd+j8UFppRPHuveFNzLy8THnjgAbRu3dpTafLy8kJBQQFsNhusVisa
NWqEbdu2wdvbG1lZWSjIz0dkVBTS09IQFhaG+3v2hAMGJKXmQFFVKIoCWQFcsgJFUeCSVSiqCpes
QlYUyHLx9yOCvdCnc0P8unEjvLy8MHTo0DpzUS+KIpYuXXpNHwZIkoTJkycjKSkJd9xxB1544QUo
ioLCwkL89ttvyMg4D61WW6Zv3YvJeHmZ8NRTT8Hb27t4DqjZjKioKCQlJcHhcCA2NhYFBQU4ceIE
goKCkJSUBJ1O59nwvnPnTujQORF/HDsHs80BRVEhuw9Zgayol/sSkBWl+GsVsNpdGNy1MQK8dbj3
3nuRmZlZ7XNADQYDhg0bhoSEBIwfP54vPEREVfnexiYgIrp2S5cuxXPPPXfDYdAd+hwOB+x2OxwO
R6kjIyMDR48e9cz7a9euHVwuV5n7nTt3Dps3b8a8ed+hsLDQEwbdQcRqtWHJkqXYs2cPYmJiEB4e
DrPZDIfDgfDwcJhMJpw8eRLNmzdHaGgodDodmjRtinPpxfPZsrKyMPebb5CefAR3NA+Dn7ceivLX
oU5VVUSFeAOCgG+//RYJCQl1qsLj7rtrOZxOJywWCwDg1KlTUFUVDocDOp0OvXv3RkJCAvR6fZnq
myAU96HNZseMGTOwZ88ehIaGIiIiAqdOnUJsbCyaNGmCgoIC5Ofno3379sjLy0N8fHzxdhUmE0RR
xLZt2/H1lzPRMFhEo8iAa97U3qAVERnsDVmW8cADD0CSpGpvZ5vNhjfeeAPz589HYWEhq4RERAyE
RES33ty5c+Hj44Nu3brd9HL4Fc0L9PX1Rdu2bdGmTRs0bdrUE0CuvF9gYCCMRhMkSSr3YlkQBEiS
hJUrV+HChQtISUmBr68v/Pz8cOnSJURERECr1UKr1SI3NxcdO3YEAERERKBx48YoLCyEwWDAjh07
MGvGdMQGimjTKBTiX/zesqIiPNALFosFR44cQbNmzerceXCtQ0ZtNhsGDRoEAAgNDS3V5zabDfHx
LTBo0COIjY31hOkrabU6bNmyFcuXL4cgCDCZTAgKCkJGRgZCQkLg5eWF48ePIyEhAQEBAfD29kZc
XBwKCwuh1Wphs9nw3fc/4PiBHejapj58TX+9uXxMPT8oKrB9+3YMGzYMdrv9lrSze/7rr7/+yu0n
iIgYCImIbi2Hw4G5c+dizJgxnqrPjaoo5LkPu93uqR5e7T6NGzfCQw8NRIsWzSvc806SJMyYMROt
W7eGxWJBYWEhfH194e/vj6KiIuTm5iIkJAQZGRkICwuDv78/JElCZGSkp4qp1Wrx/fc/YPO65bg3
oT6iQrzhksuv2Gg1IkIDvJCdnY1BgwZd1wbttcXV5nOWPJxOJxo0aABJktChQwfYbLYy97HZbOjQ
oT3uu69HhfPlRFHEsWNJSEtLhyzLSE9PR5s2bQAAFy5cQGBgICRJQlZWFtq3b4+MjAzExsZCq9XC
5XJBr9fj6NGjmDVzJoI0ZtzTun6F1UJVVREb7gtBlDBv3jw0a9as2uYPXklRFEyfPh2vv/46X4CI
iBgIiYhurVOnTsFsNiMxMfGmH0tVVWg0mmuuNFW0sqjD4YCqqmjZsiV69rwfGo2mwqF1EydORMeO
HREdHQ2dTodjx46he/fuCAgIgF6vh7+/P/R6/eXhp0BwcDDatWsHPz8/iKIIRVFw8eJF/Hf6NMCc
jl53NIK/V9lhpHERfhAEAYcOHcLYsWOveXP22qT8VUUrXkVUVVXExMRcdUVSo9GIAQP6w9/fv8I+
XL58Ofr27Qu73Y4zZ85AURQ8+OCDcDqduHDhAmJjY5GZmYmgoCAEBgYiJiYGrVu3ht1uhyzLUFUV
K1aswK9rVuCeFsFoERMMl6wAUEucm8UrjBYVFeHPP/9EcHDwLavOqaqKsLAwxMXF4eeff+awUSKi
KiJNmjRpEpuBiOjqXnnlFTz55JNo3rz5TVdMRFHEgQMH4HK5oCiK53Av3FHytpKHqqooKChAdnY2
du/eDR8fHxiNRrhcLuh0OsTExCAtLR0ul6vURXzx1wKSkpLQunVr1K9fH4WFhTh58mTx3MEmTTzP
x109dM9b9PHxgdVqhdls9uyRmHL6NA4f3If7EhPg5e2NrHwrXLIKVVVxV3wkAvy8MXXqVLzwwgs3
vBJrTSWKInbs2AH18iI77uPSpWwYDAbIslzqdpfLhQ0bNqBZs2bw9fWtsG8VRYEsy4iJaYCzZ9Mg
y3KpnysIwuXVSV3o1q0bTCYTzp49i9OnT+O+++6DzWZDRkYGcnNz0aFDByQnJyM4OBj5+fmw2+0Q
RREWiwU6nQ4FBQXYs2cPJMWKB+9ph0v5dhTanFDV4mh4V8sITxjs1avXLasQukOhXq/HokWLMGTI
EKiqyuGjRESV/d7GJiAiurrU1FQkJSWhe/funkrLzR6yLJfZoiA7O+eqFcFly5bhnXfewUcffYRl
y5Zh2rRp+OWXXzxDSwHg3nu7lxvCBEHAqVOn0Lp1a2zevBkdOnRAUFAQQkNDsXz5cvTq1Qvh4eFI
SUnBpUuX0LJlS888wvr16yMhIQFmsxk2mw2SJEEQBMz99ltsXvUTBnVpjPAgLwiCAG+jFkVFRUhO
TvbMb6xrR3n9YzYXeIaJXnkAQE5OzjXPO2zVKr7cECbLMhITE1FQUIC0tDTEx8cjLi4OCxYsQGRk
JLp06QKbzYalS5eiXbt2MBgMsFqtEAQBiYmJ8Pb2RnZ2NrKysuDj44PTp8/gvX9MQtMQoEe7aMiK
ivgGQRAEAYcPH8aoUaMq7Xy/mePRRx/F8ePHceHCBYZBIqIqwAohEdFfcK90OHDgQE+4upkDAP78
808UFRVBlmXIsgyLxYLc3FyYTCbPbVcegiBg//79nudls9lw+vRpeHl5ISwszFOdCg4OQnr6uTIX
z7IsIyQkGA8//DBOnTqFjIwMmEwmtGnTBvv27YMkSUhISMD58+exb98+dOvW7XL16xJUVUXr1q1h
s9lgsVjgcDg8FbGtW7cgtp4PenXtCJ1GwNatW9GoUSN07dr1ptuqph2SJGHr1q2eip77uHjxoqey
6r7N3XZ79uxB/fr1ER4eXmHfljwMBgMyMs6XWclWEATodFo8/PDD8PX1xR9//AFFURAfHw+tVouV
K1di8ODByMvLQ3JyMkRRRMeOHXHixAnk5OQgISEBDRo0wO7duxEdHY1Lly6hXr162Lt3LzLSUjCk
bzfEhPvBaDRhzpw5ePnllz3P4VYe7nb56aefMGDAAL4gERExEBIRVa/nn38eU6dOhZ+fX6U8niAI
2LdvHywWS6nhoufPn0dAQECFw0UPHDiAM2fOlHm8O+64Az4+Pp6QotPpkJ2dDbvdXipQSJKEY8eO
wmAwIDExEXFxcThy5IinYhQUFIQNGzZ4gtzp06eRmpqKHj164OjRo8jIyEC9evWg0Wg8QxGNRiO0
Wi1OnDiJPw8fRExMDLKzs/Haa6+VGfZYF4iiiE2bNgEoPbQ3OzsbAQEBpYaMqqqK9PR0HDlyBKGh
oYiOjr7qkNGSB6AiLy+/TKjPzs7G/v370bRpU3Tp0sVTjS0sLETbtm2xceNGdOjQAQ0bNkRaWhqO
HDmCnj17QqvVYv/+/TCbzRg4cCAOHToEQRCg1+thMBhgs9mxft1aeHl5AQAaNmzoWeX2Viv+kCMY
X375JZ5++mloNBpWComIKvO9jU1ARFQ+VVWxfv16BAUFIS4urlIXtRBFscyQ0fz8ggqHErpcLuTm
5kKj0ZR5rAsXLpRZgbRFi+bl/lyXS8Zvv/2GcePGIScnB02aNEGXLl2Qnp6OkydP4sUXX8S2bdsQ
GxuL+Ph4xMTEYM6cOejZsyd69OiBlJQUHD9+HL6+vvDx8fE8rr+/P2RZxn//+18MHDjwlm1VUB3K
65+iIku5fXb27FkAQFZWVplhwldbZMbb27vcYJSQkIC8vDx89tln+OmnnxAREYG4uDgAwO7duxEf
H4+wsDCcOHECXbp0QUREBFasWAEAePjhhxEREYGFCxdCkqRS/afVahEeHo7169cjLS0NgwcPrjHt
LQgCmjZtisDAQOzcuZNhkIiIgZCIqPouROfOnYsePXrA4XBU+oXoldsPuBchKe+w2+24//770b17
91KP4e3tjfbt25e5v3sxjrIht3humkajwaeffoolS5bAz88PzZs3R0JCAt58803069cPERER2LNn
D+6++248//zz2LdvH/73v/9BURSEhoZ6hhK6F/mwWq0oLCxEamoqVq9eXacv2q9nldFLly4BACwW
S4VzDCuad3hlGwqCgICAABiNRkiShO3bt+ODDz7ApUuX0Lt3b7Rr1w5nz57Fhg0b0KVLF6SmpkKr
1eLZZ59F48aNMW/ePBw7dgyhoaGec8P9IYeiKMjPzwcAfPbZZzCZTDWqzd0b1b/11lt8YSIiqmQa
NgEREcoJTqpnzt4///nPSn1sRVFgMBg8F/7uC153BelqGjduDFmW4ePjg7S0NDRo0ABWq7Xc6qVe
ry8zbFSWlVJ/z8vLw9ixY5GQkIAOHTpgzJgxyMrKgtPpxKhRo3Do0CHs2rULly5dKndPQfdw15yc
HOzduxc5OTm3dFXK6uBwOMpUalW1+PaSv7soijCbzZ7+dS8OdK0fFpT3AcX27dthMBg8fSgIAtau
XYtVq1ZhyJAhaNu2LSRJwu7du5GYmIiioiKsWrUK2dnZ0Ol0noV+SrLb7XC5XDhy5AhOnDiBoKCg
GtfmiqKgefPi/TZPnDiBxo0bs1JIRMRASERUdQRBwOLFi9GoUSNERESgqKioUh/fx8fHsx2AOwC4
9xa82oWuIAho3rx4OKh7TprD4Sj3viaTCfn5+VcsTPJ/VSH37QaDAUlJSTh8+DCGDBmCwsJCREdH
4+eff0ZycnKFAc/lcsFiseDw4cM4ceIEgOK5Z/369avTe8a59xa88gOEwsLCUqFZkiRPhdBsNnuq
t1f7AOJqgbA40Mtlzg9JkqDRaLBgwQI0adIEnTp1Qvv27bF9+3bk5+cjOTkZOp2u1OqzJVdMTU9P
x969e2GxWCBJEt58801YLJYa14dGoxERERHYunUrmjRpwhcpIiIGQiKiqjVt2jS88MILsFgslf7Y
Wq0WDoejVCAsuRdhZRBFoZzbpHJDJlA8jHTx4sWw2+2IjY1FWlqaZ4sJd4goGUwuXrzoWeAkOTkZ
U6dOxbPPPlsnN6O/MgiXbAtBEC4P9y1d/Ss5j9LhcFRYARYEATabHXq9rkT7XnuVtWSwT01NRUpK
CuLj45GUlARBEKDRaDyB0/2n+7n8+uuveO6557BlyxbExcVhx44dEEWxRvahqqoYOXIkZsyYgREj
RvAFioiIgZCIqOpkZmbCbDajZcuWUBSl0oenhYaGwmazeSpKNpsNQPFcs/KGZv4V93P8qyqTRiNd
U7DIyMgoNSzSHYAkSYLZbMb69etRv359PPvss8jIyMB3330HPz8/uFyuOj+Uz+l0lls1tdmspeZt
Xhn+zGZzuXtEqqoKl8tZKsDf6LBbVVWh0WiQlJTk+XvJQC+KIrRaLTZv3ozc3Fx88803eOONN/C/
//0PXbt2rfErw3bp0gUTJ07E6dOnERsbyxcqIqJKwEVliIjKcfjwYXh5eaFevXpVEnDc1cCSK1IK
ggCLxXrNC4+U/Ld5efnl3n7lcy8vkFwtHLqDoE6ng0ajwe+//45Lly5h6tSpMJvNaNeuHWbPng1v
b+8qCc41kcPhKNPWxaGu9KIxV1aWc3Nzy+2/4jl8crkLy1yvknMLrwyCRqMRFy5cwHfffYdhw4Zh
wIABWLduHX777Tfcc889tWKbEJfLhfbt2+OHH37gixQRUSVhhZCIqBxffvklnnvuuSp7/Ojo6FIL
vrgrQna7DTrd9VUIi4NkEQwG/RULyJS+wC8OBlKZ+Wrlcd9Ho9FAp9MhJSUFmzdvxsMPPwxZlnH4
8GEkJSWhsLAQRUVFt9UCHxXNIXQ4nKXawWq1lrrPhQsXYDQay3284n+nlvrAoNw37cvDP0uGv6v1
oTsI2mw2rFy5En5+fggPD8eOHTswZcoUBAcHe/ZMrA0URcF9992H77//ni9SREQMhEREVcNms+Hg
wYOYNm1ala2Y6V5ARpKKh3C65585HNdfHVJVxVNhKhkSrlxsRlVV1K8f6fkdKwoU7iDh6+sLm82G
b775BiEhIVi5ciU+/PBDfP311zAajTCbzbflSo/lBcLiPiw97PPKvRjz8/PL7Vv3nMSSj1ne4xf3
X314e3vj9OnTFQZ79781Go3Q6/XYvn07du/ejXfffRenT5/GkCFD0Llz51LBv7YQBAFdu3bF22+/
XSufPxERAyERUQ2nqiq2b9+OyMjIax5eeSPc20W45+m5w9yNDBd0h8krA+GVFUJJkrBr1048+eRT
MJvNSEtLK7VqpTtI+Pr6QqvVYtWqVTh27BiA4qGmdrsdP//8c4X75N0OBEFAXl4e/Pz8ygn5pRcF
ujIQWq3WCgKhuw+cJc7D8n62iJUrV6JVq1bo3Lkz0tLSkJ2d7flQAfi/LU38/f1x6tQprFu3zrP1
hdPpxDvvvIPAwMByVyutLfz8/NCqVSusXLkSffr04YsWEdFN4hxCIqIrLvg3b96MuLi4Kv05iqLA
y8sLDoejzP517tuu9XA6HZ4L/pK3/1/QKGaxWPDmm29hzpw5+PPPP9G4cWP4+/t75psZjUZERkYi
JSUFn332GY4dOwaNRoMxY8bgyJEj6NixY4VbXNwuHA4Hli5divbt25dofycA1bNyp3v+pnujd7f8
/PxyN6dXFBmy7Lpi/mfxY5b+sELBhAkTEBAQgC+//BIGgwFxcXHQarUQBAGiKCIkJAQajQZLly7F
4sWLYTab0b59e+zatQvjx4+Hn59frZ/rabfb0bt3b8yaNYsvWERElXHto9blzaKIiK6De/hZ3759
MXz4cHTp0qXKfpbJZMIzzzyDnJwcz89W1eI/Jen6PqtTlOKX8Su3mXDf7iZJEgoK8vH1119jzZo1
+OCDD/D8889Dr9d7Asy8efOQl5cHAGjbti3WrVsHURTBt4rSRFFEUVERJk+ejKSkJGi1Onh5mZCb
m+u5j81mw549ezx/1+l0nqGaVz7WlUNGi2+XSgU3VVVx4cJ5vP766+jUqRP69euHFi1aoGPHjgCK
h57u3bsXa9eu9TzuF198gUGDBtW5rUBOnTqFl156CZs2bYLJZOIJSUR0EzhklIjoMveQzQMHDuCB
Bx6okv0H3RwOBxITE7FgwQLo9frLe9mpiI2NgcViQWZm5nU8b/dehnKZ20sGCh8fH/z880K8/fbb
UFUVq1atwp133gkvLy+oqgqr1eoJJZs2bULLli2hqmqVzaOszWRZhtFoxL/+9S/k5ORAr9fh+PET
mDhxomeosUajQXh4OM6fP+8JdA6Ho0x1TqvVXa4SyqXORZ1OuiLgK/jwww8RGBiIhx56CIsWLcLU
qVPxwQcfQKvVeirEADB69Gi8+eabMBgMlbq3ZU0RHh4Op9OJ7OxsGI1GziMkImIgJCKqHGvWrEGH
Dh2qfFid0+nEs88+i3vvvRdz587FyZMnMXLkSHTv3h0vv/wyzp07d41hENDpDFBVtcyFv1arK/U7
RESEQ5IkvP/++9i0aRMmTJgAACgqKvLcZ/z48Xjttdc8AcYdTqhigYGBAID69esjLi4Ohw8f9uxH
GBkZiQsXLkCr1SIsLKzMPE9VVaHV6uByuUpV8YoDob7cnxcfH49t27Zh2rRpWLlypWfoKgC0bNkS
n3zyCTp16gSHw1FnF10JCAhAREQE9u/fj6ioKJ6EREQ3gUNGiYhK+Nvf/obw8HCMGTOmWipjqqp6
9vhzV+hmzJiBZcuWlVospCJarRZ6fXEgLCoqLPU9k8mr1MI4PXrcixdffNGzqqXRaMTChQuxd+9e
OJ1OjBs3DmFhYbV6wZFbTafT4ZdffsHXX3+NzMxMaLVauFwu6PX6cvf5U1UVfn7+sNmspeZnCoIA
Pz//MosEjRs3FnfffTeA4iHA586dw6pVq3DmzBk0bdoUo0ePRl5eXp3vP1EUsXDhQuzbtw9ffvkl
TzwiopvACiERUYkL7pSUFDzwwAPVNkzyypVFBUFAbGwsbDYbtNq/3o/QHQaB0tshlBcIAgMDS33f
ZrOhf//+6N+/v+c+t8vm8lXF4XDggQceQJ8+ffDLL7/go48+AlB2T8ISkRCCIMLlcpUKhNeywq0s
y6hXrx6GDx/uuS0/P/+26D9ZltG/f39MmTKFJx0R0U3iKqNERJe5XC7k5eUhOjr6lj6PXr16Ydq0
afDx8YHNZiuzKmXJw71CqDsQXvm9kqKjo8utUlHlh3yXy4V+/fph9erVnqpdef3ncBTvXXjl6qN1
bRGYqmhjURQREBCAM2fOsEGIiBgIiYhuntlshtlsRqNGjW75xW7btm2xevVq/P3vf4e3tzcsFks5
YeL/NrZ3zyEs+b0r56r5+Piwk6uxDxVFgclkwpNPPonNmzejT58+MJvNnq0q3IcoitBotGX6l/7i
AkYUERwcjMOHD7MxiIgYCImIbt7+/fvRqlWrUtsA3KpDURTYbDYMGDAAv//+O0aOHAm9Xu+pHrlc
Ls+iMe7NyBVFKbE4yZVbUCjw8fG55b/X7XYAxZVbf39/TJw4EXv37kWzZs08Q0TdQ0Ov3IfwaoGQ
7Vp8uCuEqampfPEiImIgJCK6ecuXL0fnzp09i67UlCMvLw/PPfcc1qxZgyFDhiA/Px9OpwMmkwl2
ux33338fvvpqticwOhwOaDSaMiEiKCiIQeIWHrIsQ6/X47vvvsOqVasQGxsLRVHhcrlwxx13eML8
lSuOMhBWfHTs2BEHDhzgixcR0U3gojJERJft2rXLs4l3TVyYQ6/XY8KECRg+fDg+//xzaLVajBo1
CvXr14fVavVUltzVk5LcFULOIbz1BEFAeHg4Vq5ciW3btiEhIQELFiwoVRW8cgFw9x6G/v7+XPSn
hA4dOmDp0qVsCCIiBkIioptjsVhgs9kQFBRUo5+n0+lEQEAA3n//fQiCALvd7gkS7uqgqqrw8vIq
FSZMJhMkSWIgrGF92alTJ4iiiLCwMOh0OhQUFECSJE8gdFfC4uPjMW7cWAQGBrIPS5zXd9xxB4eM
EhHdJA4ZJSICcOnSJWi1WphMphr/XN1bVVy5cEzJ+Weqqngumo1GI956600uVFJDKYqCnj17Iikp
CV27dvWsOAoAfn6+mDp1Ct577x/w9fVlGCzn/0H9+vVx6NAhNggR0Q1ihZCICMX7t2k0Guh0ulr5
/CVJwvvvv49nnnkGkiTB29sHDocDL774Arp27QqtVss9Bms4h8OBH374ARcuXMCkSZPwwgsvoFmz
Zp5Fjth3ZTmdTjRt2hS///47WrduzQYhImIgJCK6fqqqIjs7G6IoelbrrI369OmDM2fO4JNPPkFw
cDCefvpp+Pj4eBYoYaCo2QRBgCzLCAkJwVdffQWHw1Frz8XqIssyoqKicPToUTYGEREDIRHRjV+I
Hzp0CAkJCbX6d1AUBUajEe+8847nYlmWZQbBWshutzPEXwNFURAaGoojR46wikpEdIM4h5CICEBy
cjLi4+PLrO5YW4Mhh4fS7UAQBAQHB8NsNrOaSkR0g1ghJCICkJqaim7dukFRlFofColuJ+Hh4bBY
LPx/S0TEQEhEdOMyMzMRFRUFgMP0iGqTiIgIFBYWMhASEd0gDhklIkJxhbBJkya8qCSqZSIjI1FQ
UODZs5GIiBgIiYiuS1ZWFoKCgrgAC1Et5F5MKTMzk/9/iYgYCImIbgwvJIlqbyBs2LAh0tLS2BhE
RAyERETX788//0RwcDCHmxHVQqqqIigoCCkpKWwMIqIbwEVliOi2J0kSRFH0XFwSUe3h3oswNzeX
jUFExEBIRHT9UlJSEBAQAFmWGQiJahlZllGvXj0cO3aMjUFExEBIRHRjF5SSJAHgXMKaRhRFGAwG
2Gy2UhuP63Q6aLVaFBYWV6vLPwAAIABJREFUqgI77bamqioCAgJgsVjYGEREN/JeyyYgIuJQ0Zrq
6NGjaocOHZS9e/eW6qB//OMfasuWLRWtVsswSFBVlR/mEBExEBIR3ZhTp07B39+fobAmvkmJIry8
vDwVXDeDwQBvb2/2GUFVVQQHB+PkyZNsDCKiG8Aho0R021MUBTqdjlWG2hsIVK1WixUrVuDQoUNQ
VRUtW7bEoEGDYLFYBACqRqPBL7/8gv/P3n1HR1H9fwN/35mt6Z10QholCAGkhEiTJkWQpigI2FAp
ogJ+H9SfIKAiCogcsCBdpAqIgPSWUKWFYgqEkEhJQgppW2fnPn+EXbMkKCUJAT6vc+YEks3s7ty7
m/ve2xISEuDn54chQ4ZAFEUGlPZCrl27Fq+99hqWLFmCtm3bok2bNuzMmTN8165dKC4uRkBAAAYO
HAi1Wk0jVGvg67dWrVooKCigi0EIIRQICSHknkMFhcGHlFKpZJ988ol86NAh1rp1a845x6xZs9i2
bdv4N998A7VajSlTpvDt27czazlv2LCBr1mzBiqViuXl5eHQoUNISEhAdnY29/f3Z7Isyx9//DFr
3bo1d3V1xW+//Ya1a9eytWvXco1GQxWlBrG+bun1Swgh94aGjBJCCHlocvstXwEAarUae/bsga+v
Lx83bhybNGmSMGLECGRmZrKCggL8+eef2LZtG2vfvj3279+Pjz76CCUlJWzVqlW87FBUV1dXfujQ
ITZ8+HA2c+ZMxhjDuHHj2AcffMAWLFjAGGNYunQplQIhhJBHCvUQEkIIqbFu6fVhZb5y688sFgtq
166NzMxM9sILL3AXFxfes2dPtnHjRhgMBvbbb79xtVqN1NRUDBkyBIwxKBQKbNu2Da+99prt5G+/
/TYsFguTZRmxsbHYuXMnhgwZwl1dXREdHc1WrlwJZ2dnVna1U0IIIYQCISGEPCKooV8zAyFjDHq9
nnPObUM+zWYzFwQBnHPodDp89dVX7Ndff+V79uzB5cuX2fz587FixQr+yy+/wGQyQZZl9O7du1zA
lCTJtjCNt7c3ZFkG5xwffPABwsLCsGPHDpw7d45lZ2fjjz/+wNSpU3nr1q1pbGINQ4sLEUIIBUJC
CKmU8EFqFo1GAwDYsmULmjdvzlUqFUpKSpCamgpHR0dwziGKIrKzs9GlSxf2/vvvswsXLvC5c+fy
EydOQKfTITQ0FJIkQa/XY/DgwTAYDDh//jyUSmXZDwG4UqlknHPOGGPJycmIiIjASy+9xAoLC7F2
7VosWrQIu3fvRmxsLBUMIYQQCoSEEEJIVfP394dWq8Wff/7Jnn32WVs3EOecPfHEE1yWZSgUCqxc
uZKfOnUKX331FcLCwmwrx2q1WnTp0gVfffUVli9fzpcvXw4AkGWZjRs3jterV4/d8qEAY4zh0qVL
mD59OgYOHIhXXnkFgiDAbDYjJiaGCoUQQsgjhRaVIYQ89qzDEGnYWc3DGGPLli1jXbt25YIgoLi4
GCqVCi+++CKfOnUq45xzs9nMP/roI/bMM8/gnXfe4R06dOCFhYWYNWsWHB0dYbFY2NKlS9GgQQPo
9XooFAq8+eab6Nixo2CxWLgkSSgqKrL1FsqyzLt27crGjRuHbdu28TZt2vBff/2Vf/zxx7xLly5U
KDX09UtDvgkh5B7/1nJqARFCHnMzZ85EQkICpk+fTqGwZjb4uUqlYiqVytbwNxqNkCSJWzcFLHsb
oHShGYPBAOsQUKB0NVLrMNGyv69QKKDRaFBSUmJX/oIgQKPRQBAEyLIMg8EAi8XCaSPCmkUQBOzZ
swdr1qzB2rVr6YIQQshdoiGjhJDHnpubG8xmM12IGooxxsxmc7kyKhvM7uQ2RqMRRqOx3M8kSUJx
cXG5+5VlGTqd7rbnIzWHTqeDs7MzXQhCCLkHNGSUEEIIIYQQQigQEkLI48nd3R1FRUWP5SqjJpMJ
W7ZswcmTJ+Ho6EhzKcnD15ARBKSnpyMyMpIuBiGE3AMaMkoIeex5e3vbhhI+bmHo0qVLSElJwapV
qzB06FB8+umneP7552E2mykYkocCYww6nQ6enp50MQgh5B5QDyEhhBqUjMFkMj1+fwAEAZcuXUJQ
UBCe69MHkydPxpw5cxAWFobs7OzHMiCTh/P1m5aWhqCgILoYhBBCgZAQQu5eREQECgoKHrshoyqV
Cnv27IFCVMDdrw60Lp4YN24sxo0bh5iYGIwYMQIuLi5UQUiND4QGgwHe3t50MQghhAIhIYTcPQ8P
D+h0uscuEBoMBqSmpsLB1R2CIELl6AaFiy+C64Rj/vwfYbFYEBgYiN9//x0ajYZ6C0mNJIoikpOT
0aRJE7oYhBBCgZAQQu6eQqGA0Wh87Lae2LNnD7p1ewYaZ/fSb3AOJijA1W4wC44YNHgwvv/uO0yc
OBF9+/ZFbm4uBEGgYEhqlJKSEjDGoFDQsgiEEEKBkBBC7lFERARSUlIem+fLOUdiYiLqhIaBsfJ/
CiSmRoHFEbKowXfz5qFNmzZo1KgRvv76a6hUKgqFpMYoLCyEVqsFbRFJCCEUCAkh5J4FBQUhNTX1
sWlUqlQq6PV6cDD82zO+YVIiSyfiyeYtsWbNGiQmJqJBgwY4ceIElEolVRzywF27dg1OTk4UCAkh
5B7R+ApCCAEQEBCAixcvgnMOWZYf+efLGIPZZIKoUAGMAbhdjx+HWWZIzZHg5aTG+2PH4uyZM3j5
5ZfRvXt3TJ06FVqtFhaLhSpRDSIIAtLS0mAwGBAVFQUAkCTpkXyuGRkZcHFxgSDQZ9yEEHJPfzPo
EhBCCBAYGIiLFy+CMfZYHFu2bEFgYCCUWqc7DJDA9SIJx1PzUSeiPrZu3QalUonQ0FDs2LHDFjKt
X+l4cAcAaLVazJo1CwsXLkRISAhWr14NWZYfyTLKysqiHkJCCKFASAgh945zjvDwcKSnpz82PV1b
t25FWHgEmHC3A0UYzmYU4nDiVbw5/E3s3LkTX375JVq3bo2ioiLqpakBGGPIy8uDQqFAbGwsvvzy
S6xduxYNGjRAWloaRFF8ZOaACoKAzMxMNGjQgAIhIYRQICSEkHtvQPv5+UGSJBiNxkf++UqSBAcH
ByjVGuAeg0GR3oztJ/5GZqGEFSt+wahRo9CoUSN8/PHHttUeaeGZB+eXX35BdHQ0XLwD4OodgNde
ew1jx45F37598eabb0Kv1z8SAUqhUCA9PR2hoaFU6IQQQoGQEELunbu7OyRJgsFgeKSfJ+ccJpMJ
bdu2hQwRt587+B8h+ubXpIx8bDp4HtFPxuDUqZO4cuUKGjRogD///JMWnXmAZRwXF4fAoGCoNE5Q
O7iAOfmgTlgkvv32WzDGEB0djU2bNj3UPbqccygUCqSmpqJjx45U8IQQQoGQEELunaenJ8xmM/R6
/SMXDsr+mzGGy5cvQ2AMQiXs28YYQ7HejJ3HM7DtcAo+/XQylixZgiFDhqBr164wmUzlHgep+jJv
2LAhmOKf7UEYEwCtB/TQ4oUXBmLx4sWYNm0amjVrhhs3boBz/tCVEWMMOp0OOTk5CAgIoDpGCCH3
iFYZJYQQlG7D4Ofnh4sXLyIgIOCRWGmUcw6VSoXr169jyZIlSElJAeeATqeDSqVCw8ZN0KFLDxSX
lFRC4xy4klOMdXEXEB3ujT27d2LLH9vQoEEDjBo1Ch999BFKKuF+yH+XuSAI8PLygqhQ49YeYJkp
UcycobaYMWvmDJz7KxFNmjRB//798dNPPyE/P/+her4HDx5EkyZNbAGREELI3aMeQkIIuSk2NhZx
cXEQRfGhDwVKpRLp6en48svpGDp0GA4fPoIbNwpQUFAAs9mMkpISHIzbh68/+z+cTzoHoZKes9ki
I+7sFfx+6CJi2jyNDevXIT4+Hk2bNsWJEyeg0WioJ6cKiaKIVatWwdXFBQq1pqLaAYChRFLgWrGI
yPoN8euvv6K4uBi1atXC9u3bH6oyOnr0KEJCQqjgCSHkfv52TJo0aRJdBkIIARwdHbFkyRIMGjQI
ZrP5oXwOgiCguLgYCxYswNKly5CbmwulUllm6CCzu60syzif9BdEUYR/UG1YZBmcAzIvDZYy5+BA
6VfOb/6M3/xZ6Zo0/OZtrT8HA0r0Zpy6cB0ODlq8MXQg6taNxNChQ5GTk4O2bdtSZasiCoUCU6ZM
Qbt27SFqnCDL3K48y5ahRQby9TJkztCxbWv07NkTo0aNQnx8PLp06QK1Wl3jg+GSJUvQvn17REdH
Uw8hIYTc698OugSEEFKqQYMGyM3NRXZ2NhwdHR/KMLhr1y6cO3cOnHM0b/4kAECWZeTn5yMl5fxt
f+/Q/t0QBAXqN34S97rQzK2UCgHHzmfj5IXr6N6yDvbt24fvv/8ebdu2xYEDB2gz+ypw/fp1RERE
QKF1uqNiZADydRbkFhcjyFOL1atXY//+/YiMjMSUKVPw2muv1dhystbriIgICoOEEHI/7Qe6BIQQ
UkqhUMDV1fWh3aD+yJEjOH36tO35lO0V9PT0RLNmTaHVaivs9REEAfF7tuLq32mVfl3NkgVr9qYg
/uxVvP/ee/j4448xZswYKBQK2ki+kjekv3r1Ktq3bw9RobyrYM85kJpdgrMZhWj/dGds37YNR48e
RevWrXH69Gmo1WpbXaopzxUA8vLyEB4eTm9ehBBCgZAQQu6fUqmEm5sbLl68+NA99pKSEhw5csQ2
/5ExhqioKEiSZGtAK5VKPPFEQ7i6ulYYCkVRgW0b10CSpMr/YyMwHEnKhGwxw9vbGxs2bKBN7CuZ
KIr4+++/odVqwdjdzwllAIoNEnafuozsEmDSpE/xwQcf4Pnnn8f48eNhNBohCEKNGEYqCAISExOh
VCrh5+dHhU8IIRQICSHk/jHG0Lp1ayQmJto2V38o3sgFAQkJCbb/c84hiiJ69+6NNm3a2OaOWXtX
6tevB5VKVWHDXrZYEL9rM0Sx8v881AvygEXmyMjIQLdu3R6JlVxrEo1Gg/i4OAiCWLrs6z1SiAJS
Ludj3f4khNdriMOHD4MxhvDwcBw6dMiunj3IOr9nzx7069ePCp4QQigQEkJI5enatSuOHTt228BU
E4miiD///POfUCfLaNOmDQwGA1q1amUXvqyhsGnTJvhne3n7UJyadA6FBZW//cCTkT5QKFVYsWIF
Jk6cSHMIK1lBQQE0Wi1EtUOlnXP3ycvYcjAZI0aMwLZt2/DBBx+gQ4cOdj3PD8qOHTvwzDPPUMET
QggFQkIIqTzNmzdHXl4erly58lAtVGGxWGyPV61Wo3HjxjCZTDCZTIiIiMDAgQPh5ORkt3pq3boR
FYYyQRSRmnQWrBKHdAoCg5uTBrIsIyEhAb6+vrT9RCX7448/0KlTRwgKVaWe93qBAav2pCCzUMaG
9esxaNAgREVFYdq0aQ9si5asrCwAQHBwMNUjQgihQEgIIZWradOm2LVrV5ll+mv+4ejoaPu3l5cX
DAYDJEmCJEkwmUzw8PDAq6++ii5dusDb2xtubm6IiIiAm5tbuQY1Ywynjx+EQqGstGsqCgJUShEn
T55EQECArcfyYbrGNfkAShdYcXF1A6/kDzIYKy2nY+ezsXzHGbRp3xkHD8Tj5MmTaNSoEZKSkqBQ
KKr1+V67dg2iKMLd3Z1WGCWEkPtE204QQsgtYmJisH//fvTt2/eheLwWiwX169dHQkICZFlGWFhY
hfsoms1m1KlTB3Xq1LHNKYyIiMA338wuf1ujCTnZ1+Do7Hbfj49zIMjHEaLAEBcXh/79+1OvTiVT
KpXQaDSQrZtDVgGBMRTrzVi7/zyCfZwxY+ZMZGdloVu3boiJicHixYurZe6tUqlEfHw8mjdvDpVK
RYVPCCH3+/5Ol4AQQuy1adMGmZmZdgux1ORDlmVER0cDgC3kWYeL3u4wm80wmUwIDQ2FKIrlApog
iriWkVo5gVXmeLKuLxQKBfbv348BAwbQNhGVvAWDSqWCJJkhs6ofwskYcDGzAMu2J+KGSY1DB+PR
rl07REdHIz8/31YPq+pQq9XYvXs3hg8fTm9WhBBCgZAQQipf06ZNkZeXhxs3bjw0j9k6dM7Hxwdm
s/mOD845unTpXG7FT0EQkJdzvVIem1IhINDLCRqNBpIkISQkhCrZHVAoFDAajUhPT0dGRgbS09Nh
NpvLbf3AGMPq1asRGVkXnFXPn3UGwGCSsPXPS9gQfxG9e/fGypUrMWHCBGg0miq97/Pnz0On06Fx
48bU00wIIZXx94YuASGElNe7d2/8/PPPeO+992rsapjW7SWysrLw6aefok+fPrh+/TpMJtNdPeZO
nTrh99832zf4GYPRoC/tgbrPRrePmxaSzHH84EG0bdsWOp2OKth/KCwsxNq1a7Fz5y67sG6xWPDm
m8PRpk0bqNVqcM4hCAIOHz6M1157HUVGC+5mQ/r7DvuigAtXbwBchr+/P5KSkqDRaGA0GqvsPnft
2oUGDRrY6ikhhJD7Qz2EhBBSgUGDBmHXrl01emsEtVqNKVOm4OjRo3j99dfh6+sHPz8/22Iyd3oY
jUa4ublWUWgFvN0cwDnH4sWLbVsWkPLhHiidH/fZZ5/jnXfGYPfuPRAEAUql0nao1RosXrwEI0aM
xKVLlyAIAoxGI5o1awZJRrWGQSsnrQocgIODAzIzMyucv1ppjZabe262b9+eKg0hhFAgJISQqhMU
FAQAuHLlSo0almZdUXTTpk1YunQpnn32WYSGhsHJyRlqjQYent5ISDgFWZbvaujorcP8ZFmGt5f7
fW8eb5FlhAe4wWKx4ODBg2jdujX16lRAkiRs3boV//d//wej0Qg/Pz+IolDBCrClvWImkwkTJkzA
oUMHYTKZUK9ePUj3WVb3ys1JBc6B1atXo2vXrjAYDFUaCP/8808MGjSIKg0hhFQSGjJKCCEVNXLd
3BASEoITJ04gKCjovoNRZQRBhUKBS5cuYceOHYiOjoaTszMEJkC8ueR/dnY2duzYgbzcHGRlZaNZ
s2b3vAoj5xxalQINa7sjI1ePnBv3NsxTYAyB3s4oKi5Bo0aN4O3tTUNGy1xjxhiysrKwfPlyqFQq
eHp62r4fElIbGRkZ+PvvyxV+KKFQKDFnzlyMGzcWLi4usKD6g7bMOYJ8XAAA69evx7Bhw+z2xKxs
v//+O2JiYuDo6EgViBBCKgnjNCObEEIqdODAAYwePRo7d+5ESUnJg3ujvtm4Xr58OerUqQN/f3/I
sgxRVEKySCi4UYC1a1cjPT3Dtgpj3bqRUCqV6Ny58x31cC5YsBC5ubm222q1Gnh5eUGWZfTr1w8u
Hj5IuHgdsgWQZBmyLEOycFjkm4dFhkWWYZFv/txS+u8gbyd0bxWK+AMHwRhDnz59avQw3OouV0mS
sGDBArthtNZAaGUymXDixMly3y97+4AAf7z73nvIKSiBZOGQb5aLZJEhyxzSrWVk/b5Fhsw5LBZ+
s1z5zXKVb94eN//NYeHWc/xzXr3Rgpe71Ie7kwrt27fH6dOnq2xRGc45Bg8ejDFjxqBfv35UgQgh
pJJQDyEhhNym8RkbGwuNRoMjR44gKirqgTwOpVKJbdu2obCwEDExMVAolOAABAjg4Ni+bRvMZjMi
I+uibdu2EAQBgiDg+PHjMJlMOHfuHCIjI/8zFOp0Otum387OTmjSpAlSUlKg0Wiwdu1aeHp6oF//
AbheKCH5ch4YGO5kvlp4gBsYE7BhwwZ89dVXNH/wljq2Zs0amM1mW9CLjo4G5xynTp2y21LiySeb
4eTJU7cN09evX8fETz5B3759US/qCeTcqJ4PMBy1Cvh5OsJgNKNevXrw8PCosg9PiouLUVhYiNjY
2NuGY0IIIRQICSGkUlgbm40aNcLevXvRsGHDan8MRUVFOHjwIGrXro3GjRvDaDTBcrP3raCwAJnX
rqJ582YAmC3M3bodQW5uLiwWy22DBGMM165dQ3FxMURRhI+PN3r16oVjx44hKCgIkiQhOzsbN24U
4Ifvv0dMTAzaNG2OMxev4/oN/b8+fplzuDurYTKbsWvXLri6ulIjvgxJklBYWGi7JpxzREVFISAg
AAaDAYmJiRCE0qn+CoUC0dGNcepUQrmyZIzBaDShU6fOOHnyJE6dPIl+A56HwSKgsMRYpc8hItAd
sgzs3r0b/fv3h9ForJIytq6kWrt2bfj6+lLlIYSQynyPpUtACCG3984772Dv3r33PBfvXnHOMWTI
EMTExMDDwwMGY+lWEpIkwWAw4HxKMpydnWE0mmA0Gm2bzVssFmRnZ9vOoVarYTKZKlxd1GKx4MaN
G/j113W24JGdfR1z534HNzc3BAUFIT093ba3oSiKOHLkCJYsnI8wLxHR4T5QiLffloIBcHPSIDk5
Gc2bN4daraYKVYbFYoHJZLKVFWMMLi4uMBqN6NatGxo1amT7mTUUhoWFVjifVRAEHDlyBO3aPw3/
wCB8N28u8rP+hp+HA0SBVVkdDfJyAhMErFixAu3atauyHmBRFDFz5kxMmzaNKg4hhFAgJISQ6tOg
QQP4+vri8OHD1Xq/BQUFOH78OLKzs0s3IrfIMN8MckXFRfD29i63UqjBYEBCQgL++usvW0gIDg62
hcWyhyzLOHz4CJYuXQZZlm29OowxaDRq7N27H0ePHkX//v1RUFCAyMhI+Pv7Q6VSwWw24+flvyB+
1yY80zwEAV5OkCvIhCG+rhAFhlOnTmHMmDEPfGGemszaOyiKIiRJgtlsRrt27TBo0CDbRvSMMXh6
eiI4OKjCIcDXr1/Hgfj9UKvVCA0Nw6ZNm7BsySL4uqnh5qRGZa8YIMscPu4OKCwsxJkzZ1CrVq0q
6R3knOP48eNwd3dHWFgYbUZPCCEUCAkhpHq98MIL+P7776s10AQEBAAAnn76aUyYMAEOjlooFSIk
iwWS2QyTyVTukGUZISEhiIyMRN26dREdHQ0AdrexBseUlBQkJibedi4WY8Dly1ewatUqdO7cGVqt
FtnZ2XB2dkZOTg5EUURmZibmzZsHXVYS+rRrAAe1wtZYlzkQHeYFpUqNo0eP4plnnqGGfLlrzCCK
ou3/LVq0KFemjo6OGD58OHr16oXY2Fg0bdoUnTp1qrDMBEHAtWvXkJtzHSqVCuHhkQCA77//HudO
HELdIA84aBSVVg6iKMDNSY1Lly6hRYsWcHJyqpLrpFQqsX37dsTExEClUtGwY0IIoUBICCHVq0eP
HkhPT6/W7RJMJhNGjx4NANi2bRtiY2Nx6NAhuLu6gDFW4V6C1lCoUqmgVCrtQmDZ21gsFvj5+eH5
5/sjOjoaCkXFIUEQBBQWFmHhwoUwGAyIjY1FYWEhmjVrBvnmSqOMMZw6lYCZ0z9DI38BjcJ8IAoM
CoHBzVkDxhjy8vKqbG7Zw0wURdtQZGdnZ3DOKywvo9EIT09PREZGonHjxnjqqacQGlp+6ChjDAZD
6W2dnZ1QXFwIn1q14ObmhtOnz2DBTz9CLRUj2McFosDuewv76DBvsJsLGI0fP77KVo81mUzYuXMn
pkyZQpWGEEIoEBJCSPVzdXXFc889h4ULF9rCU1UfJpMJ48ePR2JiIkJDQ6HT6TB+/HgMHDgQJpOx
wmGgd3OYTCaUlOgQERGOvn37wN3dvcJQWLo1QuncxQsXLqBDhw4AAE9PT9SpUweJiYlgjMHJyQlr
1q5D0rHd6BsbhpgofwisNMy2atUKkiRVy3V7mA5RFOHr6wtZluHl5XVHZWY0GqHX6zF69KgKA3ZJ
SbFtUZqwsDBYbl53FxdXmEwmrFm7FvF7tiEq2A1ujur7Cun1a3tAqVRh3759iI2NhSzLVXKd5s+f
j6eeeormoBJCCAVCQgh5cMaNG4edO3ciJyen2gKDLMtwcHDA7t27sWzZMgBAWloaZs+eDc55hQvF
/Nth7cExGo1IS0uzncNoNKJdu7YIDa1z21B4+PBhODg4QKVS4caNG/D29kZeXh4CAwMBADdu3IBW
q8XVq1cx4+vpyLp0DgqFAnFxcZgwYQIFwNuUb69evQAAvr6+dxXoAaBWrVrlyspkMsPBwQFGoxEF
BQWIiIiAt7c3PDzc4eLiAqVSibS0NPzwww/Iv5KMppG1INxDb6FCFKBVK3Djxg3k5+dXWeAXBAE7
duzAyJEjacgxIYRUEdp2ghBC7oCHhwf8/Pywb98+9O7du9obp+3bt8dff/2FadOm4ciRI3YBD4Bd
A7oijDGsX78eaWlpuHbtGgCgW7duiIiIsIW6hg2joFSqkJycXK7nyGKRcfbsGeh0OjRv3hyXLl2C
v78/ZFlGYWEhPDw8IMsylEol3N3dERcXh5SUFEybNg1KpZIqUAXlYTAY8Ouvv8LPz8+2kMzdCA4O
RmZmpl2ZC4KAo0ePonXr1jh//jx0Oh28vb0hiiLy8vIQEBCA9PR0MMZw4MABpKamomuXLjCLTjiT
lnVzf8n/plaKUIgCdu7ZjzZt2tgtTFRZBEHA9u3b4e/vb1txlRBCSOWjHkJCCLlDs2bNwsKFC28b
uqoyPFh7C6dNm4Yvv/wSBoPBrscoNzcXRqPxX3uVLl26ZAuDAPDHH39gzpw5ZVYpNSI4OAhOTk7l
Am/pXndm1K9fH9nZ2fDw8MDp06dhsVig1WrtFqexDh1MTk5GYmIiVZwyrNf15MmTWL9+PTp16oRW
rVrZthS5m6NBg/rltnmQZRmhoaE4e/YsPD09ERgYiPz8fKSnpyM6OhqCIMDd3R1ubm4QRRG5ublY
sHAhLpw7hjZRfnB1VIP/R3+hLHOEB7hCYAybNm3Cq6++WulhkHMOg8GAb7/9FpMmTaKKQwghFAgJ
IeTBq1u3LmrXro3ff//9gdy/dTGZgIAA6PV6u0VjSkpKbPsRVnSYzeYKe+rc3d3tbidJEpo1a1ph
D+iNGzcQGhqKv/76CydPnrQthGJtwHPOodfrUVxcjPPnz2P37t3VHp5rOsYYJkyYgIYNG6JTp07Q
G4zgYNDpdLhy5Yofd+RhAAAgAElEQVRtruCdHBXN+xRFEY0aNUJMTAzS0tJw8uRJNGvWDE5OTkhI
SICPjw9atmyJjIwM1K9fH8XFxXBycsLx48fx0/wfEeBsQUx9f+BfegotMkfjUG8olErk5OSgadOm
VXKdkpOTIQgC9Q4SQggFQkIIqTlef/11/Pzzz1AqlQ9sTpNCoahgURnpX3sHJUnClStXyp0rPz+/
wlVIPT09yz0/QRDw5ZdfgjFm6xG0frVusn716lVs2rQJZ8+eBQD4+flRpbkl6Jw5cwY7d+6EWq0G
l2UsWrgQq1evwf79+7F3797/7Om9dS5hWQEBATAajTh06BC6du0Kb29vnDt3DvXq1UP79u1RVFSE
c+fO4fnnn4fJZIKHhwdCQ0Ntq8CuWrUKW3//FZ2a+KNBiCcsFWy14uyggoNGCVmWER4eDoPBUOnX
SRRFTJ06FT/99BOtTksIIRQICSGk5ujRowccHBywZs0auz3kqpNGo7H15lnnnpnNJhQVFd12eKHR
aMSYMWMQFBRkd6569eqVu63ZbIaPj/e/7rtYtpHOOUdRUREOHTqEY8eOwWQy4emnn8bp06fh7+9P
laYMzjlq1aqFN998E1OmTMGYMe/gzJkzKCgowMWLF5GTk4Pjx4/DYrH8ZxgsKSmxlQPnHAqFAt27
d0NmZia6d++OXbt2ISAgwBbakpOTUb9+fajVapw7dw5qtRpt27ZFamoqXFxcbOe7npODeXPnouT6
JTzTvA48nDWwyP98OODlqgHnwNq1a9GjRw8YjcZKv07r1q2Ds7MzmjZtSovJEEJIFaNFZQgh5C5N
mTIFI0aMwDPPPAO1Wl3tPRgeHh52+/oxxlBUVGRbYfJ2DWhBEFCnTh0UFxfDw8MDGRkZeOKJJyrs
aXJycqzwHLfuNWexWJCSkoL09HQsWrQIo0ePxueff46nnnrKti8isQ+ETZo0QbNmTyIyMhIKhQK1
avnYyuz333/H5cuXERYWBo1G86/nunAh1fahhIuLM7755hu4ubnhwIEDiIuLQ/v27QEAhw8fRkhI
CGrXro309HRERUXZehHT0tLQqVMnJCYmwmAwoHbt2khOToajoyPi4w9g9eo1GD1qBGrX8sXx89kw
mS3w93QCB7Bs2TKsWrWq0uu/KIpYvXo1xo4dW+7DB0IIIRQICSHkgTfoW7ZsCVEUsXv3bjz77LNV
tiH37ciyDLVabQtypYvO8Jurfbr/a49Ko0aN0KhRI7tVSSsKhIIgwNHRscLhgIIg2BYk2bhxI9at
W4fnnnsOf/zxB7Zv3w5RFGE2m6khX0G5bdu2DS1btrT7fnFxMQAgLy8PjDEwxpCVlYWAgIDbnss6
9NQ6R1OSJEydOhVdunRBly5doNfrsXz5ctStWxfdunXDjh07UFBQAEdHR3h5eWH//v3o1q0btm/f
jtTUVPj6+iIsLAwJCQkIDAxEYWEhSkpKEBQUhJWr1kAQBIx59z2cSMlEvWB32xzWqhgyOnfuXAQH
B+O5556jSkMIIdWAcRqLQQghd+3KlSvo3r07Vq5cCa1WW633rVKpMGfOHOTn59vCQWZmFoqKihAR
EV4pQ+wYY7h8+YotrFjDsJeXJ5ycnLBx40b4+vpi8ODBSEpKwquvvoqIiIi73jrhcSEIApKSkpCX
l1fhtTabzTh+/LhtO5GYmJgKFwGyhuzNmzcjI+NvuyGjgiDA1dUF9erVw8CBAxESEoLTp09jy5Yt
GDx4MI4dOwaz2YycnBxER0cjKSnJtn+ks7Mz0tPTERgYiKSkJOj1emi1WmRkZMDHxwcmkwnFxcVo
3vxJ9OnTB6mpF1FQUIC2bdtW+gciAwYMwMyZM9GmTRuqOIQQQoGQEEJqJs45Bg8ejJCQELz99tuQ
JKnaesQUCgV+/vlnJCcnlwmEmSgqKr7nQChJkt1COYwx5OTkoLCwyO52ZrMJJ06cwPTp05GYmIjg
4GC8/vrrKCoqoh7BfyGKIvbu3VtuCC1jDCUlJUhOTgbnHKIoIjAwEF5eXuXKsbCwEBkZGTh79hx0
Ol2F15tzDnd3d6jVKjzzzDPo0qULBEHAzJkzERUVhdDQUJw6dQparRaMMTzxxBNYuXIlgoODYbFY
cOnSJYSGhqKgoABHjhyBn5+f3ZYiRUVFUCqV6Nu3L1q0aFGp+w8qFArMmjULWVlZWLZsGVUaQgih
QEgIITXblStX8NRTT2Hjxo1wcXGptvtVKBRYtWoVTp48WSYQZsFoNCIwMOCetnrQ6w1wcNDaBcLr
13PshgMyxvDnn0fh6+uLDh06YMqUKVWywuSjGgg3b94MhaLimRrWoaLWobwVEQQBWVnZ2LVrl91w
4Yq4u7vBzc0NJpMJvXr1Qvv27VFcXIyFCxdiwIAB2L9/PxhjSEpKwosvvojr169j27Zt6NKlCzZv
3mz7gOPWFWV1Oh10Oh0UCgVmz55dqQu+pKWlYezYsdi+fTs8PDzoAwZCCKmuv1GTaMdXQgi5a5xz
28qMP//8M5555plqbcDm5uYiKSnJtgl8SUkJZJlDo1EDKJ2vdjeH0WiAKIq2/5fuKaircBGZ5cuX
o0ePHjRP8C4D4ZkzZ27O9yx//S0Wi+24XRlZLBZotVrUq1cPHh7uyMjIuG0voV5fGtSdnJyQkpKC
gwcPwmKxYPDgwdiwYQMEQcCzzz6LkJAQ7NmzBw0bNsT169dx8OBBW/gsGwYlSUJJSQkKCwuxe/du
hISEoEePHpV2fRwdHfHhhx+iefPm6N27N9UrQgipRrSoDCGE3ANrY/ndd99FixYtcObMGTRu3Lha
l8gv20tkvVuj0XTXj6F0iwPJbv5f6d6C9sMbBUFAfHw8jEaj3TBCcucfIBQVFd3zOQRBsPUg1qpV
C717P4u4uAO2xWjKlh0A5OffgJOTE5RKJfR6PXbt2oWzZ8/itddeQ15eHrZv3w4vLy80atQIX375
Jdzc3Gw9mGXL12QyQa/X4+TJk0hLSwOASq/rK1euRHZ2NjZs2EB1ixBCKBASQsjDEwodHR3x3Xff
4a233sKGDRugUqmqvDFrsVgQFhZmF+CsQ/zMZhPu9u71egMEgVUQCO17B52cnKDX6+9pSCqBbZ/H
W8vy3/azZIzZVvQ8d+4cPD09Ub9+/ZvnYWjT5inEx8cjNzevgnpXOrc0MDAQAGwrw/7vf/9D586d
0aVLFyxduhRpaWnw9PQsd9+yLEOSJFy6dAkXLlxAVlYWnJycMGHCBAwbNgwmk6lS6rq113ns2LEU
BgkhhAIhIYQ8XDjnaNu2Lfz9/bFs2TK89dZb5Rr9VRFEZVmucEVPs/nuF7cxm80QBKFc0Lt1wRCN
RkON9ft0a4jKy8uHp6fHbXvbkpOTsXDhQtv/lUolnn76abRq1QoODg4AgBYtWuDgwUMoKCi4paew
tD5YLBa7nj9PT08cP34cJ06cAOccarW6XJ1mjEGn02HNmjWYPXs2MjIykJKSgm+++ca2VUll1YVJ
kyahWbNm6N+/P1UQQgihQEgIIQ8Xa6N4w4YNiI2NRZMmTdCkSZMqv1+lUgmz2VyuR6V0+CfH3Y7m
41y2na/s8ypLpVL966In5N/ribOzMzIzM+2+n5OTAxcX53Krj1r5+PjYhidbw/u2bduQlpaGYcOG
2Xpxmzd/EnFx8TCZTOXOkZ+fD29vb7tyvfWr9fxKpRKMMWzevBmxsbEIDw/H7t27MXz4cIwZMwZm
s/m2j/Versn58+dx5MgRxMXFUe8gIYRQICSEkIeXo6Mj3nrrLcyZMweLFy+u8tCkVCohCAJ0Oh1E
UQRjAkwmE+rUCUF6evq/DkOsoGkOzvktDX0Oxv45hyzL8PHxpgb7fZAk+3manHPk5uYgODjotnv5
Xb16tcK6FBAQAJPJZFdmAQEBSE1NtevpZYyhsLDIFgjLfxDwTxBUqVQ4deoUkpKS0KRJE/j7+yM8
PBwjR46E0Wis1K1VOOcwGAyYMGEC5syZAx8fH6oghBDygNBEEEIIqQSMMbz99ttwd3eHdfHmqgyF
bm5uWLJkCVq1agVZlqFWqzFixNuYPn06ioqKYDab7+iwWCw3h6DyW35mP+xVlmUEBARQQd8HBweH
cte/oKDwX8unoKCgwq0q0tPTbQHTevj7+1UY2Kwb398ayKyb2bu4uMBgMGDJkiVwcnLC7NmzkZOT
g48++ghvvPFGpc0VLEuhUGDu3LmoXbs2OnXqRL3OhBDyAFEPISGEVKJ58+ahY8eOSE9PR+3atav0
vvR6PUaNGoVXXnkFoihCrVZDoVDA3d0dJSUld3QO6/yx0jmJJgClDf+K5hMGBwdTAd8jzjk0Go3d
/FJrCCop0UGhqLhHNzIyEl5eXliwYIHte6Ioonfv3jAajeWCn69vLWRlZZc7j8VigVKptPuei4sL
1Go1VqxYgcuXL9uGIfv5+WH9+vUoKiqqsh7hvXv34sCBAzhx4gRVDkIIoUBICCGPDl9fX3z99dd4
//338eOPP1bpBtvWuWXWxUWswc3d3R03bty4o5Di6Ohk+7fJ9M9CIbf2SsmybFutktw9WZbh5+dn
19tmHe6p1+ug0Whu+7uOjo7o2LEjnJyckJ2dXSbAl19UyMnJGZmZWbfdn9B6Pjc3Nxw+fBhxcXG2
eYcTJ07ESy+9ZNveoqrqrcFgwIwZMzB16lSqGIQQQoGQEEIeLZxzdOvWDatWrcKcOXPw+eefV7jQ
R1UxGAwYO3Yspk+fjuTk5JvzCytu2JfOM2QAuC1gWG976xxEi8WC4ODgan0ujxLGmG2D97IhEQB0
Ov1/zvmsV68eOOcICgoCgNuuZHu7snZzc4NKpYJWq0V+fj7mzZuH/Px8AECbNm3www8/wMHBAbIs
V9nwTWvI/PDDD9GzZ0/07NmTKgYhhFAgJISQR6/hzznH4sWL0b59e3zzzTcYMWJEta6g6O/vj9mz
Z+Pq1asYM2YMCgsLK2zkOzo6AuC2cFK290qr1drd1snJ6S4XqiEV1Q1JkmxBsLROlIZ4tVpVKfch
y5YK7zcrKwtarRbx8fFIT08HADg7O2P79u3w8/OzBcGqrKMKhQJr1qzB5cuX8fPPP9OqooQQQoGQ
EEIe7VD4448/olu3bujatSvCw8OrbeEMayPb398fq1atQlJSEkaPHg1JkuxCnVKpsjXK9Xo9LJbS
zc4BQBBEuwa7t7dXpW038LhSKpWQJMm2omjpyq4cRqMBkuRwT/XDbDbbzQ2saLVSxhjWr19vd/7J
kyfjxRdfhEKhqJZgxjnH8ePHsWjRIuzdu9dumDMhhBAKhIQQ8kiGwsjISEyePBnjxo3DokWL4OLi
8kAeS/369bFv3z6sXbsW8+bNQ1FREURRhEKhgMViQWxsLNq3b4dBgwbZGurWIY5Wfn7+dr1b5O5Z
h+WWDYQAYDSa7faAvFM6nR4qlf1CMRUFQs45fH19odPp0KJFC3z++eeoVatWpe4p+F+vBZPJhM8/
/xyjR4+Gp6cnVQZCCKFASAghj4dBgwZh9+7d+N///ofvv//+gQ2TM5vN6N27NwYMGIBZs2ZhzZo1
qFMnBO+99x68vb3x999/27YvsG5HUJa3t7dtiwpyb1QqFWRZts3/swZAi8UMSZLuOhDq9TqIotO/
BkJrWZ47dw5msxlGoxFms7lS9xT8LxaLBW+//TaaNWuG4cOHU0UghJAahvYhJISQKjZ//nwwxvD5
559DqVQ+0D3XTCYTRo4ciR07dmDKlCnw9PSExWK5ucqoCWazGSaTqdwqo87OztQ7WEnBvOwBAJJk
ueN9I8seJpMZklT+e7cKCamN4uJilJSUVGsQBEqHyc6ZMwe5ubn47rvvaL9BQgihQEgIIY/hG60g
4Ndff8Xp06cxd+7cGtHLplQqbY/DOuexbLCwNtxlmUMUBTRr1pR6B++TSqUqt5l86TxC2RbG7+Yo
/T3770lS+Q3oIyMjH0gQsy4is2/fPuzevdtW1wghhNQsNGSUEEKqgYODA3788Ue89NJLiI2NRePG
jSuc7/WgODo6IigoCBkZGRBFEUqlEqIoIja2NV577bXbbnNA7o6rqyuuXLlS7vtGo/Guw5I1xJet
R7Is252Hc46oqKhq7d21DotOTEzEDz/8gO+++47mDRJCSA1GPYSEEFINGGNo3Lgxvv32W3z00Uc4
d+5cjXp87u7uOHz4MD777DN4eHggKioK33//HYYOHVrhBujk3oKSi4uLXW+g1a09ff91GI2l+0He
OtxUksp/yFC3bt1qDYSMMRQUFGDChAl4/fXX0aFDByp8QgipyW0UTgP6CSGk2gIBYwwrV67ElClT
MH/+fPj6+taoYXSMMeh0Omg0GhreVwUSEhIwY8YM2yqujAlwcHBAs2ZNsX///rsqJ8aECvYdZHYL
AomiiHnz5tptTVHVdVyv12P48OEYOHAgRo8eTfsNEkIIBUJCCCG3hsJJkyZh69atWLJkyQNfaIZU
H0EQoNPpsGXLFmzcuBH9+vVDz549kZiYiC+++OKOz6NSqW3bOXAu2wVAheKf8KfRaDB79jd2+09W
JZPJhPfeew916tSxzZelMEgIIRQICSGEVGDIkCFISkrCkiVLoFar6YI8Tn98GYNWq4Ver4csy7h8
+TLGjRt3x7/r4OAIxhj0ep3dvoYajdauN9DFxQVff/1VtQRCxhg+/fRTFBYWYt26ddQzSAghDwma
Q0gIIQ8A5xxLly5FYGAgxowZYxvmR5/RPT7lr9PpbKFJq9Xatvz4r6PswjGSJNm+X9Hm9gqFWC2h
jHOODz74ABcuXMC6detsAZEQQggFQkIIIRWwNpaXL18OSZLw7rvv0ry9x5inpyfmzZuHunXrorCw
8F8XlBHFfxYIL7uojMlksps/CABKparc9yo7CCqVSnz44YdITk7Gli1b6IMNQgihQEgIIeROabVa
7Ny5E5IkYcSIERQIH+MPCGrVqoXZs2fj22+/RZ06dVBSUlLB6qJGaDQa2++U3dfQZDJBofgnLMqy
jMDAgCoNg2q1Gj/88ANSUlIQFxcHFxcXuw88CCGEUCAkhBByB2Hgt99+Q0FBAd58880atT8hqd56
oNfr0aBBA3z//ff44osv4OTkBJPJBEmSIEkSGGMQRRGcc4iiCJVKafuZLHO73kBZlhEcHFx1DQhB
wLfffoutW7di+/btcHV1pUIkhBAKhIQQQu4lCIiiiC1btqCoqAjvvPMOVCoVDbt7jOuDyWRCq1at
sHr1akybNg2FhYUwmUwQRQUsFgtq1w7GjBlfo127drYeQsbsh2paLBZER0dX+uOzznucPn06Nm3a
hI0bN8Lb25vqKyGEUCAkhBByP7RaLfbt2wcXFxcMHTq02rYKIDUzFAKl20jExMTg8OHDeOuttxAR
EY6PPvoQU6ZMgZubGyyWf+YQ3prHZFlGUFBQpYdBURQxefJkJCQkYOPGjfD397d7zIQQQh6yvzm0
7QQhhNQc1t6XV199FYmJiZg3bx5cXV0hyzJdnMdc6RBRFfR6PQBAoVBg+vTpWLFiBQDA29sHAQH/
zBk0mUxYs2Y1dDpdpT0Gi8WCGTNmICUlBevXr4e7uzsVDCGEPOQUdAkIIaTmYIyBc46FCxeif//+
GDx4MBYtWgRPT0+6OI85WZZhMBjseuJkWYbZbL4Z1iTbhwqCIKBv3z4wGo2V1nNnsVgwZswYyLKM
vXv30hBRQgh5RNCQUUIIqYGhEADWrFmDnj17Yvjw4UhJSbE19gmxBrQBAwbYgqJarYHJZEK7du0w
a9ZM9O3bt1IWKOKcw2Aw4I033kBAQAD++OMP2nSeEEIepXYHDRklhJCaydronjdvHubMmYP3338f
nTt3tq02SQgAaDQaLF68GOfPX8ArrwxDSEgIJEmqlPoniiKSk5Mxfvx49OnTB5MmTQJjjOofIYRQ
ICSEEFKdVq5cienTp+Pll19Gr169qIeGlPvgQKFQ3FxtlFXKOUVRxMGDB/HZZ5/hhRdewMSJE6ne
EUIIBUJCCCEPqsGfkJCAN954Aw0bNsSnn35aqfPDCClb35RKJWbOnIk9e/Zg8uTJeO655+jCEEII
BUJCCCEPOhRmZWXh5ZdfhlarxYwZMygQkkqvZwAwefJknD17FsuWLUNUVBT1DBJCyCOMFpUhhJCH
gLUx7uPjg99++w2+vr54/vnncerUKahUKrpA5L6DIGMMly5dwtChQ2E2m3HgwAFERUXZ1T9CCCGP
YBuDeggJIeThbLx//PHH2LBhAwYNGoT+/fvbtqwg5K4bA4zh+PHj+OKLL9CrVy9MnjyZegUJIYQC
ISGEkJoeCs+dO4cBAwagdu3a+Pbbb22Ne0LulCiKmDhxIs6cOYP58+fjySefpDBICCGPERoySggh
DyFrYz0qKgrx8fHw8fHB66+/jpMnT9IQUnJHHygoFAokJyfjlVdeQXFxMbZs2UJhkBBCKBASQgh5
2Li7u2PJkiVo164dJk6ciB9++KFS9qEjj2YQBEo3td+wYQPGjx+Prl27Yt26dfD19bX7sIEQQsjj
gYaMEkLII9LQZ4whNTUVL774ItRqNWbMmAF3d3dq5BO7OmI0GvH+++9Dr9dj7dq18PHxoYtDCCGP
MeohJISQR4A18IWFhSE+Ph7du3fH66+/jtmzZ8PV1ZUuEIVBaLVazJs3Dy+++CI6duyI7du3w8fH
hxYiIoSQx70NQT2EhBDy6DX+GWM4ePAgPvvsM+Tn52PMmDGIiYmhzewfQ0qlEmfOnMHs2bPBGMO0
adPQtGlTmitICCGEAiEhhDwOwfCLL77A6tWr0ahRI4wdOxYODg6QZZku0CNOEASUlJRg0aJF2LNn
D4YOHYr333+fgiAh98loNPKrV6/C19cXWq32vl9MnHPOGENubi48PT0r7cV587xMr9fzvLw8mM1m
KBQKuLm5wcnJyfpewNLT07kkSQgLC7vtfaempnKVSoWgoCB686BASAgh5GEMhWazGS+88AIuXbqE
Xr164eWXX4bFYqFg8IhSKBTYvHkzFi1aBH9/fyxfvhwuLi4UBgmpBMnJyfzFF1/k8+bNY61ataqU
F9RXX30lx8XFsY0bN1bqCzQuLk4eO3YsLBaL7fWvVCoxfvx49OvXTwCAtm3b8itXrvDU1NTbTiUL
Dw+Xw8PD2datW+kN5FH8m0GXgBBCHl3Wxr9CocC6deuwb98+TJ48GYcPH8YLL7yALl26QKfT0YV6
RMK/VqvF/v37sXr1ahQWFmLOnDlo3bp1ufpACKnS1yJnN19sZf9d0WvW+qO5c+eicePGtt+/+Xpl
/3X+232Pc8737duHUaNGMaVSyd955x0EBwcjKSkJ8+bNYx988AFcXFx4586d7/hNgd4/Hl20qAwh
hDxGwbBdu3bYtWsXnn32WcybNw8jR47ExYsXIYoiXaSHmEKhwLVr1zBhwgTMmjULHTp0wM6dO9G6
dWtaNIaQu5SQkMC7desm16tXTx46dKi8YMECOSwsTL5w4UKFL6br16/z0NBQedWqVbYg16tXL+7j
4yNbQ9qJEyd4v3795Dp16sjh4eHysGHD5PT0dM4554GBgbKXlxfLyMjg/v7+MiuFZcuWya1atZKj
oqLkESNGyAUFBbbz+/r6ykFBQfLIkSPlpk2byrcGRMYYmzNnDnd2duYHDhxgr7zyitCxY0dh5MiR
wubNmzF79my0b9+eCptQICSEkMcR5xwjR47En3/+iZYtW+Kjjz7C9OnTodPpbOGBQsTDU5Z6vR5z
587FmDFj4OzsjGPHjuHdd9+1hXz6VJ+QOyfLMh80aBCys7NRq1YtpKamYs6cOczV1RWCUHGzWRAE
uLq6QqVS2b7n7OwMNzc32//feecd7uDggLS0NHbs2DF26dIlvPnmmxwAq127NpNlmYuiyIKDgxkA
bNq0ic+aNYspFAp4eXnh6NGjrHv37gDAAcDNzQ3e3t7sxIkTaNSoUYUv8r///hvNmzeHg4OD3c9D
QkJYz549mVKppDcHQoGQEEIeR2UDwoQJE7B9+3aoVCq8+OKLGD9+PEwmExQKBYXCGhwCBUGAIAj4
5JNPMGTIEOTm5mLPnj347rvvqNwIuQ/z58+HJEn43//+x/bt28fi4+NZmzZt7vtFVVhYiAsXLmDm
zJnQarXYsmULW7hwIWOM4cCBA6ywsBB+fn44fPgwA4Aff/wRGo2Gx8fHs3379rGvv/6a63Q6XLx4
0XZOs9mM1atXs8WLF1e4JohOp4OLiwsVKqFASAgh5N+5u7vj22+/xb59+/DUU0/hueeew9SpU3H+
/HloNBq6QDUoCGq1WqSnp+Prr79G9+7dERkZifXr12PRokW23gjqESTk3iUkJIBzjueffx4AGAD2
3HPP3dXrtPSLfUDr0aMHcnJy2MKFC9G4cWMMGzaMHz161PbzW1+3ycnJ0Ov1zM/Pj/v5+fHBgwej
qKiI5+Tk2G4jSRKCgoKsv1/uha9UKmmOOKFASAgh5L9Z2xFeXl4YP348kpOT4ebmhkmTJuGtt95C
amoqrU75AEOg9bpfu3YN7733HsaPHw+LxYKEhARMnjwZISEhFAQJqSSurq4AgLy8PNv3MjMz7+h3
jUYjv/k6ZCaTqezrmH/xxRdCXFwcBgwYgPr16/O0tDT22Wef8VuCpI2bmxscHBz4tWvX2LVr14TL
ly8LFy5cEFq0aGG3cMy/PR5fX1+cPXsWuDnM1Kq4uJhfvXqVy7JMwwkIBUJCCCH2wdA6HHHGjBk4
cuQIBgwYgE8++QTDhg3Drl27wDmnoxoPxhhOnTqFV155BWPGjEHLli1x6tQp/PDDD9BoNBTUCalk
Xbt2hSiKePnll1FUVMQPHjzIp02b9p/vnYIg4JdffoHRaORbt27laWlpZX/OWrRoIU+dOpVPnDiR
rV+/Xujbty8vux+sIAiQJIlnZ2fLAPD000/DYDBgxYoV4JzzTz/9lDdt2pSfO3fu1hB32zeAHj16
ICsri3Xs2JphRkgAACAASURBVBHnz5/nJpOJ79+/n3fo0IF369aNb9iwgQqcAKBtJwghhNzSsLF+
ZYxh2LBheP7555GcnIzJkyfjp59+Qr169dCnTx80b94cBoMBsixTKKlEDg4O+Ouvv7BixQqcPXsW
Hh4e+Prrr9GwYcOym0nblRchpHK0b98eLVu25CdOnGCtW7eGwWBASEgIy83NvW1vmpOTE1QqFTIy
MlizZs1gNpvh5eXFioqKbL8zbNgw9s033+Cll16SVSoVTp8+zVq2bGn7ua+vLzIzM9kbb7zBf/vt
N4waNYqtX78en3/+OT777DPIsowOHTrwqKioO33R81GjRjFJkvh3333H+vTpY/vQT5IkNmrUKN63
b1/bjd3c3FjDhg3lsu8pZrMZ586dY6Io0hsNBUJCCCGPe0Bp0qQJ1q9fj4sXL2Lz5s2YNWsWGGPo
2rUrYmJiEBoaCkmSaLP7u8Q5hyiKUCgUSEtLw4kTJ7Bp0ybodDr06tUL/+///T/UrVvXdlsKgYRU
7UsSAFu0aBFWrlyJq1evIiYmBpxzPnr0aNsqo25ubhg4cCDz9fUFAKhUKrZr1y4sXboUFosFHTp0
wIkTJ5CWlmZ7sY4YMYK1bt2ax8fHM0mSMGjQIHTu3JlZ9w9csGAB27hxI8LCwhgABAQEsOPHj/NV
q1YhPz8f9evXR/fu3YWbt8fgwYPZf7wXMM45f/fdd1nPnj2xZ88eFBQUoFatWujQoQMCAwOZ9cOl
fv364eYQV7sTln0/HzJkCPP29qYa8ohinJYjI4QQcg8SEhIwbdo0XLx4ERaLBa+++ipatGgBrVYL
lUplN+yR3PLHlzFIkoSSkpL/z959h0dVpv8ff5/pSUgnCUlICBBa6L2JKIqCBWVRxO8KKhasKIpl
WVhZUeyFIoiiC7iABUFBFlBcAwgRpNdAAqRBQnqdTD+/P3DObwIJoCax7P26rrkSppznzOTMcD7z
lJsDBw6wcOFCnE4nCQkJPPzwwwwePFheJCF+A3fddZcnOTmZV155hcsvv5zTp0/z5JNPKpWVleq6
deuUiIgI+UATEgiFEEIIb9BTVRWn08n+/ft577332L59O35+fgwZMoSbb76ZiIgIXC7X//ywUu/c
TL1eT3l5OUuXLmXbtm1UVVXRpk0bHn30UXr37o3FYtFeVwnSQjT+WzU7O5uhQ4dq70U4O3Ty+uuv
V1955RWFC8zZE0ICoRBCiP/pcAhQUFDAsWPHWLduHWvXrsVkMtGmTRs6derEgAEDSExMxOFw4HA4
/tShR1EUjEYjRqOR48ePk5KSwqFDhzh58iRlZWUMGzaMYcOG0b59e2JiYuQgEuJ3pLy8XD1w4AAV
FRXodDri4+Np3769Il/UCAmEQgghxM8MiKmpqaxcuZJDhw6RmpqKzWajX79+XHbZZcTGxhIaGkpE
RAQejwdVVbWff5Tn6S0Q712Ep7i4mPz8fE6dOsWWLVvYsWMH/v7+tG7dmo4dO3LTTTfRrVu3814n
IYQQQgKhEEKIP73c3FwWLVpEcnIyJSUluFwuAPr27UtkZCQdO3YkKSlJW8bdu4jDuUGs0f6TrCWw
eTwebQjsjz/+yMmTJ8nJyeHQoUPY7XYMBgOhoaH07duX0aNH06lTJwmAQvxM3ve5y+UiIyODli1b
otfr/9eHnqvKz3wBfB/zSx4vJBAKIYQQ9XqC53suUlVVRVlZGeXl5axbt47KykqSk5PJyckhKCiI
wMBAwsPDadGiBdHR0XTu3BmLxUKrVq1wu901ehS99bx863pd6j7p9Xot/Pn2+BkMBrKysqisrOTI
kSNkZ2dz4sQJSktLqaiooLS0lObNmzNo0CBCQkIYOHAgsbGxBAcH06RJkzqftxDi0mzfvp2CggJ0
Oh0mk4lmzZr9z37B4g1z69evVz/99FOcTidDhgzh7rvv9r4WyurVq9VVq1bhdrsZOnQoY8eOBVBu
vPFG1ePxsHbtWi0Yjhw5kr/85S+MGzdOPpyEBEIhhBC/L263m/T0dE6ePEl6ejp5eXnk5eWRlpaG
w+EgOzub8PBw/P39iYqKIiAggJCQEBRFwbsM/KXS6XTk5eXhcrmwWq2UlpaSn5+Py+Xi9OnTBAcH
ExYWRlxcHK1btyY4OJjOnTsTFxdH27ZtMRikepMQ9RR4UBQFj8fD/v37SU1N1YKgXq/HaDRqJVpa
tGhBy5Ytf9cLMJ3bG3cpvXO13cf3ukWLFnleffVVxTuywmQyMWLECHXmzJm6d9991zNnzhzF6XQC
YDabGTNmjPr3v/9d16FDB4/H4+Ho0aM6AI/Ho3bt2lUdP368MmnSJAmEQuoQCiGE+H3R6/W0a9dO
q79Xm6KiIoqLi0lNTeX06dMUFRXhdrs5fPjwzxpSqqoqLVu2JDAwkLCwMGJjY4mPjyc4OJiEhAT5
YwjRiEEwPz+fDRs2AGA0GrXyLIqiaDXxPB4P2dnZnDp1inbt2hEeHo5er/9Ng6HL5VJnzpypLl26
lMTERGbNmkViYqLumWee8axdu5bdu3crJpOJq666ylNcXMyOHTuU0tJSHn/8cXX79u0MGDCAN998
U2natKnSo0cPT35+PnfccQd5eXksWrRIGze/YMECxe128/3336uRkZHKPffcw5EjRxSA9957D7fb
zfbt29XQ0FBl7Nix7Ny5s9YXRKfTKZytuSiEBEIhhBB/zBPI8PBwwsPDadOmjbwgQvyBKYpCYWEh
y5Yt03oCDQaDFgC9IdD7b51Oh8fjQafTcfz4cbKysmjZsiXh4eG/WSh8++231RUrVihLly5V33zz
TeX2229XN2zYoI4ZM0ZZs2YNO3fuVBMTE5WMjAzl6aefxmg0Kg8//LCnuLhY2bt3r3rzzTcrjz32
mLp06VIlKChIcTqd9OzZU+3Zs2eNJzN27FgWLFjA9ddfT4sWLXjmmWfU3r176wDuuOMOlixZwjXX
XEPr1q155pln1O7du2thMiAggH79+qnez1Cj0SgHn/j/XxLISyCEEOKPdgIphPjj8vbi5+bm8q9/
/YuFCxdq9Urdbrd28S7g5L3N93bff584cYL9+/dz5syZ3+T5LFu2DIfDQa9evZT7779f9Xg8FBQU
0L17dyIiItQ5c+awevVqgoKC1AkTJgBw5MgRnE6n+uyzzypOp1M9dOiQtj2bzcatt96qtGrVSpva
paoqDz30EC+//DLNmzdn37593H333cq0adM8AE888YQyY8YMmjVrxq5duxg7dqwyc+ZMj8/nppKf
n68WFBSohYWFsriMkEAohBBCCCF+G7m5uXz00UfMmTOHU6dOAdQa+Fwul/Z7bUHQe1FVFafTSXZ2
NgcPHqS0tLRRn493YSrfsPtT3lKeffZZDh06pKxZs0bt06cP+BS2N5lMREREcN111ymjRo2qMd/Q
N8h5t7d+/XpsNhurVq1Sdu/erYaGhvLZZ58BsHbtWtxuN2vWrFF27NihBgQEsGTJEm2/Kioq1BMn
TuiOHz+uO378uM7hcMiQUSGBUAghhBBCNB6r1crChQt59dVXOXz4MHq9/ryQV9vvvv92u91aUPS9
zlsX1G63k56ezp49e7Db7Y1Spmb06NGYTCY2b96szps3TzEYDERFRaGqqtq/f3/FYrGox48fV0aO
HKn1+PXo0QNAue+++9SNGzeqa9euVc8Jlef14GVkZPDPf/6Tjh070qdPH6WyslKba52enq5Onz6d
pKQkBgwYoDidTm1FVp+A6g3fEgZFDTKHUAghhBBC1DvvnL7q6mrmzp1LVlYWiqJgNBpxu93afEDf
+YLei/c276IyvgvLeH/X6XQ1Fp3xXfXX4/Gwb98+TCYT3bp1a9Dn+cQTTyiA+tBDD5GYmKiuWbOG
4OBgBSAkJERt3rw5R48eVYcNG6Z4g968efOUp59+Wr366qtp27YtixcvVuBsOZ6qqqpa25kwYQJG
o1F9//33qayspFevXrzyyisKwKOPPqoYjUZ10aJFWK1W+vXrx0svvaRt0+1219hWVVUVDodDDlJx
9gsDKTshhBBCCCHqOwgCvPvuu2zduhWj0YjJZMJgMNR68S4m47uwzLm313XbuRer1cqpU6fIy8tj
4MCB9OrV67d4DVRFUZRzCsNfcA70xYrIS2F60VCkh1AIIYQQQtQbu93Of/7zHxYsWEBoaChGoxFV
VWv08Hl7AH0XjqmtJ1Cn02m9gefe5rsdAIfDQW5uLpmZmeh0OnS6325mlM/cP8Xnukt6zLm/X+i6
S92PX/p4IYFQCCGEEEKIC/KtJbhmzRrmz5+P0WgkICCg1pIRvgHP9+I7X9A3DPoOET13qKlOp8No
NHLy5ElKSkpQFEVb5OVSB8Gpqso333xDQUEBnTp1Ijg4mICAAMLDw7V9E0ICoRBCCCGEELVQFIUN
GzbwwQcfUFxcjF6vP29uoDfMee9fV8Crrfag9/HnFqkHKCwsxG6343Q6f1FwU1WV77//nq1bt6LT
6Thx4gTh4eF06dJFC5smk4n4+HhCQ0NrBGAhJBAKIYQQQggBTJs2jdDQUPR6fY3hoZcS9uoaBurb
Y+jtUfQOL7VarTWC4C8NaIqikJGRUaN0RGFhId988w0tWrSgZcuW+Pn5cfDgQfR6PZGRkYSHh0s4
FBIIhRBCCCGE8AoLD8fj0wOoqmqtK4j6DgOtqxfx3OGkvqHS7XZTXV1d4/ZfKyMjA1VVKS0txaNC
YGAgFrOZ7OxsTp48SatWrWjZsiV6vZ78/Hzy8vIAiIuLIzo6GqPRqD1nCYdCAqEQQgghhPifYzaZ
CG/alJzsbG3uXl3zB+vqDfQdEuobDn0L0Ov1+npdLObEiRM4HA4qKirwKHquuOYGXG43LreH4jM5
FOVmkZWVRU5ODk2bNtWGkqqqSk5ODqdOncJgMNCuXTuCg4PlQBB/SFKYXgghhBBC/Gomk4kuXbvR
rFk0LpdT6yX07d2r6/dzi9K7XC5cLhcejwer1YrNZtPuA9RbwfnvvvsOk8lEaWkZg4YM07avKAph
zeJJ6Nib0Kh43G43+WfO8N///pcDBw7g8Xi0YOh0Ojlw4AA7d+7kxIkT2r5JZTfxRyE9hEIIIYQQ
4ldTVdDpdLRP6kjrNm04cugQRUWFlzxc1LeX0OVy4e/vT2VlpTYk0xsYvff/tdxuN0VFRQDY7Paf
Al7NJ6TXGwiJiCGoaTRFp09iLSsiLy+XnJwcEhMTiYuLw8/PD1VVtbIXOTk5xMbGEh0djb+/vxYO
ZTipkEAohBBCCCH+9DweD6GhYVx9zTDyz+Ty444duFzOGrUG61ph1GQyYbfb0ev1lJaWnrdi6blD
Tn8Np9OJzWajuLiY2LgW2jzA84OuiqqqhDZLICiqBWV5mVjLCsnIyODEiRPExcXRtm1bDAYDiqJg
MBg4c+YMubm5BAQEkJSUhMlkkmAoJBAKIYQQQog/J5vNhsGgPy9INWsWw4ibR2K32cjMzCD1yGEt
dPnOF3S5XABYrVZtnqB3WKbvT29PoW+9wV9q3759qKpKUVEh140cg8FgwOFwXvhBKgRGxuMXGkNZ
4SnspXmcOnWKvLw8wsLC6Natm/bcdTodVquVnTt3YjabadeuHYGBgXKwiN8dRZUBzkIIIYQQ4lfo
168fmZmZjLvzLoKCggkMCsLPzx+doqDT69DrdOj1egwGPWVlpVSUl+N0OikvL6ewsBCj0YjH48Fg
MPx0v4v/NBgMWrCsjcfjoX///vTq1avW21944QUANm7cSFbOKRRFYdLT04iNb4HNZkdRdGRlnqRZ
bBxutwdVBbfnp3mRKqiAw26nsjgPZ0W+Now1NjaWNm3aYDabtR5N73zKwMBAmjdvTtOmTeWgEb8b
sqiMEEIIIYT4VcLCw7HZbLz6ystkZGagKOefYnrrEwYFBREfH0+bNm2IjIxEr9djs9m00FTXz3Mv
3kL3v0RpaSlOp5Pi4mJ27tzFi6+9zStvzWfB3DdZtngher2e4uIipj/7GBaLf63bUFUVvcFIYEQc
gfHdwBQEio7Tp07xzTffkJqaisPh0Ia36vV6rFYrqamp7Nmzh6qqqhrbEuK3IkNGhRBCCCHEr2I0
GLhtzO0cPnSIhe8toEVCAk8/MwWL2XzRx3rn6PnOE4T/3/Pn+9N33qF3LuLPnZOnqip5eXno9Xo+
+eQT7n3gYfwsfnjUswvNFJw5g8fj4emJ9zJx8lSqrVUX3Z5ep6NJZEtcbjdVRdkYKSMzM5PMzExC
QkLo3r271qPpHUq6d+9eLBYLSUlJ+Pn5yUEkfjPSQyiEEEIIIX41VVUZMHAgk596BrfbzcMP3s8r
L88kPS1NW4mzrsf59vpdqJfQGxx9y1b83N41RVHYt28fAA6Hg5CQUEDBZDaTceI49z38OBkn0mnS
JJA+/Qexfs3nl7yqqaIoBDSNxxDRDpc5DAWF0tJSkpOT2b17NzabrUbAtdls7N69m0OHDtV4PYRo
TPrp06dPl5dBCCGEEEL8Uh9//DFNAgMxm80EBwcz/LrrCQ9vyqFDB1m/7j/8+OMO9AYD0dHRNGnS
ROvd884htNvt560e6tvzd+6qor73resxqqoSFxdHTEzMefu7cuVKTpw4QXyLBFZ/uYrq6mo++tf7
XH3t9XTp3pO/Pfkwk6c8T2bGSZYteo9hI0ahqh70esNPwfTsHEJVRStVcfZ39aeVRPXoLIGo/hGo
AG4b1dZKTp48ic1mo0mTJlgsFm3VUZvNRmZmJgaDgYCAgHopqyHEpZKjTQghhBBC/DqKgpbFFAW7
3c7Aywbx2mtv8vdp/6C8vJwPP1jIPePvZtKkSaxevZrNmzeza9cu0tLS6pwneLE5hL69hJc6dDQt
LQ2Px8OuXbvo1K0nHy79jIGDBpN6+CBDrhnO95v+i4JCfEIrPpz/Ng889gwejwej0cSr05/GVl19
aa+J6gHVg+LXFHdIO9yWCPQGE3m5uWzZsoXdu3fjdDq1IKvX68nIyOCHH36goqJCjinRaGQOoRBC
CCGE+FUKCwrw8/MjKCi4xvUOh4PWrRN56+3Z2Gw2vvvvt6xY8RmLFy/W7hMSEsLw4cO1YHRuzUHf
OYXei2+Be985hRcLhaqqsn//fvR6PZ07d+bt118mZvm/OXniOFOmv0hkVDPmz36DN95ZyP49OwkO
DaVLj97Y7XbWfvEJAU0C8Q8IYMt33xAUGkqnrn2ottkuKRx6LOG4TaHgqMBky6OgoIAtW7YQFBRE
t27dMBqN2t0PHDiAxWKhe/fuUrdQNPz3OVJ2QgghhBBC/BqXXXYZW7dupV+//tw08i/4+/ufV3ZC
p9NhNBowm02UlpSg1+vJycnh5MmTlJaWaqUkDAYDOp1O+722shMXKknh7S2sq+zEnDlzKCoq4sCB
gzzw2GQOHTwAKLRo2Rqr1UrasVQ6de3J0xPv5/Zx99ImqTM6nZ47R13LGwuW8v13X1NWVkpoWASH
9+/m4WdewOFwoKoqaz5bwrC/3IHHo+L2ePB4VJ9yFSoeVcWjgsfjRu8sx+IoREFFBSIjI2nbti0B
AQFaCNbpdCQkJBAdHS0HmWgwMmRUCCGEEEL8KlFRUQy87DJ++CGFd+bMprCwUFtV05fb7cZmsxEQ
EPBTaPQ7b1EZ71BQ33/7Dg+90DBSb09hXTweD0VFRVRVVpLUuQsOh51WrduQ0LIVqqpiNltI6tQV
l8vFzbf8Hx99+C7HDh9k1ivTGTbiFsIjooiOjedk+lGuHXErAJWV5eTmZPLVZ0s4czr7kk/Bnfpg
SiyJlHsCcKsKBQX5JCcns3//fqqrq9HpdKiqSnp6OgcOHNCGlwohgVAIIcTv2m8x8OR/pU0hfq9c
LhedOnVi0hNPYrNVM+Ofz/Haqy9ht9sv6b1UV7irK/zVFhJ9w2Jdtm3bBkBJaQn9Bg6irruqqkqv
fgN47qW3MJkt7N21gxGj/o+3Z06lXVIXLrtyGLNf+jsPTn4Oi58/TaOi2bFlI/5NAn22crGhniqK
6sblF0WpuSUFDn/0BiO5ubl8//337Ny5E5fLhU6no6Kigu3bt2O1WuXzR0ggFEII8fsNguXl5b/J
fBdFUaiurm7Uk6Tfok0hft+fAWAwGHj8iclMevIpcnNzefihCfxj2lSKi4sxmUwodYSk2oLdxX56
S1DUFhzrkpKSgsFgwKOCwWC82Lscs9lCqzbtmPX+MgKaNKGstJiqqgoGDbkWt9vNrpTNoMLazz+i
3xXDGD7yDgxGE3mns3DYq1EudbVQ1YPHL5IzxFLoDMbjcVNSUsymTZvYtWsXDocDvV7Pnj17yMnJ
QVEU+ewREgiFEEL8vsKgqqpUVFT8Zicp8+fPb/Qw+u6778qCD0LU8nmQkNCSt2fN5f4JD2KzVTPp
8Yk8NfkJ/vOftWRmZuJyOrFYLJjN5hqh7udcLjS0tLZQaLVasdvt2Gw2goJDLhgca2Y1DwFNAnE5
nTww6e8seGsmc1+dTnbGCVq17YDL6WDz12sYMnwkFj8/XvnbA2zduIZPP5zF919/8bMStaLT4zSG
kKskUOBogt3hpKy0hO+++479+/djtVrJycnh+++/l88eUW9klVEhhBC/mqIoDB06lJUrV/4mJynv
v/8+vXv3btQ2FyxY0OhtCvF75Xa70el83/sqDoeDPn36ctXVV7Pxm69Zs/pLli9fhvvfZxdMiY6O
xu12U1FRwZAhQy64wqhOp9MWivG93XeF0XNXHD23ll9FRQVut5v8/DP06DPg5395pSiEhoXz3Kvz
qLJWYzAZ8bhVPl+6kFvGPkhQcCgfzn2JPpcPpUe/KwmLjGbGpHH0veI6nE4XHo+KwWSGi7Z7dlEc
qy6UCjUc/6pcmvq7OHMmj1OnThEdHU379u0pKCggIiJCDj4hgVAIIcRvS1VVjh07xvHjxwkKCmr0
thVF4e233+bQoUON2uasWbM4fPiwHABCAEXFxaSlpXHTzSPPu62qqorLLhvEoEGXAyp5uafZtm0b
hw8fxmaz0axZsxohrrZgd25Q9AZA35IU3tu8/z7X1q1bURSF0tIy2nXoSPWl1hOsmQpxOOzo9Trc
Lhd6g5G01IP0HhiB3mAg9eBuRt35EO++OpV2nXpQWVYCwLerl6E3GmnVtgtxbTpytqz9RT9t0OGm
ytCUCptKgjkfowHy8vIIDAzk22+/5YUXXpCDT0ggFEII8dtSFIXx48fz2GOP/SZtv/766/j7+zdq
m6+++iqBgYHyxxfiJ4FNmvBDSgqLF/2L8ffeT0hISK3vHZ1OR3yLFrRu3RqDwUBmZiZ79+4lJydH
u8+5tQdr6zX07S08N0R6f0LNxVf27NmDyWQirkUCbrerXp630+Fg8vQ3yDh+DACT2UyTwGAmTZ9F
1sk0SosL8fML4MctGxh68ziyTx4lNDIWq7WSsIiYn9VWti2M1v4FGAwGvv76axkyKuqNzCEUQgjx
i6mqynfffce2bdu47777Gr1tgBdffJFrr722UducOXNmo7UpxB+Bn78/9953H0FBwbw88wU2bvwG
u92OXq+v9X3kdrtxOp21LgpzKaUl6lps5tzVR7UwlZ2NoihUVFTQpm17XC5XvT13j8dDXEIi1dYq
Rv7fBN6a/jifL5nHpvUrue3eJ1m64GWuvumvDBx6M5dfN5rg8AiS1yy79AVnvOFTNaD+FJKzsrJk
yLqoN9JDKIQQ4heHI0VRmDx5MlFRUQQEBDRq+97ewdLSUgYNGtRobb722muUlZU1WptC/EE+ENDp
9Pxl1CgyM7P49JPlfLlqJXfeNZ4BAwdisFgu+Fly7nBP33+fO0/wQj+99/W9HiAtLQ2DwUBFRQUW
P78G+0zs0KUXnXr2o6y4GP+gEArycjiydwc33v4gTof9p8L0KlfdNJYvF7/FDXc8dslzGY06FwpQ
Xl6O0+nksssuk+NO1AvpIRRCCPGLw9GyZcvYvXs3LVu2bPQwmpuby1NPPQXAFVdc0Shtnj59mqef
fhqAwYMHy0EgRC3vk86dO/PGW7MYft0NLF70IQ8/OIH331uAqqq1Fqv3Ps63V9D354VqDl6sl9Ab
ttLS0gBo1qwZP/6QgslkbqhXAKfDgV9AEzxuNyeOHuS2eydjsviGUIWwyBh6DLyWI7u3oiiXcjqu
EG6oRP0pEFosFhITE6X0hKgX0kMohBDiF530ud1uHnnkEQCuuuoqrcewscLo/PnzAUhKSsJsNjdK
m/PmzdPaNJlMciAIUWskAr1ez62jb2Po1UPZlrKVNau/ZMuWzbRp04Z27drRrl07AgMDyc/P59Sp
UzXmDNb189wVRi/WS+j9rALIzMzEYrGgKAouh43Vqz7j8iuHYvHzx+NxNcjr4PG46d7vCtxuDy63
m/LSIrJPHsPi3wSzXxNCI5px9MAOwqPjCItszoUWmlFQCTZWo9Ppyc/P10p2yDxCIYFQCCHEb0JR
FFatWkVJydkV9G6//fZGOzFRVZUzZ84wY8YMDAZDo8xd9Lb54osvYjAYuP/+++UgEOIiXC4XQcHB
XH/jjYwadStbtmxi/fp1/Pe//+Wrr77S7hcQEED37t21XsG6FompbYXRCy02433vbt++HYPBoM1n
jG/RguLiYj76YD6duvakU9ce+Ac0weNy1/tr4Ha7tCoTBqMJo8lMaVE+FWVHqSgrwVpVTlV5KeFR
cRfcjl5xo6pnn1N+fj4JCQkYjUY5yIQEQiGEEI1PVVVsNhujR49Gp9MRHBxMx44dG61tRVG49957
AYiJieHaa69t0N5J77bHjx+vtTls2LBG7REV4g/9meFRcTjs9O8/gIEDB6LX69DrdOh0OrKystiz
Zw/Hjp1dpfPcFUYBrZ5gbbUGa/vpDYaqqqKqKnv37sVoNPLKK69QUVFB3759ueGGG+jevQdWaxXL
F79Py8R2XHblNQ36OvgHBJKY1B2PCh7PTwvoeFRU0Ho06+Knc6AoKvn5+TidTkaNGiUHlpBAKIQQ
4reh5U28lgAAIABJREFUKApvvPEGAImJiSQlJTVq26dOnWLt2rUEBgZSWFhIVFRUgwYzRVHIyclh
3bp1BAUFUVRURGRkpIRBIS6gttVFtYD4U1DzDuf0/u67GIxv76Bvz19di8/U1UvodrspLS2lsrKS
iooKALZv386uXbvo0KEDt912Gz179qSqqpIvPllMUHAYl101HJ3egNvt+X0EahSCDVZA0cpzjBw5
Ug4yUW9kURkhhBA/S2VlJc8995w2H2fo0KGN1rbH42HYsGEAtGzZEqPRSFhYWIO36S0xkZCQgMlk
IjQ0VA4EIepw+NBBlv77I35I2ab17l3MpS4Sc26JiguVpHC5XLhcLoxGI0FBQbRq1Uprz+VyceDA
AaZOncrGjRux2ewkdeiAv9nAmk8Xs/37/1JtrbpgsG20cI2bAJ0dgKqqKtq0aSMHmZBAKIQQovF5
v80fO3YsHo+HDh06cPLkyUathZWens7Bgwdp3rw5drtdG8bZkNLS0jh8+DBxcXHYbLZGaVOIP+yJ
pU7HZ59+wqzZc5j0xBN8+OHCSw6FdYW7c+sT1lZv0Pf+LpcLRVHo0aMHQ4YM0YZ433nnnQwZMuS8
Rag2b97MrFmzWLFiBYpOR1JSEn4GWPPpv9i9fTNOp+MSVwJtGP46Ox7ODoG1Wq106NBBDjRRr2TI
qBBCiEuiKAp2u50vvviC8PBwAgMDcTgc9OjRo9H2oVu3bgC0adOG3bt38/jjjzdam4mJiezevZuJ
EyfKwSBEHVRVxWg0UlpaQlL7dixfvpzXXnudnj17XlIgrGsYqPczyHeu4LmLznjD48CBAxk5ciQm
kwlVVUlKSqJ9+/YkJyfjdrsZNGgQhw4dYsWKFTXa3717N3v27KF169bccccd9OjRE4fDwXdffUKT
kKb0HXxt47+ePwVCUMjMzNDqD8ocZiGBUAghxG/i8ssvB9AWkenbt2+jDKlSVZUvvviC6upqOnXq
hL+/Px6Ph/j4+AY7MVJVlZUrV2Kz2ejcuXOjtCnEnyEQDrxsEK+/9iqLFi3G5faQnp5G//79cbku
XN7hUkpJnBsWvY+rqqri6quvZtiwYURHR9fYpvfnkCFD6Nu3L7t27UJVVaZNm0ZKSgobN26ssf/p
6elMnz6dpKQkbrjhBjp16kRZWRlbN3yO0S+Yzr0HoTeaweNuhNdTwU9nQ1EUMjMzqa6uZsCAAfL5
IyQQCiGEaHyHDx9mx44dJCYm0rRpU3bt2sWMGTMapW1FUbjnnnswGo0kJCRQWFhIQkJCjRO+hmjz
vvvu09osKCjQ5iA1VJsbNmxAr9dz9dVX1widbrebb7/9lmuuuYaqqipSU1PR6/XodDr0er12MZvN
xMfHA3Ds2DEKCwvR6XQkJCTQrFmzn3VSrygKLpeL4uJiQkJCatRd9N23i4VjCc//e4YNv45357/D
6NG30rZtO1K2beXOO++65GOvtuDnDYa+vYPeoaIdOnRgwoQJnDlzhlOnTml1DXv27InBYKhxDAYE
BHD55Zdz2WWX8dVXX+Hn50f//v3ZsGEDe/fuxeFw1PjMO3z4MH369GHAgAEkJiZSUVHB9+s/ITKu
DfFtOmLxD8TdQHUMAYyKE6Pixm4/Ox+yT58+Um5CSCAUQgjx27jtttsAaNeuHUajkaysLIYPH94o
J/xTp06lpKSEXr16YbFYyM3NZejQoQ3a9pQpUygpKaF3796YzWZOnz7d4M/3n//8JykpKaSkpNCv
Xz/tervdrpXXKCwspFevXlpA887tdDqdfPHFF8TGxtKlSxcOHz6Mn58fHo8Hu93O7NmzefTRRy85
wP3jH/+oEfjHjh3LO++8Q2BgIIqisGXLFqZOncqmTZtYunQpW7Zswc/PD6PRqBXN1uv1PPvsswBk
ZWXx8ssvk5GRQUxMDI888ghdu3aVsPgnVF1dzaQnniL5u//y444djLp1NHa7/ZL+1t5yEb4rjp5b
g9D7e7NmzXjmmWfYvHkzffv2xWaz1WhDr9czY8YMxowZg16vr3Hs63Q6RowYwYgRI/jyyy8xGo2M
GDGC1atXs2PHjhr7tGPHDnbs2EFCQgK33XYbHTok4fF42P715zSNbUWbrv1omGU5FIJ1Fago2Gw2
AEaMGCEHmKh3sqiMEEKIC1JVlVWrVnHw4EG6du1KWFgY5eXl+Pv7ExAQ0KAn9N6wM3fuXEJDQ+nY
sSP+/v5kZWUxZsyYBhsqCjBv3jxCQ0NJSkrC39+f7OxsRo8e3aDP1+1206VLF2644Qbcbre2L769
Ft56ZampqZSVlVFWVkZJSQkVFRUMGzaMl156iTNnzmC1WqmoqKCsrIxPPvmEiRMncvTo0Yvuv6Io
3HTTTcyYMYNDhw6Rn5/PyZMnqaqqIigoSNsXj8fDtm3btMC6atUqYmJisFgs2O12CgoKOHHiBACz
Zs2iRYsW6HQ6xowZQ3h4ON27d5cFev5E2rZti++h5XI5uebaYUx6YjIDB16mHcuX+h6sbcVRj8eD
0+nE39+fefPmkZSUxPDhw3n66adxOBxar7n34vF4+Nvf/kbXrl3Zvn27FjbPbeumm27iqaeeYtCg
QQwfPpwpU6ZwzTXn1yTMyMjgtdde49///oj169fTvkMHwgONHPlhA/tTvkZVPfX6+aCg4q+zodPp
ycrKQlVVOnTo8LNeSyEuhfQQCiGEuOCJmaIoPPvssxiNRnr37o2qni2O3KxZM/z8/Bq0fUVRePTR
RykrK+Pqq6/GYDBgs9lQVZWrrrqqwdp85JFHKCsrY+jQoTXaHDJkSIM+X4/Hw1/+8hdWrlzJ1KlT
eemll7TAdW4gNJvNWCyW87axY8cOOnTogJ+fH6qqYjabGT16NG+99Ravv/4677///gX/3itWrGD1
6tWcPn1am4sVERHB559/TlhYGFOmTOH111/HbrdrvZR2ux2j0chTTz113jadTif/+Mc/mDt3Lg8/
/LB2fe/evbn11luZN2+eVsJE/HE/JyZPnqzVJz032OkUHfyMv29tvYR2u53o6GjuuusumjZtypQp
U9i3b59WW7Cu7ej1eqqqqrjllluYNm0a999/f42eQu9Ps9nM5ZdfTpcuXdi8eTNms5lu3bqRnJxc
o8fwqquu4rbbbiM3N5cNGzbQqVMnWrVMoKKigtQf/oNiCSG+fQ+MZj/w/Mo6hgro8QA68vLycDqd
tGjRQt4rQgKhEEKIxqMoCh988AHHjh3T5q4YjUZSU1O1oYANKS8vj7lz5xIVFUWnTp2w2+1s376d
/v37N1ibubm5vPPOO0RFRdGxY0fsdjs//PADAwYMaPDn6+0J2bx5MyEhIdx2221069atRiD09g6U
lpZiMBi0BTcCAgKwWCzceuutjBs3juuuu4533nmHyMhIAgICSElJqRHy6/p7z58/nyuuuKLGwhze
x+Xl5Z0XAr2/n7uUvy+9Xk9ycjL333+/9phhw4Yxfvx4SkpKiImJkTfbH/xzIjIykldeeYW3Z82m
srKqXrapqioOh4PIyEjGjh1L165dWbx4MSaTifj4eOLj49HpdKSnp7N7927KysrqLHFhMBh46aWX
6N69e62lcrzviZCQEBRFISYmhoKCAm644QaGDRvG8uXLSUtLo1ev3kRGRhIREUF6+nHeffdd2rVr
x7XXXktCQgJut5sjW1cTEpNIRHx7DCYL6i8scG/GhqKoFBUV4Xa7ufLKK2X+oGgQMmRUCCFErVRV
xel08swzz2CxWLjyyisxmUzY7Xaqqqp46KGHGnwfvKHz6quvRlEUjEYjaWlpDTqPxtvm0KFDtTbT
09O5+eabG/z5ejwejEYjwcHBjB8/XhtSabPZtMDl7THp2LEjUVFRREZG0rRpU1atWoWqqowdO5bk
5GSOHTtGq1atCAoK4uqrr9aGd15KIO7evXutJ8y+C8v49hDabDaCg4NZsmQJ//73v/nss8/48ssv
SU9Px2g0ajXeQkNDef7557FarTRp0oQPPviAmJgYGQL3JwmFiqLw+GMTueWWv6Dy6/+mdrudxx57
jLVr19K+fXuWLFmC0WjUPpucTid2u524uDhuvvlmOnbseMFjSVVVRo0aRWpqap33O3bsGHv27EGn
0xEREUFwcDAGg4E77riD6dOn1xgm712o6ejRo8yePZv58+fjcDho3yGJZsEmMnZ/Q/qeTb/s8/en
+YMARUVFADz44INyoAkJhEIIIRr3BO+dd96hqKhIC0cWi4X9+/cTFhZGWFhYg53Iq6rKwYMHWbx4
MbGxsbRo0aJGz1S/fv3qvW1VVTlw4ABLliwhNjaW+Ph4rY6Z3W6nb9++DR5c3G43BsPZwTsLFy4k
PT2defPm1QhfqqqiqiqZmZkUFhaSn59PXl4eN910k3aiOnjwYNLT08nPzyclJQWDwcDAgQOZN2/e
RYebuVwu7Xlf7GTdt4fQarWSnJzM2rVr+fjjj5k7d65WF27s2LFkZ2czf/58vv76awICAoiKimLS
pEkSBv+Enxsd2rfnwfvvo0f3rrhc7p89f9DhcPDwww+zefNm7rjjDlwuF6tXr65Rb/Dci9vtpnv3
7gwdOvSC+6bX6xk7dmyd74Pk5GQCAgJQVRWdTofZbCYgIAC9Xv/TvF4PJ0+eJCsriw8++KDGY0+f
Ps3MmTOZP38+2dnZJCUlER8VQsHR78k4sAWPx33JBe51uLEodnQ6PUVFRQQGBhIbGyvvFyGBUAgh
RONQVZXS0lImTZpEYGAgvXv3xmQyYTabOXHiBL169dJOsBqibUVReOqpp9DpdIwdOxaDwYDFYuHU
qVPA2WLx9dm2t83Jkyej0+kYN27ceW126dKlwefueHsIvd577z0mT56Moig1eggBAgMDCQ8PJyIi
gqioKPz9/UlLS6Nnz54cPXoUODv3r3fv3qxfv54JEyYwefJk7fF1iYiIYNeuXbU+1yeeeIKZM2dq
IdA3pAcHB/Phhx+yfPlyPv/8c7755hvatm1LRkYG+/bto3nz5owdO5bvv/+eqqoqxo0bx9tvv822
bdtkTtSfkNFopGeP7tx91x107tQRi8WiFZiv6z3odrsZPnw4mzdv5s477yQoKAhVVbHZbFRXV+N2
uy96adq0KUOGDLlgfdS8vDymTZumtevLz8+PoqIi7Zj0rpprMpnQ6/VUVlZy+vRpioqKuO220bRr
167W7S9cuJD58+dz+vRpYmOiaRXblPzD33HmxF6cdiuK7sKn4EZc2vu9vLyc6OhorRdWCAmEQggh
GpyiKLz55psA3H333RgMBsxmM2azmTNnzjBgwIAG+6ZaURQOHz7M+vXrSUxMJDAwUPuWft26dURH
RxMSElLvbR46dIivv/6aNm3a0KRJE63N9evXExMTU+9t1sbtdmuBUFEUxowZw8CBA1m0aJG2gIz3
da9trlSrVq04cOBAjXIR3hPIuLg4goKCajyuthUXR48eTXJysjZv0Xel0/nz59O5c2ctBF7KHEKH
w0G3bt3IyMjQtuXv789rr71G165d+fzzz+UN9yf9DAEwmUz07tWT0beO4qohVxAUFITRaKyxcIxO
p6Nt27bs3LmT559/nqCgIG0biqKQlZVVY6XRC13cbjfh4eH07NmzzuPcYDDwwQcfUFBQcN5+jxw5
kqysrBp1Nr0LOJnNZkwmEw6Hg9zcXJo0acJf//pXpkyZogU2X5mZmXz44Ye8+eablJSUEBcXR4sI
f4qPbiY/fQ8et6vWgKcCFsUGKJw+fRqHw8Hw4cMlDIoGI4vKCCGEOE9RUREzZswgJCSEFi1aaCdU
+/btA+D6669vsJMTj8fDjTfeCMC9996LXq/H4/FQVlaG1Wrl73//e4MEsRtuuAGAe+6557w2vb0J
Dc3hcGhDRr3ef/99WrZsSWJiovb61BUI9Xo96enptGjRglOnTjFx4kT8/f1ZsmQJy5Yt46uvvgLO
loFYs2YNGzduPO8k/vHHH2fZsmVERUWxbt06+vfvz/79+xk8eDCDBg3S/jYOh0MLhA6Ho9ZAqKoq
LVq0ICAggKlTp/Lvf/9bu62iooJ9+/bx/PPPn/cYOfH981FVlebNm9O8eXOtN88b4lRVJSAgoM7H
2u12rfbgpYqPj8dqtXLkyJEaq5V6mUwmBg8ezMCBA3n77be1YaJNmjTh5ptv5vjx4zRt2rTGKqQu
l6tGb2RRURGnT58mNDSUBx98kMrKSlauXEl6enqNfSksLGT27NmEhoby17/+ldaJbXA6nZQX7Od0
YRXRHQYCyk9REFR0+FOpDQ13OBzccsstchAJCYRCCCEaj3cxk2eeeQaz2azNp/EGCu+Q0YawdetW
Tpw4wbXXXktAQIAWgPbu3QucLZDeEG1mZGQwbNiwGm3u3r0bgDvuuKNRXvdVq1YRHBxc47qEhAQ2
btxIZWUlALGxsSxfvrzWkhOqqhIfH09qaiqvvPIK06ZNw+Vy0alTJ3744QdtHmRMTEydy/WrqsrW
rVt5+umnGTx4ME6nUzsmFixYoAW20tJSXC6X9gWC937nBkyLxcKuXbvo0qUL3377LV26dKG6upot
W7Zw/fXXawsEDR06lIyMDNLS0uQN+Cd0bsH4Cw3prO1LonMD3aVo06YNGRkZWlF33214S1lUVlYy
YsQILr/8ch555BHCw8O56aab2LhxI6Wlpbjdbux2uzZKwu1243K5aoTD3NxcTp8+TXh4OPfccw/Z
2dls2bKFAwcO1NifkpIS5s6dS3x8PP3796dXr16EBFVSmLuTUpseS8TZL31MngqMfm7cnrPzKQcM
GIBOp5MvS0TDvT9VmZ0qhBDCR2lpKaGhoXTq1InHHntM6x2srKzkySefZPjw4axdu7be2/We7JhM
JpxOJ3PnztXmqBkMBubMmcPRo0c5c+YMTZo0aZQ2Z8+eTVpaGmfOnLlgD8bvTW0njr7XFRUVMWjQ
IA4fPnzJj/e93vd275C/S9mf5cuXs3//fvz8/Bg2bBh9+vTRbps/fz6ffPIJycnJ8iYUNRQWFjJj
xoxfFIZsNhvJycnn9Uh6j+OJEyfi5+fHli1byMnJ4f777+faa68lIiKC1NRUKioqyMrKorKyEqfT
SXV1NVVVVVitVqxWq/Z7VVUVlZWVuFwu2rVrR0xMDNnZ2Xz55Zfk5eXVum9BQUHccsstJCQkoCiQ
fyYPvU5PSFgYiqLD4XCwadMmJk6cyK233ioHgmgw0kMohBCiBu8csfvuu6/GypbV1dXaHLOGoCgK
S5cuxel0MmHCBEJCQn5a1U/F39+fffv20bRpU/z9/evtm3JFUfjoo49wOp088MAD57W5f/9+IiMj
tSLvf5Rv52vbT9/rvvzyS7Zu3fqzHu97ve/tFwuDvve//fbbuf3222u9bd26dY02NFf8wU5WDYaL
LoZUF6PRSGhoqNbbpyiK9h4HWLFiBffccw+jRo2itLSUTz/9lCVLljB48GCeffZZ9Ho9LVq04Icf
fsBqteLxeGr0Dp47jNRqtbJ3715SUlLo3bu3NpT0vffeo6ysrMa+lZeX8+GHH2I0Ghk/fnyNeYiK
omi9m1deeaUcBKJh/8+QHkIhhBBeeXl5Wl24r776iqqqKu1ETFVV3nvvPZKTk6mqqsLPz6/eA1Jc
XBw5OTnMnj2bqKioGt/m79+/n5deeomtW7fWa5F4b5tz584lIiKiRpv79u3j5ZdfJiUlhX79+skB
0oCysrKIj4+XYXHiPJs2beLjjz/+WcNMfTmdTjZt2oROpztv/qLdbmf58o/Jy8vDZrehcHY0xJdf
fkloaCjDhg3j7rvvhp+uLywsZM+ePezZs4fKykpsNhsVFRVYrVYqKyu1nsLS0lKioqK48cYbSUhI
IDU1ldLSUr788ktycnJq3c/Y2Fjuvfde7UuWjRs30q5dO95//305CIQEQiGEEI3nrrvuYvHixfTq
1YvnnnsOl8ulhSSTycTDDz9MdHQ027dvr/eT9+TkZK688koMBgMfffRRjVILJpOJFStWsGTJEnJz
c4mKiqqXtr/77juGDBlSZ5ufffYZH330EXl5eURGRkpYEaIReeuATpkyherq6l+0DYPBwM6dO6ms
rNRWIvWGwurqav75/PNER0djMpnIyc7GYrHg7+/Pzp072bVrF2azmQkTJjB8+PDztu2di+s9nfbW
CT13VeK8vDw2bdrE4cOHyc7OZv369eTm5p63vQceeIDo6GiqqqrYtm0bc+fOpWvXrnIgiAalnz59
+nR5GYQQQnhPZkaOHMmnn37K/v37iYuLIzExEb1ej8FgQFVVhg4dyltvvUV1dTVDhw6t11CYkJBA
ZWUlW7duJTMzUzsB87adlJTE7t27Wb58OQ8++GC9tN2yZUsqKirYunUrWVlZ57XZsWNHdu3axccf
f1xvbV7sb6AoChUVFRQUFFBaWgqAxWI5b+7exfbF9/a6fr/Y437t8xDi1x5DHo8Hg8HAgQMHtLl/
P+firX9YXl5+3rBnVVXp3acvLpeL4qJiOiR1xOVycezoMXr16kVSUhJFRUV88803LF26lDZt2tCs
WTNtkRdvOR7vxWKx1LrgU0BAAJ06daJv374UFRXRrVs3mjVrRmZmplbiBaBv374EBARQUlJCcXEx
jzzyiDZ0X4iGIj2EQgghzpOfn09UVBQ6nY7ly5cTFhamfQPu8Xg4cuQIkyZNIiMjgxYtWtRr2263
m44dO3L06FFuueUWJkyYUKNtvV7P7bffzlVXXcXHH39cb2126NCBtLQ0Ro8ezX333Xdem2PGjOGa
a65h2bJlDf76v/DCCzz//PPayp0Gg4Hp06fXKLnRpEkT1q1bx6BBg847iR41ahT9+/fnqaeeqnHb
Z599xpo1a1iyZIl2sv3RRx+xYMECsrOz6dq1K++++y4xMTG4XC5WrlypneCeW4utXbt2FBYWYrPZ
atxmNpsvaV6hBEZxKcfH4cOHeeuttygrKyMsLOyCxe0vpKqqiqNHj9aoV+h2u3E4HDz2+CTad0gi
JzsTq9VKQkJLgoOD2b9vLxY/P9q3a8fx48dJTk7WykzMmTOHpk2b/qzj2HcxG5vNxrJly8jKyiI3
N5eDBw9iNpsZPHgwBoOBHTt2MHDgQJ555hk5GIQEQiGEEL+Nr7/+Wiv98NVXX2nfiKuqil6v5+uv
v+bFF18kPz+f8PDwej25dzqdREdHU1RUxPLly4mNjdXmMno8HgoLCxk9ejRr167luuuuq7c2mzVr
RnFxMR9//DExMTG1tvmf//yn1qFj9eXvf/87M2fOZPv27XTr1g1VVdm/fz99+vRh9uzZPProo2f/
A1eUWudTens1hw0bxptvvlnjtvnz5/PEE09oCwR17dqV3Nxcpk+fTkJCAitWrGDRokWsXLmS4cOH
c8MNN2g14FJSUmjbti0ej0dbuXH27NnMnj0bs9mMw+GoUQB88+bNREZGkpSUVGNBED8/P1q3bs2K
FSto27athEJRa2jKyclh9erVHDlyBJvNRnl5ORaLBb1e/4uOGY/Hw8GDB7UvgLxDRm02G8/+bQoA
QcHBGPR69AYDlRXlREZE4va4ycnOwem0ExvbnPT0dI4fP86BAwfo2rUrDz30EO3bt//Fz/fMmTNs
2rSJffv24efnp5XG2L17NytXrpT3h5BAKIQQ4rf1wAMPsGDBAq666ipef/11bDZbjUVmpk6disPh
uOCKlb/0pHDz5s1cccUVwNm5hWazWWtbURR+/PFHHnvsMQoLCwkLC6uXIY7JyckMGTKkzjZ37NjB
448/TlFREaGhofV+slZRUUFQUBDbt2+nT58+NW574YUXWLlypVYb0bs/vXv3Pu95JCUlMXLkSGbO
nFnjttdff52XX36ZwsJCTpw4QevWrTl9+jTR0dHafcaOHcuWLVvIyMjQrisvLyckJITU1FTatm2r
XT9x4kR+/PFHUlJSan0+R48epUOHDpSXl9OkSRPcbjd5eXmMHz+eXbt2UVhYKD2FogaXy8X06dM5
fvw4ISEhGI1GbdGWkpISEhMTf9FcQqPRyP79+7Vw6A2FNpuNyU89DUBwcAiFhQVEREZiNBrxuN2U
lpTQLDoaj8dDTk42zaKiKCgo0L70OHnyJNdddx133XUX0dHRv/h4LiwsZMOGDdpKpbfccku9f9Em
RF108hIIIYSoKyDNmzePxMREvv32W5YuXYpOp8NgMGAymTCbzcyePZucnByt16q+vmNUFIXBgwcz
Z84cAP72t79hsVi0to1GI4MHD2bcuHF07dpVG4b1a9u88sormTVrFgBTpkw5r80rrriCsWPH1lub
53rrrbeIj4/X6vP5mjp1Krt3765xvdForHU7Ho9Hm3Poy2q1aovmeId1rlq1qsb97rrrLsaOHVvj
cVVVVQA15jrV9u9zeYf3ORwO4GxB8tjYWBYtWqQVs5cTXuFrzZo1ZGZmYjQaqaqq0spF+Pv7Yzab
SU1NrVHm4VIvDocDg8GAwWBAr9drl44dO2Krrqa0pISc7CyaNo1AURSOph7BarXi7x+Aw+HE4XDQ
qlVrKiorCQwMIjGxDTfddDP33nsvKSkpjBs3jhdffPEXD2kNDw/nr3/9K+PGjeOBBx6QMCgkEAoh
hPjtKYqCTqcjLS0NPz8/3njjDcrLy3E4HNhsNhwOBxUVFSxevJi5c+dy5MiRej2BUVWVRx55hO7d
u5OSksKsWbOw2+3YbDbsdjtVVVU88MAD6HQ6Hn300XoJaN5C1V27dmXbtm3MmTPnvDYffPBBAB57
7LF6D4VHjx7V5mQqikJBQQHPPfccr732GnPmzGHOnDm4XK5LCoRGo/G8v4e3XAicXcDn3nvv5eGH
HyYuLo7p06dTUFDAVVddxYwZM2o8L28v6blzA6urq+tc8MK7mIeiKDUW8ICzZQSMRmOd+y/+d23e
vFk7VnwvLpeLkJAQIiMjtbmAP3dxGW8Y9AZDg8FA586dsdtt6PV6zBYzJ0+kU1pSQmJiWyoqKig6
8G2NAAAgAElEQVQsKqC8rAyLxY/CwiL0Oj0ul4u8vDwKCwsJDQ2jd+/ejB59G5s3b2bUqFG88cYb
v+jz9kL/FkICoRBCiN+MqqqsXbsWVVW56aabqKiowOFwYLfbcTgcKIrCggULSEpKoqqqql57CVVV
Zffu3YSGhrJo0SKOHDmCw+HQ2rfb7SxdupR//etfrFq16lefRHnb3Lt3LyEhIXz44Yekpqae1+ay
ZctYuHAhX3zxRb2euPn5+Wm9ad7Al5uby4kTJ0hPT2fixIk1QlRtgUpVVW1VxnP59hCqqsr777/P
/v37eeKJJ1i/fj2RkZHExcWxZMmSGs/L+zc9NxC63W62bt2q9aAaDAZ0Oh3t2rXTCoB7PB6ee+45
pkyZwj//+U/uvvtunnzyST755BN5c4nznD59+oI9fTqdjsTEREwm03lF4S90sdvtWiBUVZWwsDCu
uOIKQkNDf+pBtFNtteLn74/NVk12diZNAgOJiY3D7OeH1WrFYrHgdDlxedwYzWaaNm2K0+mkZ8+e
BDQJYPjw4fTs2ZMNGzYwZswYPvvss/PeQ0JIIBRCCPGH4x1K+fzzz2O1Wnnrrbe02mDeS5s2bRg/
fjzXXHNNvfaaebe1YcMGAB566CEqKyux2+04nU7sdjvV1dW8+eab3HbbbVqJhvpus6qqqtY2R48e
TVlZWb291r1799bmCAKEhITw3nvvMX/+fEaOHHne/evqYVNVFaPReN7foaqqSlsSPz09nSNHjtC5
c2eeeOIJfvjhByoqKujcuTPjx4+v8ThvD+G5hcHdbjdXXHEFDocDp9Op1aw8evRojR7C6upqzpw5
Q1paGikpKZSXl9OiRQs5SRbnBSbvPOULXbzz7Lxfflzqxdsr2LVrV8aNG0fv3r21IZ5GoxGn04mt
uhqXy4Wfnx/lpSWcyTuN3VZNWVkpp3KyMZst+Fn8AJWy8jI8qkpxSQkul5sePXoQHh7OnXfdhaIo
fPDBB4wYMYJNmzbV6NkXQgKhEEKIP6Rp06aRmJjIN998w/Lly7WhlA6Hg6qqKkaOHElxcTFTp06t
91DYu3dvFi5ciNvt5vHHHwfODlf0BrTY2FheeuklYmJiapxc/po2+/Tpw3vvvYfL5aq1zebNm/Pi
iy/WW5sAEyZMwOl0Mm3atPNOlr3zNC8WCBVFwd/fnzNnztSo2Qbw448/EhsbC8CH/4+9846Polrf
+HNmS3ZTCCGQBEijhF6lI0gTEAXpAiqoV2yICldBQAW76BXEn6ggoqAoSEcJval4pYUeQgmJKZIE
0uu2mfP7Y7OTnd3ZZBOKXnm/fiK7szNzpu6eZ573vO9XX6F169aKz/38/LBt2zaIoign4HAIQs65
qkPoab8dDqFWq8WHH36I5cuXY9WqVUhISEDdunXx3nvvUVgcobhe0tLS5AcJN/JPkiTZIdRqtUhJ
ScHvv/+O1NRUhIWFoXHjxnL4M2MMZpMJOdnZ9gy7NhuuZmXa6yFyjoKCAly9mgVJ5ADsDztCw+rD
398fl5OSUFJcgoRzCRBFERqNFqIo4v3338fIkSNRXFxMJ5ogQUgQBEH8b5OQkIA6depg+fLluHr1
Kmw2mywKLRYL3n//fSxbtgw///zzDR9P+Pjjj2P06NFITk7GmjVr5E6eY0xjkyZN0K9fPzz//PM3
pG3OOZ544gmMGjUKSUlJ+OGHH9zajImJQZ8+fTBt2rQbtr8bNmzA22+/jVGjRmHv3r34+eefcd99
9+Huu+9GSEiIYt7U1FQcPnwYJ06cQHx8PC5evAjGGKZOnYr58+fj5MmT8hi+1atX4+zZs7KwnDhx
IjjnWLx4saJY94YNGwAA7dq1UxwLwD1k1GazVToO0OG+uBYDb9SoEbKzs2+YkCb+OdRkbGBlfw53
UBAEaDQaCIIAURRx7tw5HDx4EPHx8cjKykLTpk0RFhYGq9UKQRCg1+thMplQWloKJgjIzr4GTfl0
Pz9/ZGdnI7B2bdQKrI2Tx+Nw7dpV5OUVwGKTIHEB9RtEICQkFFqtFj4+PrBarUhNTaUTTPwt0dIh
IAiCILxFo9Fg8+bNuOuuu/Dcc8/hyy+/hCAIsugwm82YO3cuBg8ejJKSEvmz68XhdK1duxbBwcFY
uXIlmjZtikaNGskihTGGyZMn48knn0Tfvn0xcuTI62rbtc0VK1agadOmiI6OVrT5xBNPYPLkyejT
pw9GjBhx3fs7atQo7N69GwsXLsTjjz8OX19fjB07Fm+88QZOnToFwB5W17JlSzz44IMQRVEO1ywp
KUFRURGefvppJCcno2PHjvD19ZXrDr744osYMGCAXJri22+/xcSJE/HRRx+hRYsWuHTpEhITE/HB
Bx+oCjtXQWg2m3HixAk88MADcpIYvV4PrVaLF198UXZnnI8JYwyNGzeWS5UwxvDkk09i8ODBGD16
NN1kJAgVdStr+jDH4fYJgiBfg45/HaKwtLQUx44dQ2hoKBo1aoTw8HC0bNmy3AW8KotDyWKBTqeD
yVQGi8UMH4MB/v7+uPLnnxBtVgTUCoTFYpNDtf38gPz8HOTl5dg721otHnroIbRq1YpOMPG3hOoQ
EgRBENXm008/xdSpU9G1a1dMnTpVUauPMYbk5GR899138liyG+kW5uTkIDQ0FL6+vli0aJFiXBtj
DBqNBk8//TRyc3NvWBbL7OxshIaGws/Pr9I28/LyVJO51KRD63rMHNO8OZ7O8yQnJ4MxhujoaI/r
Xr9+PVJSUhAZGYkxY8a4fV5YWIhDhw6hQ4cOCpdy9erVuHLlijyW1DkD7ZNPPomSkhIsW7YMixcv
hp+fn7zcihUr8O677+LixYsAgKioKEydOhUzZsygm+s2JjU1FU8++aSc+Oh6MRqN9nqC5eMOPf3r
CH1u2rQpIiIiEBYWhrp16+LKlSvIzs6Wy7hIkgRjeYIZxgTUqRMMX39/WC0WWG022Gw25OXl4fix
I7DZbNDr9WjTpg3mzZtHJ5cgQUgQBEH8c3AIigEDBmDfvn147LHH0L17d4WI0Gq1mD17NqZPn46X
X375hre9dOlSPP300/JYNGcXijGG48ePY/369fjzzz+vWxQ62vz8888xZcoU1K1bF++++65CWDHG
EBcXh02bNiEtLe1vWU6hMpF5o9ZX3eUcr0eMGIE5c+aga9eudIPd5oJw8uTJcuKjG4Wvry+0Wq1i
TKGaKBRFEbVq1UJERIQsDAMCApCZmYmMjAwIggDOOUJDw9CgYUNI5eUwrFYbrFYL9u3dg4L8fNhs
Ntx1112YOnWqXOaFIP7OUMgoQRAEUS0cLlVsbCxCQ0Px9ddfo0GDBggLC5M/z83NRVZWVo2LNFfW
NmBPvnLs2DF8+eWX2LFjBwYMGCBntPT398fatWuvO+zMtc1nnnkGcXFxWL58OXbt2oX+/fu7tfl3
P2/eTLue9VV3Ocfr4cOHkxgkFAllbiSFhYXQaDQIDAyUkx05ohmc22KMoaioCImJicjMzERUVBQa
NGiA+vXro169ejCbzQgKCoLBaITFYoUoitDrdDh08necOXMaRUVFGDRoEB5++GE52RRB/C9ASWUI
giCIGnXqDQYDvv76awBAbGysHDLIOcfq1atl4XYzAlE453jvvfcAABs3boQkSXKdwN27dyMnJwer
V6++oU5dVW3m5uZizZo1VGy9Bsf1scceowNBAEC1ykh4++cobJ+TkyOXn9BoNPKfI/uo47XRaETt
2rVx5swZnDhxAqdOnUJmZib0ej0MBgN0Wh18jQbk5uZg1apvERd3DC1btsSKFSswc+ZM1K9fn04k
8T8FOYQEQRBEjfnpp58AAB07dpQLqmdlZeHUqVOYN28egoODb1rb6enpAIAePXqgtLQUNpsNgiBg
7969aNOmDQYPHnzDxy+mpaWptrlnzx60a9cOAwcOvGFhmJ5e/xMfLhCEAzWH0Pk+uF5yc3NRq1Yt
GAwG2Sl0zoYriiJycnLw6aef4pdffsGaNWtw9uxZZGdno2HDhmjQoAFCQkJw6tQpxMXFITIyEl8u
WwZfX195++iaJkgQEgRBELcNu3btAgDExMTAbDZDo9Hg559/hr+/P2bPnn1TRYQjhXubNm3kjKbZ
2dnIzMzEwoULb3jHjDGGlJQUtzavXbuGrKwsLFq06LrbZIzhueeeQ2hoKF599VXF9A8++ABmsxnP
Pfccli1bBh8fH+j1euj1evj4+MDHxwc6nU5+7fhz/lyr1SIkJASSJKkm7qhKeN5oYUodaELtmnAV
fjabTc4OeiPIz89HQEAA/P393cJHHXU8v/76a8yaNQv3338/du3ahY8++ghXr17FlStXcO3aNYSF
heHzzz9X1CGl65ggQUgQBEHcVpSVlaGoqAgNGzZEWVkZRFFEWVkZDh8+jJdffvmGZQr0xE8//QTG
GPR6vexOrly5Eu3bt8eECRNuSpuxsbGqbXbo0AHjx4+/IW0cPHgQgwcPdpuenJyMEydO4Mknn8TB
gwdhtVqRk5ODI0eOoFevXrBarXJGxby8PNhsNmRkZCA4OBhlZWWwWCxo06YNvv76a8TExCjWXatW
LUycOBGLFy+utGPLGMPAgQORlJQEANDpdHK4XYMGDXD16lW57ERAQIBcp5BzjiVLlsiZZzUaDfR6
PRo2bIiuXbtet7NK/HPEoKcxhI7QzxtFYWEh/Pz83DIGO0ThhQsXAAB6vR7Dhg3DkCFD8PHHHyMr
KwuPP/6425hXunYJEoQEQRDEbddxKy0tRUlJCVq0aIHS0lIAwI4dOxAQEID58+ff9A7+xo0bAdhr
I1osFuTl5aGwsBDLly+/aW1v3LhRdiosFgtyc3NRVFSEr7766oa16UhX74rFYoHBYEBoaCi2bNkC
ANi5cydGjhyJ/fv3q5a7aNmyJUaOHIl3331Xnnb27Fn5HDo4evQo7rzzTrRq1QpTpkypdPuys7Mx
adIk3HvvvfK4UYvFglOnTqFp06YoKyuDyWTCE088gc8++wwlJSUoLS2FVqvFzz//DMYYmjRpArPZ
jL179+KNN97AqFGjsGbNGrqxCNU6hI73N8ohdJCZmYmIiAi5RqFz6ChgD191CEaNRoMXX3zR7d4h
CBKEBEEQxG0JYwwnTpyAJEkIDQ2FyWSSn6o7Eq/cTDFYWFiI3NxcNGzYUH6iv3v3boSEhKBTp043
rc28vDyEh4fLbe7ZswehoaHo2LHjDWvHarWquqsWi8VN9JnNZjDGVD9zfO6a5MZsNruJ+y5dumDu
3Ln47rvvqhSEDieyS5cuiun33HOP/NoRWvvYY48pSgiYTCa0b99eDq8F7GO6goOD8c4776BJkyZ0
c93GcM7dnEBHCOnNeMhjtVplsedcQsZZCDp/56m9JggShARBEMRty3fffQfAHm5otVoRFxcHm82G
l1566aa3vX//fgBAq1atYDKZkJubi7S0NFmI3Az27dsHwO66mUwm5OTkIC0tTU40c6OQJAkHDhxA
RkaGPEZQr9fj/PnzqFevnmJe5/FPapjNZjdx6Qh1de3cnj9/HpGRkV51oquqE+cQna5i1OFyOnf2
69SpA19fX+Tl5dFNRSicOsf1WVBQAD8/v5vSntVqhdFoVCSYYYy5CUKCIEFIEARBEC6sW7cOgiDA
YDCguLgYcXFxcrmJm82BAwcAAA0bNoTNZkNcXBw6deqE8PDwmy5Cw8PD5Ta7dOlyw+uN2Ww2FBYW
IiMjAzabDTabDaIoIj093a0tURQhCIJHQegqwJzF2uLFiyFJEoqLi7F//37s2bMHf/zxR5XbJ4oi
du/ejV27dkGv10On08FoNGLVqlXyPCaTCQDcOtVmsxm1a9eW11NQUICVK1eitLQU7du3p5uKUA0Z
dVzfN6q2qDMlJSUICAhQiEE1h5AgSBASBEEQhBM5OTkoKSlBs2bNYDKZkJSUBKPRiFGjRt2S9k+f
Pg0/Pz+YTCbYbDakpKTg119/veFjjNTaLCsrg81mQ2pqKn777bcb3mZZWRn+9a9/4amnnlJMHzJk
iFsn1dGB9YSaQ2g2m6HVanH06FFcu3YNWq0WXbt2xbp162SxVhkmkwnDhw+XC3WbzWY59M5VdLrC
Ocerr76qyEDr7++P/fv3U/1GQlUQOsb3SZJ0U0I1CwsLERERIbflcCdJEBIkCAmCIAiiEuLj4wHY
3TKLxYJDhw4hNjZWNRnKzSAhIQEGgwEmkwm//fYbRowYgYiIiJuayOb8+fMwGo1ym6NGjUJ4ePgN
b9NqtaoeR7PZjFq1aimmOdLxVydk1CEIV65cqSrYqtoXi8UCo9GI0aNHe1zW4RC6UlJSgrfffhtT
pkyRazgajUb4+PhQllFCzjLq6gSWlJQAAIxG4w1vUxRFaLVauW3H/USCkCBBSBAEQRCVcOrUKbnT
dPbsWURERODee++9JZ16SZKQkZGB5s2bw2Kx4Nq1a5g3b95NbVsURWRmZqJFixZym3Pnzr1piS7U
ksqoJYipShBaLBZVQehJuDPGFPuktn+eBKvzfK7jFF3FpKuwdV2euH1Rcwgd1+L1how6rm9XEarR
aGQHkhxCggQhQRAEQXjB3r175Q7T+fPnsWTJklvm8Hz77bcAgHr16uHMmTMYNGgQOnTocEvbHDx4
8E0b82a1WlUzhhYVFblNKy0t9Si+HKgllakszJUxhm7dumHChAmYNm2a14LVVXR6K1AJwlmcudYh
dDzwsFgs0Ov111XyQW1soCRJCofQ0SYJQoIEIUEQBEFUwqFDh+Dv74/09HS0b9/ebbzbzcRRg49z
jvT0dBw6dOimi1FHm47kLocPH74pbTrqOzpeO68/Li7OLR3/I488gvvuu89j53X16tUIDg5WTCsu
Lsa//vWvSrfj2rVrCAsLU/1Mp9NVmWXUU8ioNxlKidsbNYfQZrPJn9VUEDonjXHrDGu1skNISWUI
EoQEQRAEUQXZ2dnIyspCdHQ0EhISsH379lvWtiiK2L9/P4KCgpCUlIQhQ4bc8CyfrthsNuzbtw9B
QUFITk7Gvffei/r169+UtjzVOuOcy+GiDqHIGIOvr6/HUhGcc4wfP16xDOdcFu+VCdoOHTpg5MiR
qut0lIeobPnBgwejuLjYbfqZM2eoo01UWxBaLBZoNBqFc1hdBEGQM4q6fqdoNBpFLUIAbu8JggQh
QRAEQZSzdetWAIBer0doaKiiIPnNpqSkBCaTCXXr1kVmZqbs3N3sNs1mM+rVq3fL2vRWKFZ3GW/W
k5eXh6FDh6qGdnq7HZ5qxoWEhNANRHjEMU7QVRByzmEymeDr61tjh9Bms6F9+/ZITEx07wyXO4TO
IaNqYdsEQYKQIAiCIABs374dWq0WSUlJOHPmzC1tu7CwUC5EP3jw4FvSaSsoKIDZbEZubi7uvffe
f7zDFRQUhMcee4wudOIvQU0QOtchrKkg5JwjPj7eLTET5xxarVaRYZRCRgkShARBEARRCQkJCRBF
EdHR0WjevPktLRewc+dOAPZkKlu3br0lbe/atUtuc8uWLbdFeQQKlSP+CtTKTjDG5DqX1yMIRVFE
aWmpImTU4Ug6QkadIUFIkCAkCIIgCA+kp6eDc459+/bdcuGwZs0aAMDcuXNvmXBxtPnGG2+QWCKI
m4gkSbBaraplJ5wFXE3FpqMNt86wk0PoSC5DgpC4nRDoEBAEQRDeUlpairy8PPTr1w/R0dHXlQK+
JuzZswcA8Oyzz96ytvfu3QsAeOaZZ275/hLE7USzZs0wffp0ObOoawkK52nV/bNarYqyFs5/DofQ
9Y8gSBASBEEQhAtLly4FALz55pu3PHQyISEBADB79myEhITckrbPnTsHAHjllVdQr149cgcJ4ibC
GMPLL7+Mc+fOoVWrVoragM7hpDX5c3YI1aZrNBpotVrFvwRBgpAgCIIgXNi0aRP69u2LXr163VJx
xDlHYmIitFotZs+efcvavHjxInQ6HWbNmkUnnyBuEVqtFrGxsdi1axdCQ0NhsVgwf/58+Pn51VgQ
SpIEm82mOt1xvwuCIItBEoTEbXXP0SEgCIIgvEEURfz6669ISkq65e4gYwwHDx7EjBkz3OqI3cw2
f/vtN8yYMQP+/v50ARDELSYmJgaHDx+W369cuRIFBQU1WpfVakWnTp1w9uxZxXSHIHQuzeJwCQmC
BCFBEARBOJGRkYGePXuiUaNGf0n7x48fx+7du2+pGD158uQtb5MgCHVGjx6Nzz//HIWFhRCE6gW5
cc6h0Wjcksp4SlJT3fUTxP8ydLUTBEEQXnWm8vLycODAgb9sGzp27Ajg1mb57NSp0y1vkyAI9e+g
adOmIT4+HiNGjPAY/qn251zKwnkcouO16/1N9ztBgpAgCIIgXGCMoaio6C8Lozpx4oRc9uFWtjlv
3jw6+QTxN/kOYoxBp9NhyZIlOHr0KPr06YOSkhKvEsowxpCSkiKXrnBMNxgMlD2YIEFIh4AgCIKo
Cs45evbs+Ze137FjRxgMhn98mwRBeEdkZCR++OEHbNy4EW3atEFxcXGlZScEQUBGRobbdJ1ORweT
IEFIh4AgCIKoCueEC3/1NvzT2yQIwvt7c+DAgdi3bx+WL18OHx8f1VBSzrnsEnrKMkoQJAgJgiAI
giAI4n8QzjkmTJiAtLQ0zJ49G2az2WNpCU9jCwmCBCFBEARBEARB/A/icAsFQcCsWbOQkJCARx99
FIWFhQrBp9PpFC6hwzkkCBKEBEEQBEEQBPEPEYaRkZH4+OOPkZiYiI4dO8JsNiM0NBQzZ86kkFGC
IEFIEARBEARB3A7CsHHjxvjll19w5MgRnD17FuPGjXNLKuPqEDpcQ6pDSNxOUGF6giAIgiAI4h8p
DDnnaNu2LTjnMBqNKC0tlUNH1bDZbBgyZAhatWpFopC4baArnSAIgiAIgvjHikLHv3Xq1AHnHDNn
zoTFYoHNZoO/vz845xBFES1btsQLL7yAdu3a/WU1VwniL7lPOI2mJQiCIAiCIG4jTCYTevXqBa1W
i2eeeQbDhg2TBSOVmyFIEBIEQRAEQRDEPxzOOWw2G7RarRxeSmKQuB2hkFGCIAiCIAjilrN27Vo+
ZcoU/sorr/BygVapSfHtt9/yp556qsZGxtWrV/nUqVP5qVOnOGAPI3UeT6gmBleuXOl1m+Xbz7/9
9tvrNluSkpLIsCFIEBIEQRAEQRD/TGw2G//444/5f//7X2zZsgUpKSkSq8Keu3TpEg4ePFhjoVRS
UoI9e/bwq1ever1MfHw8du7c6VWbjDE2efJkvnDhwus6Nlu3buUDBgwgQUiQICQIgiAIgiD+mWRl
ZcFsNmPIkCGcc45XX31VIQZ5OYWFhTwvL4+bTCbuqhfLysp4bm4uB8CLiop4Xl4eF0VR8d5qtcrC
KioqCidPnmT9+/cHAEiSxHNzc7nZbOYmk4nn5eXxwsJCR9McAN555x2cP3+eObYJAC8pKeF5eXk8
Ly+Pl5SUcAAcAKxWK//555+h0+lQUFDAAUAURbkNp/khiiIvKCjgubm5PD8/n5vNZg4AeXl5/MCB
A/D19UVxcTEXRdGxLdxqtfL8/HxFuw5TlXPOc3NzeWlpKc/Pz+fFxcUkKAmvoRRKBEEQBEEQxC1l
2bJl3Gq1smeffRZZWVk8Pj4ehYWFCAgIAGB3255//nnp999/h81mg9FoRFhYmGIdK1aswJIlS/iQ
IUOwd+9e2Gw2xMTEsN69e2PFihWcc47g4GDExsZCr9eztLQ0DB8+nC9YsIANGDAAJSUl6Nu3L+/V
qxc7fvw4t1gs0Gg0GDlyJObMmSMAwOuvv46NGzfyhIQExhhjX3/9tbRkyRLk5+cDAAIDAzFhwgRM
nz4drVu35rVq1WI2m4137NgRSUlJLDU1FSNHjuTNmzfHuXPncOedd7IlS5bwcePG8cuXL6OkpAQ+
Pj7w9/fHhg0bMH78eBQXF3ODwcB69erFN2/ezKKjo1lKSgp/9NFHeWFhISRJgo+PD/r06cPef/99
DoDZbDbcddddPDo6GmlpaWjWrBnWrVtHAyIJryCHkCAIgiAIgrhllJWV8R9++IHVqVOHh4eHY+LE
icxisbC4uDjOyjl06JB04MABFhISgpkzZ+Luu+/GpUuXFAKHMQaNRsP27dvHXnzxRURGRrLExEQs
X74cL774IqKjo1lubi5SUlIqOr6CoBgrKAgCDhw4gNGjR2PKlClgjLFNmzYp2nCuR/h///d/aNCg
AS5cuMAuXLjAunbtis8//xylpaX44IMPWFlZGddoNOy9995jzm1cvnyZzZ49m82aNQuvvfYafvnl
F3z00Ufs4sWLbNOmTSw3N5fNmzcPL730Elq3bs2sVit//fXXWXBwMMrKyvjIkSNx7do1Nm7cOMyc
ORMNGjTA9u3b8c033yj2JSMjg7300kvs7bffJjFIkCAkCIIgCIIg/n7s3r0bOp0Ob731FgCw3r17
g3OO+fPnA+Xhl59++ikzmUxYuXIlmzBhgvDmm28K3bp1cwuDFEURy5Yt4+PHjxcmTZrEOedYuHAh
f/DBB4Vp06ZxzjmsVmul2zN+/Hg+Y8YMYfLkyUKLFi14UVGRx3l1Oh2Sk5PZmDFj+NatW/nrr7/O
Ll68yHx9fdmIESOY2WwGYwzjxo1TCLLHH3+cP/jggywqKgpvvfUWu3r1KuvevTtSU1NRUFAAQRCQ
lZWF+++/n0VERMBms2HEiBEsICCAxcbGwmq1Yu7cuXzmzJnChAkThA0bNrCAgAC+YsUKxTEZNGgQ
nzhxImvWrBldaITXUMgoQRAEQRAEcdNxlHXYvHkz1+l07LnnnmOccwkABEFgf/75Jzt37hxatWqF
ixcvQpIk1K1bV16+fv36auvkzZs3d4g1BoC3atUKAGA0GplDYFZGdHS0vH06nQ6VJTudP38+/v3v
f/Pk5GTMnTuXcc7RuHFjvnbtWmg0Go+uXKNGjQDYQ2EBYNq0aXz//v1Mo9FwQRBgNBqZh+NWQUYA
ACAASURBVHZ5VlYWGGMYPny4PJExBqPRiLS0NMXMjrBaRvUziGpADiFBEARBEARx02GMITs7mx86
dIiVlpbyoqIiXlxcjOLiYhQWFnKdToft27dzh0jTaDTIyMiQl//zzz/VO7OCoKir7fq+KjQaDeOc
c8YYB8AqEbS8f//+wsmTJ9mGDRvYzJkzeZ06dZCcnCyPKXSZXd4Gg8Egr3fmzJl8x44dbMaMGfzH
H39kx44dYx5cSQ6AhYaGgnOOjRs3yh9IkoSysjJERkYqFtDr9SQECRKEBEEQBEEQxN8SvmjRIths
Nvz4448sMTFRcP6rU6cOLxc9/IUXXuA+Pj547LHH+PLly6UZM2ZIR48eZZWITVbZey/EKqtMDDrm
6dWrl9SzZ08eEhKC8ePHsxEjRnDGGLRarUOQQZIkbNiwgXvahtTUVHDO0adPHxYeHo7Vq1fDx8dH
zmKq1Wqh1WrZp59+yktKSvg999wDQRDwzjvvsLfeektavny5NHr0aF5YWMgef/xxEoAECUKCIAiC
IAjif0ANco7//ve/vHHjxjwmJsbNxbvnnntYVlYWYmNj0bNnT2HgwIE8JycHixcvxqFDhxATE8NF
UVSsz5v3TqUZFO8B+xhESZLk95IkKdYhSRJsNptjeb5kyRKm0Whwxx138KZNm/JvvvkGw4cPR2Bg
IACgT58+sNls/LPPPlO04dzmggULEBwczAcPHsybNWvGly5dyqOionhRURGsViu6desGQRD4V199
hYKCAvj7+7PNmzejfv36fMuWLfjkk0+QlZWFMWPGYPz48R73hSC8fiBSHUudIAiCIAiCIGooCHlp
aSk0Go0ihNJJ0PCysjLodDro9XoAgMlkgiRJ8tg+m80GPz8/BgAWi4VbrVb4+vqCMcasViu3WCww
Go0QBIGJoshNJhMMBgM0Gg2TJImXlZXBx8cHWq2WObZHr9c7xh+irKyMi6IIf39/BgBms5k7twkA
NpuNWywWcM6h1Wrh4+MDlLuLjjYd+6jWpvO2MsZkV9GxL4795pzDaDTaO+yMwWazwbXd8tXJx7b8
2JFrSJAgJAiCIAiCIAiCIKqGQkYJgiAIgiAIgiBIEBIEQRDE7Q0FzRAEQRC3G1SHkCAIgrgthZ9a
AkDGGEpLS5GUlCRPs9lsOHLkCLRaLfbs2SNnE3QmNTUVaWlpuNmlvyRJQufOnWEwGBTT/fz80KlT
JzkZRocOHeDn5yfva9u2bWt8TAiCIIh/NjSGkCAIgvhHc+3aNZw9exYajQaJiYn4448/UFZWhpSU
FDDGcPjwYRQWFiIvL+8ffyyCgoJk8RcaGgo/Pz9ERkbCaDSiYcOGaNOmDaKjo9G6dWtwzlGvXj26
gAiCIEgQEgRBEMRfgyfXymaz4dq1aygoKEBZWRlyc3Nx+vRpHD9+HIIg4Ndff0VycjIdwBtA7dq1
0apVK0RHR6N9+/bo0KEDGjZsCEEQULt2bQQFBbk5lgRBEAQJQoIgCIK4IQLw9OnTiIuLw7lz53Dk
yBEcOnQIVqtVnp/4CzsR5edKEAR07doVXbt2xaBBgzBkyBC380ghqQRBECQICYIgCEKV1NRUHD58
GAcPHsTRo0eRnp6OkpISFBcXw2Kx/GXb1aB+A7Rs1apc0EiIiIhEQECAmpSt+D9HeUUyT6LXeRnm
ugr1dZYjCAISEy/CYrEqZktMvORUPBvIzMz4y8+pVqtFYGAg6tSpg7p166JRo0YYM2YM2rdvj8aN
G5NYJAiCIEFIEARB3G4kJibi3LlzSE9Px5EjR3DkyBEkJCTctPZq166NevXqQafTIahOHQTXCYZW
q0F4RCT0Oh1ESUKzZs3AOUdkZBQYY/Dx0aNhw4YA7KGpVqsIMICBQxRF2ZXkngSch+nqglBtuvvn
3OmtRqNxW1YQtHDWUxqNPYm4JHGkpqbCarUiLS0VjDEwxvDnn3+ipKQYV65cQV5uLiwWK06dOglJ
kmA2m2/JtdCoUSM0a9YMbdq0wZ133onIyEjExMSgVq1aJBQJgiBIEBIEQRD/y5SVlaGkpARXrlxB
bGwsVq5ciQsXLtyQdWs0GgiCAL1eD51OZxd7QUHo1Kkz+vbtC18/P7Rr1x46nRY2UYRULuJEUYIk
SQAkODtz6kLM7t45PrMLE8DZ1ePc/lehV7gsYCQJLvN7apN7LQg5V6zBq21RWpXKBqTyBTWCBgCg
1+sBAFqtBslJScgvKMCFCxdw8uQJFBcXIzExERazGVarFZIkwWKx3JSQ3ZiYGAwaNAjjxo1Ds2bN
4O/vD4PBUC6ECYIgCBKEBEEQxN8CV/dmz549WLVqFXbu3Ini4mKYTCY5jPF6aNasGdq2a4tu3Xqg
S5fOAAQIjEGr00Kj0UCr1YIxZhcn3E1GuYgmxzZLsuBjDCoCzpN7pxR2Fcsp2+TcsxBT/uoqt1Ft
nRwSGFjFWiSH8qtwJBlTC0XllWyj01a5bA/nDIwp3U7HebZaLbDZbJA4h9VqRVZmJi4nJuLSpUvl
ob5pN/QaEwQBBoMBWq0WvXr1wqRJkzBu3Di6+QiCIEgQEgRBEH8lZ86cwb59+3Dw4EGcOnUKly5d
qvG6GjYMR0xMDFq0bIGoyCjUDgpC/bD6CA0LQ+3atSGKIiRJhCja/+ziT11MOfQar1KMVe2wObuE
dtGodAnVfz15JWLR3SW0r7sGLiEHwLxzCSuOl4pYVGpLd9HIK98WoTwEVRAE2cG7eu0q8vLykJuT
g4yMDJyLP4fEy4lITrp8Qx4QAEBISAhatGiB7t27Y9iwYejVq5fHBxUEQRAECUKCIAiimrh2qhMT
E3HhwgV89dVX2Lp1a40SvQQGBqJBgwYIj4hAy5Yt0a9/f7Ru1Rpc4vaxejarLPicxYjncE2l2+cc
nckZwMHBUJWTBg9izHtXr7JwzYrpXOUYexaLHp1HxzzuMaSViEm76+e2jeXHR11bq4lJF7Gofqjs
a+aOY29PLqPVaqHRamCxWLB3zx6cPXMGiZcTUVJcgtTUP5RJcmpIly5dMH78ePTq1QuNGzdG3bp1
6UYmCIIgQUgQBEFUVwBKkn2sXXx8PN566y1s2LChej8s5Y4RYwzjx0/A4MGDcUenTpDKx/CJkqh0
cMq1kFQeGqkmnOxixpNoclIz3EkcyRqxJqGjVQk1L129SpxH5ba4CztPy8lb5P6iSoGquo1wdR69
F5MS3IxKeQ6Vw1dxjrnyWikuLsbePbtx9NhRHDl8uNwVlq7rmg4KCsKrr76KyZMnw8/PT3YwyUEk
CIIgQUgQBEGoCMGMjAy88cYb2LVrF7Kzs1FUVOT1enQ6He679z7cM2QIoqKiERAQgMDageCcQ+Ic
XKoQe9zdUrILFoWrpxRFnsI13VxCJx3Hb2C4pvvn1x+u6e5YepPspvLQUc9jIqUaCLvKhS13ntll
WVeX0O28q4hIxuwC0WqzoaSkBIUFhbh48QJ27tiOuLi4mnd0GENISAiaNWuGSZMmYfLkyXTjEwRB
kCAkCIIgAODHH3/E3r178cMPPyArK8vr5Zo0aYJOnTqjR8+eaN++PaKjo2E2m2G12DNQcgZFuKZr
rhY3N5BDXSx6JcRcQkpdHDZJDrRULudJLHoK1/TG1VMTk967hNVIFAMXI8+r8FdXt8/hnypdUuXK
PYtJZ/9VLWzUk/hTE4tqjiVgz4Cq0+kgCBqkp6fi1OlTOHP6NM6cPoOUlD9qfN337t0bo0ePxtix
Y9GgQQO3hyMEQRAkCAmCIIh/DM4d3by8PKSmpuLDDz/EqlWrvPuhYAz16oWgfv0wjBw5Cg8+9BDA
AYvFYq/Lx5w697zycE04iR9F+GC51uFOrpVnYehdopiqtkVNTFaVKMZd4F1fuKbz9lc4llU4j25j
/6rKOqps13vn0XkZz+U0uKqYdBL+nLkJQk9i0RvnkTEGvV4PrUaL7du2Ydu2WPzxRzIKCgogimK1
74+oqCgsXboUbdq0ketPEgRBkCAkCIIg/lFcunQJkydPxsGDB70em9W0aVNMmfIseve+y+7SlBc7
l7vukgdh55bp00UlcPWwUaUkcA8dVeLq6ikdNndHsqoEM964hC5bICkFnPvYPw7njanJ+ERPAs5d
NHmbYEZ9/9xLW7hoWCcXUW297o6livhzFYvc5bpxPV4uIrMivLV8Oaf1iaIIURKRcO4cFi5cgIwr
V6p9jwiCgKCgILz55pt45plnyC0kCIIEIUEQBPG/zfnz57FgwQJs2bIF165dq3J+jVaDhx+ehL59
+6B16zYIDAy015wTJXWhpjb2z4twTVWX0Ek0cOb5Z6nqcE3PLqHa5zUJ13Rv17tC9+7hmoD62L9q
lMRw26XK3Mzys+htghm1z93WV7WYdE0k4yYWK3EJXR1L7uJYKsQiZ4BgH8+al5eHtLQ0/HLgALZt
i0VZWVm17h2DwYBu3brh0UcfxaOPPqpskyAIggQhQRAE8XeluLgY27Ztw6JFi/D7779XOX9UVBT6
9uuHu3rfhX79B8BsdikmX9Oxf16GjqqLSQ9iEd6Ga3I1LeNauKFKMXljxv4pN6SqsYYV6/AyUYxb
uGb16iu6SzTP4Zo1EZMV4a3eZR11XW+VziNXEYuONjmHTqeDwWDE77/9hh07dyD+7FlkZFTfPZw+
fTqeeuopNG/enMQhQRAkCAmCIIi/BxVZLDlyc3Pxxhtv4JNPPqlyOaPRF4MGDcKMmTNRr149WK3W
SjN9Ogu4ykJEPYnFCg2gHibqlfMIKASXa9ZRd7GlnnWUK7al5oliKhNwnoRYZePwqh86yhWSq8JJ
U8ZZVjfrqKK0hUomUOf13uysow7n0UN1DdXQUdWHFlLF2EOdToe8/Dy89847OHv2DEwmU7XuuZCQ
EGzfvh1t2rSBXq+nLyGCIEgQEgRBEH8tO3fuxHPPPYekpKQqE2rcPXAgnn/+BYQ3DIfBYIDEXcYS
VhGu6SzU1DSSurCDx3BNZ5HJvc1G6iaOvBNTSkNJGcZambBTrtO9TaUw8mLsn5cJZuBRtHoTrllV
ptaKdqsn7CrCNRVZSb0c+8ftg0c91yyspmPJnUS2x3GGruNaHfMze1Kk9LR0rPr2G/z228Fq3XcB
AQF47LHH8PHHH9OXEEEQJAgJgiCIW4OjMyuKIpYtW4YPPvgAycnJlS4THh6OJ598EkOG3IugOnVg
NptrHK7p3CFXcwMrTxTjHq5ZtZh0G8ym1K9SVeGa7i5hZclulCGnlSWK8eTAXV+45nWVtoDn2oSV
CVvOmbryh+dwTW/EpHu2Ui8EnEs2Urexkqo6n3sWiy7Xk6dt0en0yMvNxc8H9mP9+vXVCin18fHB
5MmT8frrr6Nu3boUSkoQBAlCgiAI4uYJweLiYvzyyy948MEHUVBQ4HF+QRDQpk0bTJs2HYMGDUJh
YWG5uFIf++dtuKY8VktS+bzKRDGu4ZpKfVEt5xHe1ib0Puuo+3q9SxSjFI3uJSxqEq7pLra8SBRT
46yjXGVbrj/rKHfWpVUIOE+JYqoqbeG18+jhmlK7fHx8DDh37iyWLfsC8WfP2sOpvWT69Ol44YUX
EBUVRcKQIAgShARB/D1FRXWm35IvoEo6TNSZUiau2LlzJ+65554qlxk+fATeevttaLXa8rIQzi6M
Wz9b0SF37Th7dAnL/5WYPeRUnqd8rFblWUfVE8x4dB7Lo1olph46aq+gUbOso5XXJqxsHJ66Sqps
7J+ruFMPu7x+59F97J8jLJg5Ha8aZh31VB7Cw3Gp8dg/tTDV63EeVUJHVdt0EYuMMcyb+xoOHzpU
rfv2iSeewBdffEE/OgRBkCAkCOLWc/HiRZw8eRLZ2dk4d+4cBEFAdnY2Ll++jOLiYkiSBMYYCgoK
5NeFhYWKsWeiKFbrqXhNMBqNYIyhVq1aiumBgYEQRRH9+vWDwWCA0WhE27Ztceedd8JmsyEmJua2
E4NHjx7FhAkTcPny5UrnnzVrDoYOG4q69epBcpxP7tzFdbNPoPzUS5fQsYxUzbF/XtQmBHcZw+jk
vHlKMFMhNmviEqo7ljcywUxlYrKycE33dr0rWK/uElYd/qrmWFY4cOqnrLLMqV4nmKnSJXQ6XirX
U2XCzlncqRzaSpPaOLZRq9UiJzsHe/bsxvIvl3l9/wYGBuKFF17AG2+8QT9MBEGQICQIouZiwJmS
khIkJCQgMzMTly9fRm5uLtLS0nD58mX8+uuvuF1u5aCgIOh0OjRt2hTR0dEICQlBREQEOnbsiJCQ
EISHhyMwMLDK4/l3Jzk5GS+88AJ++umnSucbPWYM5r42D0ajEaJNrHDSFI6Iylgsp45wdcM1qz32
z8twzarFpCeXWz1c05NYBK/csaxuopiaj/1TD9dUdx6rkSgGruGa3mVA9eRYqoVrOp9UtWQ3zke2
UjHmhVj0nFHVw3XhRdZR19BSuY6hiljknEOr0cJsNuPLL5dhy+ZNXt/HLVq0wOLFizFgwAD6YSMI
ggQhQRCViz7OOUpKSlBaWoqioiKcPHkS69atw8mTJ3HhwgU6YNUkJiYG/fr1Q//+/dG7d2/4+PjA
aDTC19f3b7/tCxYswEsvvVTpPM2bN8eKb75BcJ1g2Gw2ue6aWrimc2+el3fS1YauqSWKcWRkdL5O
5Z8Nu/jhGq2Gcc4hSZLXWUcrq03oaFOSJM7AWPWyjnoK16wIA3Tcd1zikLjzNtqVgr2Uh8QlibHq
hGt6IyarUyTeeb+8yYDKObggcMaYIK9FEiVZBXEOrtFoGADYbCJnzH1QaXUTxaiV0+Ccl7fDIYqi
/VOFUetSm7AGBeu9FZOutQnVnikoBGUl4a2O0hWSJOKVV+bg9KlT9mveCwYPHowffvgBgYGBNL6Q
IAgShARBIrCiI3D+/Hl8//33OHr0KA4ePAibzSb/3WzuuOMOiKIISZLQvHlzBNeti27dukEQBLnT
VLt2bbRu3RqiJKnZES6dVpeOrHpvHQBgtlhw9OgRaAQNGGNISrqMrKyrAICCgnwkJJxHWloq8vPz
b8i+CoIAjUYDrVYLnU6HLl26YPjw4ejbty/atm3r8fzc6mvDarWiadOmSEtLq3Te9es3oHXr1kB5
DUIG5lW4plv2SBdN4xyuWS7w+KKPFmL37t0oLilBeMOGGDV6NMaPn+AQoczX1xcxMU143779sOjj
jyu67lWGlHpK6sK5RtDgvffe5a/NnSs4sqJ6FJmAx/F2zjULAUCn0+KDD97nu3ftAmMMPXr0xMsv
z4JWpwNjjHEucZ1Oh//7eBGmPDuVVSdc01uX0GOphirHJ7qEv7qtl3ODwcC2bv1J+m7VKnbt2lWE
R0Zi4sOT0Lt3b4iiCKPRwLp368pFUUTc8ROsuLjUxVWVKq2T6GlMoGv4q0ajwfD7h/K8vDx+NO64
UFRUpFqwHuqHz75GLqm4hBX7L5e28CQyq3IJq+tYMqUo5JwjOycHk//1KCwWi1f3uE6nw08//YTB
gwfTjyFBECQICeJ2IzMzE8eOHcPatWuRkpKC9PR0JCUl3dA26tati+DgYISHh6NJ06aIiIhA2zZt
ULduPfj7+8Pf3x8A4OfnBz8/P8W4QcdTbps89ow7iwJ7/0h9IFTljohDZKkIRUEQ5Al216b8S4kx
+2eMQSMISExMRHFxEXJyclFQUICU1BRcu3YNiZcScfHihSrFkzedtNDQUERGRiIqKgqDBw9Gr169
0KRJk1siFB3rXrZsGZ5//vlKC2U/++xUPDNlCnQ6HXj5eXF1+zy6hPIsLtkjXU6MZO/14pdffub/
nj6dm81mtx0PCwvjW2O3MR8fH+br64smjRtJPXr0ZEu/+EI5JK9cZKq5hJ7CNfV6Pe4fNkxKTLyE
S4mXheLiYrdt9C50VCmYSkpK+PD7h/L8/HzF/hgMBr5jxy7m6+/HfI1+6NK5oxQdHc2++XaVXfuo
hGuq/2pex9i/Kur6eZNgRqvV8Anjx/E//kh2O1+tWrfmSz7/ghl9jaxL5zskAIg7fkIoKSl12wdP
2yInafGQYMbZJdRqNbh7QD9usVj4sbjjQmFRkSedW2W4Zo1dQsYqdySrISY9O5mAj8GAvXt2Y/67
73jtFj7wwAP44Ycf6IeRIIi/DVo6BARxYykrK8P58+eRnJyM7777Drt370aRc4eohoSF1UedOkEI
Dw9Hy5atEBQUhDZtWqNx4yZo2rQpdDodJEmCKIqwlTt/otXqJuAAoLS01GN31j72yKnXyhgEAJLc
yXIbLARBUEut73jsxBQ9ZOYiQuGp41zeyaxfvz6A+oiJsb/XaDRgggCtRgONRgO9Xo/MzEwkJiYi
/tw5JCddxoULF5CcnIzs7GwUFhZWelytVivS09ORnp6O//73v1i9erX8WZ8+fTB27Fi0bNkSjRo1
QqNGjW64SGSMYc6cOXjvvfc8zlOnTh28//5/0LdfX9hsNqeQTfdtUIQhw+lz7jx/RcAmcxGnAhMg
QeL/nj6dc87x8qzZmDB+AoKCgnDmzGnMmTObp6WlYfv2bRgxYqSrnIBOq8PWrT/xwMDa6NG9B2Oc
ITMrk589exZ33nknDAYDNFoNLicmIi0tDTZRRN26ddGhQwcwxtiO7dt5YuIlAMC22Fjef8AAZrVa
uSBocPz4MeTnFyA0JASt27aBKIpgjLEjhw/z/IJ89OhxJ+KOHUOnzp3h7+/HnC+/xMRLyM/PZ488
+ih/8cWXGAC89+47fPXq1fj8888wbfq/+d69u1FWVobi4mLs27ePDxgwgDEmQaPR8jNnTuPa1asw
GI1o2bIlAgMDmShKXBAEduDAfm6xWNChQwecP5+A7t17wGg04nLiZaSmpUIURQQG1kK7du0hCALj
nHPGBJw5fRq5ebmoX78+wsPDcejQIXTo0BG1a9d2nBYeFxeH0pIS1G/QADExzeR9dr5XBAH8iSce
xx9/JLOhQ4fhhRemo25IXZw+dRLz5s7luTk5SLycqHDD7cfGviWlpaU8IeEcSktLy79X2sBeKIRB
o9Fh9+6dvHbt2rjjjjsYY0BGRga/dOEiuvfoAb1eXx6CauUnT56AzSaides2TleW/XpjzgXrXb8i
HA53uRBzPDyQIKncYxU+n/yNweDxHpDDntXuCbXPOQcTPIhJlyylDIDJZEKvXr3xU+x2vD7vNRw9
cqTKe37t2rU4ePAgjh49igYNGtCPJkEQfznkEBJENXEWApIkwWKxwGKxYPHixfjkk0+QmZlZ43U7
who1Gg1GjBiB7t27o1ev3mjatGl5eCeHJImKBDJqwoQ7T1dx9RzbriZoKqILPYSAuuetd6nD5pQ6
H855TZTWiJwEUSXxiZs8dGlTcoghVUFrdxs0Gg0EwT4e7LffDmLv3r2IO34cZ06fvq6w3KFDh+Lh
hx/GsGHDoNfrodVqaywSJUlCVFQU0tPTPc7TuXNnrFu3HmazGZw5Bb05HU8PJeIqybDoOesoYwwL
Fy7gX365DG+++RZGjhoFZpcOAMAFjcAEQZCPn7ND+MUXy1hArQBER0VKjRs3Zpu3/MggAbHbtvLZ
s2fx7Tt2svDwcLZ50ybptddeZQaDgTPGUFZWxlq3bo0dO3chIryh84bxpKQ/hILCAv7ghPE8ISFB
3uCxY8fy1+bOE2w2G8Y9MJZfunQJYWFhyMzM5F+vWMnatWunEE3x8fF80sSHERERgQULP+Lh4Q0F
nU7PDQYDE20iCgryeZ8+dym8o1Onzwgmk4mPHjUK6ekKJ5p/u+o7NG/eQtBoNOjerQu3Wq2oU6cO
8vPz+fYdO9n2bbF80aJFzMfHhzPGYDKZWHDduvzHH39iPj4+bP5770nr16+T96dJ06a4nJiIzz5f
ig4dOjCLxcLvH3YfLywslOd5Ydo0PmHCQ4Ld3a+4Q0pKSvjQ++7lbdu2xdIvvhTsLjOvGMvHGESb
CIPBAGeHsLS0FNnZ2dLoUSOZs7sVEhLC167bwAAgICCAdbqjg9SsWXO27MsvGQD8+OOPfMGH/+Eb
N21hderUYcVFxXzo0CHy8jqdzvHggh+LOykUFRVUjEN0v9UrHfvn/sVUMUExHlYlRBQAmMQU7ah/
qSk/lx3LKrex4vsNnEMQGOLijmHea68pIjAq4+DBg7jzzjtpXCFBEH8pAh0CgqjmUxTGkJKSgpde
eglNmjRB3bp1ERgYiFdeeaXaYjA4OBhDhtyLzz9fgri444iPP4fExMv4888rWLz4Uzz00MOIjIyE
xWKB1WqFJInyNlRaww9OT709zOcYB+PaP1KOLXMb32W3A91cKcck5eN/Z4/AbZnySbxiBue+eMU7
F0eSu67PxXksNzYg2uzlMywWM7p06Yo5c17Bxg0bceZsPI4cPYaDB3/DggULMWHCgzAajV6fs61b
t2L8+PHw9/dHZGQk+vfvjyVLlngU2J4eKlgslirF4Pvvf4Dvv18Ds9liP+fOfdjyg+4akuuxODeD
6vHiziek/LrYuXMHAGDM2LFwJHUxGAyoVasW8/Pzg9FohMFg8PKGUb718/PDa6+9CgD8+PET7Pjx
k+yVV17l8fHxfFtsLGK3bXfsJt+5cxcrLS3F5s2beUJCAhs+YgRfv2Ej79ChI1+3bh07efKk4gIN
CQnhmzZvYa1atXa7nlq3bo1WrVohLS0ND4wdw/r36ycNve9evvzLZVzvo+dGoy+2b9/JAPCmMTFs
/YaNTJIkLPjwQ56enoYePXvw71ev5rPnzOEA2MSHH0J+fq7iFurcuTNfv2EjCw0NZYsWLUL9+vX5
vv0/s19+/Y2NGzee52Rnw2Kx4PTp03z9+nVMr9fzpV8s4/Pmvc4vJybKp1Wr1WLVt9/wwsJC9vjj
k/m3q77jUVHR+HjRIpaWlspdE9FYLGZYLBb07HknzGazfBEwBiZKkj0UXOXSLCsr42PHjmGSJOGJ
J57iK79Zxfv168+vXr3Kpk97HhqN4LaUQlQxu/j78sulHACG3DOEr/zmWz5w0CCXCeyKSgAAIABJ
REFUZ82s/D+n69NJaLHyRD6urqEijJO5X1iKM6wSAuoaGsrkh02u94Tyc8UXkPP2OLbRySHkTt+3
ksTRqVNnbNi4GY2dQs4ro1evXvj+++9JDBIE8ZdCIaMEUUmn3fEjffHiRWzatAlHjhzBb7/9hqys
rGqvz8/PD+3bt0fXrl3Rpk1b9O7dG5GRkZAkCVar1Z6ko7yD73jtui1qT5EFQfAoRrhzmKeKIPTU
d68IxfIcjugaOup4yzlzG+fEUB5yKghu2yJrQUldNLoOCGOu4lBFnHJFaJr9hWMspE6rRe2gINSu
XRtjx4zB+PHj8cknnyAlNRUXLlzA2bNncOrkKZw/n1Bp7T/OOTIyMpCRkYH9+/fjmWeeQceOHdGv
Xz8MHToU/fr187is2WxGo0aNKn2AsOq779CjR09YrVaF68pcdlYOwXU+luUHh3Hm3pFmSl+VuYaO
MnvYMwD4+PjIr996+03+zcqV8sm7b+hQNn/++8z5ZMkOinMLLuPvRFFyOHmsS5fOvE+fvhg4cBBL
S7+CgoJ8Vu64cgBo0rQpM5WZ8NVyuzNVr149Frt1Kzp37oyTJ09g+7Zt5eGNdt6b/z6rX7++09g/
xflia9et59tit2Hf/r382JGjyMrKYosWLcKZM2f5B//5j1AeEsx99D6IiopiBoMBmzZtRGBgIF+8
+DMmihJr1aoNJEmS3p8/n+3btx9jxz4gt/HSjFmsVq0AmEwmnnD+giAIAj9y5DASzp3H2fiz8nWz
e9cuAMDXK75hTZo0YZ07d0FhYZH00UcLGGAXWWvWrCk/XiLbtWsnuvfozlNS/mAnTpxAgwYNFTUW
HUlz9D4+TllLK/4VysM1Xa+FtNRU2KxWPPHEk/yJJ58UTCYTPvjPh3jowfHS6dOnodVqmds3hMtX
iV6vx65du6DRaPjLs+cwgLMZM2by3bt2cdd6pjUJ1xQgqIZrOiYwV3XmfJcwtecTTCka3Z9jQYDg
XtDe9TtVDm91/i4COJeg0+vw2WdL8Plnn2LLls1V/jY89NBD8PX1xYgRI+iHlyAIEoQE8XcRgGVl
Zbhy5Qp++eUXTJ06VXXMXWUwxuR6eGPGjMEDD4xD06ZNYbHYHSvH03Pn9TraVnPuWBUun0ex6BxO
6CbgHEkgPDhbHhw4XokQU4rDSoRb+bbIVpBi05Q9vwqtWIlYLO/9M5d+K4O7+HHu/4mSBNFsd1eC
goLQo3t3dOvWDXqdPRTUx8cH69evxc6dO3H8+HHk5OaisKDA43k/ceIETpw4gYULFwIARowYgTlz
5iAmJga1a9eWr62goKByJ8cdf39//PzLr/Dz85PLSVQcL+5eNoIxcI/n0H4M5M6tQj0y91KB5aLu
jjs6YdeunTj0++9o1749Z4yxiIhItGrdmjEwxMef5QYfd4eQCe5VyxkYs1itjtcoKSnGqu++Z08/
9RRPT0/Dtm2xbNu2WEyf/gL2H/iF168f5rYj165dAwAc+v13e8ZbAC1btoRGo1HMFxUVBYvF4vRw
AmBMgCAwnDlzhguMYcDd/TFw0GDBx0fPU1NT8MikiXzv3j3Q6XRuB08QBFitVvj4+MhjXi0WCwYM
uBvvz5+P/Px8xXUfFhqCMpOJAQxbNm/ms2a9DAA8ICAA5eUeOABcvWbPqNuiRfPy7wQLmjVv5vSQ
h6G42D7u+PDhw+BcAgDWvEULCOUJmJyzemq1WgiCgKTLidBqteXhvAyccy4IGvszIbeEJwzm8uyY
7dq3g8lkAuf267NBg4a4ePGiy31t/yJgjDFb+fkEAEEjoLS0VA51F0URWo3GwwMnl3Dw6oz9c/t+
47AHOVWUy2AVb6sY+8fcn4I5baO8LONuolBggj0DKlMRi/arBoxJECURz0x5Fv7+/vjuu1VV/maM
HDkSu3fvxt13300/xgRBkCAkiL9SDF66dAn//ve/sWPHjmqPMWOMoXPnzpg2bTruueceSJJUkUkT
QGFhoddhQWoCz5OAk2uqqTlvzsLJg8j05BTKrp5rD19FiCm7jM6tK10tSc3hc1WbKr00R+ioWq1z
WSyWqwDZF5FnUOanlz9XE5jl67LarLBarCgtLcXddw/E3XcPtGdc5Rx5eXk4evQo1v6wBj///HOl
53Hz5s3YvHkzBEFAu3btsGDBAjz++OMexWDt2rXx+++HIWgE1QNk76iqXy+Kw+esel06uU4HtPx4
KbOOcs4xe85s7Nq1E7Nnz+a79+wRrFYrJkyYwB588EHYrCJv375NldewxWoF5xx6vR5nz5xx7nDz
0NBQtmnzZoiiyBLOnZPeeustdu5cPI4dO4phw+5X3prgrH379jh8+DDeevsdREdHM0fINJe483XP
fXx8BIvF4vQsw/7Cx8eAN994nScmJmJrbCwLC2uA0lIbCwkJQUREBJcdf5dLUxQlBNcNRlFREcxm
M3x8fKDV6rBwwQIAQHRUlGJbdXq9UGYqg9Hoi9mzZ/EGDRuyDRs2MgBs5YoV0pIlnwMAmjRugr3Y
g5+2bsU9g++BTqdHbGysvCJJktC0SRMkXr6M/3y4AHXq1GFMFoL2fbYncrJnVPX19YWvry82bdqE
yU88xQMDAx1OI1uzZrWUl5fLJk16BAaDgbk+fACADes3oFv37igrNdvP19kz8PcPUHynWCwV59NR
F5UBEEXRMXYShQUF8PP3R2FRocoYOsc16mKtuSaS4ZLKwx9W6XeE4xZxLm2hCDd1vh+cRKHk6jC6
bAt3qZUhP1ByTtSkWL1T6/Y6mnjooYlo1rw55s19rcp7ZuDAgTh69Cg6depEIaQEQZAgJIhbJQAB
IDExEVOnTkV8fHyl47nUaNu2LaZOfQ533HEHoqKiYDAYIIoiRFFUiEFPwqsqUehJwHkSi9yD4PIU
rulYnyeXkDm7hB7aVM6vdoydkkk4CTb39SnrirmGnHIPjqVrWKkiUtRZDLOKbIfcWWQ6Jd5x1ZCK
gMxyERIcHIx7770XQ4cNg7msDFlZWUhNTcXq77/H1titqudSkiScPHkSAwYM8Hi+IyIisG79Bmg0
mopU/G7hsoKbsHXso8MldDt83EPnWD62SrHIOedhYfXZ/fcPl378cQu7o2MHKaZZM+i0OuTl5SLR
PtaNhYaGqibpECUR/v7++DM9nU2a+DC3Wm383Ll4+cwajUb2yCOPSL///hu+X70GPXv2ZIMGDeLn
zsWzkHohdt/HHgbNnntuKv/oo0Vs9pxX+Ijh97OJEx/mLVu04FcyMvBnejoWLPiI9e/fn6nf4/bh
rpwDZaYy/PvFF9mUZ57B6FGjePMWLbhep0d29jX88ccfLCYmhttsNuj1egDA5cuJ7IulS6Upzz4r
TJr4CD76aCEbNvQ+3rhxY15YWIhLly6xevVC+N0DB6rbshUPMLhGo2GZmZl8/fp1AMBMJhN/YNw4
9sUXS/H63Nf4po0beGlJKS5duigrE7PZjKnPPY9p017AI49M5NFR0Ty1vNzKl8u/Yq1atWLOLrxO
p8d/PlyAZ55+it0/7D7eomVLrtfpkJOTg9TUVAYAY8c+gMDAQMWWRkc3QlBQEA4c2M/Gjh4tBQcH
IyUlBTk5OWzs2Adgs9m/y3x9fZGS8gd79tlnuNVi5RcvXpDPp8lkwsMTJ+H/Pl7EHn10Eg+PiOBp
qakQRVHtuYtq/UjnRDKO2pXehGuqDBJUCDXFmEHmeqly97qELmNvXR1L1W1x+rji7lSoS3Tv3gPv
zX8fs+2OcaUMHjwYOTk59CNNEMQthZLKELclWVlZ+OSTTxAWFoaYmBjs3LnTKzGo1WoxcOBALFr0
MRITL+Po0WMYO3YsGjVqBI1GU574Rbrup7uVJY1R+8wxzTXctEIcqRRmq0TYuS4PFdHFHJlkVEWm
o82KtA/Kd1BNTKMQM1CKH0GhFVWS3bhun3JjFVOZ0z44L+ssJrkiCYtjLJb9c0mSYLNYoNFqUb9+
fXTv3h2fL12KnNw87NixE7NmzcaAAQMQFhbm1fk2Go34fvUaBAUFyfvP3GLZXMNflcfDeawoh3vn
VXD+uncZNOh8vBhjTBRFvujjj9lLL81AvXr1cPL/2bvuOCmK7P+tnpnNu0gSEQURFUniIkniciIZ
xAyeAZAzoIcYQAzneSZARThRFDAhBu5A0TsUxZ9ggLsTEFRAJEpY0pLZOKnf74+d7qmqru7p2V0k
2M8PH3CmQ3XNq+r3rffq+121CsuXL0N+/k60bdsWL700FQ88MDpOtBEDBmDlZdAPPfwIS0lJoR9/
/BGHjxzG1VdfTUaQXVpaSpMmTWJt2rTFDYMH0TkN6tMrr0zFrbcOp9atWyMSDuPOO0cAAC1etAg+
nw8NGzbUbr/9DpCuY/ny5Tiwfz/uHDGC9enbhwFAaWmZZRFFcHmd0KFDJ9z/wGiqWbMmfvrxR6xY
sRx79uxBh44dafqM11g0GqVgMIh27dujrKyMvv76KwDAzbcMYcOG3UqMafj++++xefMmtGvfnj74
8EMWAz0IGyWxXF/cc88otn//frRt05oG9O9Hbdq2BQB6++23UbNmLfbEE08iPT0dP/7wAwoLj2LQ
4MFxKKETtWnXjg24YiAVHj2K779fgbKyMox5cCy7+OKLWXyMxbUXW7ZsqU2e/Hece+65WLtmDVat
WoV9+/ehQ4eONP+TBahevTqTKwsYY+yjf/0bHTt1ol27dmHlypUIhUL44403YvSDY81nufvPf2aB
gJ/WrlmDosJC9OjRkwy/0qNRGnjllaxr1zzat28fVq1ciXPOaQh+mJMida0YliaRjFGuKTo5P14V
Ts6NTx4UinOECExtSWRI/F4FKAUSHJJbEhtgsf2z0UgUubmtMHTosIRzwcGDB9G7d+94mz3zzDPP
fgPzZCc8O+XNADzBYBA7d+7EsGHDEpb68ZaWlobTTjsNf//7ixg4cCBKSkoMLbDfpO1uS0ftjufj
IwsjZaJ78fjBqqhtKSmVLV5RKnLCC/saZSkKAEzIAMQzjOCfQSoRrYi0hRA3yuWvEEvQ1FINcT1A
YmLm0aeVayTu3bsXs2bNxKxZs1BUVGQpF9U0DV8uWox69epB7iChpE3RQVbNbrKA40Qi8XwHkUKb
0NhPWQ6Ey5lbI9GISeevk05ZWVksGo2Wg0Jj3KSmle/Bi4QRjZZLHpSUlBhlnuTz+1hKSorpy2Vl
ZSA9tk9N01h6ejqIdJSUlBCLUaympZRfM6pHy2U4yp+X0tPSmc/nQ2FRIZm0qFY/JIAYLxUSjZbL
xkSjUWKs/H0YCARYSkoKopEoysrKKLagwlJTU8qztzGG2HA4Yp6TmZnJGGMoKioiohjuYgxpqanQ
tPLnCwaDyMjIQCQSRcHevRQKB3H66XWQkZGBcDjMZr8/W58wYRx748230KRJU1a+/4+xlJTU8meO
RjkG0bh4PD8nEOkIBAIIBAJgjCES0REOh8z5ikinzMxMRuV7OSlWhApN05CSkiLch6RUc1paKgCG
SCQCXdeRmppa/ntCBwjENI0Z+0pDoRCM37a4uEjhkPEMmi6MT34IcKQuFrBlBXz8+DTHLZ95NEpE
VXISljFh871CsF4mUrLwNpPRpvJ+fnbCeCxevCjh3L9mzRo0a9bMe4F75plnHiD0zLOqsnfeeQcj
R47EoUOHXJ8TCAQwYcIEXH31NeZem+OhFWUHCpM6XgrFrHv/SElmIwA/RTbQLmPHf2yrTZigXNMu
UjSBn6oddiCTZAgo6R3aahoa/SXWs8qSaHblmvFgsZzltLikBIcOHcJfHn0US5cuAQD84x//RG6r
VhwjbDxeFgAccc/H7f2zkAbF+tOVNqGig6wg05pdEeUNyb78jqTg3uyveGmg6ofUhV/H+r0qiDfa
KLcl3i0UcwkONDD7RYt4fynRhwSYOH+yrJvI3xMmTZpE/5j9PmVmZiIlNRV6NIqjR48yIsJnn3+B
atVyGN+BVilRaUyY35NNG8UOTDQmVPek2N4+8V5cGy0l39I9XbdFoZ+p0gN0KB01137srqkCdolA
oQX4cZqFCrComzsKyVjdAaF8D+Ydt//JkcEYAHJycnDEgcDKM88888wDhJ55lgBAGeDmnnvuwWuv
vWZS57uxAQMG4Pbb70DHjp0AWCUgjsfz2JmT3ITyWqhYltA5A2cvbeEYrCqiVjEjyUeKiiyhCkza
tRG8eDVBHZq6A5Nus4TiBURSm9TUVBQXFePXX39F48YXQI9GrZutSBHIio0Vxb65tphZZDle1u2y
hPEOsmQJyTlwtoBFqa1JgUmu+8kuencCtgrw6QTgxAwbj+T5/uJBpq4Ak4kAofjQsUUSmjzpBZo/
/98oLi4GAJx//vm4f/RolntxK+i6HociJAJYFegTh5/uCOz4hRnxcCcwSdy8wiyAN56BUyXhiZuT
rSsGwuEKEGcHxOxWL4QxQbBmCcnqH6QA/I6ZyYRg0TIIBL/atWsnht+auHx0wYIF6NWrl/dS98wz
zzxA6JlnyVp+fj4mT56MiTEmQDdWt25d9OzZE0888SRq1KhhywJ5PEFhMllCR7BoA34SXVMAk1y5
ZhzAkYM2oTJ6c5F5VEd+jm1xyjzyjbLLPMrPYGkC2cSiDuWatsFqHCzaZeaETJqUebME91I0T6pO
JUXmkesgIbhPAkwqg2oJ2CYEk5ZYX8qyJMhM2mYeEy1OqPxM6C9rW+RyTTVYtCypGOeQz+dnaenp
MLTfw+EwSktLlUBMPVxVQNSaBbX+GE5ZPZdg0k22z4LyCETJgUnhN3ZVOkqwrMXYAT+ne9muRcRK
TmHTFkvmUVrKin0QSAngtRnT8Y9/zHacw3v37o1PP/3Ue6l75plnHiD0zDO3Fg6H8cc//hFz5sxx
fY7f78ezzz6HIUOGnNAb+JMuEZUyRZbA2Ab8JAKTjnv/HDOPimAVyez9UwTxNlGrHruhbQloEplH
sb/gnEnj2mIovjGb6NQp86iIoyu0988oY3VVOkriAQZTotyWeOZREu1WgUXpnk5gUo/1mPmdLnOG
WKJ3ezBJ6rYkKhF1VzqqPg9QAzFrVk8F4JgrIKYCU2pQawcWrUDMujiR6Bm4vX82YNFmuJpt0nVm
eYYK7/2zlI7yPsykygAR2MnETfaZePF7AlnaUg6urUL24q9gbgwGxSpPBg+6HiUlxRWe+z3zzDPP
qso8llHPTmozXpaPPfYYatas6RoMZmRkYP78+di5cxeGDh16wr907bQGjYDIjnXU9nrlBynBoHE+
KbJ2BmEKlFqCTBWZIv6VIBQhyoJJjKUGAyFZEJczu6jBRsoUEhVCTMsEHtL498Z5Ko1CibpUYEzl
ImcLMLbTEpRYTJnyR4rfzcqIyIRz5e1bzLEtUhAstEWT72Y+O+OkKiD9pMyJXojFn0G4p7DPUmwj
E9qo+p6pn0HVX8qfVuwxQ+MPDnshSfrAkLZgsj9ZhhYDlO1h1h8bqnJTBiupr6ixEHd5iTSJ5PaQ
2EN2Y4LJ54lCfir2ULKw34r3tJa3Mu73snaH4G+SkxsMt9aSZWlMqOQkFLqGtv5Ekk+R8ueMs44y
u189LpTIwBAIBNCxY8eEc//cuXO9F71nnnnmAULPPHMCgv/85z9Ro0YNPPnkkygsLEx4Xu3ap+Pp
p5/B7t170KFDR/j9fui6ftI8t502oR1YlLUQhdDOJjtoByiVUg1EQphYrhahKWQh+EBQCsQBu2JD
MUYlVVDNBCBqSRjJwJVJjYIVTKqiXWtgKUpp8BF0jBBTPNQ8hXG6f0Z/MaW0hTBL2+0nVEWmXHsY
x7dJ8uEJpC0ILsEk4sBOs3ulcHqIMrAtbyMHFiV9kjiIND8QHE6DJrbFob8cXF6SSkH8XlJbBCkV
Js9JIlgU3cgK1OLDUwVO5d+YXAJNJvqoZbur+BtrTN7Pqzn0FxMAofwdkxcn5PHC7IGtMCZkuQl5
IUEFxEjRRuP5FXISgr/B5l6wLghoTLNlOpXBKcmAUJLZuGfUvQnn/IULF3pZQs888+yYmydM79lJ
BwQZYygoKEBeXh5++eUXV+elpqbiqquuwvTpMxAKhRCJRE66Z+ezhGpReGewaBFRZgqGSul4VSAi
C8FDBkWq77nAkBesF0TiATBNE+rlhGI6Jn7CScZbIJElY8k9v1nGxXioJJcXcnsbjX2IMphMRiRe
Co6tYJHPmnL9IoMfpomkKRqEklrNgXXU+jvGA3FBhDvWQdb+gvJ7M9C2gEkpMtbiAbnwDLGflFkV
zLk4nkHlcHwGyXwGHjvyIueABRwxFu/ABN0l5+MSLNbIJdwKf3Man0pSGs0EeGIbuTFhVNzqqvkA
tj4g6JVydcJObXIiilF0mPCBU1vAFPcyxgSzlmuaRDFKpM/AbOcIKUuo8mEbH1f6GyR/Uz6DsFqB
1NRUnNuoEbY4MI5u27btuJKaeeaZZ78P8zKEnp10YHDChAk444wzXIPBxo0bIz9/J1566WWEQqGT
vg/swKKyzNNmDyGTgZOcEXOQoLBrixAOqohiSJWFsS/XFNuoCiylZ+Ayk0J5q9RG4aaKLKGRBU0s
dC9dSvo9LP2n2JMkZkSkUj7pBk7lmjzIVIFzpupCDQ5tLD9Dua/KRfknswFwCkjMgQD1veJJQUv9
prrklIltZErwZulAyf2YFdxoaoF1cQjZ+bzFw2zGhHg9uw60E3sXv0+UsYz/xsIjM/X95HOtPs4E
uGy6tM0gcGoLU5WHKso140CfwanmmnG/IZ/tY1CVxttIqMjfW8pDOX9Tlo5ax0s4HEbzZs0d59mj
R4+e8O8fzzzz7OQ3j1TGs5PGDh48iJ49e2LFihWuz3n99dcxaNBglJaWnlKrrMkQydh+DntSl0RB
QGLdv4oRzNgSxSRiQ4Qou2Bpp5OchJUWUZTTUEpbwJkhlGuLmlvDHcGM5UFsCFMS6STyz6DqILUO
m402IUcwI+j+JSKY4X5kJ0ZHFQglq5YH4KRBaEeCIwG1xFINdjqIMh1R8qQu9gQziUpO7bQJXTCn
IgHBjKABCst5CkeGmmBG5IiFjRSFHcWsiq3UidRFIJix6y/YS1vI3WfRGJQ4gQjSnMr5rj0JjkQw
E2MrXbp0CZ5+6knbuT4rKwvNmzdHJBLB/v37zTlc0zTs3r27St9rGRkZyM7OFt4ZdevWha7rSElJ
QfXq1UFEqF69OurXr482bdpA13Xk5OSgYcOGaNiwoReoeOaZBwg98+zYAB/GGD7++GMMHDjQ9Xl5
eXmYNesdZGVlnVR7BJPtm2Q/txWst2HXtDtPCKMVYMsOLCYMnGEvEi9GiqKunyOYTAgWbQJqOElb
8AyopJBqiNcfqrUJ49GpBWxVQiTeSZtQDX2QUNfPXtrCHkzaicTz37tmK1UoQVREsN714gQpvVz4
X6q0SLz6u3K3cQHgEpRrJgK8FRWsF9ti9JdYcis/n502of0U4QwmE4rEWxhASSjDVq3emCWnTmL2
NmDSbEsC4Bp3cXFO2bxpE/58912nzHspLS0NjRs3Rs+ePdGkSRPUrFkTGRkZaNSoEWrWrIns7Gwv
sPHMMw8QeuZZ8qDnvvvuw+TJk905NGOYPPnvGDJkCMLh8Cm998IuS8gYS1qwXpBqUGQKkwGTbjOP
SlFvBzCZMFh1AJN2Oom6RdpCCpwTgkzj4iqphsQi8RYw6UYk3k6qISGYdNZJVGftxA6yA5MWMXgO
ZCpBoep7V5lHq0i8q8wk1IL1ibN6CsF6A2gyK/GOVarBna6f1eV1OGfmDGDIksg8utNJdBKsdyoB
dZd5tA4Csuj6cZlH2MtGmL6RACxWOvOYQJvQToNQaKNqPoqlvg8dOoQ/3jD4d/Vev/DCC9GnTx+0
bt0al19+OVJSUpCSkgK/3w+/36O28MwzDxB65pkEMs4//3xs2rTJ1Tl+vx/ff78S9evXRzQa/V1s
xE9WsN4O2Dll2JwIZsS40V25ZsJAHOrMnF25pqtnsIloXYNMO6F74R/25Zqk8kWppI9cAzv7EklD
VE6ZJYyljJTlrQmzhJRcW1hcJN4CxBJ9HwN2dv2lKtd0BLaus4RJZNhi7kUOwA7WJQ7H0tE4ULNq
Ezqd56Z0NA5sXQA7JJMlNICpc8bSWZvQvhyVbLQJzXlJyszZlWvyWUJVxjIpwXqXGUv7thhLPeX9
U1h4FP/77//g8/nQsGFDZGRk2rKYiiPROi5sPuDaBJSWlmHz5o0xQiVg8+bNCAaDYAAOHDyAgr0F
2LFjG3T9twsNfT4fsrOzkZqaigYNGqB79+7o1q0bunfvrowLPPPMMw8QevY7AYNHjhxBp06dsHbt
WlfntG3bFvPmfYT09PTf1cZ3p3JO5d4/J7CIRHv/kgeTdmDRenhiMCmUa3Lgxy2AIxtwag1WbQoT
XWQs7co1LVlC4ebk0JbkyzXdZgmFMlXHcs0EgNdOEiMBEKvI3r9E5ZqJgK0q41OhLKG5F5LPWLoD
k04Azv0+xETlmnbnuSkdtV+cSAgmbbKETuWaFCvXtLuuq71/CcBifAlB6i9Xe/8UY0LVDtdg0fqM
mqYBBOi6zvWXXeZR9Dc+UW7zgeU5NBbnE9Q0zaS30rRysiDjewJQVlaGwqNHsG/fPui6jrVr1qCg
YB9KSoqxt2Avdu3aiUMHDx2zd9zZZ5+N8847DxdeeCE6d+6M9u3be3sVPfPMA4Se/R6sqKgIjRs3
xq5du1wd37//APzrXx/jwIGDv7vVQ6cS0aTBogP4SQpMSgDOLhJOGDjDxd4/EgGVUMbK3wTJE8VY
7qnqE7EDKlauKWX14h1AcKhUc5nVI6tkAymyfS7KNdV7JeFMFGOrn5gY2DplQcVyTVIGwK4zjxaX
dwfQeLKb+DJA5YhirPd1tw/RfeYRcEt2Y82kucsUuiKKUQwCVfmrACaV4MhalmkBizaA1zHzaEcU
YxkTUlsUYNLBfcTRWREwSdJimA1YTNxflgEpe5F5LyKCz+crB44+H3w+H3zJx+TYAAAgAElEQVQ+
PwoK9mDLli0o2LsXW7dtxc9r1qKktATFRUXHhCk1Ly8PY8eORb169VC3bl3UrFnTC54888wDhJ6d
KhaJRFCjRg1XIvMA0KtXb8ydOxfBYPB322fJsosmAouJ9/7F9q4xm0DFIPGpJOuoELraZR4rvPev
6jKPrvb+cdG8QXHE+EbBHeuoDOD4/YTWfU6KvVhSvziBTLvMo6UtTgDODetoAmBr2Supy6LnUo9W
JPMI50xa3I3sMpL2+wlV0X5yrKOJdBLj39uG+SQfH+8vcbg6ZdLcP4M0BZj3NHvdMgicwGQCAKck
kuGIYmyc3AlkGnqZynsdK9ZRANCZGkxaXdwCJsk6IPnVisT9Je/NFf9yAJkiJIXOpPFZft7u3bvx
4w8/YMm332LTpo1VLgGVnZ2NoUOH4s9//jMaNWokvKO8UlPPPPMAoWcnEahhjKFJkyau9QX79u2H
d95553ezXzCR2WUJkzleCCMdsoRKkInkyzUT7tWyaUtSBDMW4KdmVJWqN5VtMclpVEC4ouWaHAi1
ltcl2p+ICu79s2+LEwOoM8hMtPfPPoOo/N4JZNqUa8oJNyeyG7vFCWeAJqAAwYfjMMMZ2KlBWqJ7
Op2DCoBMu4yleF27EmanexJJRDIcEHFDMGOb6VQ6srp01PSnChLMwAEsOhHMuMpY2mUJJQBneQYL
WymXuYttaLWMiUT9ZfG+ZEEmJKCsqvLgtCfBoGkaItEoioqKUFhYiMKjR/H9iuX4Zf0vWLN6dZW8
C6tVq4a6deuiXbt2GD58ODp16uQFWZ555gFCz04Wu+OOOzBt2jRXx7Zt2xZffrmofDO8BwYds4Sq
ktKKEsXw59uxjtoDOCcWU0WwCrdEMepgL5m2WOUkrHvfLFnQhPsQXZZrKqJTa0akAuWaichuKEmi
GKG/4qGeI5iUwKKScZRrhAAoE4JFJNQmZIyJAbADWHQv1WCvkyiXjla0XNP6fWJyGqdyTetQdqdN
KJZr2pRT24HJpLQJpb22CgZUqszeP0UbyT5dl1jawgb0Oe/9S1Suab/3T26jCMQMJ2TWxQnxA7GN
SnAqZQPJHiwmKn+1jAlpocDoHiKCPxCAX9Pg8/mxbNl3WL9+PXbs2Ib8HTvw66+/Vvr9qGkarrji
CvTr1w95eXk499xzbRc2PfPMA4SeeXYc7YsvvkCPHj1cHZuamoqtW7chEAh4k7kboFYB1lE4gJ9E
160M66hShw2JMo9w3vuXRFsqk3kUO8COfxIJyzWrjHVUsfePbNBPMkQxFWVAdSrXFKvj1FkY+2yf
Anonm3lMtDiRACzaMj0qwaQzUYy6RNR9uWaVZx6RoJxaUV1eUaIYvr+tYLgSe/8UrKNOmccqYx1V
ZR5VOohVsvePTMYl15lHob8SZR65WVCZeVSgQbjJPIovAIotVGqaBr/fj5SUFPyy7mf85z9L8fVX
X6GoqAglJSWVek9mZGTgr3/9K4YMGYKaNWvC5/N5wYNnHiD0AKFnxxvAMMZQo0YNHDrkjqnsiy++
QKtWl3idZwPQbPcGJpklJPto0R3BjFKqQV2uab1V5co1rd+rNAjV0hZ2GRH3jKpScKt4SHttwngG
joFZdBLNz+GidNRGsF6FApyAnXCQUJ2pSyATlSrXTMRWqipjJV2OdWV5CJvy1wRkN4lBkz3BjF3U
H5eTcFeumXBMJJUlFMGiW51Ey29sg+RUz+CKYEZROmqASfdtSQSayNbJrUROsO5DTLSXUPInpyxh
MuWa7gEcV67JmCmJknjvXwwoOy0FJAB2amDL/Zby+JT0WuR5jGLvKLLECPF7hsMhlJUFsWbNGnzz
zVdYvmxZxQNgxpCTk4OBAwdixowZCAQCXiDhmQcIPfPseNn111+Pf/7zn66OHThwIN5+exbC4bDX
cQ7AsLIEM4nATyJg6JyBU5eOOpbXicg2wd4/94L19m10STBDdmAxsTahMrvoWDqaZLmm271/secn
5n5vn9ssIdyCxYqCSaU2obzHT5ENpGQIZlwwgJJDcI/KEcyowKQTEFMPV/dZQsfMXAUIZuzaSA6r
ERUlmIETWCRmO1MlI21hPyYSATj7ck2xyS7AZAXLNRNlVcW2kGL8ST8asQqDSUviUs4SykuCXMYS
AKBp8GkaorqO/B3b8cOqVVi+bBnWrl1T4XdnixYtMGDAADz11FOOi6ueeeYBQs88q2Lgsnv3btSr
V8/V8ZmZmdi1aw/C4ZA3Sbvo2yoBi7AnYXENJsldGWfCwBlu9v5Z0KF4FcU+RDnzaA1W3WceVWAy
6XJNKTq12ytZJXv/pE5PlihGnXl0BpNutAmT2ftnq8NmAY32OokqbULnck01UYyyvM7iLu7LNZMH
k4nLNa3XTZx5VC9OANa9koq9f4nkJBTgSF06qvC3JMo17dg1K5p5ZBoTSw3JBvYm0i20h8rqc52G
o41sBJyypOTUFnGAGR5vXij+gZ2XQd0N5PSYwkKb7QqQ9L2maQj4/YhGo1i2fBk+/+wz5O/YgV27
dlboHXrvvffipptuQm5urgcOPfMAoWeeHWsbOXIkpkyZ4urY22+/Hc88M+6ke8aysrITDhQm87n5
4k2wF9H2vCRBofgxuWqLVZ6NkmsLA3xME0qG1NIWgESyDsaBzCphHXXS/ZNqSO1ifiVoQjyI12Pf
qdpSVlYmBj5O+wnVYayr82xLR8140TZCdcwUOkW3SbeFbJ/OkWTGqS3uNAbF741qYvm71NTUCmkT
mm6hq4GtrbSFctHCmQhHzTpqTxTjlnVUldVzlmpwYh2VAK90PXPBgOumzz5bgP/7YqH3Eq+KQPSY
nFDOaKppGqrXqImvv1pcocqiBg0a4P3330fbtm29vYaeeYDQM8+OmQMmseJWWFhU5dpFx9oyMjLQ
suVFiEQi3uriCWxpaWno0qULxo59SI3n5IwIB4Tl8lfr/igFsOOBmD0OgDojUkGCGdu9f/GMZXp6
Oi6/vDt0XcfJ9mpglQogT66xqWkaUlNT8dbMtxEKhZV7CZPLEpILYKouYXajk0iWck1FPtcVwYzd
mEDCLKFTuWaiLKFq798XCz/Hxo0b8Pjjj3sT6AlqmZmZ6NWrF559/gWUlZVi//79mPfhB/hq8eKk
r1W7dm2MGjUKDz/8sNexnp2S5ve6wLPjYUSEGTNmuD7+yiuvMgXRTzYrLi5Gfn6+t+/xBLZHHnkE
JSWlQuTJwG+RYWr4IGT3uHOZSHzKmCYEnTIoFAhmmBiUMjmE5hkWFCyZYvmuVOakKu9VLFT873//
Q05OjucYJ6ht2LABN954I3iX4EETY5oFqIlAy0ouZXiYcWwcGIo5s7i/MFufl7OBjJEi2xcnTzJv
IwCx8g+s/smEMUHMCuflDLdyTHBp+TjDZ6yNGuyJYrjuCwQCaNCggeeQJ6hlZ2dD13Xouo5AIAV1
656Be0bdiztH3I2vFi/Ckm+/wWqX2of79u3DI488gilTpuDWW2/Fww8/jIyMDK+U1DMPEHrmWWWM
MYYvv/zS9fH9+vVFOBw+KSdexoBoNIri4mLvhz9BLRqNlv9D04T9K2ZcyDGAyqV8IkiT4lnuH0LQ
aYI/ZmpxMVXpKCEWnXJ7/5gVLFrAJMmhszswaRxSUlLilUedwFZaWgqF68UAFwfYEM8UMsEf46hG
01S6f/z1rAsh5piQHM6+LQowyQExoXTUMghUmcf4IGASmGQm36wVTDIwBdmRtY18EyxgUmPCvjmv
yOpksfJfNRQq5yDomtcNl/fohUOHDuLlKS9i3bqfhXFlZ3v27MHTTz+Np59+Gh9++CF69+6NtLQ0
Dxh65gFCzzyrqC1fvtz1sZ06dT6JJ1tmkq94doKGCorfxsLpaKY+xBBD+J6LWgUMacpJkJXhkzFF
FtD4gPGhLP+/QjDOFI0SAmMBPZINmGRx3THPX08qf7VKWMQzc1avVri0BdwxIVPIfy+Ua7K4P/Ft
UQXixvXiQyR+PdVihuyh1umfiWNUxLnlWT07bcIY8Y6smcL4HaPSBCCMIZZ4/vDsRBsnxuKCsXjB
EAoFkZWVhQcfKi8DXbz4S7w6darr61911VUAgAULFqBXr14n4vMTswZOhJOtRt4zDxB6dupO0owx
/Prrr66Or127Ns455xwUFRV5nefZb+KbRtRqiVHljAj3f0q2VSZG3k7lmpYVZilFSdChGSGrmRHh
wCfsSk7tsoQQ2B69COHkNWu5Jl8CSZKuH8keI61lMDt3gaVcU/DhWNbZIiXj4OMJyjX5QaDKEgp7
/1wAOGY+LwcWzYFqZO8JGq8BapHvtGaCvMzQSTPD85Mq5NLpyy7rjry8blixfAXee3cWdu3a5eqq
vXv3xvnnn4+5c+fioosuOmGyhYwxdsMNN+jp6enIzs5Ghw4dcN1113nO6pnSNK8LPDsOkxR27Njh
+vg2bdoiEol4HefZsZ8QY4GiSjGcIMUSFh56ZikdFSrcGIOY1bOOC2tJXjyy5vMhZCHFIHEyp/js
Lux/EgJnFvvPs5N4NrW4n1hWyTjwIzsAM4FW3OUVSyCWocDEBRFLmk45HMy2iHsUGfeH5OpNWPc6
illQxnk9kRjRCFIiCrDIGFMNUnO8MLFpwnmO0imenbBQ0LofVpy+db08c9ymbRu88uoM3HrrcJx+
eh1X19+4cSNatmyJ4cOHY8+ePabPHm/TdR2RSIQVFxezBQsWsCVLlnjO4JkHCD07cezw4cOuj+3d
u/cpQchilOF5f068PzIwI7N8kgQ8RwJjp4AOJayoYHMUAks5jmYCm4e1Ok4ROHOxOxMlnK0ZDVsR
eGaCSfL89aT0V9XihAzgDCAmEsXEnYgHk8Q5kJx55B2IyYsTijSdE5iUga3g0ky9kKhqIx/c801k
EphEIqIYRVvIsrLDgUmKX9sgLkn2j2cVBzlu/hBZYaDsT9bFifIPyspK0aNnL7wybTpuvnmIIEnk
ZK+//jrOOussrFy58rhnCYmIZs+ezSZOnIjs7Gzy+/345ptvvPpmz5TmlYx6dtzAkfvJP3rKgMEK
rdpoGtLS0jynSdKCwWCcLMbt72QEghKbRpwEho9YOdILLtyVo2DjvHgJKROCUjmKN65suae898+y
t0tXAj/bvYRcgGsVZq/cHsLMzExvX1UFgly3mqWqvVH2e/+4hQHGHEEkU9Qc27GOWvf+qTfYKff+
WdpYnt4jTgQdcS6l+D1je/8o0d4/Gd4pSkdNn2fyII8vlCgXUhS9V9HA/+6778a+ffs850/CioqK
8NVXXyW9hcQ6Y5OpkWmdNGP+pAORUAh9+/dHj1698P577+KT+f92NZYvueQSdOrUCd9+++1xKyE1
9g/WqlULDzzwAD322GPIz8/3nMgzDxB6duJY8+bNk5jUTo1EdkVfCHv37sWVV16JwsJCb6+Ky2A5
JycHEyZMQMeOHSsWNDhJNQh7i6S9WAB0IjCOrVQGhsbePyWpi3GsJZqHde+fJHkh7BuDFQxoTLNS
5xOEgLoq/DU7OxuNGjUyy688S2ypqalo1aoVXn311STnFChkJVRATARh4t4+1d4/tc/zAI5xKTf1
3j9nhlDRN3gmXmmFhSeK4fb+WfZKGnv/YCEpFZ9J2ltLfNpeBpL84gyzzhWVtcOHD6NFixZo1aqV
NwhcWCAQwIMPPliheUXBp2zDimuIVxp7TMt9zufzYcjQW9H98h6Y9upU/LJuXcJ7LlmyBHXq1MGH
H36Ijh07HjdgSERUrVo1BoBKSko8R/LMA4SenTimaRoCgYCrUtBNmzZB07Sksz0nIlCpjOXn55/0
ffBbmM/nQ8eOHeHz+SrU5/akGXKgbY3GjeNlbUIz66fQYdNkOJaQKEbc90cW4hgbbUJepNsSCRnp
mMr7KxEhGo1i586dnr+6tMmTJ+OHH36omL+abqjBnijG4lG24bKVcdSZKAZQkCExkShGXB8RiT3s
tAlVRDF2bKPxQ2OloMwKCjWmieyi0h5cHiwmEgOtimy60WdNmjRB7969vUHgwtLT03H//febZbqJ
zDzGIPWyjAD7xQmhTDjm09FoBGeccQaefW4iPpg7B7Pffw/BYNCxDQUFBejUqRPmzZuHgQMHHhdQ
yBhjFHNSj4/BMw8QenbCWfPmzbFq1aqExy1Z8i38fv9JvY+wsmCQMYaSkhJXOkm/+0nN7694yaNF
eE3kypdwmRQ4qrIKNmAyhg4tWT3JZ+y1CWOBjIJ11ICXltgWACMGYmSHKDjgSpXy9XJK9xAKCws9
h3RhiYJKp/nEIIPhBeZ57UFZJB4gSXvQChatYFJ0FQGgcf4GOINFOzApZh4VrKOWtJ8uMaeKME0u
HeXZRcUBGnsCRhLrqNRfDplHoHIso27BjWcQ+slNn8vHWOZUgVzJZkzEfCI+xZa/i3v36Yt+/frj
9tuG4+DBgwnbcuWVV+Lxxx/HX//61+PKQkpEDJ70hGcK80hlPDtu1qJFC1fHrVy50usseFpXx7yf
GKxEMnDYT8hHuVDtNxQ3XzH58BgzDMHCW1EOzhhTkSAq9jlx33MMH0Jyhc8O8mQavCxGFccHnr/+
Vv5enoFj0m+oYvnkM2xi4Auo9/6J9Ed2BDPW/YTOAvfx/Y5MNQhNCCcQOcWdHDLpjXhlWetT4Zda
/JrlpaZanHVU7i++d9hJNxdStWrVUL16dVDyA5I0TUNWVlZFzhVA2WmnnYbU1NTjO6dwc6rK3+wW
PHjtWTlhHYlG8eKUl9CvX39XTXj88cdx7bXXxplqT953LKn+/7d4Jv7e5L1kPEDo2akRtN94442u
j1+2bJnXZ5Vgs0v0Z+fOnTR58mTKz8+nCpxPa9asofXr11NF7+/3+zFhwgR6/vnnyefzVfp5KmWy
dISKcdT4TQQ5iTgQE1kKFWLgXKQs7MVS/OaKONpsnb20heI7MqQtmBoUUtUuGh8rX9V1HT6fD889
9xzNmzevQj63e/fuCp9r/Jk1axZNmDCBAoFApZ+nMnGNvFc0MRCTpBoggy1IwbGajVQETRwzp4KS
18pWKmYJrSWlCkpeSxBvfX6YreGwoFM2T8VGatNf5nqLdvLM636/n6WkpOh+v1+vUaMGS9In2aRJ
k6hWrVp6tWrVWEXbUFBQQIFAQJ88eTJVxTipbGaNSJLocUyWGQ6vdkUGwOcPYOiwW3H99YNc3X/u
3Lm46qqrfnNQqGkafD4fGGOuyascQD57+eWXqX79+vquXbt0g7xG13Vq1aqV3r59e33+/PlUp04d
fffu3ZaHXLFiBV1//fV6cXExVeTeDRo00OvUqWPe1zMPEHp2EhtjDJdffrnr4z///PNTAtBVhmK+
iijryXgxADBfEPn5+Xjqqado+/btYIyZ3xMR+Xw+Yz8eGef4fD5omgYiwv79+5GXl0fLli0zPzOu
oWmaeR3jM+Nv/nppaWl47rnnaPz48RQIBKqMkj/pPrZSKiqzhPx3dvz0Apg0wZ8dWFRk9YzzyYZB
kRTBvbwvyiaOVioQKsqrKtr/RrBTFf7K+6PheykpKZgwYQK9//77JuFD7J4WfzX83fDNWrVqoUWL
FvTUU08Z5cWCXxv+alyLHy/8cdOmTcNzzz1HaWlpVSYjUXHZCR7scFqXDApqfQjf2wXGRuZR/B72
mRRuMQSWhRIVmIx5IqeTSMLGQaNc0176kwebypBdJRnBk8mowKINmiRLf1UO0Bm/Y1WNE13Xadu2
bZSfn0/bt2+nDRs2EGMMaWlpzLjPhg0bzM9LS0tp06ZNVFpaSowxOnDgAG3evJm2bNlCJSUlFI1G
MXPmTBQXF2P9+vUUG4u0a9cu2rx5M+3bt4/Kp0yGjRs30oYNG6igoID27t1LAFBQUEBbtmwhY89a
Zed13veT6XPlGOHnVFeLE9wCizRnMsYQDodx1dXX4OYhQ13FAvPmzcNdd931m4JCn8+HQCAAv9+P
X375pdLZtSFDhiA9PZ09/vjj5mtr165d0DQN9913H+vZsyf7+eefWZ06dXDgwAHaunUrFRcX0+7d
u2nJkiVYv349duzYgbKyMtqyZQtt376dAODgwYO0detWMtp36NAh2rZtG+3YsYNCoRABQE5ODnJy
crxA2gOEnp1KNn78eFfHvf76a8jOzj5pyyyq4iVoBBGVDK7ZX/7yF7rwwgtp9erVVK9ePZo+fTrx
93jjjTeoXr16dPDgQapWrRqrWbOmfsEFF5CmaWzFihV669at6eyzz6aRI0dS9erVqWnTpgQADz74
IG644QYiIrzyyit0wQUXUPfu3enAgQNERGzevHl09tln08yZM+miiy7Ss7Ky2IoVK+iCCy6gp59+
mvjMUmWekw8CkjmPJ4GxZvUUn1niYTGzIUhYqMJuJp6nKhs1/qiTJDY6iVzoS5Z6OTE4JkUWpvw6
J4S/QtM09vnnn+vnn38+ffvtt1SzZk1q3bo18YFhMBikunXr0sSJE8nn87HzzjuPatasqefk5LCS
khLq3bs3nXXWWdSvXz8iIurUqRMBwPbt21GrVi1KT09n33//vZ6bm0u5ubn0zTffGNvFWJ06deiW
W26h888/n44cOUJ79uyhSy65hAYMGEChUKjKnrPioJATiWfx3w7SuoFduaYTmGLK1QRnUGj1N2lM
2GkaMqYub5UXXmAFk2pgW364BnVJqeqRzMy5MksYh5KkqPFmRjliEn+qeIGVjR49mtq2bUuXXHIJ
dezYkTp37kxZWVnmMX6/H507d6bOnTtTRkYGfvjhB3Ts2JHWrFmDZcuWoWnTptShQwe69NJLqWvX
rhQMBmnHjh0EgF100UUUjUZx9913U25uLnXo0IFatGhBH330EaWmpqJTp07UuXNnatGiBT377LM4
cOAAtWjRgi699FLq2LFjlZUeiHtnK9DH0pya2J/ETLWqRBncfNendx/86fY7XD3L1KlT8corr/xm
ewlTU1Nx2mmnIRAIYM6cOWRk1yoKDDMzM1mPHj3ohx9+oKNHjwIA5syZQ5FIhF166aX47LPPqHv3
7rRv3z5Mnz4dV111FfXs2ZPGjBlDM2bMIJ/Px6655hr66aefcPnll5NRMTZz5kz079+fiAjr1q2j
zp07U9++femKK66gW2+91SsR9QChZ6eiERGGDx/u6tiCggI899yzJzWNfUWCBpkKvpIBJ5s5cya9
8sor6NWrF40cORJlZWUIh8PCizYcDqOsrEx4TxQXFyM7Oxt9+vRBMBjEyJEj8d5779GoUaPw3HPP
MQAYPHgwRo4cibffflt/7LHHcPPNN5Ou62jSpAn2799PkUgEJSUleO211/DII49g9+7d1KdPH2Rl
ZaGoqIgj5qy64DrZPtaYVRfQLkto2dok7cViMphkDNb8B4TyOotIvBRBkzJHaV9epyyfY3F/YnbC
alXgr1XxW65atYpuvPFG1rBhQ7z77rsEwEKsREQIhUIUCoVARDBo1dPS0tCqVStavnw5xo8fj//9
73/UtGlTeuqppwAAtWvXxrRp0/Df//6XevfuzRo3bkyXXHIJXXPNNex///ufwchHS5cuxfjx4ykj
IwN//OMfqaCgAIMGDSJez6sqheaTD3SZTZYwcblmOei2L9e0k7TgY2t1/s0mA85kMClLXaizM87l
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
AACAb+pvE6AZIsKdEIgAAAAASUVORK5CYII=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://hi.csdn.net/attachment/201103/25/44164_13010488219ILf.png

iVBORw0KGgoAAAANSUhEUgAAAfEAAAE1CAYAAAD3S9nfAADdZklEQVR42u19B7wdVbX+9b2/76mv
2BHpEJJAGqGEJJQkhN4h9N5D7x2Sc9VnQ0XFBthBmhQFFBUpN6JPVGyIFQs2VEBFVBQE9v6fNcmc
O2fP6nufmLxfbn7zy71z5kzds9da3/rWt4ZCCBF+6v/rH/g7XZeux7aR/pbWaz/37IfbVrpWzf60
x7JcA/cctPv2XIP03KR9aM5Z+zyo/WnOWfruoJ6P5d6n71RzHfaZdXxZ7xt2Dtxn3Llaxq7mXabu
qXTftGNUek7SNWHjVjpv7nPLnOOZ86Sxy71T0vl57rH2fbC8R9LY8dw/6jlL41F6f6jr4I4/xA0i
zclKN946WVhfuFxjaXUmrI6A9djSILSeW871aY/HPWfNGJBeGut55Bgy6Twtz6OUgdVOkpwByZ3w
Le8Wdl6WucLqeJVyDrlxq9lHqftnfUaa43sdllzHK2dslXq/LM+nVCBm3Y92fsf2NWTxoKSX02vA
NPsp8aJob7wXJfCe49IwziWQDMvL7H0BveOp9DZax9H68uagKoMyBJyjbp1UBnl9VqRQG1VbDaMF
GbE4qdp76XmXvN/ToDOlAiarU2KxPyXeRQ+CaXESvYHeEBfm58IMGs/bEiFoIrzSkUUJOLMU5O+d
QHO8RC2M7TH2OdHH0vL6c94DCXnSPDfN/j0RmAYS1T5fTTpDc81aKN069nPnFys6pEWiSqTmtKiA
9rhaw8dB3tKzp85XSjdw3/M6Y540ndfYSu+WBfVubjMkedhaL90DWWqgytwI3JtLLbVdySir3tcD
DzwQr7322hXLiuWftjzyyCMDQ+k0RkDKQXocDq/T7YW4pTlSG1xZnSkp9WIx4BbHRmsUNXybEo69
NnWrQV5z7JUVHUrXDWlfQI3nZYWdc6GJHNLa0oRfvXAY/Pz2t7+Np5xySt9y8sknx5NOOmnFsmIp
tsyZMycODQ31LXvssQe5fTomFyxYoI5SLBN6KdTKOzct7bRHzvG8JLKSqcBB3MdcGLuEsV/az9ly
/4a0np/EQLWyM7Vwo9bT1eawNExQjZeqhT48UcUzzzxTLaeeemrcfvvt46WXXtq33HDDDXFkZCQu
WrSob/Gsq39P/5e+q90ud9/139J3se24bTTbcdeB3bflaR0sd911V7VsuOGGcd99922Ns9tuu43c
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
k5fJ8QDntPLKC5e78dBcVlrpwmXunOA5H3roF3vPH5YNNnhPb2zA/FCv3377m6pxtKxdw1prvSEe
eODIcj02VixfjVOnHm4y4ik7Xa2dbjHi2lKzRx55JJ5yyikrlsZywgkndD3/1Za789533327g3Hq
imdYeDnxxBOrRhLL8zWsvPLKK57lAJYxY8Z0nZGjVtyL/wPLj370I3NqWiK2qUvMKHEX6X9JUk6j
WKNxGLiCeavWu6aUztuWtf558skn49y5c1viOtb9SNepPU/tz7333htPO+00s46+1fvM3c7yubcv
ANf9z6qn8PTTT8dZs2aZyzi166ztDz3PYsaMGe5jcPOD9Tqk94j72zv2LOeg0dZo/sybNy8+/PDD
4pizzHWW+dR6DM+84p0rco5V8lw05yONdUmxjc2Ja0vMqJeKM9j1/2C0fv3rXw90WbhwYVxjjTXi
tttuO/Bj5S4/+clP4uabb77Mn2e63HrrrfGYY45Z5s/zxhtvrMYCLD/+8Y+X+fP9+c9/HqdPn77c
jYfmsvHGGy8X5/mlL32pNzZgflvWz3ennXaK3/jGN5brsbFiWbw89dRTpqCCqhNP7esQFl2kXcy8
deL1z0c+8pG48oYrx/X3Wr/I8ryJz4tD6w/F/9r0v+IrZr2CXF6+xcur7VaavVKxY5dYxu85Pr5o
kxctU+ekWdbaaa34si1etsyd179M+pf4gg1fwI4FWP510r9W4+GVs1+5TJ3/evPWiy/aePkbD83l
hRu/cJk7p5ds9pLqeT9/g+eLYwO2+fcN/32Zu4b/mv5fcezuY5frsbFiWT++fPzLTYptUiTep9jG
QSdUiZkW6q0dAjDiO1+2c+yEThxu/Ev/Hg78/53uv53v2zmue9W6cczHxsRpt02Lc0bmxDmLGkvj
7y3v2rLabsonpsRT/nhK/7GW7Lez5F/fuu559c4tJOvT7ZN/rc9C+/ML/nFBXOuja5HfSc8H2w96
/4R/7Hkr9nXUr46KMz43o39b7PxC/zHRfQfdOWLHaq7b5eu7VOMBnnFrLCTL+GvH98bDSb8/qff8
sWdUH4d6nr0xkoyX+nqb46S3rrFNc/2CZxfENT68hviM+75X/wv959o8fvpMeuebPJPWvhrX3zyP
5rHS9at9cLX2Mw/t/afflcZe330MjXuL3OPm8Y7+9dFx0o2Tquc94foJ/XPDSHuumHjDxGp87P3d
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
sUOMBX1bVI6tLncCk69f74gOGyN0jtczTNb5W1AiLC2mE4TqtOB0yWZqSONqdjpVYuYRfUnrxOnW
eHIE8J3vzOvub80KSpVYyWDsYXK85ZYN45/+dJoA42uMNi97SJWppd/p72JGTaK4hCBVV4uVtVF5
TVz3Xc6btiPx9oRPTeLUhIE7Jx2S6NifBllsyOFepuMBW5rj4fHHT414wwNaxEWXWpEaZbRh8v4S
sw7ZZ54mNg4LlQhyFYhP89xaYibnOCljxjk42PK73x0Xb7ppcjVXaPLg1147Pl511boV90aHGulI
Yjp0g94Wy4ljDq2mJJIOFHzQM92AZzjKypCSjO4wyT3hGON4u13fNWLcEEoPRHJcNOx0DXSuMuJN
y29tgEJpqoMRHzv2ZXH27DWLLGuv/bw4bty/xQ02eDG7TJny33HNNYfi1KkvKXbsEsusWWvE9dZ7
wTJ1TpplxoyV4+TJ/7XMndf/hfEwfvy/L3fjobmMG7fsnf+kSf8Z11prSBwXsKy77v/rzlHPX+au
YcKEF8UttlhtuR4bK5Y14xprvFjdipT7LKvETFNWRsEDzz77bHzqqacGtsDN2Wijjapl//33H+ix
SiyPP/54nDNnzjJ/nulyzz33xJNPPnmZP89Fixb1xsM+++yzzJ/vX/7yl+5EvcVyNx6ay/Tp05eL
85w1a1ZvbPzgBz9Y5s93jz32iA899NByPTZWLIuX5557Tp2Otnw2xG3E1Ylr8+MaQ2+F5zWF8p5j
cw4Nl8OgivSpfT755JNx7ty5IrtfS3KQ8ipaxITLv8By7733xtNOO03tLVqfrfV5aI/vGS/cMy0B
hzU/e/rppyvjwpWReEillvdCGhvStc2YMcMUSXje99w5osTz0swnmvGt3XbevHnx4YcfVnOSPNfj
ISvnzu2e3K/2/knj21pd5Xl+JcaT9l0a4m5UjuxqSePsvViN4o1kzDjav2a/2HeaRlwjmCM5FBaE
xNpKtvl3asS5l0T7QnNtbrWtbjWTQUlDQE1m3jHfNOIaQys9Z8291r5LWkeyNuJax2kQk5l1Xihh
+HJymhpjUxvxXKfBe/+975LGSfYYe+s90F6D9l3xjGXLGKACQ+45DnEn2Ownbp0QrIXsg/Cyrd6f
N3Lk9oftC4vELa1drROJFGFrJ4PaiGtqGbWygRaVIm/0PyhHspRTkEbigzjPQf+AEbdOhJbxnWO8
cu6Z1gDlzHHcPqhIvOSYKLVvq0NkjeytzyTHKbCgVyXQXu/cTRpxDE63whzWG+kxtBYvTWtQPA6J
xkg2t6mNOBd5Su3nKENMPQsJJtU8TyoS1woUcN6nxQHgrkuT4tDAZNpzsuyDGku1EbdC4KVhUks0
kP6eRuKeHgsew+iZPKWxoplrclJ2FqOZRuLSsSwOu9U59cLpVohaqx9u/a4093gdHusY9jiG3P6G
OEiWyonnRqzWyTwXlrEaFCtUb/Wwm0Y81/Mt4e2XgtNz0IKSEYTVa86BgEvAx00jbplocyFzyYmz
RuLLG3qQA+V7HSjrRM/B6YOGe63ogncMeVMnS3N8aexVqXnKOpebInEL1OWNaEpsqz0/KtqViF9S
voLbH5UTl6JhLtr0QHpcVEudTxNO10YFlgjXOgGWIMJYx1gpA8FF4ppzy4nQrVG7Zn/NSLy0c5qD
nFkJuaWeaSlDI0XiOePZ+7w872BuQFT6GUnop0XMzHp8C6SuGbtD3ACQ4PRcL9M6+VoNgRZOKQHP
cJ+n14BF4hqSkvZ4VkhKCz1qcuKaY3hY5jmMWM86bgxqzt8CqVJwumX/HuRCc185h7b5ezMnrn1u
3nnDwrfQGLoS1SmWMaQ5D4qdrvmO1qG2opoezoMW3tfaEiv66IW1c2BzLxdIChyp9UPcxYER32qr
reI73/nOFUvB5S1veYsIp3uMnfZF1E4q6Xow4rNnz17xDAsvF198MRqJWyO+3HSKJ4KuvzNlypQV
z3IAC9zXOhLXcD08ZC/t+lLwbynUqNS6kuk6baBU8meIO8FHH300XnvttSuWASx33323OTLQQoo5
sCK3j8cee2zFsxvQopFktE48ljGVk4eHn1tvvXXFcxzQ8re//c0V1Xmi0px5w5MmsWiHex0RCVb3
phhy5mkrmsGd35AFArQ8fGvuIKccRfvwNTlrjUdrZZRrmeOWgVAKssxJieRCYbnHt+4jpwzOEnGU
EM3wRA+lc7KlRHpKXY+HuKoxItrc+qBy4qWeawlWvxX58bzjJa+pRFVDTj66xLybOwcOeWGXHHWn
kje7NImnxEs2KGJPqZd+EMxvzwScy4gdBBkpB1K2ePGlIhhLKVCJcs/cMeW9Nq/AjocQWNIZsjg4
JcoKc+Y8q1CNhYBq7dblCUy8pV4ln4FHGEw6rkuxLbeWLjf34pnkLLWtWua8hp2uiaY5NTIv+946
cVnLQTyogeX6cuq6NUhMCYPpIYyViv60aJPXYGkjTy9pzgPllmQplyp/LYEGed6zUo6TFb4u9f5Y
x6o0v5Q6X+99yt12EGgKKfaSKyX5z4T0NN66h+Ut7cejrW6RQdUKKEiseI2XnAtXa/TfPZGblT0t
3Q/LhF1iIvWyqEvCiB6or9Q1es/PG42WnFhLBhy5EK/3npeo5y75rHOFZwb1jpTqLGZ1YHOO9/8B
63SP8WMG+TsAAAAASUVORK5CYII=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/blog-icon-reply.png

iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAIAAAADnC86AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0
NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoV2luZG93cykiIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6MDU3N0IzQUZCQkMzMTFFMzhERUQ4NDA5QTM1Njc1MTYiIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6MDU3N0IzQjBCQkMzMTFFMzhERUQ4NDA5QTM1Njc1MTYiPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDowNTc3QjNBREJCQzMxMUUzOERF
RDg0MDlBMzU2NzUxNiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowNTc3QjNBRUJCQzMxMUUz
OERFRDg0MDlBMzU2NzUxNiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/PrioHQwAAAFUSURBVHjaYkxPT2cYCMDEMEBg1OJRi0ct
HrV41OJRi2licXxPT62goOAA+JiHR7q9rTXdyYmJiYnuQc3IZBgW1tdaIScnR5o+klogjIyMOjo6
ZmZmmgYmPKyMKHL//+3bf2Djxo0/f/4kxigW4m3l5OTMympUVeXD5XUnJydDQ8MVK1ZcvHiRakEN
jMWMylactsKAoKCAKxcXNX3s4JCqLkbIxD/fm9q6nz17Rk2Lnfz14OyPd5dMWHL33TuPiRPN4YLf
Xx8vb17+69cvIg0kymI2NjYRdmYg4+7ixd1Hj8KE/8HT1amFi+YdP05SqmYhLr+6AUlgit2OsBVm
+a9PLR0TiAxeki3+8+ffu3cPdu7ciSr8+MEDhr4+EoIXGTCbmJgQVPT//8MHD56/efMGVfj+kSMX
//79S8MiE+inW7dujdZOoxaPWjxq8ajFI81igAADACNfcOuEJwsaAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/images/top.png

=89PNG
=1A=0A=
=00=00=00=0DIHDR=00=00=00(=00=00=00(=08=02=00=00=00=03=9C/:=00=00=00=19tE=
XtSoftware=00Adobe =
ImageReadyq=C9e<=00=00=03"iTXtXML:com.adobe.xmp=00=00=00=00=00<?xpacket =
begin=3D"=EF=BB=BF" id=3D"W5M0MpCehiHzreSzNTczkc9d"?> <x:xmpmeta =
xmlns:x=3D"adobe:ns:meta/" x:xmptk=3D"Adobe XMP Core 5.3-c011 66.145661, =
2012/02/06-14:56:27        "> <rdf:RDF =
xmlns:rdf=3D"http://www.w3.org/1999/02/22-rdf-syntax-ns#"> =
<rdf:Description rdf:about=3D"" =
xmlns:xmp=3D"http://ns.adobe.com/xap/1.0/" =
xmlns:xmpMM=3D"http://ns.adobe.com/xap/1.0/mm/" =
xmlns:stRef=3D"http://ns.adobe.com/xap/1.0/sType/ResourceRef#" =
xmp:CreatorTool=3D"Adobe Photoshop CS6 (Windows)" =
xmpMM:InstanceID=3D"xmp.iid:44FC3851BBC411E3905BE64DDF9843EE" =
xmpMM:DocumentID=3D"xmp.did:44FC3852BBC411E3905BE64DDF9843EE"> =
<xmpMM:DerivedFrom =
stRef:instanceID=3D"xmp.iid:44FC384FBBC411E3905BE64DDF9843EE" =
stRef:documentID=3D"xmp.did:44FC3850BBC411E3905BE64DDF9843EE"/> =
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket =
end=3D"r"?>=0F=1B=FB=F5=00=00=00=9DIDATx=DA=EC=D7=ED	=80 =
=10=06`=ADfq=02=C7h=0F=17t=1A=A7I=12D=B2=F3=E3,=8Cx=EF=87=88=C8=3Dx=CA=81=
=D2=18#f=C4"&=05`=C0=80=01=03=FE-=BC=9F1=02o=83=AA=B5=96=07=AFZk=B6=AA=94=
=F2=A3s=EEu8=AF0=DB=EE=80=A9{=E5=D9=ADp=F951=EC&8W=FD=9B=F2L=F0xv=1D=BEU=03=
=1C=3D=86]=81)5=CCG=EC=BE=06=92=AA=D4=CA3=A5N=CFD=19-{8=9D+&*dl=D9s	=
=89=9F=04`=C0=80=01=03=FE=1C|=080=00=B6=1Ea=A5{=B0=C2=D5=00=00=00=00IEND=AE=
B`=82
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://avatar.csdn.net/A/A/A/1_liuben.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcU
FhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSgBBwcHCggKEwoKEygaFhooKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/AABEIANMAyAMBEQACEQED
EQH/xAGiAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgsQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+gEAAwEBAQEBAQEBAQAA
AAAAAAECAwQFBgcICQoLEQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGh
scEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
c3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AOqIA6Vu0zhL/h4f8T2w4/5bp/6E
KlmlNanoHxO40CE54Fwn9awe51o843ltxXr2p2GCs8iHO3pjB6mhoCIMBIScDAxj1oAkyFGTxkZ6
fypDGsUjj3Zb05poQALtyAc54FA7j2IA5bngjNG4rjDjALHdmgBoChiUYgjqKLgOk+XO0EgCgYiH
5hhaQCkOGYDjP60xMjxuLDuRjj9aYEcqKyHceQOQO1AirBaQxk+WFC7uQvGOKG7Boy8nCfKRuPXi
gCSIhgccHpnpmkUSysJMZIJAIPHT6UhXBW2oSuC5P3cdKYDsFUUHJJ9B/OgdhGEZKqgZvw/CjUQ3
OyQIARjgZODQB6c3gjRyeEnH0krX20jL2cRbXwbptpdRXELXAeNg6guCMg/Sk6jYKCWqK3xPAOgQ
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
dn//2Q==

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://c.csdnimg.cn/jifen/images/xunzhang/jianzhang/blog7.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAQCAYAAABQrvyxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz
AAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAAW
dEVYdENyZWF0aW9uIFRpbWUAMDkvMTAvMTSoU35bAAAB7ElEQVRIicWWv0/bUBDHPwYn4GCplqoK
VCxFahKkIIZ2qrKwsYSta5nZjJA6eo7EwhR1KHOXLlXHjvkLOnSJ1EyRSCuYDMK8NuXXgGzs5+fg
gOt+pQw537v3vbvvna0dOW+vKQjlRhPLcfG6HcaDfi4xZ3KJMiUsx6XcaOYSq9AExoM+XrcD5JdE
4R3ImsTl1RW+EMpfFFp0BjSjQsmuJoL9PRxSsqsJ3d7nryIfIJgHQDkTvhCMvFPM2goAs/MGxnOb
wy+fWK3X1AnMrb3iyfa7xMVet4PluBzvbMXsaf4nB/tKu3x+UhK+EJw8XeLl3vvYmV67FUtAjz68
/vM7dlH0AhXS/GV7GgI5WY6L5bicff7Iee9r+Nz7/o1eu4W+YLK0sUl9ezcRIz4D5fmQSLnRRF9O
yiBvjAd9vA/7AJhv7hJeMAxW67UY+V67lTgf64D+bBFgYtUfgmBWVLtfMyrhvSqYtZUY+ah8QOrA
xWgI3Lb+eGcr3BaPRcmuKouiGRWM1+th5aOS84Xgx68jzBeN0CaTB6kD2tydhIBQQrJ9Wn+VFCeR
DyBXXwXlEMvVSrNH93kW/2nIy1BVH6Q1WgSykveFYDj6Gf5PS0BXWv8hSnY1U+WDLXQfCv2UiL5X
ssgmC/7L12he5AFuAMQE1wfxk/E0AAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/css/index.css

.csdn-toolbar {
	background: rgb(255, 255, 255); padding: 0px; color: rgb(51, 51, 51); =
line-height: 1.5em; font-family: "Helvetica", "Tahoma, Arial", =
"sans-serif"; font-size: 0.75em; border-bottom-color: rgb(233, 233, =
233); border-bottom-width: 1px; border-bottom-style: solid;
}
.csdn-toolbar * {
	box-sizing: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box;
}
.csdn-toolbar *::before {
	box-sizing: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box;
}
.csdn-toolbar *::after {
	box-sizing: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box;
}
.csdn-toolbar div {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar dl {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar dt {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar dd {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar ul {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar li {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h1 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h2 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h3 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h4 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h5 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h6 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar pre {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar code {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar form {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar fieldset {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar legend {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar input {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar textarea {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar p {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar blockquote {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar th {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar td {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar table {
	border-collapse: collapse; table-layout: fixed; border-spacing: 0;
}
.csdn-toolbar fieldset {
	border: 0px currentColor;
}
.csdn-toolbar img {
	border: 0px currentColor;
}
.csdn-toolbar address {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar caption {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar cite {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar code {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar dfn {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar em {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar strong {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar th {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar var {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar ul {
	list-style: none;
}
.csdn-toolbar caption {
	text-align: left;
}
.csdn-toolbar th {
	text-align: left;
}
.csdn-toolbar .clearfix::before {
	display: table; content: " ";
}
.csdn-toolbar .clearfix::after {
	display: table; content: " ";
}
.csdn-toolbar .clearfix::after {
	clear: both;
}
.csdn-toolbar .clearfix {
	overflow: visible;
}
.csdn-toolbar .col-sm-2 {
	float: left;
}
.csdn-toolbar h1 {
	margin: 0px; text-align: left; color: rgb(51, 51, 51); line-height: =
1.5em; font-family: "Helvetica", "Tahoma, Arial", "sans-serif"; =
font-weight: bold;
}
.csdn-toolbar h2 {
	margin: 0px; text-align: left; color: rgb(51, 51, 51); line-height: =
1.5em; font-family: "Helvetica", "Tahoma, Arial", "sans-serif"; =
font-weight: bold;
}
.csdn-toolbar h3 {
	margin: 0px; text-align: left; color: rgb(51, 51, 51); line-height: =
1.5em; font-family: "Helvetica", "Tahoma, Arial", "sans-serif"; =
font-weight: bold;
}
.csdn-toolbar h4 {
	margin: 0px; text-align: left; color: rgb(51, 51, 51); line-height: =
1.5em; font-family: "Helvetica", "Tahoma, Arial", "sans-serif"; =
font-weight: bold;
}
.csdn-toolbar h5 {
	margin: 0px; text-align: left; color: rgb(51, 51, 51); line-height: =
1.5em; font-family: "Helvetica", "Tahoma, Arial", "sans-serif"; =
font-weight: bold;
}
.csdn-toolbar h6 {
	margin: 0px; text-align: left; color: rgb(51, 51, 51); line-height: =
1.5em; font-family: "Helvetica", "Tahoma, Arial", "sans-serif"; =
font-weight: bold;
}
.csdn-toolbar h1 {
	font-size: 3em;
}
.csdn-toolbar h2 {
	font-size: 2.5em;
}
.csdn-toolbar h3 {
	font-size: 2em;
}
.csdn-toolbar h4 {
	font-size: 1.5em;
}
.csdn-toolbar h5 {
	font-size: 1.16em;
}
.csdn-toolbar h6 {
	font-size: 1em;
}
.csdn-toolbar textarea {
	resize: none;
}
.csdn-toolbar a:link {
	color: rgb(51, 51, 51); text-decoration: none;
}
.csdn-toolbar a:visited {
	color: rgb(51, 51, 51); text-decoration: none;
}
.csdn-toolbar a:hover {
	color: rgb(204, 0, 0); text-decoration: none;
}
.csdn-toolbar h1 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h1 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h2 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h2 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h3 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h3 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h4 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h4 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h5 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h5 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h6 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h6 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h1 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h2 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h3 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h4 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h5 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h6 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar a:focus {
=09
}
.csdn-toolbar a.f-blue:link {
	color: rgb(41, 129, 169); text-decoration: none;
}
.csdn-toolbar a.f-blue:visited {
	color: rgb(41, 129, 169); text-decoration: none;
}
.csdn-toolbar a.f-blue:visited {
	color: rgb(2, 93, 135); text-decoration: none;
}
.csdn-toolbar a.f-undline:link {
	text-decoration: underline;
}
.csdn-toolbar a.f-undline:visited {
	text-decoration: underline;
}
.csdn-toolbar a.f-undline:visited {
	text-decoration: underline;
}
.csdn-toolbar .col-sm-1 {
	float: left;
}
.csdn-toolbar .col-sm-2 {
	float: left;
}
.csdn-toolbar .col-sm-3 {
	float: left;
}
.csdn-toolbar .col-sm-4 {
	float: left;
}
.csdn-toolbar .col-sm-5 {
	float: left;
}
.csdn-toolbar .col-sm-6 {
	float: left;
}
.csdn-toolbar .col-sm-7 {
	float: left;
}
.csdn-toolbar .col-sm-8 {
	float: left;
}
.csdn-toolbar .col-sm-9 {
	float: left;
}
.csdn-toolbar .col-sm-10 {
	float: left;
}
.csdn-toolbar .col-sm-11 {
	float: left;
}
.csdn-toolbar .form-horizontal .form-group::after {
	clear: both;
}
.csdn-toolbar .form-horizontal .form-group::before {
	display: table; content: " ";
}
.csdn-toolbar .form-horizontal .form-group::after {
	display: table; content: " ";
}
.csdn-toolbar .col-sm-12 {
	width: 100%;
}
.csdn-toolbar .col-sm-11 {
	width: 91.66%;
}
.csdn-toolbar .col-sm-10 {
	width: 86.33%;
}
.csdn-toolbar .col-sm-9 {
	width: 75%;
}
.csdn-toolbar .col-sm-8 {
	width: 66.66%;
}
.csdn-toolbar .col-sm-7 {
	width: 58.33%;
}
.csdn-toolbar .col-sm-6 {
	width: 50%;
}
.csdn-toolbar .col-sm-5 {
	width: 41.66%;
}
.csdn-toolbar .col-sm-4 {
	width: 33.33%;
}
.csdn-toolbar .col-sm-3 {
	width: 25%;
}
.csdn-toolbar .col-sm-2 {
	width: 16.66%;
}
.csdn-toolbar .col-sm-1 {
	width: 8.33%;
}
.csdn-toolbar .pull-left {
	float: left;
}
.csdn-toolbar .pull-right {
	float: right;
}
.csdn-toolbar a {
	color: rgb(153, 153, 153); font-size: 12px; font-weight: normal; =
text-decoration: none;
}
.csdn-toolbar a:hover {
	color: rgb(51, 51, 51);
}
.csdn-toolbar dl {
	margin: 0px; font-size: 12px;
}
.csdn-toolbar ul {
	margin: 0px; padding: 0px;
}
.csdn-toolbar li {
	margin: 0px; padding: 0px;
}
.csdn-toolbar li {
	border-width: 0px 1px; border-style: solid; border-color: rgb(238, 238, =
238) rgb(255, 255, 255) rgb(238, 238, 238) rgb(238, 238, 238); =
list-style: none; width: 40px; height: 40px; float: left; position: =
relative;
}
.csdn-toolbar .hide {
	display: none;
}
.csdn-toolbar .open .dropdown-menu {
	border-radius: 0px; top: 23px; display: block; min-width: 70px;
}
.csdn-toolbar .open .dropdown-menu li {
	border: 0px currentColor; width: 100%; height: auto; text-align: =
center; color: rgb(51, 51, 51); padding-right: 10px; float: left;
}
.csdn-toolbar input:focus {
	border-color: rgb(153, 204, 255); box-shadow: none;
}
.csdn-toolbar textarea:focus {
	border-color: rgb(153, 204, 255); box-shadow: none;
}
.csdn-toolbar .form-horizontal .form-group {
	margin: 0px 0px 10px;
}
.csdn-toolbar .form-horizontal .form-group .ft {
	width: 362px; padding-left: 12px; margin-left: 25px;
}
.csdn-toolbar .form-horizontal .control-label {
	padding: 7px 10px 0px 0px; width: 38px; text-align: right; box-sizing: =
border-box; -webkit-box-sizing: border-box; -moz-box-sizing: border-box;
}
.csdn-toolbar .form-control {
	padding: 0px 7px; border-radius: 0px; border: 1px solid rgb(204, 204, =
204); transition:border-color 0.15s ease-in-out, box-shadow 0.15s =
ease-in-out; width: 100%; height: 28px; color: rgb(85, 85, 85); =
line-height: 1.4285; font-size: 14px; vertical-align: middle; display: =
block; box-shadow: none; background-image: none; background-color: =
rgb(255, 255, 255); -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, =
0.075); -webkit-transition: border-color ease-in-out 0.15s, box-shadow =
ease-in-out 0.15s;
}
.csdn-toolbar textarea.form-control {
	height: 70px; padding-top: 5px;
}
.csdn-toolbar .nobg {
=09
}
.csdn-toolbar .icon-hasnotes-sm {
	background-image: url("../images/f_icon.png");
}
.csdn-toolbar .icon-enter-sm {
	background-image: url("../images/f_icon.png");
}
.csdn-toolbar .write-icon {
	background-image: url("../images/f_icon.png");
}
.csdn-toolbar .icon-enter-sm {
	background-position: 0px -192px;
}
.csdn-toolbar .icon {
	background-position: 1px 1px; margin: 10px auto 0px; width: 20px; =
height: 20px; font-size: 16px; position: relative; z-index: 1001; =
background-image: url("../images/f_icon.png"); background-repeat: =
no-repeat;
}
.csdn-toolbar .icon .wrap {
	background: rgb(255, 255, 255); padding: 7px; border: 1px solid =
rgb(204, 204, 204); top: 30px; font-size: 12px; display: none; position: =
absolute; box-shadow: 0px 3px 2px rgba(0,0,0,0.15);
}
.csdn-toolbar .icon .curr-icon-wrap {
	top: -4px; width: 41px; height: 3px; border-bottom-color: rgb(255, 255, =
255); border-bottom-width: 1px; border-bottom-style: solid; position: =
absolute;
}
.csdn-toolbar .on {
	border-width: 0px 1px; border-color: rgb(204, 204, 204); =
background-color: rgb(255, 255, 255);
}
.csdn-toolbar .on .wrap {
	display: block;
}
.csdn-toolbar .container {
	margin: 0px auto; width: 960px;
}
.csdn-toolbar .container::before {
	display: table; content: " ";
}
.csdn-toolbar .container::after {
	display: table; content: " ";
}
.csdn-toolbar .btn {
	padding: 0px; border-radius: 0px; border: 1px solid transparent; width: =
80px; height: 28px; text-align: center; color: rgb(255, 255, 255); =
line-height: 28px; font-size: 14px; font-weight: normal; margin-bottom: =
0px; vertical-align: middle; display: inline-block; white-space: nowrap; =
cursor: pointer; box-sizing: border-box; -ms-user-select: none; =
background-image: none; -webkit-box-sizing: border-box; -moz-box-sizing: =
border-box; -webkit-user-select: none; -moz-user-select: none; =
-o-user-select: none; user-select: none;
}
.csdn-toolbar .btn:focus {
	outline: rgb(51, 51, 51) dotted thin; outline-offset: -2px;
}
.csdn-toolbar .btn:hover {
	color: rgb(51, 51, 51); text-decoration: none;
}
.csdn-toolbar .btn:focus {
	color: rgb(51, 51, 51); text-decoration: none;
}
.csdn-toolbar .btn:active {
	outline: 0px; box-shadow: inset 0px 3px 5px rgba(0,0,0,0.125); =
background-image: none; -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, =
0, 0.125);
}
.csdn-toolbar .disabled.btn {
	cursor: not-allowed; opacity: 0.65; pointer-events: none; box-shadow: =
none; -webkit-box-shadow: none;
}
.csdn-toolbar [disabled].btn {
	cursor: not-allowed; opacity: 0.65; pointer-events: none; box-shadow: =
none; -webkit-box-shadow: none;
}
.csdn-toolbar fieldset[disabled] .btn {
	cursor: not-allowed; opacity: 0.65; pointer-events: none; box-shadow: =
none; -webkit-box-shadow: none;
}
.csdn-toolbar .btn:hover {
	color: rgb(255, 255, 255);
}
.csdn-toolbar .btn:focus {
	color: rgb(255, 255, 255);
}
.csdn-toolbar .btn-default:hover {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .btn-default:focus {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .btn-default:active {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .active.btn-default {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .open .btn-default.dropdown-toggle {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .btn-default:hover {
	background-color: rgb(102, 102, 102);
}
.csdn-toolbar .btn-default:focus {
	background-color: rgb(102, 102, 102);
}
.csdn-toolbar .btn-default {
	background-color: rgb(153, 153, 153);
}
.csdn-toolbar .btn-primary {
	background-color: rgb(220, 60, 0);
}
.csdn-toolbar .btn-primary:hover {
	background-color: rgb(180, 50, 0);
}
.csdn-toolbar .btn-primary:focus {
	background-color: rgb(180, 50, 0);
}
.csdn-toolbar .loginlink {
	padding: 10px 13px; border: 0px currentColor; height: 20px; display: =
none;
}
.csdn-toolbar .logo {
	padding: 0px; width: auto; height: 40px; font-size: 12px;
}
.csdn-toolbar .logo .icon {
	margin: 0px; padding: 0px; width: 40px; height: 40px; line-height: =
18px; float: left; display: block;
}
.csdn-toolbar .logo .img {
	width: 120px; height: 40px; margin-left: 10px; float: left; =
background-image: url("../images/f_name.png");
}
.csdn-toolbar .none {
	background-position: 0px 45px;
}
.csdn-toolbar .blog-icon {
	background-position: 0px -52px;
}
.csdn-toolbar .down-icon {
	background-position: 0px -102px;
}
.csdn-toolbar .bbs-icon {
	background-position: 0px -152px;
}
.csdn-toolbar .space-icon {
	background-position: 0px -202px;
}
.csdn-toolbar .code-icon {
	background-position: 0px -252px;
}
.csdn-toolbar .share-icon {
	background-position: 0px -305px;
}
.csdn-toolbar .tag-icon {
	background-position: 0px -354px;
}
.csdn-toolbar .dashboard-icon {
	background-position: 0px -403px;
}
.csdn-toolbar .news-icon {
	background-position: 0px 16px;
}
.csdn-toolbar .tag-icon {
	background-position: 0px -354px;
}
.csdn-toolbar .notify-icon {
	background-position: 0px -456px;
}
.csdn-toolbar .ask-icon {
	background-position: 0px -503px;
}
.csdn-toolbar .search .icon {
	background-position: 0px -130px;
}
.csdn-toolbar .search .wrap {
	padding: 10px; width: 400px;
}
.csdn-toolbar .search .wrap .border {
	border: 1px solid rgb(204, 204, 204);
}
.csdn-toolbar .search .wrap input {
	padding: 0px 5px; border: 0px currentColor; width: 356px; height: 26px; =
line-height: 22px;
}
.csdn-toolbar .search .wrap input:focus {
	border: currentColor;
}
.csdn-toolbar .search .wrap .btn {
	height: 26px;
}
.csdn-toolbar .search .wrap .icon-enter-sm {
	width: 20px; height: 18px; right: 15px; margin-top: 4px; position: =
absolute;
}
.csdn-toolbar .on .on-search-icon {
	background-position: -20px -130px;
}
.csdn-toolbar .on .on-search-icon .wrap {
	right: -221px;
}
.csdn-toolbar .on .on-search-icon .curr-icon-wrap {
	right: 209px;
}
.csdn-toolbar .unlogin .search {
	border-width: 0px 1px;
}
.csdn-toolbar .unlogin .search .wrap {
	right: -53px;
}
.csdn-toolbar .unlogin .search .curr-icon-wrap {
	right: 41px;
}
.csdn-toolbar .favor .icon {
	background-position: 0px -111px;
}
.csdn-toolbar .favor .favor-btns {
	padding: 0px; text-align: right;
}
.csdn-toolbar .favor .favor-btns .btn {
	margin-left: 4px;
}
.csdn-toolbar .favor .wrap {
	padding: 20px;
}
.csdn-toolbar .favor .checkbox label {
	display: block;
}
.csdn-toolbar .favor .share {
	margin: 2px 5px 0px 0px; height: 14px; vertical-align: middle; =
position: static;
}
.csdn-toolbar .on .on-favor-icon {
	background-position: -20px -111px;
}
.csdn-toolbar .on .on-favor-icon .wrap {
	width: 400px; height: 230px; right: -179px;
}
.csdn-toolbar .on .on-favor-icon .curr-icon-wrap {
	right: 167px;
}
.csdn-toolbar .on .on-favor-icon .last {
	margin-right: 0px;
}
.csdn-toolbar .on .on-favor-icon .favor-form .alert {
	display: none;
}
.csdn-toolbar .on .on-favor-icon .favor-form .error .alert {
	margin: 5px 0px 0px 81px; width: 300px; display: block;
}
.csdn-toolbar .on .on-favor-icon .favor-failed {
	text-align: center; margin-top: 60px;
}
.csdn-toolbar .on .on-favor-icon .favor-success {
	text-align: center; margin-top: 60px;
}
.csdn-toolbar .on .on-favor-icon .favor-failed .msg {
	line-height: 40px; font-size: 18px; vertical-align: top;
}
.csdn-toolbar .on .on-favor-icon .favor-success .msg {
	line-height: 40px; font-size: 18px; vertical-align: top;
}
.csdn-toolbar .on .on-favor-icon .favor-failed .btns {
	text-align: center; margin-top: 10px;
}
.csdn-toolbar .on .on-favor-icon .favor-success .btns {
	text-align: center; margin-top: 10px;
}
.csdn-toolbar .on .on-favor-icon .favor-failed .btns a {
	margin-left: 10px;
}
.csdn-toolbar .on .on-favor-icon .favor-success .btns a {
	margin-left: 10px;
}
.csdn-toolbar .notify .on-notify-icon {
	display: block !important;
}
.csdn-toolbar .notify .icon {
	background-position: 0px -90px;
}
.csdn-toolbar .notify .icon-hasnotes-sm {
	background-position: -23px -196px; left: 23px; top: 9px; width: 10px; =
height: 10px; position: absolute; z-index: 1002;
}
.csdn-toolbar .notify .number {
	background: 0px 0px rgb(220, 60, 0); left: 24px; top: 9px; width: 12px; =
height: 13px; text-align: center; color: rgb(255, 255, 255); =
line-height: 14px; font-size: 12px; position: absolute; z-index: 1002;
}
.csdn-toolbar #header_notice_num {
	display: none;
}
.csdn-toolbar .csdn_note {
	display: block !important;
}
.csdn-toolbar .csdn_note .close1 {
	display: none;
}
.csdn-toolbar .csdn_note .go_all {
	float: right;
}
.csdn-toolbar .csdn_note .read_all {
	float: right;
}
.csdn-toolbar .csdn_note .go_back {
	line-height: 39px;
}
.csdn-toolbar .csdn_note .detail_con {
	min-height: 312px !important;
}
.csdn-toolbar .csdn_note .notifications .count_down {
	color: rgb(204, 204, 204);
}
.csdn-toolbar .csdn_note .notifications .list dt {
	line-height: 27px;
}
.csdn-toolbar .csdn_note .notifications .menu_title a {
	margin-right: 5px;
}
.csdn-toolbar .on .on-notify-icon {
	background-position: -20px -90px;
}
.csdn-toolbar .on .on-notify-icon .wrap {
	padding: 0px; left: auto !important; width: 450px !important; right: =
-137px !important;
}
.csdn-toolbar .on .on-notify-icon .curr-icon-wrap {
	right: 125px;
}
.csdn-toolbar .on .on-notify-icon .csdn_note .box {
	border: 0px currentColor; left: 0px; top: 0px; box-shadow: none;
}
.csdn-toolbar .on .on-notify-icon .last {
	margin-right: 0px;
}
.csdn-toolbar .ugc .icon {
	background-position: 0px -70px;
}
.csdn-toolbar .ugc .p-news .icon {
	background-position: -42px -52px;
}
.csdn-toolbar .ugc .p-news:hover .icon {
	background-position: -62px -52px;
}
.csdn-toolbar .ugc .p-down .icon {
	background-position: -42px -72px;
}
.csdn-toolbar .ugc .p-down:hover .icon {
	background-position: -62px -72px;
}
.csdn-toolbar .ugc .p-doc .icon {
	background-position: -42px -72px;
}
.csdn-toolbar .ugc .p-doc:hover .icon {
	background-position: -62px -72px;
}
.csdn-toolbar .ugc .p-ask .icon {
	background-position: -42px -131px;
}
.csdn-toolbar .ugc .p-ask:hover .icon {
	background-position: -62px -131px;
}
.csdn-toolbar .ugc .c-obj .icon {
	background-position: -42px -92px;
}
.csdn-toolbar .ugc .c-obj:hover .icon {
	background-position: -62px -92px;
}
.csdn-toolbar .ugc .c-code .icon {
	background-position: -42px -191px;
}
.csdn-toolbar .ugc .c-code:hover .icon {
	background-position: -62px -191px;
}
.csdn-toolbar .ugc .p-src .icon {
	background-position: -42px -170px;
}
.csdn-toolbar .ugc .p-src:hover .icon {
	background-position: -62px -170px;
}
.csdn-toolbar .ugc .p-blog .icon {
	background-position: -42px -111px;
}
.csdn-toolbar .ugc .p-blog:hover .icon {
	background-position: -62px -111px;
}
.csdn-toolbar .ugc .p-bbs .icon {
	background-position: -42px -132px;
}
.csdn-toolbar .ugc .p-bbs:hover .icon {
	background-position: -62px -132px;
}
.csdn-toolbar .ugc .c-grop .icon {
	background-position: -42px -152px;
}
.csdn-toolbar .ugc .c-grop:hover .icon {
	background-position: -62px -152px;
}
.csdn-toolbar .on .on-ugc-icon {
	background-position: -20px -70px;
}
.csdn-toolbar .on .on-ugc-icon .wrap {
	padding: 12px 0px; width: 161px; right: -95px;
}
.csdn-toolbar .on .on-ugc-icon dl {
	margin: 0px;
}
.csdn-toolbar .on .on-ugc-icon dl dt {
	width: 100%; font-weight: normal;
}
.csdn-toolbar .on .on-ugc-icon dl dt em.icon {
	margin: 0px 8px 0px 0px; width: 16px; height: 16px; float: left;
}
.csdn-toolbar .on .on-ugc-icon dl dt span {
	height: 12px; line-height: 12px; margin-top: 3px; float: left; display: =
block;
}
.csdn-toolbar .on .on-ugc-icon dl dt a {
	padding: 10px 13px; text-align: left; display: block;
}
.csdn-toolbar .on .on-ugc-icon dl dt a:hover {
	background: rgb(238, 238, 238); color: rgb(51, 51, 51);
}
.csdn-toolbar .on .on-ugc-icon .curr-icon-wrap {
	right: 83px;
}
.csdn-toolbar .on .on-ugc-icon .last {
	margin-right: 0px;
}
.csdn-toolbar .profile .icon {
	background-position: 0px 1px;
}
.csdn-toolbar .profile .curr-icon-img {
	margin: 0px; width: 20px; height: 20px; display: block;
}
.csdn-toolbar .on .settings {
	background-position: 0px -150px; padding: 0px 10px; margin-right: 2px;
}
.csdn-toolbar .on .quit {
	background-position: 0px -170px; padding: 0px 10px;
}
.csdn-toolbar .on .on-profile-icon {
	background-position: -20px 0px; font-size: 12px;
}
.csdn-toolbar .on .on-profile-icon .wrap {
	padding: 0px; width: 251px; right: -53px;
}
.csdn-toolbar .on .on-profile-icon .curr-icon-wrap {
	right: 41px;
}
.csdn-toolbar .on .on-profile-icon .bd {
	padding: 20px;
}
.csdn-toolbar .on .on-profile-icon .bd .write-icon {
	background-position: -78px -50px; padding: 3px 10px;
}
.csdn-toolbar .on .on-profile-icon .bd .img {
	width: 100px; margin-right: 7px;
}
.csdn-toolbar .on .on-profile-icon .bd .info {
	width: 103px; text-align: left; float: right; -ms-word-wrap: =
break-word;
}
.csdn-toolbar .on .on-profile-icon .bd .info .nickname {
	font-size: 14px;
}
.csdn-toolbar .on .on-profile-icon .bd .info a {
	padding-bottom: 5px; display: block;
}
.csdn-toolbar .on .on-profile-icon .bd .info .fill-dec {
	color: rgb(102, 102, 102);
}
.csdn-toolbar .on .on-profile-icon .ft {
	padding: 0px 12px 0px 20px; line-height: 40px; position: relative; =
background-color: rgb(245, 245, 245);
}
.csdn-toolbar .on .on-profile-icon .ft .icon-cog {
	background: url("../images/f_icon.png") no-repeat -2px -152px; width: =
16px; height: 16px; margin-top: -1px; margin-right: 2px; vertical-align: =
middle; display: inline-block;
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout {
	background: url("../images/f_icon.png") no-repeat -2px -152px; width: =
16px; height: 16px; margin-top: -1px; margin-right: 2px; vertical-align: =
middle; display: inline-block;
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout {
	background-position: -2px -172px;
}
.csdn-toolbar .on .on-profile-icon .ft a {
	line-height: 40px;
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right {
	margin-top: 13px;
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right .out {
	display: none;
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right:hover .out {
	background: rgb(245, 245, 245); padding: 2px; border-radius: 5px; =
border: 1px solid rgb(153, 153, 153); top: -12px; width: 32px; height: =
16px; text-align: center; right: -10px; color: rgb(102, 102, 102); =
line-height: 16px; display: block; position: absolute;
}
.csdn-toolbar .on .on-profile-icon .ft a:hover .settings {
	background-position: -20px -150px;
}
.csdn-toolbar .on .on-profile-icon .ft a:hover .quit {
	background-position: -20px -170px;
}
.csdn-toolbar .apps {
	border-width: 0px 1px; border-right-color: rgb(238, 238, 238);
}
.csdn-toolbar .apps .icon {
	background-position: 0px -51px;
}
.csdn-toolbar .on.apps {
	border-width: 0px 1px; border-right-color: rgb(204, 204, 204);
}
.csdn-toolbar .hasnew {
	background-position: -23px -196px; left: 23px; top: 9px; width: 10px; =
height: 10px; position: absolute; z-index: 1002; background-image: =
url("../images/f_icon.png");
}
.csdn-toolbar .on .on-apps-icon {
	background-position: -20px -51px;
}
.csdn-toolbar .on .on-apps-icon .wrap {
	padding: 0px 20px 20px; width: 310px; right: -11px;
}
.csdn-toolbar .on .on-apps-icon .curr-icon-wrap {
	right: 0px;
}
.csdn-toolbar .on .on-apps-icon .detail {
	width: 90px; font-size: 14px; margin-right: 20px; float: left;
}
.csdn-toolbar .on .on-apps-icon .detail dt {
	color: rgb(51, 51, 51); line-height: 31px; font-weight: bold; =
margin-top: 15px; border-bottom-color: rgb(102, 102, 102); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.csdn-toolbar .on .on-apps-icon .detail dd {
	line-height: 31px; border-bottom-color: rgb(221, 221, 221); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.csdn-toolbar .on .on-apps-icon .detail dd a {
	color: rgb(51, 51, 51);
}
.csdn-toolbar .on .on-apps-icon .last.detail {
	margin-right: 0px;
}
.csdn-toolbar .unlogin .loginlink {
	width: 60px; height: 20px; line-height: 24px; font-size: 12px; =
border-right-color: currentColor; border-right-width: medium; =
border-right-style: none; display: block;
}
.csdn-toolbar .unlogin .favor {
	display: none;
}
.csdn-toolbar .unlogin .notify {
	display: none;
}
.csdn-toolbar .unlogin .ugc {
	display: none;
}
.csdn-toolbar .unlogin .profile {
	display: none;
}
.csdn_notice_tip {
	display: none !important;
}
.csdn-toolbar-skin-black {
	background: rgb(72, 82, 94); height: 40px; border-bottom-color: =
currentColor; border-bottom-width: medium; border-bottom-style: none;
}
.csdn-toolbar-skin-black li {
	height: 40px; border-right-color: rgb(72, 82, 94); border-left-color: =
rgb(116, 121, 126); border-right-width: 1px; border-left-width: 1px; =
border-right-style: solid; border-left-style: solid;
}
.csdn-toolbar-skin-black li.on {
	width: 40px; height: 40px; border-right-color: rgb(255, 255, 255); =
border-right-width: 1px; border-right-style: solid;
}
.csdn-toolbar-skin-black .icon .wrap {
	top: 30px;
}
.csdn-toolbar-skin-black .icon .curr-icon-wrap {
	width: 41px;
}
.csdn-toolbar-skin-black .apps {
	border-right-color: rgb(116, 121, 126);
}
.csdn-toolbar-skin-black .on .on-apps-icon .wrap {
	right: -12px;
}
.csdn-toolbar-skin-black .loginlink {
	color: rgb(221, 221, 221);
}
.csdn-toolbar-skin-black .loginlink a {
	color: rgb(221, 221, 221);
}
.csdn-toolbar-skin-black .loginlink a:hover {
	color: rgb(254, 254, 254);
}
.csdn-toolbar-skin-black .blog-icon {
	background-position: -162px -52px;
}
.csdn-toolbar-skin-black .down-icon {
	background-position: -162px -102px;
}
.csdn-toolbar-skin-black .bbs-icon {
	background-position: -162px -152px;
}
.csdn-toolbar-skin-black .space-icon {
	background-position: -162px -202px;
}
.csdn-toolbar-skin-black .code-icon {
	background-position: -162px -252px;
}
.csdn-toolbar-skin-black .share-icon {
	background-position: -162px -305px;
}
.csdn-toolbar-skin-black .tag-icon {
	background-position: -162px -354px;
}
.csdn-toolbar-skin-black .dashboard-icon {
	background-position: -162px -403px;
}
.csdn-toolbar-skin-black .news-icon {
	background-position: -162px -3px;
}
.csdn-toolbar-skin-black .tag-icon {
	background-position: -162px -354px;
}
.csdn-toolbar-skin-black .notify-icon {
	background-position: -162px -456px;
}
.csdn-toolbar-skin-black .ask-icon {
	background-position: -162px -503px;
}
.navbar-fixed-top {
	left: 0px; right: 0px; position: fixed; z-index: 1030;
}
.navbar-fixed-bottom {
	left: 0px; right: 0px; position: fixed; z-index: 1030;
}
.navbar-fixed-top {
	top: 0px;
}
.csdn-toolbar .icon-signout {
	line-height: 40px;
}
.csdn-toolbar .on .on-profile-icon .ft .icon-cog::before {
	display: none;
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout::before {
	display: none;
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://blog.csdn.net/css/common.css

body {
	margin: 0px; padding: 0px;
}
form {
	margin: 0px; padding: 0px;
}
h1 {
	margin: 0px; padding: 0px;
}
h2 {
	margin: 0px; padding: 0px;
}
h3 {
	margin: 0px; padding: 0px;
}
h4 {
	margin: 0px; padding: 0px;
}
.side li {
	list-style: none;
}
.side ul {
	margin: 0px; padding: 0px;
}
img {
	border: currentColor;
}
pre {
	white-space: pre-wrap; -ms-word-wrap: break-word;
}
.share_buttons {
	font: 12px/24px Arial, Helvetica, sans-serif; margin: 5px 0px; width: =
170px; text-align: right; float: right; font-size-adjust: none; =
font-stretch: normal;
}
.share_buttons span {
	color: green; line-height: 30px; font-weight: bold; vertical-align: =
middle; display: inline-block;
}
.share_buttons a {
	background-position: 0px 5px; width: 25px; height: 30px; =
vertical-align: middle; display: inline-block; cursor: pointer;
}
.share_douban {
	background-image: url("../images/ico_douban.gif");
}
.share_renren {
	background-image: url("../images/ico_renren.gif");
}
.share_sina {
	background: url("../images/ico_sina.gif") no-repeat center;
}
.share_qq {
	background: url("../images/ico_qq.gif") no-repeat center;
}
.article_description {
	text-indent: 2em;
}
.list_opended {
	background-position: 0px 7px; background-image: =
url("../images/dir_arr.gif"); background-repeat: no-repeat;
}
.list_opended:hover {
	background-position: 0px -15px; background-repeat: no-repeat;
}
.list_closed {
	background-position: 0px -45px; background-image: =
url("../images/dir_arr.gif"); background-repeat: no-repeat;
}
.list_closed:hover {
	background-position: 0px -69px; background-repeat: no-repeat;
}
.comment_item {
	font: 12px/26px Arial, Helvetica, sans-serif; margin: 2px 10px; =
font-size-adjust: none; font-stretch: normal;
}
.comment_item fieldset {
	font: 12px/26px Arial, Helvetica, sans-serif; border: 1px solid =
currentColor; font-size-adjust: none; font-stretch: normal;
}
.comment_reply {
	margin-left: 50px;
}
.comment_list {
	clear: both;
}
.comment_list dl {
	overflow: hidden; clear: both; display: block;
}
.comment_item .user {
=09
}
.comment_item_reply {
	margin-left: 50px;
}
.comment_userface {
	margin: 4px; float: left;
}
.comment_userface img {
	width: 40px; height: 40px;
}
.comment_body {
	padding: 5px; line-height: 20px; margin-left: 50px; min-height: 35px;
}
.commentform {
=09
}
.commentform ul {
	font: 12px/24px Arial, Helvetica, sans-serif; margin: 0px 20px 5px; =
clear: both; font-size-adjust: none; font-stretch: normal;
}
.commentform .left {
	width: 80px; float: left; display: block;
}
.commentform .right {
	margin-left: 90px; display: block;
}
.commentform textarea {
	font: 14px/24px Arial, Helvetica, sans-serif; padding: 5px; border: 1px =
solid rgb(221, 221, 221); color: rgb(85, 85, 85); font-size-adjust: =
none; font-stretch: normal;
}
.guest_link {
	margin: 10px; padding: 10px; border: 1px solid rgb(204, 204, 204); =
font-size: 12px; background-color: rgb(245, 245, 245);
}
#lang_list {
	border: 1px solid rgb(204, 204, 204); font-size: 12px; =
background-color: rgb(255, 255, 255);
}
#lang_list a {
	padding: 0px 5px; text-align: center; border-right-color: rgb(204, 204, =
204); border-right-width: 1px; border-right-style: solid; float: left; =
display: inline-block; cursor: pointer;
}
#lang_list a:hover {
	color: rgb(255, 255, 255); background-color: rgb(102, 102, 102);
}
a.cmt_btn {
	padding: 1px; width: 16px; height: 16px; text-indent: -2000px; =
overflow: hidden; margin-bottom: -5px; display: inline-block; =
background-repeat: no-repeat; _margin-bottom: 4px;
}
a.cmt_btn:hover {
	padding: 0px; border: 1px solid rgb(204, 204, 204);
}
a.reply {
	background-image: url("../images/ico_reply.png");
}
a.quote {
	background-image: url("../images/ico_quote.png");
}
a.report {
	background-image: url("../images/ico_report.png");
}
a.delete {
	background-image: url("../images/ico_del.png");
}
#report_dialog {
	left: 30%; top: 33%; right: 33%; position: absolute; z-index: 99;
}
#panel_report {
	background: rgb(255, 255, 255); padding: 8px 8px 20px; border-radius: =
5px; border: 1px solid rgb(221, 221, 221); width: 440px; =
-moz-border-radius: 5px; -webkit-border-radius: 5px;
}
#panel_report .pop_table {
	margin: 10px 0px 0px 12px; line-height: 20px;
}
#panel_report th {
	padding: 4px 0px; vertical-align: top;
}
#panel_report td {
	padding: 4px 0px; vertical-align: top;
}
#panel_report th {
	text-align: right; font-weight: normal;
}
#panel_report h3 {
	line-height: 60px;
}
#report_other_content {
	padding: 0px; border: 1px solid rgb(153, 153, 153); height: 16px;
}
#btnSubmitReport {
	border: 0px currentColor;
}
#bms_box {
	padding: 14px 4px 4px 0px; text-align: left; margin-top: 4px; =
border-top-color: rgb(204, 204, 204); border-top-width: 1px; =
border-top-style: dashed; display: block;
}
#bms_box img {
	margin-left: 6px; cursor: pointer;
}
.medal_intro {
	padding: 20px; border: 2px solid rgb(221, 221, 221); left: -55px; top: =
33px; width: 252px; text-align: center; font-family: =
"=CE=A2=C8=ED=D1=C5=BA=DA"; vertical-align: top; display: block; =
position: absolute; z-index: 100; min-height: 100px; box-shadow: 0px 2px =
2px rgba(0,0,0,0.1); background-color: rgb(255, 255, 255); _padding-top: =
26px;
}
.medal_intro::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.medal_intro dl {
	margin: 0px;
}
.medal_intro dt {
	margin-right: 18px; float: left;
}
.medal_intro dd {
	margin: 0px; width: 180px; text-align: left; color: rgb(102, 102, 102); =
line-height: 18px; float: left;
}
.medal_intro dd strong {
	color: rgb(0, 66, 121); padding-bottom: 10px; font-size: 18px; display: =
block;
}
#sp_column img {
	border: 1px solid rgb(204, 204, 204);
}
#sp_column p {
	margin: 0px; padding: 6px 0px;
}
.interact {
	padding: 0px 0px 15px; text-align: center;
}
.interact .attent {
	width: 59px; height: 20px; overflow: hidden; display: inline-block; =
cursor: pointer;
}
.interact .attented {
	width: 59px; height: 20px; overflow: hidden; display: inline-block; =
cursor: pointer;
}
.interact .letter {
	width: 59px; height: 20px; overflow: hidden; display: inline-block; =
cursor: pointer;
}
.interact .attent {
	background: url("../images/btn_attent.gif") no-repeat 0px 0px;
}
.interact .attented {
	background: url("../images/btn_attented.gif") no-repeat 0px 0px;
}
.interact .letter {
	background: url("../images/btn_sendletter.gif") no-repeat 0px 0px; =
margin: 0px 10px 0px 0px;
}
.panel_body li span {
	padding-left: 6px; position: relative;
}
.itemlist li a {
	width: 130px; height: 15px; overflow: hidden; display: inline-block; =
white-space: nowrap;
}
.itemlist li span {
	height: 14px; float: right; display: inline-block; _margin-top: -18px;
}
#newcomments .itemlist li a {
	width: 98%;
}
#newcomments .itemlist li a.user_name {
	width: auto; display: inline;
}
#side #blog_userface a {
	color: rgb(51, 51, 51);
}
#d-top {
	right: 10px; bottom: 10px; float: right; position: fixed; z-index: 10;
}
#d-top img {
	width: 42px; opacity: 0.3; -moz-opacity: 0.3; -khtml-opacity: 0.3;
}
#d-top a:hover img {
	opacity: 1; -moz-opacity: 1; -khtml-opacity: 1;
}
.article_next_prev {
	margin-top: 30px;
}
.tag2box {
	margin: 10px 0px;
}
.tag2box a {
	padding: 4px 10px; border-radius: 10px; border: 1px solid rgb(238, 238, =
238); line-height: 100%; margin-right: 10px; display: inline-block; =
background-color: rgb(238, 238, 238);
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/skin/light_blue/css/style.css?v=1.1

@import url( ../../../css/common.css );
body {
	background: url("../images/body_bg.jpg") repeat-x top; font-family: =
Arial,Console,Verdana,Courier New; font-size: 12px;
}
p {
	margin: 0px; padding: 0px;
}
a {
	color: rgb(255, 153, 0); text-decoration: none;
}
a:hover {
	color: rgb(34, 0, 0); text-decoration: none;
}
#container {
	background: url("../images/head_bg.jpg") no-repeat center -25px;
}
.csdn-toolbar .container {
	margin: 0px auto; width: 96%; max-width: 1200px;
}
#header {
	margin: 0px auto; padding: 35px 0px 0px; width: 980px; height: 36px; =
text-align: left;
}
#blog_title h2 {
	font: bold 32px/32px "Microsoft YaHei"; margin: 0px 25px 0px 0px; =
color: rgb(0, 51, 102); font-size-adjust: none; font-stretch: normal;
}
#blog_title h3 {
	font: 15px/30px "Microsoft YaHei"; padding: 2px 0px 0px; color: rgb(0, =
51, 102); margin-left: 70px; font-size-adjust: none; font-stretch: =
normal;
}
#blog_title a {
	color: rgb(255, 255, 255);
}
#blog_title a:hover {
	color: rgb(221, 238, 255); text-decoration: none;
}
#navigator {
	margin: 0px auto; padding: 100px 0px 0px; width: 96%; height: 42px; =
text-align: left; clear: both; display: block; max-width: 1200px;
}
.navigator {
	text-align: right;
}
.navigator::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.navigator ul {
	float: right;
}
.navigator li {
	margin: 0px 5px; float: left; display: inline;
}
.navigator li a {
	background: url("../../../images/btn_pub_nav.gif") no-repeat left 0px; =
font: 12px/26px Arial, Helvetica, sans-serif; padding: 0px 0px 0px 10px; =
height: 26px; color: rgb(102, 102, 102); text-decoration: none; display: =
inline-block; cursor: pointer; font-size-adjust: none; font-stretch: =
normal;
}
.navigator li a span {
	background: url("../../../images/btn_pub_nav.gif") no-repeat right =
-26px; padding: 5px 10px 5px 0px; height: 16px; line-height: 16px; =
display: inline-block;
}
.navigator li a span img {
	margin: 0px 4px 0px 0px; vertical-align: middle;
}
#body {
	margin: 10px auto; width: 96%; text-align: left; display: block; =
max-width: 1200px;
}
#body::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.panel_head {
	background: url("../images/tit_bg.jpg") repeat-x top; font: bold =
12px/30px Arial; padding: 0px 5px; height: 30px; color: rgb(51, 51, 51); =
text-indent: 5px; clear: both; font-size-adjust: none; font-stretch: =
normal;
}
.panel {
	background: rgb(244, 251, 251); margin: 0px 0px 10px; padding: 1px; =
border: 1px solid rgb(128, 223, 234);
}
.side .panel_body {
	padding: 4px 10px;
}
.panel_body li {
	margin: 8px 0px; color: rgb(102, 102, 102);
}
.panel_body li span {
=09
}
.panel_body li a {
=09
}
#main {
	width: 100%; overflow: hidden; margin-left: -210px; float: right;
}
#main .main {
	background: rgb(255, 255, 255); padding: 1px; border: 1px solid =
rgb(128, 223, 234); margin-left: 210px; min-width: 700px; _float: right;
}
#notice {
	margin: 5px 10px;
}
.notice {
	background: url("../../../images/ico_notice.png") no-repeat 5px =
rgb(255, 252, 231); font: 12px/22px Arial; margin: 10px; padding: 2px =
4px 2px 20px; border: 1px dashed rgb(248, 204, 126); font-size-adjust: =
none; font-stretch: normal; _background: #fffce7 =
url(../../../images/ico_notice.gif) no-repeat 5px center;
}
.notice a {
	color: rgb(255, 90, 0);
}
.list_item {
	background: url("../images/line_1.gif") repeat-x bottom; clear: both; =
display: block;
}
.list_item::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.list {
	margin: 20px 20px 0px;
}
.article_title {
	font: 20px/30px "Microsoft YaHei"; margin: 5px 0px; color: rgb(0, 0, =
0); display: block; font-size-adjust: none; font-stretch: normal;
}
.article_title::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.article_title a {
	color: rgb(51, 51, 51);
}
.article_title a:hover {
	color: rgb(102, 102, 102);
}
.article_title .ico {
	margin: 0px 2px 0px 0px; width: 19px; height: 19px; display: =
inline-block;
}
.article_title .ico_type_Original {
	background: url("../../../images/ico_Original.gif") no-repeat 0px 0px; =
vertical-align: middle;
}
.article_title .ico_type_Repost {
	background: url("../../../images/ico_Repost.gif") no-repeat 0px 0px; =
vertical-align: middle;
}
.article_title .ico_type_Translated {
	background: url("../../../images/ico_Translated.gif") no-repeat 0px =
0px; vertical-align: middle;
}
.article_title h1 {
	font: 20px/30px "Microsoft YaHei"; vertical-align: middle; display: =
inline; font-size-adjust: none; font-stretch: normal;
}
.article_description {
	font: 14px/24px Arial; color: rgb(102, 102, 102); font-size-adjust: =
none; font-stretch: normal;
}
.article_manage {
	font: 12px/24px Arial; padding: 5px 0px; text-align: right; color: =
rgb(153, 153, 153); font-size-adjust: none; font-stretch: normal;
}
.article_manage span {
	margin: 0px 5px;
}
.article_manage .link_postdate {
	margin: 0px 5px 0px 0px;
}
.article_manage .link_view {
	background: url("../../../images/ico_view.png") no-repeat left; =
padding: 0px 0px 0px 14px; _background: =
url(../../../images/ico_view.gif) no-repeat left center;
}
.article_manage .link_comments {
	background: url("../../../images/ico_comm.png") no-repeat left; =
padding: 0px 0px 0px 14px; _background: =
url(../../../images/ico_comm.gif) no-repeat left center;
}
.article_manage .link_categories {
	float: left;
}
.list_view {
	margin: 0px 20px; padding: 5px 0px;
}
.list_view .article_title {
	font: 14px/30px Arial !important; margin: 0px !important; height: 30px; =
overflow: hidden; float: left; display: inline; white-space: nowrap; =
-ms-text-overflow: ellipsis; font-size-adjust: none !important; =
font-stretch: normal !important;
}
.list_view .article_title::after {
	content: "...";
}
.list_view .article_title h3 {
	font: 12px/30px Arial !important; font-size-adjust: none !important; =
font-stretch: normal !important;
}
.list_view .article_title h1 {
	font: 12px/30px Arial !important; font-size-adjust: none !important; =
font-stretch: normal !important;
}
.list_view .article_manage {
	padding: 0px !important; text-align: right !important; line-height: =
30px !important; float: right; display: inline; white-space: nowrap;
}
.list_view .article_description {
	display: none !important;
}
.list_view .article_manage span {
	margin: 0px !important;
}
.details {
	margin: 20px;
}
.details .article_content {
	font: 14px/26px Arial; margin: 20px 0px 0px; font-size-adjust: none; =
font-stretch: normal;
}
.article_next_prev {
	font: 14px/24px "Microsoft YaHei", Arial, Helvetica, sans-serif; =
margin: 0px 0px 5px; padding: 10px 0px 0px; color: rgb(102, 102, 102); =
clear: both; float: left; display: block; font-size-adjust: none; =
font-stretch: normal;
}
.article_next_prev li {
	padding: 0px 0px 3px; overflow: hidden; clear: both; list-style-type: =
none;
}
.article_next_prev::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.article_next_prev li span {
	padding: 0px 0px 0px 27px; width: 52px; height: 26px; color: rgb(255, =
255, 255); font-size: 14px; margin-right: 7px; float: left; display: =
block; background-color: rgb(153, 153, 153);
}
.article_next_prev li:hover span {
	background-color: rgb(204, 0, 0);
}
.article_next_prev li.prev_article span {
	background-position: 9px 8px; background-image: =
url("../images/blog-page-arr.png"); background-repeat: no-repeat;
}
.article_next_prev li.next_article span {
	background-position: 9px -22px; background-image: =
url("../images/blog-page-arr.png"); background-repeat: no-repeat;
}
.article_next_prev li a {
	color: rgb(51, 51, 51); font-size: 14px; float: left; display: block;
}
.article_next_prev li a:link {
	color: rgb(51, 51, 51);
}
.article_next_prev li a:visited {
	color: rgb(51, 51, 51);
}
.article_next_prev li a:hover {
	color: rgb(51, 51, 51);
}
.article_next_prev li:hover a {
	color: rgb(204, 0, 0);
}
.article_next_prev li:hover a:link {
	color: rgb(204, 0, 0);
}
.article_next_prev li:hover a:visited {
	color: rgb(204, 0, 0);
}
.article_next_prev li:hover a:hover {
	color: rgb(204, 0, 0);
}
.commentform ul {
	margin: 0px;
}
.commentform li {
	margin: 0px; list-style-type: none;
}
.ico_expert {
	background: url("../../../images/ico_expert.jpg") no-repeat 0px 0px; =
margin: 0px auto; width: 69px; height: 60px; _background: none;
}
#digg {
	margin: 0px auto; padding: 30px 0px 15px; width: 182px; text-align: =
center; clear: both; display: block; _width: 188px;
}
#digg::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.digg {
	background: rgb(255, 121, 0); margin: 0px 2px; width: 72px; height: =
72px; text-align: center; overflow: hidden; float: left; display: =
inline-block;
}
.digg dt {
	font: 27px/30px "Microsoft YaHei"; margin: 0px; padding: 12px 0px 3px; =
color: rgb(255, 255, 255); font-size-adjust: none; font-stretch: normal;
}
.digg dd {
	font: 12px/22px Arial; margin: 0px; color: rgb(255, 0, 0); =
font-size-adjust: none; font-stretch: normal;
}
.digg_enable {
	background: rgb(255, 121, 0); text-align: center; cursor: pointer;
}
.digg_disable {
	background: rgb(153, 153, 153); color: rgb(255, 255, 255);
}
.digg_disable dd {
	color: rgb(255, 255, 255);
}
.pagelist {
	font: 12px/24px Arial; padding: 15px 0px; text-align: center; color: =
rgb(102, 102, 102); clear: both; font-size-adjust: none; font-stretch: =
normal;
}
.pagelist a {
	background: rgb(255, 255, 255); font: 12px/22px Arial, Helvetica, =
sans-serif; margin: 0px 2px; padding: 0px 8px; border: 1px solid =
rgb(219, 229, 238); height: 22px; color: rgb(51, 51, 51); display: =
inline-block; cursor: pointer; font-size-adjust: none; font-stretch: =
normal;
}
.pagelist strong {
	background: rgb(7, 81, 154); margin: 0px 3px; padding: 0px 8px; border: =
currentColor; height: 24px; color: rgb(255, 255, 255); line-height: =
24px; font-weight: normal; text-decoration: none; display: inline-block;
}
.pagelist a:hover {
	background: rgb(7, 81, 154); margin: 0px 3px; border: currentColor; =
height: 24px; color: rgb(255, 255, 255); line-height: 24px; =
text-decoration: none;
}
.pagelist a.select {
	cursor: default;
}
#side {
	width: 200px; line-height: 120%; overflow: hidden; float: left;
}
#side .side {
=09
}
#side a {
	color: rgb(0, 0, 0);
}
#side a:hover {
	color: rgb(34, 0, 0);
}
#panel_Profile {
=09
}
#panel_Profile span {
	color: rgb(51, 51, 51);
}
.ico_expert {
	background: url("../images/ico_expert.png") no-repeat;
}
#blog_userface {
	margin: 0px 0px 5px; padding: 10px; text-align: center;
}
#blog_userface img {
	padding: 2px; border: 1px solid rgb(221, 221, 221); max-width: 160px;
}
#blog_userface span {
	text-align: center; font-weight: bold; display: block;
}
#blog_medal {
	text-align: center;
}
#blog_rank {
	background: url("../images/line_1.gif") repeat-x bottom; margin: 5px; =
padding: 5px; color: rgb(102, 102, 102); display: block;
}
#blog_rank::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
#blog_rank li {
=09
}
#blog_rank li span {
	color: rgb(51, 51, 51);
}
#blog_statistics {
	margin: 10px; color: rgb(102, 102, 102); display: block;
}
#blog_statistics::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
#blog_statistics li {
	margin: 4px 0px; width: 100%; float: left;
}
#blog_statistics li span {
	color: rgb(51, 51, 51);
}
#blog_statistics li a {
=09
}
#panel_Search {
=09
}
#panel_Search .panel_body::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
#panel_Search .panel_body span {
	float: left;
}
#panel_Search .form_search {
	background: rgb(255, 255, 255); margin: 10px 0px; padding: 0px 3px; =
border: 1px solid rgb(204, 204, 204); height: 24px; overflow: hidden; =
display: block;
}
#panel_Search .panel_body .blogsearch {
	margin: 2px 5px 0px 0px; border: currentColor; width: 140px; height: =
20px; color: rgb(102, 102, 102);
}
#btnSubmit {
	background: url("../images/ico_sear.gif") no-repeat 0px 0px; margin: =
5px 0px 0px; border: currentColor; width: 16px; height: 16px; =
line-height: 999px; text-indent: -1000px; overflow: hidden; display: =
inline-block; cursor: pointer;
}
#panel_Category {
=09
}
#newcomments {
=09
}
#load_comments {
	margin: 5px; border: 1px solid rgb(221, 221, 221); height: 30px; =
text-align: center; line-height: 30px; font-family: =
"=CE=A2=C8=ED=D1=C5=BA=DA"; font-size: 14px; display: block; cursor: =
pointer;
}
#panel_Archive {
=09
}
#panel_Archive li {
	display: block;
}
#panel_Archive li::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
#panel_Archive .list_closed {
	background: url("../../../images/arrow_down.gif") no-repeat left; =
padding: 0px 0px 0px 12px; color: rgb(102, 102, 102); float: right; =
cursor: pointer;
}
#panel_Archive .list_opended {
	background: url("../../../images/arrow_up.gif") no-repeat left; =
padding: 0px 0px 0px 12px; color: rgb(102, 102, 102); float: right; =
cursor: pointer;
}
#archive_list {
	margin-bottom: 5px; display: block;
}
#archive_list::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.comment_item fieldset {
	padding: 0px 10px; border: 1px solid rgb(221, 221, 221); color: =
rgb(153, 153, 153); background-color: rgb(241, 241, 241);
}
.comment_head {
	background: rgb(248, 252, 251); padding: 1px 4px; color: rgb(136, 136, =
136); clear: both;
}
.commentform_title {
	background: rgb(248, 252, 251); padding: 1px 4px; color: rgb(136, 136, =
136); clear: both;
}
.comment_head a {
	color: rgb(51, 102, 153);
}
.commentform_title a {
	color: rgb(51, 102, 153);
}
.comment_reply .comment_head {
	background-color: rgb(235, 245, 242);
}
.comment_reply {
	background-color: rgb(248, 252, 252);
}
.newcomment {
	margin: 5px; padding: 10px; border: 1px solid rgb(238, 238, 238); =
width: 90%; line-height: 20px; background-color: rgb(246, 246, 246);
}
.commentform_title {
	color: rgb(0, 0, 0); font-size: 14px;
}
.commentform .comment_btn {
	background: url("../images/submit_bg.gif") no-repeat 0px 0px; font: =
12px/26px Arial, Helvetica, sans-serif; margin: 10px 0px 0px 90px; =
border: currentColor; width: 85px; height: 26px; text-align: center; =
color: rgb(102, 102, 102); font-size-adjust: none; font-stretch: normal;
}
.guest_link {
	margin: 10px; padding: 10px; border: 1px solid rgb(220, 243, 233); =
font-size: 12px; background-color: rgb(238, 249, 244);
}
#main .panel_head {
	background: url("../images/panel_head_bg.jpg") repeat-x; margin: 5px =
10px;
}
#side #profile {
	margin-top: 0px;
}
#baidu_clb_slot_117306 {
	margin-bottom: 10px;
}
.announce {
	margin: 0px 15px 10px;
}
.commentform {
	margin: 0px 10px 10px;
}
.commentform .panel_head {
	margin: 5px 0px !important;
}
.digg_enable {
	background: url("../images/digg_bg.gif") no-repeat 0px 0px; text-align: =
center; cursor: pointer;
}
.digg_disable {
	background: rgb(255, 121, 0); text-align: center; cursor: pointer;
}
.medal_intro {
	padding-top: 26px;
}
.blog-associat-tag {
	background: rgb(245, 245, 245); margin: 10px 0px 0px; padding: 25px =
20px 10px; overflow: hidden; clear: both;
}
.blog-associat-tag dt {
	margin: 0px; padding: 0px; line-height: 23px; float: left;
}
.blog-associat-tag dd {
	margin: 0px; padding: 0px; line-height: 23px; float: left;
}
.blog-associat-tag dt {
	font: 16px/23px "Microsoft YaHei"; width: 86px; font-size-adjust: none; =
font-stretch: normal;
}
.blog-tage-red {
	background: rgb(231, 231, 231); margin: 2px 5px 0px; padding: 0px 14px; =
border-radius: 10px; height: 20px; color: rgb(51, 51, 51); line-height: =
20px; float: left; display: block;
}
.blog-tage-red:link {
	color: rgb(51, 51, 51);
}
.blog-tage-red:visited {
	color: rgb(51, 51, 51);
}
.blog-tage-red:hover {
	background: rgb(204, 0, 0); color: rgb(255, 255, 255);
}
.blog-ass-articl {
	background: rgb(245, 245, 245); margin: 0px 0px 10px; padding: 0px 20px =
20px; overflow: hidden; clear: both;
}
.blog-ass-articl dt {
	font: 16px/35px "Microsoft YaHei"; margin: 10px 0px 15px; padding: 0px; =
height: 35px; overflow: visible; clear: both; border-bottom-color: =
rgb(204, 204, 204); border-bottom-width: 2px; border-bottom-style: =
solid; font-size-adjust: none; font-stretch: normal;
}
.blog-ass-articl dt span {
	height: 35px; border-bottom-color: rgb(204, 0, 0); border-bottom-width: =
2px; border-bottom-style: solid; float: left; display: block;
}
.blog-ass-articl dd {
	background: url("../images/blog-dot-red3.gif") no-repeat 0px 10px; =
font: 12px/23px "SimSun"; margin: 0px 30px 0px 0px; padding: 0px 0px 0px =
10px; width: 42%; height: 23px; color: rgb(51, 102, 153); overflow: =
hidden; float: left; font-size-adjust: none; font-stretch: normal;
}
.blog-ass-articl dd a:link {
	color: rgb(0, 0, 0);
}
.blog-ass-articl dd a:visited {
	color: rgb(0, 0, 0);
}
.blog-ass-articl dd a:hover {
	color: rgb(0, 0, 0);
}
.blog-ass-articl dd a:hover {
	color: rgb(204, 0, 0); text-decoration: underline;
}
.details .article_content img {
	max-width: 100%;
}
.q-reply {
	margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; height: 40px; right: 40px; bottom: 35px; color: rgb(255, =
255, 255); line-height: 16px; position: fixed; cursor: pointer; =
min-width: 40px;
}
.backtop {
	margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; height: 40px; right: 40px; bottom: 80px; color: rgb(255, =
255, 255); line-height: 16px; position: fixed; cursor: pointer; =
min-width: 40px;
}
.glyphicon {
	top: 1px; line-height: 1; font-family: "Glyphicons Halflings"; =
font-style: normal; font-weight: normal; display: inline-block; =
position: relative; -webkit-font-smoothing: antialiased; =
-moz-osx-font-smoothing: grayscale;
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/nobg.css

.dp-highlighter {
	margin: 18px 0px !important; width: 99%; text-align: left; overflow: =
auto; padding-top: 1px; font-family: "Consolas" , "Courier New" , =
Courier, mono, serif; font-size: 12px; background-color: rgb(255, 255, =
255);
}
.dp-highlighter ol {
	margin: 0px; padding: 0px; border: currentColor;
}
.dp-highlighter ol li {
	margin: 0px; padding: 0px; border: currentColor;
}
.dp-highlighter ol li span {
	margin: 0px; padding: 0px; border: currentColor;
}
.dp-highlighter a {
	margin: 0px; padding: 0px; border: currentColor;
}
.dp-highlighter a:hover {
	margin: 0px; padding: 0px; border: currentColor;
}
.dp-highlighter .bar {
	padding-left: 45px;
}
.collapsed.dp-highlighter .bar {
	padding-left: 0px;
}
.nogutter.dp-highlighter .bar {
	padding-left: 0px;
}
.dp-highlighter ol {
	list-style: decimal; margin: 0px 0px 1px 45px !important; padding: 0px; =
color: rgb(92, 92, 92); background-color: rgb(255, 255, 255);
}
.nogutter.dp-highlighter ol {
	list-style: none !important; margin-left: 0px !important;
}
.nogutter.dp-highlighter ol li {
	list-style: none !important; margin-left: 0px !important;
}
.dp-highlighter ol li {
	margin: 0px !important; padding: 0px 3px 0px 10px !important; color: =
rgb(92, 92, 92); line-height: 150%; border-left-color: rgb(108, 226, =
108); border-left-width: 3px; border-left-style: solid; list-style-type: =
decimal-leading-zero; list-style-position: outside !important; =
list-style-image: none; background-color: rgb(255, 255, 255);
}
.dp-highlighter .columns div {
	margin: 0px !important; padding: 0px 3px 0px 10px !important; color: =
rgb(92, 92, 92); line-height: 150%; border-left-color: rgb(108, 226, =
108); border-left-width: 3px; border-left-style: solid; list-style-type: =
decimal-leading-zero; list-style-position: outside !important; =
list-style-image: none; background-color: rgb(255, 255, 255);
}
.nogutter.dp-highlighter ol li {
	border: 0px currentColor;
}
.nogutter.dp-highlighter .columns div {
	border: 0px currentColor;
}
.dp-highlighter .columns {
	width: 100%; color: gray; overflow: hidden; background-color: rgb(248, =
248, 248);
}
.dp-highlighter .columns div {
	padding-bottom: 5px;
}
.dp-highlighter ol li.alt {
	color: inherit; background-color: rgb(255, 255, 255);
}
.dp-highlighter ol li span {
	color: black; background-color: inherit;
}
.collapsed.dp-highlighter ol {
	margin: 0px;
}
.collapsed.dp-highlighter ol li {
	display: none;
}
.printing.dp-highlighter {
	border: currentColor;
}
.printing.dp-highlighter .tools {
	display: none !important;
}
.printing.dp-highlighter li {
	display: list-item !important;
}
.dp-highlighter .tools {
	font: 9px/normal Verdana, Geneva, Arial, Helvetica, sans-serif; =
padding: 3px 8px 10px 10px; color: silver; border-left-color: rgb(108, =
226, 108); border-left-width: 3px; border-left-style: solid; =
font-size-adjust: none; font-stretch: normal; background-color: rgb(255, =
255, 255);
}
.nogutter.dp-highlighter .tools {
	border-left-color: currentColor; border-left-width: 0px; =
border-left-style: none;
}
.collapsed.dp-highlighter .tools {
	border-bottom-color: currentColor; border-bottom-width: 0px; =
border-bottom-style: none;
}
.dp-highlighter .tools a {
	color: rgb(160, 160, 160); font-size: 9px; text-decoration: none; =
margin-right: 10px; background-color: inherit;
}
.dp-highlighter .tools a:hover {
	color: red; text-decoration: underline; background-color: inherit;
}
.dp-about {
	margin: 0px; padding: 0px; color: rgb(51, 51, 51); background-color: =
rgb(255, 255, 255);
}
.dp-about table {
	width: 100%; height: 100%; font-family: Tahoma, Verdana, Arial, =
sans-serif !important; font-size: 11px;
}
.dp-about td {
	padding: 10px; vertical-align: top;
}
.dp-about .copy {
	height: 95%; border-bottom-color: rgb(172, 168, 153); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.dp-about .title {
	color: red; font-weight: bold; background-color: inherit;
}
.dp-about .para {
	margin: 0px 0px 4px;
}
.dp-about .footer {
	text-align: right; color: rgb(51, 51, 51); border-top-color: rgb(255, =
255, 255); border-top-width: 1px; border-top-style: solid; =
background-color: rgb(236, 234, 219);
}
.dp-about .close {
	width: 60px; height: 22px; color: rgb(51, 51, 51); font-family: Tahoma, =
Verdana, Arial, sans-serif !important; font-size: 11px; =
background-color: rgb(236, 234, 219);
}
.dp-highlighter .comment {
	color: rgb(0, 130, 0); background-color: inherit;
}
.dp-highlighter .comments {
	color: rgb(0, 130, 0); background-color: inherit;
}
.dp-highlighter .string {
	color: blue; background-color: inherit;
}
.dp-highlighter .keyword {
	color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;
}
.dp-highlighter .preprocessor {
	color: gray; background-color: inherit;
}
.dp-xml .cdata {
	color: rgb(255, 20, 147);
}
.dp-xml .tag {
	color: rgb(153, 51, 0); font-weight: bold;
}
.dp-xml .tag-name {
	color: rgb(153, 51, 0); font-weight: bold;
}
.dp-xml .attribute {
	color: red;
}
.dp-xml .attribute-value {
	color: blue;
}
.dp-sql .func {
	color: rgb(255, 20, 147);
}
.dp-sql .op {
	color: rgb(128, 128, 128);
}
.dp-rb .symbol {
	color: rgb(170, 119, 0);
}
.dp-rb .variable {
	color: rgb(170, 119, 0); font-weight: bold;
}
.dp-py .builtins {
	color: rgb(255, 20, 147);
}
.dp-py .magicmethods {
	color: rgb(128, 128, 128);
}
.dp-py .exceptions {
	color: brown;
}
.dp-py .types {
	color: brown; font-style: italic;
}
.dp-py .commonlibs {
	color: rgb(138, 43, 226); font-style: italic;
}
.dp-j .annotation {
	color: rgb(100, 100, 100);
}
.dp-j .number {
	color: rgb(192, 0, 0);
}
.dp-delphi .number {
	color: blue;
}
.dp-delphi .directive {
	color: rgb(0, 130, 132);
}
.dp-delphi .vars {
	color: rgb(0, 0, 0);
}
.dp-css .value {
	color: black;
}
.dp-css .important {
	color: red;
}
.dp-c .vars {
	color: rgb(221, 0, 0);
}
.dp-cpp .datatypes {
	color: rgb(46, 139, 87); font-weight: bold;
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/comment1.css

.commentform {
=09
}
.commentform ul {
	font: 12px/24px Arial, Helvetica, sans-serif; margin: 0px 20px 5px; =
clear: both; font-size-adjust: none; font-stretch: normal;
}
.commentform .left {
	width: 80px; float: left; display: block;
}
.commentform .right {
	margin-left: 90px; display: block;
}
.commentform textarea {
	font: 14px/24px Arial, Helvetica, sans-serif; padding: 5px; border: 1px =
solid rgb(221, 221, 221); color: rgb(85, 85, 85); font-size-adjust: =
none; font-stretch: normal;
}
#lang_list {
	border: 1px solid rgb(204, 204, 204); width: 388px; font-size: 12px; =
background-color: rgb(255, 255, 255);
}
#lang_list a {
	padding: 0px 5px; text-align: center; border-right-color: rgb(204, 204, =
204); border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; =
border-bottom-width: 1px; border-right-style: solid; =
border-bottom-style: solid; float: left; display: inline-block; cursor: =
pointer;
}
#lang_list a:hover {
	color: rgb(255, 255, 255); background-color: rgb(102, 102, 102);
}
.long_name {
	width: 70px;
}
.duan_name {
	width: 25px;
}
.zhong_name {
	width: 48px;
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: 7bit
Content-Location: http://static.blog.csdn.net/css/style1.css

.commentform ul {
	margin: 0px;
}
.commentform li {
	margin: 0px; list-style-type: none;
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/public/res-min/markdown_views.css?v=1.0

.hljs {
	background: rgb(255, 255, 255); padding: 0.5em; color: rgb(0, 0, 0); =
display: block;
}
.hljs-comment {
	color: rgb(136, 0, 0);
}
.hljs-template_comment {
	color: rgb(136, 0, 0);
}
.hljs-javadoc {
	color: rgb(136, 0, 0);
}
.hljs-comment * {
	color: rgb(136, 0, 0);
}
.hljs-keyword {
	color: rgb(0, 0, 136);
}
.method {
	color: rgb(0, 0, 136);
}
.hljs-list .hljs-title {
	color: rgb(0, 0, 136);
}
.clojure .hljs-built_in {
	color: rgb(0, 0, 136);
}
.nginx .hljs-title {
	color: rgb(0, 0, 136);
}
.hljs-tag .hljs-title {
	color: rgb(0, 0, 136);
}
.setting .hljs-value {
	color: rgb(0, 0, 136);
}
.hljs-winutils {
	color: rgb(0, 0, 136);
}
.tex .hljs-command {
	color: rgb(0, 0, 136);
}
.http .hljs-title {
	color: rgb(0, 0, 136);
}
.hljs-request {
	color: rgb(0, 0, 136);
}
.hljs-status {
	color: rgb(0, 0, 136);
}
.hljs-envvar {
	color: rgb(102, 102, 0);
}
.tex .hljs-special {
	color: rgb(102, 102, 0);
}
.hljs-string {
	color: rgb(0, 136, 0);
}
.hljs-tag .hljs-value {
	color: rgb(0, 136, 0);
}
.hljs-cdata {
	color: rgb(0, 136, 0);
}
.hljs-filter .hljs-argument {
	color: rgb(0, 136, 0);
}
.hljs-attr_selector {
	color: rgb(0, 136, 0);
}
.apache .hljs-cbracket {
	color: rgb(0, 136, 0);
}
.hljs-date {
	color: rgb(0, 136, 0);
}
.hljs-regexp {
	color: rgb(0, 136, 0);
}
.coffeescript .hljs-attribute {
	color: rgb(0, 136, 0);
}
.hljs-sub .hljs-identifier {
	color: rgb(0, 102, 102);
}
.hljs-pi {
	color: rgb(0, 102, 102);
}
.hljs-tag {
	color: rgb(0, 102, 102);
}
.hljs-tag .hljs-keyword {
	color: rgb(0, 102, 102);
}
.hljs-decorator {
	color: rgb(0, 102, 102);
}
.ini .hljs-title {
	color: rgb(0, 102, 102);
}
.hljs-shebang {
	color: rgb(0, 102, 102);
}
.hljs-prompt {
	color: rgb(0, 102, 102);
}
.hljs-hexcolor {
	color: rgb(0, 102, 102);
}
.hljs-rules .hljs-value {
	color: rgb(0, 102, 102);
}
.css .hljs-value .hljs-number {
	color: rgb(0, 102, 102);
}
.hljs-literal {
	color: rgb(0, 102, 102);
}
.hljs-symbol {
	color: rgb(0, 102, 102);
}
.ruby .hljs-symbol .hljs-string {
	color: rgb(0, 102, 102);
}
.hljs-number {
	color: rgb(0, 102, 102);
}
.css .hljs-function {
	color: rgb(0, 102, 102);
}
.clojure .hljs-attribute {
	color: rgb(0, 102, 102);
}
.hljs-class .hljs-title {
	color: rgb(102, 0, 102);
}
.haskell .hljs-type {
	color: rgb(102, 0, 102);
}
.smalltalk .hljs-class {
	color: rgb(102, 0, 102);
}
.hljs-javadoctag {
	color: rgb(102, 0, 102);
}
.hljs-yardoctag {
	color: rgb(102, 0, 102);
}
.hljs-phpdoc {
	color: rgb(102, 0, 102);
}
.hljs-typename {
	color: rgb(102, 0, 102);
}
.hljs-tag .hljs-attribute {
	color: rgb(102, 0, 102);
}
.hljs-doctype {
	color: rgb(102, 0, 102);
}
.hljs-class .hljs-id {
	color: rgb(102, 0, 102);
}
.hljs-built_in {
	color: rgb(102, 0, 102);
}
.setting {
	color: rgb(102, 0, 102);
}
.hljs-params {
	color: rgb(102, 0, 102);
}
.hljs-variable {
	color: rgb(102, 0, 102);
}
.clojure .hljs-title {
	color: rgb(102, 0, 102);
}
.css .hljs-tag {
	color: rgb(0, 0, 0);
}
.hljs-rules .hljs-property {
	color: rgb(0, 0, 0);
}
.hljs-pseudo {
	color: rgb(0, 0, 0);
}
.hljs-subst {
	color: rgb(0, 0, 0);
}
.css .hljs-class {
	color: rgb(155, 112, 63);
}
.css .hljs-id {
	color: rgb(155, 112, 63);
}
.hljs-value .hljs-important {
	color: rgb(255, 119, 0); font-weight: bold;
}
.hljs-rules .hljs-keyword {
	color: rgb(197, 175, 117);
}
.hljs-annotation {
	color: rgb(155, 133, 157);
}
.apache .hljs-sqbracket {
	color: rgb(155, 133, 157);
}
.nginx .hljs-built_in {
	color: rgb(155, 133, 157);
}
.hljs-preprocessor {
	color: rgb(68, 68, 68);
}
.hljs-preprocessor * {
	color: rgb(68, 68, 68);
}
.hljs-pragma {
	color: rgb(68, 68, 68);
}
.tex .hljs-formula {
	font-style: italic; background-color: rgb(238, 238, 238);
}
.diff .hljs-header {
	color: rgb(128, 128, 128); font-weight: bold;
}
.hljs-chunk {
	color: rgb(128, 128, 128); font-weight: bold;
}
.diff .hljs-change {
	background-color: rgb(188, 207, 249);
}
.hljs-addition {
	background-color: rgb(186, 238, 186);
}
.hljs-deletion {
	background-color: rgb(255, 200, 189);
}
.hljs-comment .hljs-yardoctag {
	font-weight: bold;
}
.markdown_views {
	font-family: "microsoft yahei"; font-size: 14px;
}
.markdown_views * {
	box-sizing: border-box;
}
.markdown_views h1 {
	margin: 0.8em 0px; font-weight: 100;
}
.markdown_views h2 {
	margin: 0.8em 0px; font-weight: 100;
}
.markdown_views h3 {
	margin: 0.8em 0px; font-weight: 100;
}
.markdown_views h4 {
	margin: 0.8em 0px; font-weight: 100;
}
.markdown_views h5 {
	margin: 0.8em 0px; font-weight: 100;
}
.markdown_views h6 {
	margin: 0.8em 0px; font-weight: 100;
}
.markdown_views p {
	margin: 0px 0px 1.1em;
}
.markdown_views pre {
	margin: 0px 0px 1.1em;
}
.markdown_views pre.prettyprint {
	margin: 0px 0px 1.1em;
}
.markdown_views blockquote {
	margin: 0px 0px 1.1em;
}
.markdown_views hr {
	border-width: 1px 0px 0px; border-style: solid none none; border-color: =
rgba(128, 128, 128, 0.1) currentColor currentColor; margin: 2em 0px;
}
.markdown_views dt {
	font-weight: bold;
}
.markdown_views abbr[title] {
	border-bottom-color: rgb(153, 153, 153); border-bottom-width: 1px; =
border-bottom-style: dotted; cursor: help;
}
.markdown_views abbr[data-original-title] {
	border-bottom-color: rgb(153, 153, 153); border-bottom-width: 1px; =
border-bottom-style: dotted; cursor: help;
}
.markdown_views .initialism {
	text-transform: uppercase; font-size: 90%;
}
.markdown_views blockquote {
	padding: 15px 20px; border-radius: 0px 5px 5px 0px; border-left-color: =
rgba(128, 128, 128, 0.075); border-left-width: 10px; border-left-style: =
solid; background-color: rgba(128, 128, 128, 0.05);
}
.markdown_views blockquote p {
	line-height: 1.25;
}
.markdown_views blockquote p:last-child {
	margin-bottom: 0px;
}
.markdown_views blockquote small {
	color: rgb(153, 153, 153); line-height: 1.45; display: block;
}
.markdown_views blockquote .small {
	color: rgb(153, 153, 153); line-height: 1.45; display: block;
}
.markdown_views blockquote small::before {
	content: "=A1=AA?";
}
.markdown_views blockquote .small::before {
	content: "=A1=AA?";
}
.markdown_views blockquote.pull-right {
	padding-right: 15px; padding-left: 0px; border-right-color: rgba(128, =
128, 128, 0.075); border-left-color: currentColor; border-right-width: =
5px; border-left-width: 0px; border-right-style: solid; =
border-left-style: none;
}
.markdown_views blockquote.pull-right p {
	text-align: right;
}
.markdown_views blockquote.pull-right small {
	text-align: right;
}
.markdown_views blockquote.pull-right .small {
	text-align: right;
}
.markdown_views blockquote.pull-right small::before {
	content: "";
}
.markdown_views blockquote.pull-right .small::before {
	content: "";
}
.markdown_views blockquote.pull-right small::after {
	content: "?=A1=AA";
}
.markdown_views blockquote.pull-right .small::after {
	content: "?=A1=AA";
}
.markdown_views blockquote::before {
	content: "";
}
.markdown_views blockquote::after {
	content: "";
}
.markdown_views address {
	line-height: 1.45; font-style: normal; margin-bottom: 21px;
}
.markdown_views code {
	font-family: "Source Code Pro", monospace;
}
.markdown_views kbd {
	font-family: "Source Code Pro", monospace;
}
.markdown_views pre {
	font-family: "Source Code Pro", monospace;
}
.markdown_views samp {
	font-family: "Source Code Pro", monospace;
}
.markdown_views code {
	padding: 2px 4px; border-radius: 0px; color: rgb(63, 63, 63); =
font-size: 90%; white-space: nowrap; background-color: rgba(128, 128, =
128, 0.075);
}
.markdown_views pre {
	margin: 0px 0px 10.5px; padding: 10px; border-radius: 0px; border: 1px =
solid rgba(128, 128, 128, 0.075); color: rgb(51, 51, 51); line-height: =
1.45; font-size: 14px; display: block; -ms-word-break: break-all; =
-ms-word-wrap: break-word; background-color: rgba(128, 128, 128, 0.05);
}
.markdown_views pre code {
	padding: 0px; border-radius: 0px; color: inherit; font-size: inherit; =
white-space: pre; -ms-word-wrap: normal; background-color: transparent;
}
.markdown_views .pre-scrollable {
	-ms-overflow-y: scroll; max-height: 340px;
}
.markdown_views .sequence-diagram {
	text-align: center; margin-bottom: 1.1em;
}
.markdown_views .flow-chart {
	text-align: center; margin-bottom: 1.1em;
}
.markdown_views table {
	border: 1px solid rgb(238, 238, 238); width: 100%; border-collapse: =
collapse; border-spacing: 0; background-color: transparent;
}
.markdown_views table th {
	padding: 8px; border: 1px solid rgb(238, 238, 238); line-height: 20px; =
vertical-align: top;
}
.markdown_views table td {
	padding: 8px; border: 1px solid rgb(238, 238, 238); line-height: 20px; =
vertical-align: top;
}
.markdown_views .prettyprint {
	padding: 5px 5px 5px 60px; white-space: nowrap; position: relative; =
-ms-overflow-x: auto; -ms-overflow-y: hidden;
}
.markdown_views .prettyprint .pre-numbering {
	list-style: none; margin: 0px; padding: 6px 0px 40px; left: 0px; top: =
0px; width: 50px; text-align: right; border-right-color: rgb(221, 221, =
221); border-right-width: 1px; border-right-style: solid; position: =
absolute; background-color: rgb(238, 238, 238);
}
.markdown_views .prettyprint .pre-numbering li {
	padding: 0px 5px;
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/category.css?v=1.0

.article_manage {
	margin: 0px -20px; padding: 0px 20px 5px; text-align: right; color: =
rgb(153, 153, 153); overflow: hidden; border-bottom-color: rgb(237, 237, =
237); border-bottom-width: 1px; border-bottom-style: solid;
}
.article_manage span {
	margin: 0px 5px;
}
.article_manage .link_postdate {
	margin: 0px 5px 0px 0px;
}
.article_manage .link_view {
	background: url("../../../images/ico_view.png") no-repeat left; =
padding: 0px 0px 0px 14px; _background: =
url(../../../images/ico_view.gif) no-repeat left center;
}
.article_manage .link_comments {
	background: url("../../../images/ico_comm.png") no-repeat left; =
padding: 0px 0px 0px 14px; _background: =
url(../../../images/ico_comm.gif) no-repeat left center;
}
.article_manage .link_categories {
	float: left;
}
.list_view {
	margin: 0px 20px; padding: 5px 0px;
}
.list_view .article_title {
	font: 14px/30px Arial !important; margin: 0px !important; height: 30px; =
overflow: hidden; float: left; display: inline; white-space: nowrap; =
-ms-text-overflow: ellipsis; font-size-adjust: none !important; =
font-stretch: normal !important;
}
.list_view .article_title::after {
	content: "...";
}
.list_view .article_title h3 {
	font: 12px/30px Arial !important; font-size-adjust: none !important; =
font-stretch: normal !important;
}
.list_view .article_title h1 {
	font: 12px/30px Arial !important; font-size-adjust: none !important; =
font-stretch: normal !important;
}
.list_view .article_manage {
	padding: 0px !important; text-align: right !important; line-height: =
30px !important; float: right; display: inline; white-space: nowrap;
}
.list_view .article_description {
	display: none !important;
}
.list_view .article_manage span {
	margin: 0px !important;
}
.article_l {
	width: 100%; float: left;
}
.category_l img {
	vertical-align: middle;
}
.category_l span {
	vertical-align: middle; display: inline-block;
}
.article_l span a {
	margin-right: 10px; display: inline-block;
}
.article_r .fa {
	font-weight: normal;
}
.category {
	margin: 0px -20px; padding: 0px 20px; border-bottom-color: rgb(237, =
237, 237); border-bottom-width: 1px; border-bottom-style: solid;
}
.category_l {
	display: block;
}
.category_r {
	display: block;
}
.category_l {
	width: 9%; color: rgb(51, 51, 51); padding-top: 5px; font-size: 14px; =
float: left;
}
.category_r {
	width: 90%; color: rgb(223, 52, 52); font-size: 14px; float: left;
}
.category_r .subItem_t .J_close {
	color: rgb(204, 204, 204); line-height: 42px; font-size: 16px; =
font-style: normal; font-weight: normal; float: right;
}
.category_r em {
	font-style: normal;
}
.category_r label {
	line-height: 32px; margin-left: 15px; float: left; display: block; =
position: relative; cursor: pointer;
}
.category_r label .fa {
	color: rgb(153, 153, 153);
}
.category_r label .fa-caret-up {
	display: none;
}
.subItem {
	background: rgb(255, 255, 255); border: 1px solid rgb(220, 220, 220); =
left: -10px; top: 46px; width: 400px; color: rgb(51, 51, 51); display: =
none; position: absolute; z-index: 10; max-height: 400px; box-shadow: =
5px 0px 10px #dcdcdc;
}
.subItem::after {
	background: url("../images/triangle.png") no-repeat; left: 20px; top: =
-10px; width: 10px; height: 10px; display: block; position: absolute; =
content: "";
}
.subItem .subItem_l li a {
	color: rgb(51, 51, 51);
}
.subItem_t {
	padding: 0px 20px 0px 15px; height: 42px; color: rgb(153, 153, 153); =
line-height: 42px; border-bottom-color: rgb(220, 220, 220); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.category_r .subItem_t .fa-close {
	color: rgb(204, 204, 204); line-height: 42px; font-size: 16px; =
font-weight: normal; float: right;
}
.subItem_l {
	list-style: none; margin: 0px; padding: 0px; -ms-overflow-y: auto; =
max-height: 358px;
}
.subItem .subItem_l li {
	padding: 0px 20px; height: 52px; line-height: 52px; =
border-bottom-color: rgb(238, 238, 238); border-bottom-width: 1px; =
border-bottom-style: solid;
}
.subItem_l li em {
	margin-right: 10px; vertical-align: middle; display: inline-block;
}
.subItem_l li a {
	width: 95%; color: rgb(51, 51, 51); overflow: hidden; font-size: 14px; =
vertical-align: middle; display: inline-block; white-space: nowrap; =
-ms-text-overflow: ellipsis;
}
.similar_article {
	overflow: hidden;
}
.similar_article h4 {
	color: rgb(51, 51, 51); font-size: 16px;
}
.similar_c {
	border: 1px solid rgb(187, 187, 187);
}
.similar_c_t {
	line-height: 32px; border-bottom-color: rgb(220, 220, 220); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.similar_c_t label {
	color: rgb(102, 102, 102); font-size: 16px; margin-left: 25px; display: =
inline-block;
}
.similar_c_t label em {
	font-style: normal;
}
.similar_c_t .similar_cur {
	font-weight: bold;
}
.fl {
	float: left;
}
.fr {
	float: right;
}
.similar_wrap {
	background: rgb(252, 252, 252); padding: 10px 20px; -ms-overflow-y: =
auto; max-height: 180px;
}
.similar_list {
	list-style: none; margin: 0px; padding: 0px; width: 45%;
}
.similar_list li {
	list-style: none; line-height: 30px;
}
.similar_list li em {
	font-style: normal; margin-right: 10px; vertical-align: middle; =
display: inline-block;
}
.similar_list li a {
	width: 95%; color: rgb(51, 51, 51); overflow: hidden; vertical-align: =
middle; display: inline-block; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.similar_list li a:hover {
	color: rgb(254, 0, 0);
}
.bog_copyright {
	padding: 20px 0px;
}
.copyright_p {
	height: 14px; color: rgb(102, 102, 102); line-height: 14px; =
padding-left: 10px; font-size: 14px; border-left-color: rgb(228, 28, =
30); border-left-width: 3px; border-left-style: solid;
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/blog_detail.css

.mod_zhuanjia_dianping {
	color: rgb(101, 101, 101); font-size: 12px; margin-top: 80px; =
border-top-color: rgb(251, 245, 221); border-bottom-color: rgb(251, 245, =
221); border-top-width: 1px; border-bottom-width: 1px; border-top-style: =
solid; border-bottom-style: solid; background-color: rgb(255, 253, 245);
}
.mod_zhuanjia_dianping ul {
	list-style: none; margin: 0px; padding: 0px;
}
.mod_zhuanjia_dianping li {
	list-style: none; margin: 0px; padding: 0px;
}
.mod_zhuanjia_dianping img {
	border: currentColor;
}
.mod_zhuanjia_dianping .dianping_title {
	height: 40px; line-height: 40px; border-bottom-color: rgb(204, 204, =
204); border-bottom-width: 2px; border-bottom-style: solid;
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_left {
	font-size: 16px; border-bottom-color: rgb(203, 0, 0); =
border-bottom-width: 2px; border-bottom-style: solid; float: left;
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right {
	color: rgb(101, 101, 101); font-size: 14px; font-weight: normal; float: =
right;
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right .red {
	padding: 0px 5px; color: rgb(203, 0, 0);
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right img {
	padding-right: 5px; vertical-align: -2px;
}
.mod_zhuanjia_dianping .dianping_content {
	height: 240px; overflow: hidden; max-height: 800px;
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list {
	padding: 20px 0px; width: 100%; border-top-color: rgb(222, 220, 221); =
border-top-width: 1px; border-top-style: dashed; float: left;
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list_left {
	width: 40px; margin-top: 20px; margin-left: -100%; float: left;
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list_left =
.name {
	width: 40px; text-align: center; color: rgb(0, 0, 0); margin-top: 10px; =
display: inline-block;
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right {
	padding-left: 20px; margin-left: 40px;
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time {
	color: rgb(119, 149, 165);
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time .time_desc {
	padding: 0px 5px;
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .dianping_content_list_right_content {
	line-height: 18px; margin-top: 10px;
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time img {
	vertical-align: -2px;
}
.mod_zhuanjia_dianping .more {
	width: 100%; text-align: center; position: relative;
}
.mod_zhuanjia_dianping .more img {
	bottom: -20px; position: relative; cursor: pointer;
}
.mod_more_detail {
	border: 1px solid rgb(232, 232, 232); color: rgb(51, 51, 51); =
font-size: 12px; margin-top: 50px;
}
.mod_more_detail ul {
	list-style: none; margin: 0px; padding: 0px; height: 24px; line-height: =
24px; overflow: hidden; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.mod_more_detail li {
	list-style: none; margin: 0px; padding: 0px; height: 24px; line-height: =
24px; overflow: hidden; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.mod_more_detail li a {
	color: rgb(51, 51, 51);
}
.mod_more_detail .mod_more_detail_title {
	height: 40px; line-height: 40px; text-indent: 10px; background-color: =
rgb(241, 241, 241);
}
.mod_more_detail .mod_more_detail_title .mod_more_detail_left {
	color: rgb(0, 0, 0); font-size: 16px; float: left;
}
.mod_more_detail .mod_more_detail_content {
	padding: 20px 0px; overflow: hidden;
}
.mod_more_detail .mod_more_detail_content .mod_more_detail_content_left =
{
	padding: 0px 20px; width: 50%; border-right-color: rgb(232, 232, 232); =
border-right-width: 1px; border-right-style: solid; float: left; =
box-sizing: border-box;
}
.mod_more_detail .mod_more_detail_content .mod_more_detail_content_right =
{
	padding: 0px 20px; width: 50%; float: left; box-sizing: border-box;
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/css/ask_float_block.css

@font-face {
	font-family: FontAwesome;
	src: =
url(//ask.csdn.net/assets/fontawesome-webfont-d8970a29b6bda4953188db1bf11=
caa77.eot?#iefix&v=3D3.2.1) format("embedded-opentype"), =
url(//ask.csdn.net/assets/fontawesome-webfont-b6eacf39cdd874409fca9bbfa0f=
d5524.woff?v=3D3.2.1) format("woff"), =
url(//ask.csdn.net/assets/fontawesome-webfont-e6510d64f0dee7530f4c35b4ecc=
be2eb.ttf?v=3D3.2.1) format("truetype"), =
url(//ask.csdn.net/assets/fontawesome-webfont-4bb899176c47fb8cc6662a8929e=
ebc8a.svg#fontawesomeregular?v=3D3.2.1) format("svg");
	font-weight: normal;
	font-style: normal;
}
.clearfix::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
body > .marker {
	background: rgb(0, 0, 0); transition:0.5s ease-in; left: 0px; top: 0px; =
width: 0px; height: 0px; position: absolute; z-index: 900; opacity: 0;
}
body > .pop_edit {
	background: rgb(255, 255, 255); border: 1px solid rgb(220, 220, 220); =
left: 50%; top: 50%; clear: both; font-family: "microsoft yahei"; =
margin-top: -270px; margin-left: -333px; position: fixed; z-index: 1000; =
opacity: 0;
}
body > .pop_edit * {
	box-sizing: border-box;
}
body > .pop_edit .active.icon-preview::before {
	color: rgb(0, 68, 204) !important; position: relative; z-index: 10002;
}
body > .pop_edit .active.icon-preview::after {
	background: rgba(255, 255, 255, 0.7); margin: -10px 0px 0px -520px; =
width: 600px; height: 40px; position: absolute; z-index: 3; content: "";
}
body > .pop_edit .cm_box {
	position: relative;
}
body > .pop_edit .cm_box .cm_dialog {
	background: rgba(0, 0, 0, 0.01); left: 0px; top: 0px; width: 100%; =
height: 100%; display: none; position: fixed; z-index: 10000;
}
body > .pop_edit .pop_cm {
	background: rgb(255, 255, 255); margin: -5px 0px 0px 275px; padding: =
10px; border: 1px solid rgb(204, 204, 204); top: 48px; width: 300px; =
display: none; position: absolute; z-index: 10001; box-shadow: 2px 2px =
10px rgba(0,0,0,0.3);
}
body > .pop_edit .pop_cm::after {
	border-width: 10px; border-style: solid; border-color: transparent =
transparent rgb(204, 204, 204); left: 40px; top: -20px; position: =
absolute; content: "";
}
body > .pop_edit .pop_cm::before {
	border-width: 10px; border-style: solid; border-color: transparent =
transparent rgb(204, 204, 204); left: 40px; top: -20px; position: =
absolute; content: "";
}
body > .pop_edit .pop_cm::after {
	top: -19px; border-bottom-color: rgb(255, 255, 255);
}
body > .pop_edit .cm_add_img.pop_cm {
	margin-left: 310px;
}
body > .pop_edit .pop_cm .nav-tabs {
	margin: -5px -10px 10px; padding: 5px 10px; height: 30px; font-size: =
12px; border-bottom-color: rgb(221, 221, 221); border-bottom-width: 1px; =
border-bottom-style: solid;
}
body > .pop_edit .pop_cm .nav-tabs a {
	padding: 3px 20px; border: 1px solid transparent; height: 25px; color: =
rgb(153, 153, 153); text-decoration: none; display: inline-block;
}
body > .pop_edit .pop_cm .nav-tabs a.active {
	border-color: rgb(221, 221, 221) rgb(221, 221, 221) rgb(255, 255, 255); =
border-radius: 3px 3px 0px 0px; color: rgb(102, 102, 102);
}
body > .pop_edit .pop_cm .up_img_loading {
	background: rgba(255, 255, 255, 0.8); left: 0px; top: 0px; width: 100%; =
height: 100%; text-align: center; line-height: 100px; display: none; =
position: absolute; z-index: 2;
}
body > .pop_edit .pop_cm .active.up_img_loading {
	display: block;
}
body > .pop_edit .pop_cm .tab_panel {
	display: none;
}
body > .pop_edit .pop_cm .active.tab_panel {
	display: block;
}
body > .pop_edit .pop_cm .set_img {
	margin: 0px; height: 101px; position: relative;
}
body > .pop_edit .pop_cm .set_img iframe {
	border: 0px currentColor; width: 100%; height: 101px;
}
body > .pop_edit .pop_cm .set_img .markdown_file_name {
	padding: 5px; width: 100%; color: rgb(153, 153, 153); overflow: hidden;
}
body > .pop_edit .pop_cm .set_img label {
	background: 0px 0px rgb(221, 221, 221); padding: 0px 15px; top: 0px; =
right: 0px; line-height: 28px; font-size: 12px; font-weight: normal; =
border-left-color: rgb(204, 204, 204); border-left-width: 1px; =
border-left-style: solid; position: absolute;
}
body > .pop_edit .pop_cm .markdown_file_msg {
	margin: -10px 0px 10px; font-size: 14px;
}
body > .pop_edit .pop_cm input {
	padding: 5px 10px; border: 1px solid rgb(221, 221, 221); width: 278px; =
margin-bottom: 10px;
}
body > .pop_edit .pop_cm .text-right {
	text-align: right;
}
body > .pop_edit .pop_cm .btn {
	background: rgb(153, 153, 153); font: 12px/20px "microsoft yahei"; =
padding: 2px 10px; color: rgb(255, 255, 255); display: inline-block; =
cursor: pointer; font-size-adjust: none; font-stretch: normal;
}
body > .pop_edit h3 {
	height: 50px; color: rgb(102, 102, 102); line-height: 50px; =
padding-left: 19px; font-family: microsoft yahei; font-size: 18px; =
font-weight: normal; margin-top: 0px; margin-bottom: 10px; =
border-bottom-color: rgb(240, 240, 240); border-bottom-width: 1px; =
border-bottom-style: solid; position: relative;
}
body > .pop_edit h3 .err {
	margin: 0px; left: 0px; top: inherit; width: 99%; text-align: left; =
bottom: -23px; padding-left: 5px; font-size: 12px; position: absolute;
}
body > .pop_edit .close {
	top: 8px; right: 19px; color: rgb(85, 85, 85); font-size: 30px; =
text-decoration: none; position: absolute;
}
body > .pop_edit .close:hover {
	color: rgb(85, 136, 204);
}
body > .pop_edit .ask_float_channel:link {
	color: rgb(69, 139, 202); cursor: pointer;
}
body > .pop_edit .ask_float_channel:visited {
	color: rgb(69, 139, 202); cursor: pointer;
}
body > .pop_edit .ask_float_channel:hover {
	color: rgb(69, 139, 202); cursor: pointer;
}
body > .pop_edit .ask_float_channel:focus {
	color: rgb(69, 139, 202); cursor: pointer;
}
body > .pop_edit .ask_float_span {
	left: 70px; top: 14px; color: rgb(102, 102, 102); font-family: =
"microsoft yahei"; font-size: 14px; position: absolute;
}
body > .pop_edit .context {
	padding: 0px 20px 10px; color: rgb(51, 51, 51); font-size: 16px;
}
body > .pop_edit .red {
	padding: 0px; left: -11px; top: 50%; color: rgb(255, 0, 0); margin-top: =
-10px; display: inline-block; position: absolute;
}
body > .pop_edit .success {
	padding: 15px 20px 20px; text-align: right; border-top-color: rgb(240, =
240, 240); border-top-width: 1px; border-top-style: solid;
}
body > .pop_edit .success a {
	width: 80px; height: 28px; text-align: center; color: rgb(255, 255, =
255); line-height: 28px; font-size: 14px; text-decoration: none; =
margin-left: 10px; display: inline-block; -ms-zoom: 1;
}
body > .pop_edit .success .cancel {
	background: rgb(153, 153, 153);
}
body > .pop_edit .success .ok {
	background: rgb(190, 0, 0);
}
body > .pop_edit .success .del {
	background: rgb(153, 153, 153); display: none;
}
.ask_first {
	left: 50%; top: 250px; width: 667px; height: 560px; text-align: left; =
display: none; position: absolute;
}
.ask_first .askFirst_desc {
	height: 370px;
}
.ask_first .askFirst_desc .afd_p {
	color: rgb(51, 51, 51); line-height: 21px; font-size: 14px;
}
.ask_first .askFirst_desc .afd_p a {
	color: rgb(43, 129, 169); cursor: pointer;
}
.ask_first .askFirst_se {
	color: rgb(51, 51, 51); font-size: 16px; margin-bottom: 10px;
}
.ask_first .search_div {
	width: 100%; height: 35px; margin-right: 20px; margin-bottom: 10px;
}
.ask_first .search_div input {
	width: 100%;
}
.ask_second {
	text-align: left; display: none;
}
.ask_second .err_div {
	border: 1px solid rgb(255, 218, 218); width: 100%; height: 28px; =
margin-bottom: 5px;
}
.ask_second .err_div .err_ico {
	background: url("../images/ph_pop_err_icon.fw.png") no-repeat 0px 0px; =
width: 16px; height: 16px; margin-top: 6px; margin-right: 10px; =
margin-left: 5px; float: left; display: inline-block;
}
.ask_second .err_div .err_txt {
	height: 16px; color: rgb(183, 77, 70); font-size: 12px; margin-top: =
2px; float: left; display: inline-block;
}
.ask_second .input_div {
	width: 100%; height: 35px; margin-right: 20px; margin-bottom: 10px;
}
.ask_second .input_div input {
	border: 1px solid rgb(220, 220, 220); width: 100%; height: 35px; color: =
rgb(101, 101, 101); text-indent: 5px; font-size: 16px; box-sizing: =
border-box;
}
.ask_second .second_se {
	margin: 5px 0px; color: rgb(101, 101, 101); font-size: 16px; display: =
inline-block;
}
.ask_second .div_rich_editor {
	border: 1px solid rgb(221, 221, 221); width: 100%; height: 245px; =
position: relative;
}
.ask_second .div_tags {
	width: 100%; height: 35px;
}
.ask_second .tags_con {
	padding: 0px 5px; border: 1px solid rgb(220, 220, 220); width: 100%; =
height: 35px; font-size: 14px; float: left; -ms-overflow-y: auto;
}
.ask_second .focus.tags_con {
	border-color: rgb(85, 153, 221); outline: rgb(102, 187, 238) solid 1px;
}
.ask_second .tags_con input {
	border: 0px currentColor; width: 200px; height: 20px; margin-top: 7px; =
float: left;
}
.ask_second .tags_con .tag {
	background: rgb(240, 244, 247); padding: 0px 10px; border-radius: 15px; =
height: 22px; color: rgb(61, 141, 175); line-height: 22px; overflow: =
hidden; margin-top: 5px; margin-right: 5px; float: left; display: block;
}
.ask_second .tags_con .tag span {
	float: left; display: block;
}
.ask_second .tags_con .tag a {
	height: 20px; color: rgb(68, 153, 187); font-size: 14px; =
text-decoration: none; margin-left: 5px; float: left; display: block;
}
.ask_second .tags_con .tag a:hover {
	color: rgb(204, 51, 0);
}
.ask_second .drt_tagRecomm {
	height: 20px; margin-top: 20px; margin-bottom: 15px;
}
.ask_second .drt_tagRecomm .drt_tit {
	color: rgb(101, 101, 101); font-size: 14px;
}
.ask_second .left_area {
	float: left; display: inline-block;
}
.ask_second .left_area > * {
	vertical-align: middle;
}
.ask_second .left_area .wyxs {
	color: rgb(102, 102, 102); font-size: 14px; margin-right: 10px; =
margin-left: 10px;
}
.ask_second .left_area .cb_num {
	border: 1px solid rgb(220, 220, 220); width: 157px; line-height: 23px;
}
.ask_second .left_area .phib_rii {
	width: 183px; height: 20px; text-align: left; color: rgb(249, 191, 71); =
margin-left: 10px; display: inline-block;
}
.ask_second .left_area .phib_rii span {
	background: url("../images/ph_right_cb.fw.png") no-repeat 0px 2px; =
height: 25px; line-height: 21px; padding-left: 20px; margin-top: 0px; =
display: inline-block;
}
#float_ask_img {
	top: 200px; right: 50px; position: fixed; z-index: 9;
}
.complete_list {
	background: rgb(255, 255, 255); margin: 0px; padding: 1px; =
border-radius: 3px; border: 1px solid rgb(204, 204, 204); overflow: =
hidden; display: none; position: fixed; z-index: 9999; box-shadow: 2px =
2px 5px rgba(0,0,0,0.3);
}
.complete_list li {
	font: 12px/20px "microsoft yahei"; padding: 2px 10px; cursor: default; =
font-size-adjust: none; font-stretch: normal;
}
.complete_list .outborder {
	background: rgb(245, 245, 245);
}
.ask_second .se_key {
	padding: 0px 15px; border-radius: 10px; height: 21px; text-align: =
center; color: rgb(101, 101, 101); line-height: 21px; font-size: 12px; =
font-weight: normal; margin-right: 15px; display: inline-block; =
background-color: rgb(242, 242, 242);
}
.ask_second .se_key:hover {
	color: rgb(255, 255, 255); text-decoration: none; background-color: =
rgb(189, 25, 33);
}
.ask_second textarea {
	font-family: Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, =
DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, =
serif; font-size: 12px;
}
.ask_second pre {
	background: rgb(238, 238, 238); margin: 0px 0px 7px; padding: 5px; =
width: auto; overflow: auto; font-family: Consolas, Menlo, Monaco, =
Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans =
Mono, Courier New, monospace, serif; max-height: 600px;
}
.ask_second code {
	padding: 2px 5px; border-radius: 3px; border: 1px solid rgb(221, 221, =
221); color: rgb(102, 102, 102); font-family: Consolas, Menlo, Monaco, =
Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans =
Mono, Courier New, monospace, serif; display: block; background-color: =
rgb(238, 238, 238);
}
.ask_second p code {
	padding: 1px 5px;
}
.ask_second blockquote {
	padding: 10px 10px 1px; background-color: rgb(238, 238, 238);
}
.ask_second hr {
	margin: 0px 0px 20px; border: 0px currentColor; height: 1px; =
background-color: rgb(170, 170, 170);
}
.wmd-prompt-dialog * {
	margin: 0px; padding: 0px;
}
.ask_second .str {
	color: rgb(128, 0, 0);
}
.ask_second .kwd {
	color: rgb(0, 0, 139); font-weight: bold;
}
.ask_second .com {
	color: rgb(128, 128, 128);
}
.ask_second .typ {
	color: rgb(43, 145, 175); font-weight: bold;
}
.ask_second .lit {
	color: rgb(128, 0, 0);
}
.ask_second .pun {
	color: rgb(0, 0, 0);
}
.ask_second .pln {
	color: rgb(0, 0, 0);
}
.ask_second .tag {
	color: rgb(128, 0, 0); font-weight: bold;
}
.ask_second .atn {
	color: rgb(255, 0, 0);
}
.ask_second .atv {
	color: rgb(0, 0, 255);
}
.ask_second .dec {
	color: rgb(128, 0, 128);
}
.ask_second .wmd {
	width: 660px; position: relative;
}
.ask_second #wmd-button-bar {
	margin: 10px 0px 0px; width: 405px; height: 25px; clear: both; display: =
inline-block; background-color: rgb(255, 255, 255);
}
.ask_second #wmd-input {
	margin: 0px; padding: 0px 3px; border: 1px solid rgb(220, 220, 220); =
width: 626px; height: 200px; line-height: 18px; resize: none;
}
.ask_second #wmd-preview {
	padding: 3px; border: 2px dotted rgb(204, 204, 204); clear: both; =
font-size: 12px; display: none;
}
.grippie {
	background-position: center 1px; border-width: 0px 1px 1px; =
border-style: solid; border-color: rgb(221, 221, 221); height: 9px; =
line-height: 9px; overflow: hidden; margin-bottom: 6px; display: none; =
cursor: s-resize; background-image: url("../images/drag.gif"); =
background-repeat: no-repeat; background-color: rgb(238, 238, 238);
}
#wmd-preview p {
	-ms-word-wrap: break-word;
}
.wmd-button-row {
	margin: 0px; padding: 0px; height: 20px; position: relative;
}
.wmd-spacer {
	list-style: none; width: 1px; height: 20px; margin-left: 14px; display: =
inline-block; position: absolute; background-color: silver;
}
.wmd-button {
	list-style: none; width: 20px; height: 20px; margin-right: 5px; =
margin-left: 5px; display: inline-block; position: absolute; =
background-image: url("../images/wmd-buttons.png"); background-repeat: =
no-repeat;
}
.wmd-button > a {
	width: 20px; height: 20px; display: inline-block; position: absolute;
}
.wmd-bold-button {
	left: 0px;
}
.wmd-italic-button {
	background-position: -20px 0px; left: 25px;
}
.wmd-spacer1 {
	left: 50px;
}
.wmd-link-button {
	background-position: -40px 0px; left: 75px;
}
.wmd-quote-button {
	background-position: -60px 0px; left: 100px;
}
.wmd-code-button {
	background-position: -80px 0px; left: 125px;
}
.wmd-image-button {
	background-position: -100px 0px; left: 150px;
}
.wmd-spacer2 {
	left: 175px;
}
.wmd-olist-button {
	background-position: -120px 0px; left: 200px;
}
.wmd-ulist-button {
	background-position: -140px 0px; left: 225px;
}
.wmd-heading-button {
	background-position: -160px 0px; left: 250px;
}
.wmd-hr-button {
	background-position: -180px 0px; left: 275px;
}
.wmd-spacer3 {
	left: 300px;
}
.wmd-undo-button {
	background-position: -200px 0px; left: 325px;
}
.wmd-redo-button {
	background-position: -220px 0px; left: 350px;
}
.wmd-help-button {
	background-position: -240px 0px; right: 0px;
}
.wmd-at-button {
	left: 375px;
}
.wmd-prompt-background {
	background-color: black;
}
.wmd-prompt-dialog {
	border-width: 3px; border-style: solid; border-color: rgb(255, 255, =
255) rgb(153, 153, 153) rgb(153, 153, 153) rgb(255, 255, 255); =
background-color: rgb(221, 221, 221);
}
.wmd-mini-button {
	margin: 5px; padding: 3px 8px; color: rgb(68, 68, 68); text-decoration: =
none; display: inline-block;
}
.wmd-mini-button:visited {
	margin: 5px; padding: 3px 8px; color: rgb(68, 68, 68); text-decoration: =
none; display: inline-block;
}
.wmd-mini-button:hover {
	border-radius: 15px; text-decoration: none; background-color: rgb(204, =
204, 204); -moz-border-radius: 15px 15px 15px 15px; =
-webkit-border-radius: 15px 15px 15px 15px;
}
.selected.wmd-mini-button {
	border-radius: 15px; color: rgb(238, 238, 238); text-decoration: none; =
background-color: rgb(136, 136, 136); -moz-border-radius: 15px 15px 15px =
15px; -webkit-border-radius: 15px 15px 15px 15px;
}
.selected.wmd-mini-button:hover {
	color: rgb(238, 238, 238); background-color: rgb(136, 136, 136);
}
.dialog-input {
	padding: 3px 0px 0px 2px; border: 1px solid rgb(153, 153, 153); height: =
23px; font-family: Trebuchet MS, Liberation Sans, DejaVu Sans, =
sans-serif;
}
#upload-url-input input {
	padding: 3px 0px 0px 2px; border: 1px solid rgb(153, 153, 153); height: =
23px; font-family: Trebuchet MS, Liberation Sans, DejaVu Sans, =
sans-serif;
}
#shadow-filename {
	padding: 3px 0px 0px 2px; border: 1px solid rgb(153, 153, 153); height: =
23px; font-family: Trebuchet MS, Liberation Sans, DejaVu Sans, =
sans-serif;
}
.dialog-button {
	border: 1px solid rgb(153, 153, 153); height: 28px; font-family: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; cursor: pointer; =
background-color: rgb(240, 240, 240);
}
#ok-dialog-button {
	border: 1px solid rgb(153, 153, 153); height: 28px; font-family: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; cursor: pointer; =
background-color: rgb(240, 240, 240);
}
#close-dialog-button {
	border: 1px solid rgb(153, 153, 153); height: 28px; font-family: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; cursor: pointer; =
background-color: rgb(240, 240, 240);
}
#choose-file {
	border: 1px solid rgb(153, 153, 153); height: 28px; font-family: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; cursor: pointer; =
background-color: rgb(240, 240, 240);
}
#image-upload-progress {
	background: url("images/progress-dots.gif") no-repeat center; height: =
5px; text-indent: -9999px;
}
#qlink_box {
	background: rgb(239, 239, 239); padding: 3px 3px 2px; border-radius: =
5px; border: 1px solid rgb(239, 239, 239); display: none; position: =
absolute; z-index: 999; -moz-border-radius: 5px; -webkit-border-radius: =
5px;
}
#qlink_box input {
	background: rgb(255, 255, 255); padding: 0px; border-radius: 2px; =
border: 1px solid rgb(177, 177, 177); width: 400px; height: 24px; =
font-size: 100%; -moz-border-radius: 2px; -webkit-border-radius: 2px;
}
#qlink_suggest {
	background: rgb(255, 255, 255); border-width: 0px 1px 1px; =
border-style: none solid solid; border-color: currentColor rgb(177, 177, =
177) rgb(177, 177, 177); padding: 1px 0px; left: 3px; top: 44px; width: =
400px; position: absolute;
}
#qlink_suggest dl {
	list-style: none; margin: 0px; padding: 0px;
}
#qlink_suggest dd {
	margin: 0px; padding: 0px 5px; line-height: 28px; display: block;
}
#qlink_suggest dd.active {
	background: rgb(239, 239, 239);
}
#qlink_suggest dd:hover {
	background: rgb(239, 239, 239); cursor: pointer;
}
.ask_second textarea {
	border: 1px solid rgb(128, 128, 128);
}
.ask_second #notes-preview {
	border: 1px solid rgb(128, 128, 128);
}
#notes-preview {
	-ms-overflow-x: hidden;
}
body .searchContainer {
	border: 1px solid rgb(221, 221, 221); width: 628px; display: none; =
position: absolute; min-height: 90px; background-color: rgb(255, 255, =
255);
}
body .searchContainer span {
	line-height: 30px;
}
body .searchContainer .sTitle {
	color: rgb(101, 101, 101); line-height: 30px; font-size: 14px; =
margin-right: 10px; margin-left: 10px; border-bottom-color: rgb(221, =
221, 221); border-bottom-width: 1px; border-bottom-style: solid;
}
body .searchContainer .sItem {
	padding: 0px 10px; cursor: pointer;
}
body .searchContainer .sItem .sfirst {
	width: 85%; text-align: left; color: rgb(153, 153, 153); overflow: =
hidden; font-size: 14px; float: left; white-space: nowrap; =
-ms-text-overflow: ellipsis;
}
body .searchContainer .sItem .ssecond {
	width: 15%; text-align: right; color: rgb(153, 153, 153); font-size: =
14px; float: right; white-space: nowrap;
}
body .searchContainer .sItemHover {
	color: rgb(255, 255, 255); background-color: rgb(204, 204, 204);
}
body .searchContainer .sItemHover .sfirst {
	color: rgb(255, 255, 255);
}
body .searchContainer .sItemHover .ssecond {
	color: rgb(255, 255, 255);
}
body .searchContainer .sFooter {
	border-top-color: rgb(221, 221, 221); border-top-width: 1px; =
border-top-style: solid; background-color: rgb(245, 245, 245);
}
body .searchContainer .sFooter .sFirstNewAsk {
	color: rgb(101, 101, 101); line-height: 27px; font-size: 14px; =
text-decoration: none; margin-right: 10px; float: right; cursor: =
pointer;
}
body .searchContainer .sFooter a:link {
	color: rgb(101, 101, 101);
}
.ask_second .searchContainer .sFooter a:visited {
	color: rgb(101, 101, 101);
}
body .searchContainer .sFooter a:hover {
	color: rgb(190, 26, 33);
}
body .searchContainer .sFooter a:focus {
	color: rgb(190, 26, 33);
}
#com-ask-float-block {
	background: url("../images/common_float_block.png") no-repeat 0px =
-318px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; width: 90px; height: 28px; right: 40px; bottom: 124px; =
color: rgb(255, 255, 255); line-height: 16px; position: fixed; z-index: =
9999999; cursor: pointer; min-width: 40px;
}
#com-ask-float-block:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-318px;
}
#com-app-float-block {
	background: url("../images/common_float_block.png") no-repeat 0px 0px; =
margin: 0px; padding: 0px; border-radius: 0px; border: 0px currentColor; =
width: 90px; height: 28px; right: 40px; bottom: 124px; color: rgb(255, =
255, 255); line-height: 16px; position: fixed; z-index: 999998; cursor: =
pointer; min-width: 40px;
}
#com-app-float-block:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
0px;
}
#com-appcode-float-block {
	background: url("../images/common_float_block.png") no-repeat 0px =
-198px rgb(255, 255, 255); margin: 0px; padding: 0px; border-radius: =
0px; border: 0px currentColor; width: 90px; height: 112px; right: 40px; =
bottom: 124px; color: rgb(255, 255, 255); line-height: 16px; position: =
fixed; z-index: 9999999; cursor: pointer; min-width: 40px;
}
#com-appcode-float-block:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-198px rgb(255, 255, 255);
}
#com-appcode-float-block:hover #appcode-close {
	background: url("../images/common_float_block.png") no-repeat -177px =
-201px rgb(255, 255, 255);
}
#com-appcode-float-block #appcode-close {
	background: url("../images/common_float_block.png") no-repeat -77px =
-201px; width: 10px; height: 10px; margin-top: 3px; margin-right: 3px; =
float: right; display: inline-block; cursor: pointer;
}
#com-quick-reply {
	background: url("../images/common_float_block.png") no-repeat 0px =
-33px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; width: 90px; height: 28px; right: 40px; bottom: 82px; =
color: rgb(255, 255, 255); line-height: 16px; position: fixed; z-index: =
9999999; cursor: pointer; min-width: 40px;
}
#com-quick-reply:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-33px;
}
#com-d-top-a {
	background: url("../images/common_float_block.png") no-repeat 0px =
-165px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; width: 90px; height: 28px; right: 40px; bottom: 40px; =
color: rgb(255, 255, 255); line-height: 16px; display: none; position: =
fixed; z-index: 9999999; cursor: pointer; min-width: 40px;
}
#com-d-top-a:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-165px;
}
#com-edu-call-center {
	background: url("../images/common_float_block.png") no-repeat 0px =
-132px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; width: 90px; height: 28px; right: 40px; bottom: 40px; =
color: rgb(255, 255, 255); line-height: 16px; position: fixed; z-index: =
9999999; cursor: pointer; min-width: 40px;
}
#com-edu-call-center:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-132px;
}
#com-quick-reply-bbs {
	background: url("../images/common_float_block.png") no-repeat 0px =
-33px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; width: 90px; height: 28px; right: 40px; bottom: 82px; =
color: rgb(255, 255, 255); line-height: 16px; position: fixed; z-index: =
9999999; cursor: pointer; min-width: 40px;
}
#com-quick-reply-bbs:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-33px;
}
#com-back-channel {
	background: url("../images/common_float_block.png") no-repeat 0px =
-66px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; width: 90px; height: 28px; right: 40px; bottom: 40px; =
color: rgb(255, 255, 255); line-height: 16px; position: fixed; z-index: =
9999999; cursor: pointer; min-width: 40px;
}
#com-back-channel:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-66px;
}
#com-back-home {
	background: url("../images/common_float_block.png") no-repeat 0px =
-99px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; width: 90px; height: 28px; right: 40px; bottom: 40px; =
color: rgb(255, 255, 255); line-height: 16px; position: fixed; z-index: =
9999999; cursor: pointer; min-width: 40px;
}
#com-back-home:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-99px;
}
#previw-button {
	background: url("../images/preview-img.png"); width: 44px; height: =
14px; margin-top: 12px; margin-right: 5px; float: right;
}
.editor-preview img {
	max-height: 200px; max-width: 80%;
}
#picture_dialog_form {
	top: 50%; width: 1px; height: 1px; overflow: hidden; position: fixed;
}
.editor-toolbar .icon-preview::before {
	content: "\f06e";
}
.editor-toolbar .active.icon-preview::before {
	content: "\f070";
}
.editor-toolbar .icon-info::before {
	content: "\f05a";
}
.editor-toolbar .icon-headline::before {
	font: bold 18px/24px "Times"; content: "H1"; font-size-adjust: none; =
font-stretch: normal;
}
.editor-toolbar .icon-heading::before {
	font: bold 18px/24px "Times"; content: "H2"; font-size-adjust: none; =
font-stretch: normal;
}
.editor-toolbar .icon-code {
	margin-right: 6px;
}
.editor-toolbar .icon-code::before {
	letter-spacing: -3px; font-weight: bold; content: "</>";
}
.pop_edit.ask_second .CodeMirror {
	width: 630px; height: 200px;
}
.CodeMirror {
	border: 1px solid rgb(238, 238, 238);
}
.CodeMirror-scroll {
	overflow: auto;
}
.CodeMirror-lines {
	padding: 4px 0px;
}
.CodeMirror pre {
	padding: 0px 4px;
}
.CodeMirror-scrollbar-filler {
	background-color: rgb(255, 255, 255);
}
.CodeMirror div.CodeMirror-cursor {
	border-left-color: rgb(0, 0, 0); border-left-width: 1px; =
border-left-style: solid; z-index: 3;
}
.CodeMirror div.CodeMirror-secondarycursor {
	border-left-color: rgb(192, 192, 192); border-left-width: 1px; =
border-left-style: solid;
}
.cm-keymap-fat-cursor.CodeMirror div.CodeMirror-cursor {
	background: rgb(119, 238, 119); border: 0px currentColor; width: auto; =
z-index: 1;
}
.cm-strong {
	color: rgb(136, 85, 68);
}
.cm-em {
	color: rgb(136, 85, 68);
}
.cm-s-paper .cm-keyword {
	color: rgb(85, 85, 85);
}
.cm-s-paper .cm-atom {
	color: rgb(127, 140, 141);
}
.cm-s-paper .cm-number {
	color: rgb(127, 140, 141);
}
.cm-s-paper .cm-def {
	color: rgb(0, 0, 255);
}
.cm-s-paper .cm-variable {
	color: rgb(0, 0, 0);
}
.cm-s-paper .cm-variable-2 {
	color: rgb(85, 136, 102);
}
.cm-s-paper .cm-variable-3 {
	color: rgb(0, 136, 85);
}
.cm-s-paper .cm-property {
	color: rgb(0, 0, 0);
}
.cm-s-paper .cm-operator {
	color: rgb(0, 0, 0);
}
.cm-s-paper .cm-comment {
	color: rgb(149, 149, 149);
}
.cm-s-paper .cm-string {
	color: rgb(68, 119, 238);
}
.cm-s-paper .cm-string-2 {
	color: rgb(255, 85, 0);
}
.cm-s-paper .cm-meta {
	color: rgb(85, 85, 85);
}
.cm-s-paper .cm-error {
	color: rgb(255, 0, 0);
}
.cm-s-paper .cm-qualifier {
	color: rgb(85, 85, 85);
}
.cm-s-paper .cm-builtin {
	color: rgb(85, 85, 85);
}
.cm-s-paper .cm-bracket {
	color: rgb(153, 153, 119);
}
.cm-s-paper .cm-tag {
	color: rgb(127, 140, 141);
}
.cm-s-paper .cm-attribute {
	color: rgb(127, 140, 141);
}
.cm-s-paper .cm-header {
	color: rgb(0, 0, 0);
}
.cm-s-paper .cm-quote {
	color: rgb(136, 136, 136);
}
.cm-s-paper .cm-hr {
	color: rgb(153, 153, 153);
}
.cm-s-paper .cm-link {
	color: rgb(85, 119, 136);
}
.cm-negative {
	color: rgb(221, 68, 68);
}
.cm-positive {
	color: rgb(34, 153, 34);
}
.cm-header {
	font-weight: bold;
}
.cm-strong {
	font-weight: bold;
}
.cm-em {
	font-style: italic;
}
.cm-link {
	text-decoration: underline;
}
.cm-invalidchar {
	color: rgb(255, 0, 0);
}
div.CodeMirror span.CodeMirror-matchingbracket {
	color: rgb(0, 255, 0);
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
	color: rgb(255, 34, 34);
}
.CodeMirror {
	overflow: hidden; position: relative;
}
.CodeMirror-scroll {
	height: 100%; padding-right: 30px; padding-bottom: 30px; margin-right: =
-30px; margin-bottom: -30px; position: relative;
}
.CodeMirror-sizer {
	position: relative;
}
.CodeMirror-vscrollbar {
	display: none; position: absolute; z-index: 6;
}
.CodeMirror-hscrollbar {
	display: none; position: absolute; z-index: 6;
}
.CodeMirror-scrollbar-filler {
	display: none; position: absolute; z-index: 6;
}
.CodeMirror-vscrollbar {
	top: 0px; right: 0px; -ms-overflow-x: hidden; -ms-overflow-y: scroll;
}
.CodeMirror-hscrollbar {
	left: 0px; bottom: 0px; -ms-overflow-x: scroll; -ms-overflow-y: hidden;
}
.CodeMirror-scrollbar-filler {
	right: 0px; bottom: 0px; z-index: 6;
}
.CodeMirror-lines {
	cursor: text;
}
.CodeMirror pre {
	border-width: 0px; margin: 0px; border-radius: 0px; color: inherit; =
line-height: inherit; overflow: visible; font-family: Consolas, Menlo, =
Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream =
Vera Sans Mono, Courier New, monospace, serif; font-size: inherit; =
white-space: pre-wrap; position: relative; z-index: 2; -ms-word-wrap: =
normal; -moz-border-radius: 0; -webkit-border-radius: 0; =
-o-border-radius: 0;
}
.CodeMirror ul {
	margin: auto !important; padding: inherit !important; =
list-style-position: inside !important;
}
.CodeMirror ol {
	margin: auto !important; padding: inherit !important; =
list-style-position: inside !important;
}
.CodeMirror li {
	margin: auto !important; padding: inherit !important; =
list-style-position: inside !important;
}
.CodeMirror ul {
=09
}
.CodeMirror ul li {
=09
}
.CodeMirror ol {
	list-style-type: decimal !important;
}
.CodeMirror ol li {
	list-style-type: decimal !important;
}
.CodeMirror-wrap pre {
	white-space: pre-wrap; -ms-word-break: normal; -ms-word-wrap: =
break-word;
}
.CodeMirror-linebackground {
	left: 0px; top: 0px; right: 0px; bottom: 0px; position: absolute; =
z-index: 0;
}
.CodeMirror-linewidget {
	overflow: auto; position: relative; z-index: 2;
}
.CodeMirror-widget {
	display: inline-block;
}
.CodeMirror-wrap .CodeMirror-scroll {
	-ms-overflow-x: hidden;
}
.CodeMirror-measure {
	width: 100%; height: 0px; overflow: hidden; visibility: hidden; =
position: absolute;
}
.CodeMirror-measure pre {
	position: static;
}
.CodeMirror div.CodeMirror-cursor {
	width: 0px; border-right-color: currentColor; border-right-width: =
medium; border-right-style: none; visibility: hidden; position: =
absolute;
}
.CodeMirror-focused div.CodeMirror-cursor {
	visibility: visible;
}
.CodeMirror-selected {
	background: rgb(217, 217, 217);
}
.CodeMirror-focused .CodeMirror-selected {
	background: rgb(189, 195, 199);
}
.cm-searching {
	background: rgba(255, 255, 0, 0.4);
}
@media print
{
.CodeMirror div.CodeMirror-cursor {
	visibility: hidden;
}
}
.editor-wrapper {
	font: 16px/1.62 "Helvetica Neue", "Xin Gothic", "Hiragino Sans GB", =
"WenQuanYi Micro Hei", "Microsoft YaHei", sans-serif; color: rgb(44, 62, =
80); font-size-adjust: none; font-stretch: normal;
}
.editor-wrapper input.title {
	font: 18px/normal "Helvetica Neue", "Xin Gothic", "Hiragino Sans GB", =
"WenQuanYi Micro Hei", "Microsoft YaHei", sans-serif; padding: 4px; =
border: currentColor; width: 100%; font-size-adjust: none; font-stretch: =
normal; opacity: 0.6;
}
.editor-toolbar {
	position: relative; opacity: 0.6; -ms-user-select: none; =
-webkit-user-select: none; -moz-user-select: none; -o-user-select: none; =
user-select: none;
}
.editor-toolbar::before {
	background: linear-gradient(45deg, rgb(249, 249, 249), rgb(189, 195, =
199), rgb(249, 249, 249)); height: 1px; display: block; content: " ";
}
.editor-toolbar::after {
	background: linear-gradient(45deg, rgb(249, 249, 249), rgb(189, 195, =
199), rgb(249, 249, 249)); height: 1px; display: block; content: " ";
}
.editor-toolbar::before {
	margin-bottom: 8px;
}
.editor-toolbar::after {
	margin-top: 8px;
}
.editor-wrapper input.title:hover {
	opacity: 0.8;
}
.editor-wrapper input.title:focus {
	opacity: 0.8;
}
.editor-toolbar:hover {
	opacity: 0.8;
}
.editor-toolbar a {
	margin: 0px 4px; border-radius: 3px; border: 1px solid transparent; =
width: 24px; height: 24px; text-align: center; color: rgb(44, 62, 80) =
!important; font-size: 16px; text-decoration: none !important; display: =
inline-block; cursor: pointer;
}
.editor-toolbar a:hover {
	background: rgb(252, 252, 252); border-color: rgb(149, 165, 166);
}
.editor-toolbar a.active {
	background: rgb(252, 252, 252); border-color: rgb(149, 165, 166);
}
.editor-toolbar a::before {
	line-height: 24px;
}
.editor-toolbar i.separator {
	margin: 0px 6px; width: 0px; color: transparent; text-indent: -10px; =
border-right-color: rgb(255, 255, 255); border-left-color: rgb(217, 217, =
217); border-right-width: 1px; border-left-width: 1px; =
border-right-style: solid; border-left-style: solid; display: =
inline-block;
}
.editor-toolbar i:first-child.separator {
	margin-left: 0px;
}
.editor-toolbar i:last-child.separator {
	margin-right: 0px;
}
.editor-toolbar a.icon-fullscreen {
	right: 0px; position: absolute;
}
.editor-statusbar {
	padding: 2px 5px 8px 0px; text-align: right; color: rgb(149, 150, 148); =
font-size: 12px;
}
.editor-statusbar span {
	margin-left: 1em; display: inline-block; min-width: 4em;
}
.editor-statusbar .lines::before {
	content: "lines: ";
}
.editor-statusbar .words::before {
	content: "words: ";
}
.editor-preview {
	background: rgb(252, 253, 254); padding: 5px; transition:left 0.2s; =
left: 100%; top: 0px; width: 100%; height: 100%; overflow: auto; =
position: absolute; z-index: 9999; box-sizing: border-box; =
-webkit-transition: left 0.2s ease; -moz-transition: left 0.2s ease;
}
.editor-preview-active {
	left: 0px;
}
.editor-preview > p {
	margin-top: 0px;
}
[class^=3D'icon-'] {
	font-family: FontAwesome; font-style: normal; font-weight: normal; =
text-decoration: inherit; -webkit-font-smoothing: antialiased;
}
[class*=3D' icon-'] {
	font-family: FontAwesome; font-style: normal; font-weight: normal; =
text-decoration: inherit; -webkit-font-smoothing: antialiased;
}
[class^=3D'icon-']::before {
	text-decoration: inherit; display: inline-block; speak: none;
}
[class*=3D' icon-']::before {
	text-decoration: inherit; display: inline-block; speak: none;
}
.icon-bold::before {
	content: "\f032";
}
.icon-italic::before {
	content: "\f033";
}
.icon-quote-left::before {
	content: "\f10d";
}
.icon-list-ul::before {
	content: "\f0ca";
}
.icon-list-ol::before {
	content: "\f0cb";
}
.icon-link::before {
	content: "\f0c1";
}
.icon-picture::before {
	content: "\f03e";
}
.icon-reply::before {
	content: "\f112";
}
.icon-share-alt::before {
	content: "\f064";
}
.icon-preview::before {
	content: "\f06e";
}

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/pubfooter/js/tracking.js

// Generated by CoffeeScript 1.9.3=0A=
=0A=
/*=0A=
@file =
=E5=89=8D=E7=AB=AF=E7=94=A8=E6=88=B7=E8=A1=8C=E4=B8=BA=E8=B7=9F=E8=B8=AA=0A=
@author <caoyu#at#csdn.net>=0A=
@version 20140610=0A=
 */=0A=
=0A=
(function() {=0A=
  var slice =3D [].slice;=0A=
=0A=
  (function(definition, undef) {=0A=
    var $, exports, global, i, t;=0A=
    global =3D this;=0A=
    $ =3D global.jQuery;=0A=
    exports =3D {};=0A=
    definition(global, exports, $);=0A=
    if (global.csdn =3D=3D=3D undef) {=0A=
      global.csdn =3D exports;=0A=
    }=0A=
    for (i in exports) {=0A=
      global[i] =3D global.csdn[i] =3D exports[i];=0A=
    }=0A=
    t =3D exports.tracking;=0A=
    t({=0A=
      '': [t.baseParams, t.tos, t.sessionId],=0A=
      'bbs.csdn.net': t.tags('/topics/', 'div.tag span'),=0A=
      'blog.csdn.net': t.tags('/article/details/', 'div.tag2box a'),=0A=
      'ask.csdn.net': t.tags('/questions/', 'div.tag_data a.tag span'),=0A=
      'download.csdn.net': t.tags('/detail/', 'div.info =
a[href^=3D"/tag/"]'),=0A=
      'www.csdn.net': [t.tags('/article/', 'div.tag a'), t.cmsPid],=0A=
      'www.csto.com': t.tags('/p/', 'span.tech a'),=0A=
      'www.iteye.com': t.tags('/topic/', '#topic_tags a')=0A=
    });=0A=
  })(function(global, exports, $) {=0A=
    var iarr =3D [], _key=3D0;=0A=
    var crossdomainGet, doc, domReady, flush, fns, hack, loaded, loc, =
protocol, querySelectorAll, testEl, topDomain, tracking;=0A=
    doc =3D global.document;=0A=
    loc =3D global.location;=0A=
    protocol =3D loc.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';=0A=
    fns =3D [];=0A=
    testEl =3D doc.documentElement;=0A=
    hack =3D testEl.doScroll;=0A=
    loaded =3D (hack ? /^loaded|^c/ : =
/^loaded|c/).test(doc['readyState']);=0A=
    flush =3D function() {=0A=
      var f;=0A=
      loaded =3D 1;=0A=
      while (f =3D fns.shift()) {=0A=
        f();=0A=
      }=0A=
    };=0A=
    if (typeof doc.addEventListener =3D=3D=3D "function") {=0A=
      doc.addEventListener('DOMContentLoaded', function() {=0A=
        doc.removeEventListener('DOMContentLoaded', arguments.callee, =
false);=0A=
        flush();=0A=
      });=0A=
    }=0A=
    if (hack) {=0A=
      doc.attachEvent('onreadystatechange', function() {=0A=
        if (/^c/.test(doc.readyState)) {=0A=
          doc.detachEvent('onreadystatechange', arguments.callee);=0A=
          flush();=0A=
        }=0A=
      });=0A=
    }=0A=
    domReady =3D hack ? function(fn) {=0A=
      if (global.self !=3D=3D global.top) {=0A=
        if (loaded) {=0A=
          return fn();=0A=
        } else {=0A=
          return fns.push(fn);=0A=
        }=0A=
      } else {=0A=
        try {=0A=
          testEl.doScroll('left');=0A=
        } catch (_error) {=0A=
          global.setTimeout(function() {=0A=
            domReady(fn);=0A=
          }, 50);=0A=
          return;=0A=
        }=0A=
        fn();=0A=
      }=0A=
    } : function(fn) {=0A=
      if (loaded) {=0A=
        fn();=0A=
      } else {=0A=
        fns.push(fn);=0A=
      }=0A=
    };=0A=
    topDomain =3D function(d) {=0A=
      return /\.?([a-z0-9\-]+\.[a-z0-9\-]+)(:\d+)?$/.exec(d)[1];=0A=
    };=0A=
=0A=
    /*=0A=
    =
=E5=AF=B9=E5=A4=96=E5=85=AC=E5=BC=80=E7=9A=84=E8=B7=9F=E8=B8=AA=E5=87=BD=E6=
=95=B0tracking=0A=
    @param {Object} opts =
=E5=AE=9A=E4=B9=89=E4=BA=86=E4=B8=8D=E5=90=8C=E5=9F=9F=E5=90=8D=E4=B8=8B=E8=
=A6=81=E6=94=B6=E9=9B=86=E7=9A=84=E4=BF=A1=E6=81=AF=0A=
     */=0A=
    exports.tracking =3D tracking =3D function(opts) {=0A=
      domReady(function() {=0A=
        var data, i, j, k, len, len1, opt, ref;=0A=
        data =3D {};=0A=
        ref =3D [opts[loc.host], opts['']];=0A=
        for (j =3D 0, len =3D ref.length; j < len; j++) {=0A=
          opt =3D ref[j];=0A=
          if (opt) {=0A=
            if (typeof opt =3D=3D=3D 'function') {=0A=
              opt(data);=0A=
            } else {=0A=
              for (k =3D 0, len1 =3D opt.length; k < len1; k++) {=0A=
                i =3D opt[k];=0A=
                if (typeof i =3D=3D=3D "function") {=0A=
                  i(data);=0A=
                }=0A=
              }=0A=
            }=0A=
          }=0A=
        }=0A=
        crossdomainGet(data);=0A=
      });=0A=
    };=0A=
=0A=
    /*=0A=
    =
=E9=99=84=E5=8A=A0=E5=9F=BA=E6=9C=AC=E7=9A=84=E5=8F=82=E6=95=B0=E5=88=B0=E6=
=95=B0=E6=8D=AE=E4=B8=8A=EF=BC=8C=E5=8C=85=E6=8B=ACreferrer user_name =
oid pid x-acl-token=0A=
     */=0A=
    tracking.baseParams =3D function(data) {=0A=
      var ref, ref1, ref2, ref3, ref4;=0A=
      data.user_name =3D /iteye.com$/.test(loc.host) ? ((ref =3D =
/>=E6=AC=A2=E8=BF=8E([^<]+)<\/a>/.exec((ref1 =3D =
doc.getElementById('user_nav')) !=3D null ? ref1.innerHTML : void 0)) =
!=3D null ? ref[1] : void 0) || '' : ((ref2 =3D /(; =
)?(UserName)=3D([^;]+)/.exec(doc.cookie)) !=3D null ? ref2[3] : void 0) =
|| '';=0A=
      data['x-acl-token'] =3D 'status_js_dkuyqthzbajmncbsb_token';=0A=
      if (!data.pid) {=0A=
        data.pid =3D /iteye.com$/.test(loc.host) ? 'iteye' : =
doc.body.getAttribute('data-pid') || ((ref3 =3D =
/(\w+)\.\w+\.\w+$/.exec(loc.host)) !=3D null ? ref3[1] : void 0);=0A=
      }=0A=
      data.oid =3D ((ref4 =3D querySelectorAll('.h-entry .p-author')[0]) =
!=3D null ? ref4.innerHTML.replace(/^\s+|\s+$/g, '') : void 0) || '';=0A=
      return data.referrer =3D doc.referrer;=0A=
    };=0A=
    tracking.sessionId =3D function(data) {=0A=
      var ref, sid;=0A=
      sid =3D (ref =3D =
/\bdc_session_id=3D([^;]*)(?:$|;)/.exec(doc.cookie)) !=3D null ? ref[1] =
: void 0;=0A=
      if (!/^https?:\/\/([\w-]+\.)*csdn\.net\//.test(doc.referrer)) {=0A=
        sid =3D void 0;=0A=
      }=0A=
      if (sid =3D=3D=3D void 0 || !/^\d+$/.test(sid)) {=0A=
        sid =3D +new Date();=0A=
      }=0A=
      doc.cookie =3D "dc_session_id=3D" + sid + " ; path=3D/ ; =
domain=3D." + (topDomain(loc.host));=0A=
      return data.session_id =3D "" + sid;=0A=
    };=0A=
=0A=
    /*=0A=
    =
=E9=99=84=E5=8A=A0=E4=B8=8A=E4=B8=80=E9=A1=B5=E9=9D=A2=E5=8F=8A=E5=81=9C=E7=
=95=99=E6=97=B6=E9=97=B4=E5=88=B0=E6=95=B0=E6=8D=AE=E4=B8=8A=0A=
     */=0A=
    tracking.tos =3D function(data) {=0A=
      var e, now, ref, t, tos;=0A=
      now =3D +new Date() / 1000 | 0;=0A=
      t =3D (ref =3D /\bdc_tos=3D([^;]*)(?:$|;)/.exec(doc.cookie)) !=3D =
null ? ref[1] : void 0;=0A=
      try {=0A=
        tos =3D now - parseInt(t, 36);=0A=
      } catch (_error) {=0A=
        e =3D _error;=0A=
        tos =3D -1;=0A=
      }=0A=
      doc.cookie =3D "dc_tos=3D" + (now.toString(36)) + " ; expires=3D" =
+ (new Date((now + 4 * 60 * 60) * 1000).toGMTString()) + " ; max-age=3D" =
+ (4 * 60 * 60) + " ; path=3D/ ; domain=3D." + (topDomain(loc.host));=0A=
      return data.tos =3D tos;=0A=
    };=0A=
=0A=
    /*=0A=
    =
=E8=BF=94=E5=9B=9E=E9=99=84=E5=8A=A0tag=E5=8F=82=E6=95=B0=E5=88=B0=E6=95=B0=
=E6=8D=AE=E4=B8=8A=E7=9A=84=E5=87=BD=E6=95=B0=EF=BC=8C=E5=8F=AA=E5=9C=A8=E6=
=8C=87=E5=AE=9A=E7=9A=84path=E4=B8=AD=E7=94=9F=E6=95=88=EF=BC=8C=E5=85=B7=
=E4=BD=93=E7=9A=84tags=E7=94=B1selectors=E6=8C=87=E5=AE=9A=0A=
    @param {String/RegExp} path =
=E8=A6=81=E5=8C=B9=E9=85=8D=E7=9A=84=E5=9C=B0=E5=9D=80=E8=B7=AF=E5=BE=84=E7=
=89=87=E6=AE=B5=0A=
    @param {Array[String/Function]} selectors =
tag=E7=9A=84=E9=80=89=E6=8B=A9=E5=99=A8=E6=88=96=E8=80=85=E6=98=AF=E8=BF=94=
=E5=9B=9Etag=E6=95=B0=E7=BB=84=E7=9A=84=E5=87=BD=E6=95=B0=E5=88=97=E8=A1=A8=0A=
     */=0A=
    tracking.tags =3D function() {=0A=
      var path, selectors;=0A=
      path =3D arguments[0], selectors =3D 2 <=3D arguments.length ? =
slice.call(arguments, 1) : [];=0A=
      return function(data) {=0A=
        var e, eles, i, j, k, l, len, len1, len2, ref, result, sel, t;=0A=
        if (typeof path =3D=3D=3D 'string' && =
!~loc.pathname.indexOf(path) || path instanceof RegExp && =
!path.test(loc.pathname)) {=0A=
          return;=0A=
        }=0A=
        eles =3D [];=0A=
        for (j =3D 0, len =3D selectors.length; j < len; j++) {=0A=
          sel =3D selectors[j];=0A=
          ref =3D (typeof sel =3D=3D=3D 'string' ? querySelectorAll(sel) =
: (typeof sel =3D=3D=3D "function" ? sel() : void 0) || []);=0A=
          for (k =3D 0, len1 =3D ref.length; k < len1; k++) {=0A=
            i =3D ref[k];=0A=
            eles.push(i);=0A=
          }=0A=
        }=0A=
        result =3D {};=0A=
        for (l =3D 0, len2 =3D eles.length; l < len2; l++) {=0A=
          e =3D eles[l];=0A=
          result[e.innerHTML.replace(/^\s+|\s+$/g, '')] =3D 1;=0A=
        }=0A=
        data.tag =3D ((function() {=0A=
          var results;=0A=
          results =3D [];=0A=
          for (t in result) {=0A=
            results.push(t);=0A=
          }=0A=
          return results;=0A=
        })()).join();=0A=
      };=0A=
    };=0A=
=0A=
    /*=0A=
    =
=E9=99=84=E5=8A=A0pid=E5=8F=82=E6=95=B0=E5=88=B0=E6=95=B0=E6=8D=AE=E4=B8=8A=
=E7=9A=84=E5=87=BD=E6=95=B0=EF=BC=8C=E9=92=88=E5=AF=B9 =
www.csdn.net/article/ =
=E4=B8=8B=E7=9A=84=E6=96=87=E7=AB=A0=E9=A1=B5=E6=8E=A2=E6=B5=8B=E7=9C=9F=E5=
=AE=9Epid=0A=
     */=0A=
    tracking.cmsPid =3D function(data) {=0A=
      if (loc.pathname.indexOf('/article/') =3D=3D=3D -1) {=0A=
        return;=0A=
      }=0A=
      try {=0A=
        return data.pid =3D querySelectorAll('.brea_nav > =
a')[1].hostname.match(/(\w+)\.\w+\.\w+$/)[1];=0A=
      } catch (_error) {=0A=
=0A=
      }=0A=
    };=0A=
=0A=
    /*=0A=
    =
=E4=BD=BF=E7=94=A8CSS=E9=80=89=E6=8B=A9=E5=99=A8=E6=A3=80=E7=B4=A2=E5=AF=B9=
=E5=BA=94=E7=9A=84DOM=E5=85=83=E7=B4=A0=0A=
    @param {String} selector - CSS=E9=80=89=E6=8B=A9=E5=99=A8=0A=
    @returns {Array[HTMLElement]} =
HTML=E5=85=83=E7=B4=A0=E9=9B=86=E5=90=88=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=B5=
=8F=E8=A7=88=E5=99=A8=E4=B8=8D=E6=94=AF=E6=8C=81=E4=BD=BF=E7=94=A8CSS=E9=80=
=89=E6=8B=A9=E5=99=A8=E6=9F=A5=E6=89=BE=E5=B0=86=E8=BF=94=E5=9B=9E =
undefined=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=89=BE=E4=B8=8D=E5=88=B0=E4=BB=BB=E4=
=BD=95=E5=85=83=E7=B4=A0=E8=BF=94=E5=9B=9E0=E9=95=BF=E5=BA=A6=E7=9A=84=E8=
=BF=91=E4=BC=BC=E6=95=B0=E7=BB=84=0A=
     */=0A=
    tracking.querySelectorAll =3D querySelectorAll =3D =
function(selector) {=0A=
      return (typeof doc.querySelectorAll =3D=3D=3D "function" ? =
doc.querySelectorAll(selector) : void 0) || (typeof $ =3D=3D=3D =
"function" ? $(selector) : void 0) || global.Prototype && (typeof =
global.$$ =3D=3D=3D "function" ? global.$$(selector) : void 0) || [];=0A=
    };=0A=
=0A=
    /*=0A=
    =E5=8F=91=E9=80=81=E8=B7=A8=E5=9F=9FHTTP GET=E8=AF=B7=E6=B1=82=0A=
    @param {String} url - =
=E8=AF=B7=E6=B1=82=E7=9A=84Url=EF=BC=8C=E5=BF=BD=E7=95=A5=E5=B0=86=E4=BD=BF=
=E7=94=A8=E9=BB=98=E8=AE=A4=E7=9A=84=E8=A1=8C=E4=B8=BA=E8=B7=9F=E8=B8=AA=E5=
=9C=B0=E5=9D=80=0A=
    @param {Object} data - =
=E8=AF=B7=E6=B1=82=E8=A6=81=E6=8F=90=E4=BA=A4=E7=9A=84=E6=95=B0=E6=8D=AE=0A=
     */=0A=
    return tracking.crossdomainGet =3D crossdomainGet =3D function(data) =
{=0A=
      var i, p;=0A=
      data[Math.random() * 10000 | 0] =3D '';=0A=
=0A=
      var ik =3D iarr.push(new Image()) - 1;=0A=
      iarr[ik].onload =3D iarr[ik].onerror =3D function() {=0A=
        var _a =3D ik;=0A=
        iarr[_a].onload =3D iarr[_a].onerror =3D null;=0A=
        iarr[_a].removeAttribute("src");=0A=
        return iarr[_a] =3D null;=0A=
      };=0A=
      //i =3D new Image();=0A=
      //i.onload =3D i.onerror =3D function() {=0A=
      //  i.onload =3D i.onerror =3D null;=0A=
      //  i.removeAttribute('src');=0A=
      //  i =3D null;=0A=
      //};=0A=
      iarr[ik].src =3D protocol + '//dc.csdn.net/track?' + ((function() {=0A=
        var results;=0A=
        results =3D [];=0A=
        for (p in data) {=0A=
          results.push(encodeURIComponent(p) + '=3D' + =
encodeURIComponent(data[p]));=0A=
        }=0A=
        return results;=0A=
      })()).join('&');=0A=
    };=0A=
  });=0A=
=0A=
}).call(this);=0A=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/jquery.js

/*!
 * Note: While Microsoft is not the author of this file, Microsoft is
 * offering you a license subject to the terms of the Microsoft Software
 * License Terms for Microsoft ASP.NET Model View Controller 3.
 * Microsoft reserves all other rights. The notices below are provided
 * for informational purposes only and are not the license terms under
 * which Microsoft distributed this file.
 *
 * jQuery JavaScript Library v1.4.4
 * http://jquery.com/
 *
 * Copyright 2010, John Resig
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2010, The Dojo Foundation
 *
 * Date: Thu Nov 11 19:04:53 2010 -0500
 */
(function(E,B){function =
ka(a,b,d){if(d=3D=3D=3DB&&a.nodeType=3D=3D=3D1){d=3Da.getAttribute("data-=
"+b);if(typeof =
d=3D=3D=3D"string"){try{d=3Dd=3D=3D=3D"true"?true:d=3D=3D=3D"false"?false=
:d=3D=3D=3D"null"?null:!c.isNaN(d)?parseFloat(d):Ja.test(d)?c.parseJSON(d=
):d}catch(e){}c.data(a,b,d)}else d=3DB}return d}function U(){return =
false}function ca(){return true}function la(a,b,d){d[0].type=3Da;return =
c.event.handle.apply(b,d)}function Ka(a){var =
b,d,e,f,h,l,k,o,x,r,A,C=3D[];f=3D[];h=3Dc.data(this,this.nodeType?"events=
":"__events__");if(typeof h=3D=3D=3D"function")h=3D
h.events;if(!(a.liveFired=3D=3D=3Dthis||!h||!h.live||a.button&&a.type=3D=3D=
=3D"click")){if(a.namespace)A=3DRegExp("(^|\\.)"+a.namespace.split(".").j=
oin("\\.(?:.*\\.)?")+"(\\.|$)");a.liveFired=3Dthis;var =
J=3Dh.live.slice(0);for(k=3D0;k<J.length;k++){h=3DJ[k];h.origType.replace=
(X,"")=3D=3D=3Da.type?f.push(h.selector):J.splice(k--,1)}f=3Dc(a.target).=
closest(f,a.currentTarget);o=3D0;for(x=3Df.length;o<x;o++){r=3Df[o];for(k=
=3D0;k<J.length;k++){h=3DJ[k];if(r.selector=3D=3D=3Dh.selector&&(!A||A.te=
st(h.namespace))){l=3Dr.elem;e=3Dnull;if(h.preType=3D=3D=3D"mouseenter"||=

h.preType=3D=3D=3D"mouseleave"){a.type=3Dh.preType;e=3Dc(a.relatedTarget)=
.closest(h.selector)[0]}if(!e||e!=3D=3Dl)C.push({elem:l,handleObj:h,level=
:r.level})}}}o=3D0;for(x=3DC.length;o<x;o++){f=3DC[o];if(d&&f.level>d)bre=
ak;a.currentTarget=3Df.elem;a.data=3Df.handleObj.data;a.handleObj=3Df.han=
dleObj;A=3Df.handleObj.origHandler.apply(f.elem,arguments);if(A=3D=3D=3Df=
alse||a.isPropagationStopped()){d=3Df.level;if(A=3D=3D=3Dfalse)b=3Dfalse;=
if(a.isImmediatePropagationStopped())break}}return b}}function =
Y(a,b){return(a&&a!=3D=3D"*"?a+".":"")+b.replace(La,
"`").replace(Ma,"&")}function ma(a,b,d){if(c.isFunction(b))return =
c.grep(a,function(f,h){return!!b.call(f,h,f)=3D=3D=3Dd});else =
if(b.nodeType)return c.grep(a,function(f){return =
f=3D=3D=3Db=3D=3D=3Dd});else if(typeof b=3D=3D=3D"string"){var =
e=3Dc.grep(a,function(f){return =
f.nodeType=3D=3D=3D1});if(Na.test(b))return c.filter(b,e,!d);else =
b=3Dc.filter(b,e)}return c.grep(a,function(f){return =
c.inArray(f,b)>=3D0=3D=3D=3Dd})}function na(a,b){var =
d=3D0;b.each(function(){if(this.nodeName=3D=3D=3D(a[d]&&a[d].nodeName)){v=
ar e=3Dc.data(a[d++]),f=3Dc.data(this,
e);if(e=3De&&e.events){delete f.handle;f.events=3D{};for(var h in =
e)for(var l in =
e[h])c.event.add(this,h,e[h][l],e[h][l].data)}}})}function =
Oa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalE=
val(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.re=
moveChild(b)}function oa(a,b,d){var =
e=3Db=3D=3D=3D"width"?a.offsetWidth:a.offsetHeight;if(d=3D=3D=3D"border")=
return =
e;c.each(b=3D=3D=3D"width"?Pa:Qa,function(){d||(e-=3DparseFloat(c.css(a,"=
padding"+this))||0);if(d=3D=3D=3D"margin")e+=3DparseFloat(c.css(a,
"margin"+this))||0;else =
e-=3DparseFloat(c.css(a,"border"+this+"Width"))||0});return e}function =
da(a,b,d,e){if(c.isArray(b)&&b.length)c.each(b,function(f,h){d||Ra.test(a=
)?e(a,h):da(a+"["+(typeof =
h=3D=3D=3D"object"||c.isArray(h)?f:"")+"]",h,d,e)});else =
if(!d&&b!=3Dnull&&typeof =
b=3D=3D=3D"object")c.isEmptyObject(b)?e(a,""):c.each(b,function(f,h){da(a=
+"["+f+"]",h,d,e)});else e(a,b)}function S(a,b){var =
d=3D{};c.each(pa.concat.apply([],pa.slice(0,b)),function(){d[this]=3Da});=
return d}function qa(a){if(!ea[a]){var b=3Dc("<"+
a+">").appendTo("body"),d=3Db.css("display");b.remove();if(d=3D=3D=3D"non=
e"||d=3D=3D=3D"")d=3D"block";ea[a]=3Dd}return ea[a]}function =
fa(a){return =
c.isWindow(a)?a:a.nodeType=3D=3D=3D9?a.defaultView||a.parentWindow:false}=
var t=3DE.document,c=3Dfunction(){function =
a(){if(!b.isReady){try{t.documentElement.doScroll("left")}catch(j){setTim=
eout(a,1);return}b.ready()}}var b=3Dfunction(j,s){return new =
b.fn.init(j,s)},d=3DE.jQuery,e=3DE.$,f,h=3D/^(?:[^<]*(<[\w\W]+>)[^>]*$|#(=
[\w\-]+)$)/,l=3D/\S/,k=3D/^\s+/,o=3D/\s+$/,x=3D/\W/,r=3D/\d/,A=3D/^<(\w+)=
\s*\/?>(?:<\/\1>)?$/,
C=3D/^[\],:{}\s]*$/,J=3D/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,w=3D/"[^"\\=
\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,I=3D/(?:^|:|,=
)(?:\s*\[)+/g,L=3D/(webkit)[ \/]([\w.]+)/,g=3D/(opera)(?:.*version)?[ =
\/]([\w.]+)/,i=3D/(msie) ([\w.]+)/,n=3D/(mozilla)(?:.*? =
rv:([\w.]+))?/,m=3Dnavigator.userAgent,p=3Dfalse,q=3D[],u,y=3DObject.prot=
otype.toString,F=3DObject.prototype.hasOwnProperty,M=3DArray.prototype.pu=
sh,N=3DArray.prototype.slice,O=3DString.prototype.trim,D=3DArray.prototyp=
e.indexOf,R=3D{};b.fn=3Db.prototype=3D{init:function(j,
s){var v,z,H;if(!j)return =
this;if(j.nodeType){this.context=3Dthis[0]=3Dj;this.length=3D1;return =
this}if(j=3D=3D=3D"body"&&!s&&t.body){this.context=3Dt;this[0]=3Dt.body;t=
his.selector=3D"body";this.length=3D1;return this}if(typeof =
j=3D=3D=3D"string")if((v=3Dh.exec(j))&&(v[1]||!s))if(v[1]){H=3Ds?s.ownerD=
ocument||s:t;if(z=3DA.exec(j))if(b.isPlainObject(s)){j=3D[t.createElement=
(z[1])];b.fn.attr.call(j,s,true)}else =
j=3D[H.createElement(z[1])];else{z=3Db.buildFragment([v[1]],[H]);j=3D(z.c=
acheable?z.fragment.cloneNode(true):z.fragment).childNodes}return =
b.merge(this,
j)}else{if((z=3Dt.getElementById(v[2]))&&z.parentNode){if(z.id!=3D=3Dv[2]=
)return =
f.find(j);this.length=3D1;this[0]=3Dz}this.context=3Dt;this.selector=3Dj;=
return this}else =
if(!s&&!x.test(j)){this.selector=3Dj;this.context=3Dt;j=3Dt.getElementsBy=
TagName(j);return b.merge(this,j)}else =
return!s||s.jquery?(s||f).find(j):b(s).find(j);else =
if(b.isFunction(j))return =
f.ready(j);if(j.selector!=3D=3DB){this.selector=3Dj.selector;this.context=
=3Dj.context}return =
b.makeArray(j,this)},selector:"",jquery:"1.4.4",length:0,size:function(){=
return this.length},
toArray:function(){return N.call(this,0)},get:function(j){return =
j=3D=3Dnull?this.toArray():j<0?this.slice(j)[0]:this[j]},pushStack:functi=
on(j,s,v){var =
z=3Db();b.isArray(j)?M.apply(z,j):b.merge(z,j);z.prevObject=3Dthis;z.cont=
ext=3Dthis.context;if(s=3D=3D=3D"find")z.selector=3Dthis.selector+(this.s=
elector?" ":"")+v;else =
if(s)z.selector=3Dthis.selector+"."+s+"("+v+")";return =
z},each:function(j,s){return =
b.each(this,j,s)},ready:function(j){b.bindReady();if(b.isReady)j.call(t,b=
);else q&&q.push(j);return this},eq:function(j){return j=3D=3D=3D
-1?this.slice(j):this.slice(j,+j+1)},first:function(){return =
this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return =
this.pushStack(N.apply(this,arguments),"slice",N.call(arguments).join(","=
))},map:function(j){return =
this.pushStack(b.map(this,function(s,v){return =
j.call(s,v,s)}))},end:function(){return =
this.prevObject||b(null)},push:M,sort:[].sort,splice:[].splice};b.fn.init=
.prototype=3Db.fn;b.extend=3Db.fn.extend=3Dfunction(){var =
j,s,v,z,H,G=3Darguments[0]||{},K=3D1,Q=3Darguments.length,ga=3Dfalse;
if(typeof =
G=3D=3D=3D"boolean"){ga=3DG;G=3Darguments[1]||{};K=3D2}if(typeof =
G!=3D=3D"object"&&!b.isFunction(G))G=3D{};if(Q=3D=3D=3DK){G=3Dthis;--K}fo=
r(;K<Q;K++)if((j=3Darguments[K])!=3Dnull)for(s in =
j){v=3DG[s];z=3Dj[s];if(G!=3D=3Dz)if(ga&&z&&(b.isPlainObject(z)||(H=3Db.i=
sArray(z)))){if(H){H=3Dfalse;v=3Dv&&b.isArray(v)?v:[]}else =
v=3Dv&&b.isPlainObject(v)?v:{};G[s]=3Db.extend(ga,v,z)}else =
if(z!=3D=3DB)G[s]=3Dz}return =
G};b.extend({noConflict:function(j){E.$=3De;if(j)E.jQuery=3Dd;return =
b},isReady:false,readyWait:1,ready:function(j){j=3D=3D=3Dtrue&&b.readyWai=
t--;
if(!b.readyWait||j!=3D=3Dtrue&&!b.isReady){if(!t.body)return =
setTimeout(b.ready,1);b.isReady=3Dtrue;if(!(j!=3D=3Dtrue&&--b.readyWait>0=
))if(q){var =
s=3D0,v=3Dq;for(q=3Dnull;j=3Dv[s++];)j.call(t,b);b.fn.trigger&&b(t).trigg=
er("ready").unbind("ready")}}},bindReady:function(){if(!p){p=3Dtrue;if(t.=
readyState=3D=3D=3D"complete")return =
setTimeout(b.ready,1);if(t.addEventListener){t.addEventListener("DOMConte=
ntLoaded",u,false);E.addEventListener("load",b.ready,false)}else =
if(t.attachEvent){t.attachEvent("onreadystatechange",u);E.attachEvent("on=
load",
b.ready);var =
j=3Dfalse;try{j=3DE.frameElement=3D=3Dnull}catch(s){}t.documentElement.do=
Scroll&&j&&a()}}},isFunction:function(j){return =
b.type(j)=3D=3D=3D"function"},isArray:Array.isArray||function(j){return =
b.type(j)=3D=3D=3D"array"},isWindow:function(j){return j&&typeof =
j=3D=3D=3D"object"&&"setInterval"in j},isNaN:function(j){return =
j=3D=3Dnull||!r.test(j)||isNaN(j)},type:function(j){return =
j=3D=3Dnull?String(j):R[y.call(j)]||"object"},isPlainObject:function(j){i=
f(!j||b.type(j)!=3D=3D"object"||j.nodeType||b.isWindow(j))return =
false;if(j.constructor&&
!F.call(j,"constructor")&&!F.call(j.constructor.prototype,"isPrototypeOf"=
))return false;for(var s in j);return =
s=3D=3D=3DB||F.call(j,s)},isEmptyObject:function(j){for(var s in =
j)return false;return true},error:function(j){throw =
j;},parseJSON:function(j){if(typeof j!=3D=3D"string"||!j)return =
null;j=3Db.trim(j);if(C.test(j.replace(J,"@").replace(w,"]").replace(I,""=
)))return E.JSON&&E.JSON.parse?E.JSON.parse(j):(new Function("return =
"+j))();else b.error("Invalid JSON: =
"+j)},noop:function(){},globalEval:function(j){if(j&&
l.test(j)){var =
s=3Dt.getElementsByTagName("head")[0]||t.documentElement,v=3Dt.createElem=
ent("script");v.type=3D"text/javascript";if(b.support.scriptEval)v.append=
Child(t.createTextNode(j));else =
v.text=3Dj;s.insertBefore(v,s.firstChild);s.removeChild(v)}},nodeName:fun=
ction(j,s){return =
j.nodeName&&j.nodeName.toUpperCase()=3D=3D=3Ds.toUpperCase()},each:functi=
on(j,s,v){var =
z,H=3D0,G=3Dj.length,K=3DG=3D=3D=3DB||b.isFunction(j);if(v)if(K)for(z in =
j){if(s.apply(j[z],v)=3D=3D=3Dfalse)break}else =
for(;H<G;){if(s.apply(j[H++],v)=3D=3D=3Dfalse)break}else if(K)for(z in =
j){if(s.call(j[z],
z,j[z])=3D=3D=3Dfalse)break}else =
for(v=3Dj[0];H<G&&s.call(v,H,v)!=3D=3Dfalse;v=3Dj[++H]);return =
j},trim:O?function(j){return =
j=3D=3Dnull?"":O.call(j)}:function(j){return =
j=3D=3Dnull?"":j.toString().replace(k,"").replace(o,"")},makeArray:functi=
on(j,s){var v=3Ds||[];if(j!=3Dnull){var =
z=3Db.type(j);j.length=3D=3Dnull||z=3D=3D=3D"string"||z=3D=3D=3D"function=
"||z=3D=3D=3D"regexp"||b.isWindow(j)?M.call(v,j):b.merge(v,j)}return =
v},inArray:function(j,s){if(s.indexOf)return s.indexOf(j);for(var =
v=3D0,z=3Ds.length;v<z;v++)if(s[v]=3D=3D=3Dj)return =
v;return-1},merge:function(j,
s){var v=3Dj.length,z=3D0;if(typeof s.length=3D=3D=3D"number")for(var =
H=3Ds.length;z<H;z++)j[v++]=3Ds[z];else =
for(;s[z]!=3D=3DB;)j[v++]=3Ds[z++];j.length=3Dv;return =
j},grep:function(j,s,v){var z=3D[],H;v=3D!!v;for(var =
G=3D0,K=3Dj.length;G<K;G++){H=3D!!s(j[G],G);v!=3D=3DH&&z.push(j[G])}retur=
n z},map:function(j,s,v){for(var =
z=3D[],H,G=3D0,K=3Dj.length;G<K;G++){H=3Ds(j[G],G,v);if(H!=3Dnull)z[z.len=
gth]=3DH}return =
z.concat.apply([],z)},guid:1,proxy:function(j,s,v){if(arguments.length=3D=
=3D=3D2)if(typeof s=3D=3D=3D"string"){v=3Dj;j=3Dv[s];s=3DB}else =
if(s&&!b.isFunction(s)){v=3D
s;s=3DB}if(!s&&j)s=3Dfunction(){return =
j.apply(v||this,arguments)};if(j)s.guid=3Dj.guid=3Dj.guid||s.guid||b.guid=
++;return s},access:function(j,s,v,z,H,G){var K=3Dj.length;if(typeof =
s=3D=3D=3D"object"){for(var Q in s)b.access(j,Q,s[Q],z,H,v);return =
j}if(v!=3D=3DB){z=3D!G&&z&&b.isFunction(v);for(Q=3D0;Q<K;Q++)H(j[Q],s,z?v=
.call(j[Q],Q,H(j[Q],s)):v,G);return j}return =
K?H(j[0],s):B},now:function(){return(new =
Date).getTime()},uaMatch:function(j){j=3Dj.toLowerCase();j=3DL.exec(j)||g=
.exec(j)||i.exec(j)||j.indexOf("compatible")<0&&n.exec(j)||
[];return{browser:j[1]||"",version:j[2]||"0"}},browser:{}});b.each("Boole=
an Number String Function Array Date RegExp Object".split(" =
"),function(j,s){R["[object =
"+s+"]"]=3Ds.toLowerCase()});m=3Db.uaMatch(m);if(m.browser){b.browser[m.b=
rowser]=3Dtrue;b.browser.version=3Dm.version}if(b.browser.webkit)b.browse=
r.safari=3Dtrue;if(D)b.inArray=3Dfunction(j,s){return =
D.call(s,j)};if(!/\s/.test("\u00a0")){k=3D/^[\s\xA0]+/;o=3D/[\s\xA0]+$/}f=
=3Db(t);if(t.addEventListener)u=3Dfunction(){t.removeEventListener("DOMCo=
ntentLoaded",u,
false);b.ready()};else =
if(t.attachEvent)u=3Dfunction(){if(t.readyState=3D=3D=3D"complete"){t.det=
achEvent("onreadystatechange",u);b.ready()}};return =
E.jQuery=3DE.$=3Db}();(function(){c.support=3D{};var =
a=3Dt.documentElement,b=3Dt.createElement("script"),d=3Dt.createElement("=
div"),e=3D"script"+c.now();d.style.display=3D"none";d.innerHTML=3D"   =
<link/><table></table><a href=3D'/a' =
style=3D'color:red;float:left;opacity:.55;'>a</a><input =
type=3D'checkbox'/>";var =
f=3Dd.getElementsByTagName("*"),h=3Dd.getElementsByTagName("a")[0],l=3Dt.=
createElement("select"),
k=3Dl.appendChild(t.createElement("option"));if(!(!f||!f.length||!h)){c.s=
upport=3D{leadingWhitespace:d.firstChild.nodeType=3D=3D=3D3,tbody:!d.getE=
lementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("=
link").length,style:/red/.test(h.getAttribute("style")),hrefNormalized:h.=
getAttribute("href")=3D=3D=3D"/a",opacity:/^0.55$/.test(h.style.opacity),=
cssFloat:!!h.style.cssFloat,checkOn:d.getElementsByTagName("input")[0].va=
lue=3D=3D=3D"on",optSelected:k.selected,deleteExpando:true,optDisabled:fa=
lse,checkClone:false,
scriptEval:false,noCloneEvent:true,boxModel:null,inlineBlockNeedsLayout:f=
alse,shrinkWrapBlocks:false,reliableHiddenOffsets:true};l.disabled=3Dtrue=
;c.support.optDisabled=3D!k.disabled;b.type=3D"text/javascript";try{b.app=
endChild(t.createTextNode("window."+e+"=3D1;"))}catch(o){}a.insertBefore(=
b,a.firstChild);if(E[e]){c.support.scriptEval=3Dtrue;delete =
E[e]}try{delete =
b.test}catch(x){c.support.deleteExpando=3Dfalse}a.removeChild(b);if(d.att=
achEvent&&d.fireEvent){d.attachEvent("onclick",function =
r(){c.support.noCloneEvent=3D
false;d.detachEvent("onclick",r)});d.cloneNode(true).fireEvent("onclick")=
}d=3Dt.createElement("div");d.innerHTML=3D"<input type=3D'radio' =
name=3D'radiotest' =
checked=3D'checked'/>";a=3Dt.createDocumentFragment();a.appendChild(d.fir=
stChild);c.support.checkClone=3Da.cloneNode(true).cloneNode(true).lastChi=
ld.checked;c(function(){var =
r=3Dt.createElement("div");r.style.width=3Dr.style.paddingLeft=3D"1px";t.=
body.appendChild(r);c.boxModel=3Dc.support.boxModel=3Dr.offsetWidth=3D=3D=
=3D2;if("zoom"in r.style){r.style.display=3D"inline";r.style.zoom=3D
1;c.support.inlineBlockNeedsLayout=3Dr.offsetWidth=3D=3D=3D2;r.style.disp=
lay=3D"";r.innerHTML=3D"<div =
style=3D'width:4px;'></div>";c.support.shrinkWrapBlocks=3Dr.offsetWidth!=3D=
=3D2}r.innerHTML=3D"<table><tr><td =
style=3D'padding:0;display:none'></td><td>t</td></tr></table>";var =
A=3Dr.getElementsByTagName("td");c.support.reliableHiddenOffsets=3DA[0].o=
ffsetHeight=3D=3D=3D0;A[0].style.display=3D"";A[1].style.display=3D"none"=
;c.support.reliableHiddenOffsets=3Dc.support.reliableHiddenOffsets&&A[0].=
offsetHeight=3D=3D=3D0;r.innerHTML=3D"";t.body.removeChild(r).style.displ=
ay=3D
"none"});a=3Dfunction(r){var A=3Dt.createElement("div");r=3D"on"+r;var =
C=3Dr in A;if(!C){A.setAttribute(r,"return;");C=3Dtypeof =
A[r]=3D=3D=3D"function"}return =
C};c.support.submitBubbles=3Da("submit");c.support.changeBubbles=3Da("cha=
nge");a=3Db=3Dd=3Df=3Dh=3Dnull}})();var =
ra=3D{},Ja=3D/^(?:\{.*\}|\[.*\])$/;c.extend({cache:{},uuid:0,expando:"jQu=
ery"+c.now(),noData:{embed:true,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444=
553540000",applet:true},data:function(a,b,d){if(c.acceptData(a)){a=3Da=3D=
=3DE?ra:a;var e=3Da.nodeType,f=3De?a[c.expando]:null,h=3D
c.cache;if(!(e&&!f&&typeof =
b=3D=3D=3D"string"&&d=3D=3D=3DB)){if(e)f||(a[c.expando]=3Df=3D++c.uuid);e=
lse h=3Da;if(typeof b=3D=3D=3D"object")if(e)h[f]=3Dc.extend(h[f],b);else =
c.extend(h,b);else =
if(e&&!h[f])h[f]=3D{};a=3De?h[f]:h;if(d!=3D=3DB)a[b]=3Dd;return typeof =
b=3D=3D=3D"string"?a[b]:a}}},removeData:function(a,b){if(c.acceptData(a))=
{a=3Da=3D=3DE?ra:a;var =
d=3Da.nodeType,e=3Dd?a[c.expando]:a,f=3Dc.cache,h=3Dd?f[e]:e;if(b){if(h){=
delete h[b];d&&c.isEmptyObject(h)&&c.removeData(a)}}else =
if(d&&c.support.deleteExpando)delete a[c.expando];else =
if(a.removeAttribute)a.removeAttribute(c.expando);
else if(d)delete f[e];else for(var l in a)delete =
a[l]}},acceptData:function(a){if(a.nodeName){var =
b=3Dc.noData[a.nodeName.toLowerCase()];if(b)return!(b=3D=3D=3Dtrue||a.get=
Attribute("classid")!=3D=3Db)}return =
true}});c.fn.extend({data:function(a,b){var d=3Dnull;if(typeof =
a=3D=3D=3D"undefined"){if(this.length){var =
e=3Dthis[0].attributes,f;d=3Dc.data(this[0]);for(var =
h=3D0,l=3De.length;h<l;h++){f=3De[h].name;if(f.indexOf("data-")=3D=3D=3D0=
){f=3Df.substr(5);ka(this[0],f,d[f])}}}return d}else if(typeof =
a=3D=3D=3D"object")return this.each(function(){c.data(this,
a)});var =
k=3Da.split(".");k[1]=3Dk[1]?"."+k[1]:"";if(b=3D=3D=3DB){d=3Dthis.trigger=
Handler("getData"+k[1]+"!",[k[0]]);if(d=3D=3D=3DB&&this.length){d=3Dc.dat=
a(this[0],a);d=3Dka(this[0],a,d)}return =
d=3D=3D=3DB&&k[1]?this.data(k[0]):d}else return this.each(function(){var =
o=3Dc(this),x=3D[k[0],b];o.triggerHandler("setData"+k[1]+"!",x);c.data(th=
is,a,b);o.triggerHandler("changeData"+k[1]+"!",x)})},removeData:function(=
a){return =
this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a=
,b,d){if(a){b=3D(b||"fx")+"queue";var e=3D
c.data(a,b);if(!d)return =
e||[];if(!e||c.isArray(d))e=3Dc.data(a,b,c.makeArray(d));else =
e.push(d);return e}},dequeue:function(a,b){b=3Db||"fx";var =
d=3Dc.queue(a,b),e=3Dd.shift();if(e=3D=3D=3D"inprogress")e=3Dd.shift();if=
(e){b=3D=3D=3D"fx"&&d.unshift("inprogress");e.call(a,function(){c.dequeue=
(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof =
a!=3D=3D"string"){b=3Da;a=3D"fx"}if(b=3D=3D=3DB)return =
c.queue(this[0],a);return this.each(function(){var =
d=3Dc.queue(this,a,b);a=3D=3D=3D"fx"&&d[0]!=3D=3D"inprogress"&&c.dequeue(=
this,a)})},dequeue:function(a){return =
this.each(function(){c.dequeue(this,
a)})},delay:function(a,b){a=3Dc.fx?c.fx.speeds[a]||a:a;b=3Db||"fx";return=
 this.queue(b,function(){var =
d=3Dthis;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(=
a){return this.queue(a||"fx",[])}});var =
sa=3D/[\n\t]/g,ha=3D/\s+/,Sa=3D/\r/g,Ta=3D/^(?:href|src|style)$/,Ua=3D/^(=
?:button|input)$/i,Va=3D/^(?:button|input|object|select|textarea)$/i,Wa=3D=
/^a(?:rea)?$/i,ta=3D/^(?:radio|checkbox)$/i;c.props=3D{"for":"htmlFor","c=
lass":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"=
cellSpacing",rowspan:"rowSpan",
colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameB=
order"};c.fn.extend({attr:function(a,b){return =
c.access(this,a,b,true,c.attr)},removeAttr:function(a){return =
this.each(function(){c.attr(this,a,"");this.nodeType=3D=3D=3D1&&this.remo=
veAttribute(a)})},addClass:function(a){if(c.isFunction(a))return =
this.each(function(x){var =
r=3Dc(this);r.addClass(a.call(this,x,r.attr("class")))});if(a&&typeof =
a=3D=3D=3D"string")for(var =
b=3D(a||"").split(ha),d=3D0,e=3Dthis.length;d<e;d++){var =
f=3Dthis[d];if(f.nodeType=3D=3D=3D
1)if(f.className){for(var h=3D" "+f.className+" =
",l=3Df.className,k=3D0,o=3Db.length;k<o;k++)if(h.indexOf(" "+b[k]+" =
")<0)l+=3D" "+b[k];f.className=3Dc.trim(l)}else f.className=3Da}return =
this},removeClass:function(a){if(c.isFunction(a))return =
this.each(function(o){var =
x=3Dc(this);x.removeClass(a.call(this,o,x.attr("class")))});if(a&&typeof =
a=3D=3D=3D"string"||a=3D=3D=3DB)for(var =
b=3D(a||"").split(ha),d=3D0,e=3Dthis.length;d<e;d++){var =
f=3Dthis[d];if(f.nodeType=3D=3D=3D1&&f.className)if(a){for(var h=3D(" =
"+f.className+" ").replace(sa," "),
l=3D0,k=3Db.length;l<k;l++)h=3Dh.replace(" "+b[l]+" "," =
");f.className=3Dc.trim(h)}else f.className=3D""}return =
this},toggleClass:function(a,b){var d=3Dtypeof a,e=3Dtypeof =
b=3D=3D=3D"boolean";if(c.isFunction(a))return this.each(function(f){var =
h=3Dc(this);h.toggleClass(a.call(this,f,h.attr("class"),b),b)});return =
this.each(function(){if(d=3D=3D=3D"string")for(var =
f,h=3D0,l=3Dc(this),k=3Db,o=3Da.split(ha);f=3Do[h++];){k=3De?k:!l.hasClas=
s(f);l[k?"addClass":"removeClass"](f)}else =
if(d=3D=3D=3D"undefined"||d=3D=3D=3D"boolean"){this.className&&c.data(thi=
s,
"__className__",this.className);this.className=3Dthis.className||a=3D=3D=3D=
false?"":c.data(this,"__className__")||""}})},hasClass:function(a){a=3D" =
"+a+" ";for(var b=3D0,d=3Dthis.length;b<d;b++)if((" =
"+this[b].className+" ").replace(sa," ").indexOf(a)>-1)return =
true;return false},val:function(a){if(!arguments.length){var =
b=3Dthis[0];if(b){if(c.nodeName(b,"option")){var =
d=3Db.attributes.value;return!d||d.specified?b.value:b.text}if(c.nodeName=
(b,"select")){var e=3Db.selectedIndex;d=3D[];var =
f=3Db.options;b=3Db.type=3D=3D=3D"select-one";
if(e<0)return null;var h=3Db?e:0;for(e=3Db?e+1:f.length;h<e;h++){var =
l=3Df[h];if(l.selected&&(c.support.optDisabled?!l.disabled:l.getAttribute=
("disabled")=3D=3D=3Dnull)&&(!l.parentNode.disabled||!c.nodeName(l.parent=
Node,"optgroup"))){a=3Dc(l).val();if(b)return a;d.push(a)}}return =
d}if(ta.test(b.type)&&!c.support.checkOn)return =
b.getAttribute("value")=3D=3D=3Dnull?"on":b.value;return(b.value||"").rep=
lace(Sa,"")}return B}var k=3Dc.isFunction(a);return =
this.each(function(o){var =
x=3Dc(this),r=3Da;if(this.nodeType=3D=3D=3D1){if(k)r=3D
a.call(this,o,x.val());if(r=3D=3Dnull)r=3D"";else if(typeof =
r=3D=3D=3D"number")r+=3D"";else =
if(c.isArray(r))r=3Dc.map(r,function(C){return =
C=3D=3Dnull?"":C+""});if(c.isArray(r)&&ta.test(this.type))this.checked=3D=
c.inArray(x.val(),r)>=3D0;else if(c.nodeName(this,"select")){var =
A=3Dc.makeArray(r);c("option",this).each(function(){this.selected=3Dc.inA=
rray(c(this).val(),A)>=3D0});if(!A.length)this.selectedIndex=3D-1}else =
this.value=3Dr}})}});c.extend({attrFn:{val:true,css:true,html:true,text:t=
rue,data:true,width:true,height:true,offset:true},
attr:function(a,b,d,e){if(!a||a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8)=
return B;if(e&&b in c.attrFn)return =
c(a)[b](d);e=3Da.nodeType!=3D=3D1||!c.isXMLDoc(a);var =
f=3Dd!=3D=3DB;b=3De&&c.props[b]||b;var h=3DTa.test(b);if((b in =
a||a[b]!=3D=3DB)&&e&&!h){if(f){b=3D=3D=3D"type"&&Ua.test(a.nodeName)&&a.p=
arentNode&&c.error("type property can't be =
changed");if(d=3D=3D=3Dnull)a.nodeType=3D=3D=3D1&&a.removeAttribute(b);el=
se a[b]=3Dd}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return =
a.getAttributeNode(b).nodeValue;if(b=3D=3D=3D"tabIndex")return(b=3Da.getA=
ttributeNode("tabIndex"))&&
b.specified?b.value:Va.test(a.nodeName)||Wa.test(a.nodeName)&&a.href?0:B;=
return =
a[b]}if(!c.support.style&&e&&b=3D=3D=3D"style"){if(f)a.style.cssText=3D""=
+d;return =
a.style.cssText}f&&a.setAttribute(b,""+d);if(!a.attributes[b]&&a.hasAttri=
bute&&!a.hasAttribute(b))return =
B;a=3D!c.support.hrefNormalized&&e&&h?a.getAttribute(b,2):a.getAttribute(=
b);return a=3D=3D=3Dnull?B:a}});var =
X=3D/\.(.*)$/,ia=3D/^(?:textarea|input|select)$/i,La=3D/\./g,Ma=3D/ =
/g,Xa=3D/[^\w\s.|`]/g,Ya=3Dfunction(a){return =
a.replace(Xa,"\\$&")},ua=3D{focusin:0,focusout:0};
c.event=3D{add:function(a,b,d,e){if(!(a.nodeType=3D=3D=3D3||a.nodeType=3D=
=3D=3D8)){if(c.isWindow(a)&&a!=3D=3DE&&!a.frameElement)a=3DE;if(d=3D=3D=3D=
false)d=3DU;else if(!d)return;var =
f,h;if(d.handler){f=3Dd;d=3Df.handler}if(!d.guid)d.guid=3Dc.guid++;if(h=3D=
c.data(a)){var =
l=3Da.nodeType?"events":"__events__",k=3Dh[l],o=3Dh.handle;if(typeof =
k=3D=3D=3D"function"){o=3Dk.handle;k=3Dk.events}else =
if(!k){a.nodeType||(h[l]=3Dh=3Dfunction(){});h.events=3Dk=3D{}}if(!o)h.ha=
ndle=3Do=3Dfunction(){return typeof =
c!=3D=3D"undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,
arguments):B};o.elem=3Da;b=3Db.split(" ");for(var =
x=3D0,r;l=3Db[x++];){h=3Df?c.extend({},f):{handler:d,data:e};if(l.indexOf=
(".")>-1){r=3Dl.split(".");l=3Dr.shift();h.namespace=3Dr.slice(0).sort().=
join(".")}else{r=3D[];h.namespace=3D""}h.type=3Dl;if(!h.guid)h.guid=3Dd.g=
uid;var =
A=3Dk[l],C=3Dc.event.special[l]||{};if(!A){A=3Dk[l]=3D[];if(!C.setup||C.s=
etup.call(a,e,r,o)=3D=3D=3Dfalse)if(a.addEventListener)a.addEventListener=
(l,o,false);else =
a.attachEvent&&a.attachEvent("on"+l,o)}if(C.add){C.add.call(a,h);if(!h.ha=
ndler.guid)h.handler.guid=3D
d.guid}A.push(h);c.event.global[l]=3Dtrue}a=3Dnull}}},global:{},remove:fu=
nction(a,b,d,e){if(!(a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8)){if(d=3D=
=3D=3Dfalse)d=3DU;var =
f,h,l=3D0,k,o,x,r,A,C,J=3Da.nodeType?"events":"__events__",w=3Dc.data(a),=
I=3Dw&&w[J];if(w&&I){if(typeof =
I=3D=3D=3D"function"){w=3DI;I=3DI.events}if(b&&b.type){d=3Db.handler;b=3D=
b.type}if(!b||typeof =
b=3D=3D=3D"string"&&b.charAt(0)=3D=3D=3D"."){b=3Db||"";for(f in =
I)c.event.remove(a,f+b)}else{for(b=3Db.split(" =
");f=3Db[l++];){r=3Df;k=3Df.indexOf(".")<0;o=3D[];if(!k){o=3Df.split(".")=
;f=3Do.shift();x=3DRegExp("(^|\\.)"+
c.map(o.slice(0).sort(),Ya).join("\\.(?:.*\\.)?")+"(\\.|$)")}if(A=3DI[f])=
if(d){r=3Dc.event.special[f]||{};for(h=3De||0;h<A.length;h++){C=3DA[h];if=
(d.guid=3D=3D=3DC.guid){if(k||x.test(C.namespace)){e=3D=3Dnull&&A.splice(=
h--,1);r.remove&&r.remove.call(a,C)}if(e!=3Dnull)break}}if(A.length=3D=3D=
=3D0||e!=3Dnull&&A.length=3D=3D=3D1){if(!r.teardown||r.teardown.call(a,o)=
=3D=3D=3Dfalse)c.removeEvent(a,f,w.handle);delete I[f]}}else =
for(h=3D0;h<A.length;h++){C=3DA[h];if(k||x.test(C.namespace)){c.event.rem=
ove(a,r,C.handler,h);A.splice(h--,1)}}}if(c.isEmptyObject(I)){if(b=3D
w.handle)b.elem=3Dnull;delete w.events;delete w.handle;if(typeof =
w=3D=3D=3D"function")c.removeData(a,J);else =
c.isEmptyObject(w)&&c.removeData(a)}}}}},trigger:function(a,b,d,e){var =
f=3Da.type||a;if(!e){a=3Dtypeof =
a=3D=3D=3D"object"?a[c.expando]?a:c.extend(c.Event(f),a):c.Event(f);if(f.=
indexOf("!")>=3D0){a.type=3Df=3Df.slice(0,-1);a.exclusive=3Dtrue}if(!d){a=
.stopPropagation();c.event.global[f]&&c.each(c.cache,function(){this.even=
ts&&this.events[f]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.node=
Type=3D=3D=3D3||d.nodeType=3D=3D=3D
8)return =
B;a.result=3DB;a.target=3Dd;b=3Dc.makeArray(b);b.unshift(a)}a.currentTarg=
et=3Dd;(e=3Dd.nodeType?c.data(d,"handle"):(c.data(d,"__events__")||{}).ha=
ndle)&&e.apply(d,b);e=3Dd.parentNode||d.ownerDocument;try{if(!(d&&d.nodeN=
ame&&c.noData[d.nodeName.toLowerCase()]))if(d["on"+f]&&d["on"+f].apply(d,=
b)=3D=3D=3Dfalse){a.result=3Dfalse;a.preventDefault()}}catch(h){}if(!a.is=
PropagationStopped()&&e)c.event.trigger(a,b,e,true);else =
if(!a.isDefaultPrevented()){var l;e=3Da.target;var =
k=3Df.replace(X,""),o=3Dc.nodeName(e,"a")&&k=3D=3D=3D
"click",x=3Dc.event.special[k]||{};if((!x._default||x._default.call(d,a)=3D=
=3D=3Dfalse)&&!o&&!(e&&e.nodeName&&c.noData[e.nodeName.toLowerCase()])){t=
ry{if(e[k]){if(l=3De["on"+k])e["on"+k]=3Dnull;c.event.triggered=3Dtrue;e[=
k]()}}catch(r){}if(l)e["on"+k]=3Dl;c.event.triggered=3Dfalse}}},handle:fu=
nction(a){var b,d,e,f;d=3D[];var =
h=3Dc.makeArray(arguments);a=3Dh[0]=3Dc.event.fix(a||E.event);a.currentTa=
rget=3Dthis;b=3Da.type.indexOf(".")<0&&!a.exclusive;if(!b){e=3Da.type.spl=
it(".");a.type=3De.shift();d=3De.slice(0).sort();e=3DRegExp("(^|\\.)"+
d.join("\\.(?:.*\\.)?")+"(\\.|$)")}a.namespace=3Da.namespace||d.join(".")=
;f=3Dc.data(this,this.nodeType?"events":"__events__");if(typeof =
f=3D=3D=3D"function")f=3Df.events;d=3D(f||{})[a.type];if(f&&d){d=3Dd.slic=
e(0);f=3D0;for(var l=3Dd.length;f<l;f++){var =
k=3Dd[f];if(b||e.test(k.namespace)){a.handler=3Dk.handler;a.data=3Dk.data=
;a.handleObj=3Dk;k=3Dk.handler.apply(this,h);if(k!=3D=3DB){a.result=3Dk;i=
f(k=3D=3D=3Dfalse){a.preventDefault();a.stopPropagation()}}if(a.isImmedia=
tePropagationStopped())break}}}return a.result},props:"altKey attrChange =
attrName bubbles button cancelable charCode clientX clientY ctrlKey =
currentTarget data detail eventPhase fromElement handler keyCode layerX =
layerY metaKey newValue offsetX offsetY pageX pageY prevValue =
relatedNode relatedTarget screenX screenY shiftKey srcElement target =
toElement view wheelDelta which".split(" "),
fix:function(a){if(a[c.expando])return a;var =
b=3Da;a=3Dc.Event(b);for(var =
d=3Dthis.props.length,e;d;){e=3Dthis.props[--d];a[e]=3Db[e]}if(!a.target)=
a.target=3Da.srcElement||t;if(a.target.nodeType=3D=3D=3D3)a.target=3Da.ta=
rget.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=3Da.fr=
omElement=3D=3D=3Da.target?a.toElement:a.fromElement;if(a.pageX=3D=3Dnull=
&&a.clientX!=3Dnull){b=3Dt.documentElement;d=3Dt.body;a.pageX=3Da.clientX=
+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft|=
|0);a.pageY=3Da.clientY+(b&&b.scrollTop||
d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(a.which=3D=3Dnu=
ll&&(a.charCode!=3Dnull||a.keyCode!=3Dnull))a.which=3Da.charCode!=3Dnull?=
a.charCode:a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=3Da.ctrlKey;if(!a=
.which&&a.button!=3D=3DB)a.which=3Da.button&1?1:a.button&2?3:a.button&4?2=
:0;return =
a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.no=
op},live:{add:function(a){c.event.add(this,Y(a.origType,a.selector),c.ext=
end({},a,{handler:Ka,guid:a.handler.guid}))},remove:function(a){c.event.r=
emove(this,
Y(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,d){if(c.is=
Window(this))this.onbeforeunload=3Dd},teardown:function(a,b){if(this.onbe=
foreunload=3D=3D=3Db)this.onbeforeunload=3Dnull}}}};c.removeEvent=3Dt.rem=
oveEventListener?function(a,b,d){a.removeEventListener&&a.removeEventList=
ener(b,d,false)}:function(a,b,d){a.detachEvent&&a.detachEvent("on"+b,d)};=
c.Event=3Dfunction(a){if(!this.preventDefault)return new =
c.Event(a);if(a&&a.type){this.originalEvent=3Da;this.type=3Da.type}else =
this.type=3Da;this.timeStamp=3D
c.now();this[c.expando]=3Dtrue};c.Event.prototype=3D{preventDefault:funct=
ion(){this.isDefaultPrevented=3Dca;var =
a=3Dthis.originalEvent;if(a)if(a.preventDefault)a.preventDefault();else =
a.returnValue=3Dfalse},stopPropagation:function(){this.isPropagationStopp=
ed=3Dca;var =
a=3Dthis.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.can=
celBubble=3Dtrue}},stopImmediatePropagation:function(){this.isImmediatePr=
opagationStopped=3Dca;this.stopPropagation()},isDefaultPrevented:U,isProp=
agationStopped:U,isImmediatePropagationStopped:U};
var va=3Dfunction(a){var =
b=3Da.relatedTarget;try{for(;b&&b!=3D=3Dthis;)b=3Db.parentNode;if(b!=3D=3D=
this){a.type=3Da.data;c.event.handle.apply(this,arguments)}}catch(d){}},w=
a=3Dfunction(a){a.type=3Da.data;c.event.handle.apply(this,arguments)};c.e=
ach({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.=
special[a]=3D{setup:function(d){c.event.add(this,b,d&&d.selector?wa:va,a)=
},teardown:function(d){c.event.remove(this,b,d&&d.selector?wa:va)}}});if(=
!c.support.submitBubbles)c.event.special.submit=3D{setup:function(){if(th=
is.nodeName.toLowerCase()!=3D=3D
"form"){c.event.add(this,"click.specialSubmit",function(a){var =
b=3Da.target,d=3Db.type;if((d=3D=3D=3D"submit"||d=3D=3D=3D"image")&&c(b).=
closest("form").length){a.liveFired=3DB;return =
la("submit",this,arguments)}});c.event.add(this,"keypress.specialSubmit",=
function(a){var =
b=3Da.target,d=3Db.type;if((d=3D=3D=3D"text"||d=3D=3D=3D"password")&&c(b)=
.closest("form").length&&a.keyCode=3D=3D=3D13){a.liveFired=3DB;return =
la("submit",this,arguments)}})}else return =
false},teardown:function(){c.event.remove(this,".specialSubmit")}};if(!c.=
support.changeBubbles){var V,
xa=3Dfunction(a){var =
b=3Da.type,d=3Da.value;if(b=3D=3D=3D"radio"||b=3D=3D=3D"checkbox")d=3Da.c=
hecked;else =
if(b=3D=3D=3D"select-multiple")d=3Da.selectedIndex>-1?c.map(a.options,fun=
ction(e){return e.selected}).join("-"):"";else =
if(a.nodeName.toLowerCase()=3D=3D=3D"select")d=3Da.selectedIndex;return =
d},Z=3Dfunction(a,b){var =
d=3Da.target,e,f;if(!(!ia.test(d.nodeName)||d.readOnly)){e=3Dc.data(d,"_c=
hange_data");f=3Dxa(d);if(a.type!=3D=3D"focusout"||d.type!=3D=3D"radio")c=
.data(d,"_change_data",f);if(!(e=3D=3D=3DB||f=3D=3D=3De))if(e!=3Dnull||f)=
{a.type=3D"change";a.liveFired=3D
B;return =
c.event.trigger(a,b,d)}}};c.event.special.change=3D{filters:{focusout:Z,b=
eforedeactivate:Z,click:function(a){var =
b=3Da.target,d=3Db.type;if(d=3D=3D=3D"radio"||d=3D=3D=3D"checkbox"||b.nod=
eName.toLowerCase()=3D=3D=3D"select")return =
Z.call(this,a)},keydown:function(a){var =
b=3Da.target,d=3Db.type;if(a.keyCode=3D=3D=3D13&&b.nodeName.toLowerCase()=
!=3D=3D"textarea"||a.keyCode=3D=3D=3D32&&(d=3D=3D=3D"checkbox"||d=3D=3D=3D=
"radio")||d=3D=3D=3D"select-multiple")return =
Z.call(this,a)},beforeactivate:function(a){a=3Da.target;c.data(a,"_change=
_data",xa(a))}},setup:function(){if(this.type=3D=3D=3D
"file")return false;for(var a in =
V)c.event.add(this,a+".specialChange",V[a]);return =
ia.test(this.nodeName)},teardown:function(){c.event.remove(this,".special=
Change");return =
ia.test(this.nodeName)}};V=3Dc.event.special.change.filters;V.focus=3DV.b=
eforeactivate}t.addEventListener&&c.each({focus:"focusin",blur:"focusout"=
},function(a,b){function d(e){e=3Dc.event.fix(e);e.type=3Db;return =
c.event.trigger(e,null,e.target)}c.event.special[b]=3D{setup:function(){u=
a[b]++=3D=3D=3D0&&t.addEventListener(a,d,true)},teardown:function(){--ua[=
b]=3D=3D=3D
0&&t.removeEventListener(a,d,true)}}});c.each(["bind","one"],function(a,b=
){c.fn[b]=3Dfunction(d,e,f){if(typeof d=3D=3D=3D"object"){for(var h in =
d)this[b](h,e,d[h],f);return =
this}if(c.isFunction(e)||e=3D=3D=3Dfalse){f=3De;e=3DB}var =
l=3Db=3D=3D=3D"one"?c.proxy(f,function(o){c(this).unbind(o,l);return =
f.apply(this,arguments)}):f;if(d=3D=3D=3D"unload"&&b!=3D=3D"one")this.one=
(d,e,f);else{h=3D0;for(var =
k=3Dthis.length;h<k;h++)c.event.add(this[h],d,l,e)}return =
this}});c.fn.extend({unbind:function(a,b){if(typeof =
a=3D=3D=3D"object"&&!a.preventDefault)for(var d in a)this.unbind(d,
a[d]);else{d=3D0;for(var =
e=3Dthis.length;d<e;d++)c.event.remove(this[d],a,b)}return =
this},delegate:function(a,b,d,e){return =
this.live(b,d,e,a)},undelegate:function(a,b,d){return =
arguments.length=3D=3D=3D0?this.unbind("live"):this.die(b,null,d,a)},trig=
ger:function(a,b){return =
this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function=
(a,b){if(this[0]){var =
d=3Dc.Event(a);d.preventDefault();d.stopPropagation();c.event.trigger(d,b=
,this[0]);return d.result}},toggle:function(a){for(var =
b=3Darguments,d=3D
1;d<b.length;)c.proxy(a,b[d++]);return =
this.click(c.proxy(a,function(e){var =
f=3D(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.gu=
id,f+1);e.preventDefault();return =
b[f].apply(this,arguments)||false}))},hover:function(a,b){return =
this.mouseenter(a).mouseleave(b||a)}});var =
ya=3D{focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"=
mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=3Dfunction(d,e,f,h=
){var =
l,k=3D0,o,x,r=3Dh||this.selector;h=3Dh?this:c(this.context);if(typeof =
d=3D=3D=3D
"object"&&!d.preventDefault){for(l in d)h[b](l,e,d[l],r);return =
this}if(c.isFunction(e)){f=3De;e=3DB}for(d=3D(d||"").split(" =
");(l=3Dd[k++])!=3Dnull;){o=3DX.exec(l);x=3D"";if(o){x=3Do[0];l=3Dl.repla=
ce(X,"")}if(l=3D=3D=3D"hover")d.push("mouseenter"+x,"mouseleave"+x);else{=
o=3Dl;if(l=3D=3D=3D"focus"||l=3D=3D=3D"blur"){d.push(ya[l]+x);l+=3Dx}else=
 l=3D(ya[l]||l)+x;if(b=3D=3D=3D"live"){x=3D0;for(var =
A=3Dh.length;x<A;x++)c.event.add(h[x],"live."+Y(l,r),{data:e,selector:r,h=
andler:f,origType:l,origHandler:f,preType:o})}else =
h.unbind("live."+Y(l,r),f)}}return this}});
c.each("blur focus focusin focusout load resize scroll unload click =
dblclick mousedown mouseup mousemove mouseover mouseout mouseenter =
mouseleave change select submit keydown keypress keyup error".split(" =
"),function(a,b){c.fn[b]=3Dfunction(d,e){if(e=3D=3Dnull){e=3Dd;d=3Dnull}r=
eturn =
arguments.length>0?this.bind(b,d,e):this.trigger(b)};if(c.attrFn)c.attrFn=
[b]=3Dtrue});E.attachEvent&&!E.addEventListener&&c(E).bind("unload",funct=
ion(){for(var a in =
c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}c=
atch(b){}});
(function(){function a(g,i,n,m,p,q){p=3D0;for(var =
u=3Dm.length;p<u;p++){var y=3Dm[p];if(y){var =
F=3Dfalse;for(y=3Dy[g];y;){if(y.sizcache=3D=3D=3Dn){F=3Dm[y.sizset];break=
}if(y.nodeType=3D=3D=3D1&&!q){y.sizcache=3Dn;y.sizset=3Dp}if(y.nodeName.t=
oLowerCase()=3D=3D=3Di){F=3Dy;break}y=3Dy[g]}m[p]=3DF}}}function =
b(g,i,n,m,p,q){p=3D0;for(var u=3Dm.length;p<u;p++){var =
y=3Dm[p];if(y){var =
F=3Dfalse;for(y=3Dy[g];y;){if(y.sizcache=3D=3D=3Dn){F=3Dm[y.sizset];break=
}if(y.nodeType=3D=3D=3D1){if(!q){y.sizcache=3Dn;y.sizset=3Dp}if(typeof =
i!=3D=3D"string"){if(y=3D=3D=3Di){F=3Dtrue;break}}else if(k.filter(i,
[y]).length>0){F=3Dy;break}}y=3Dy[g]}m[p]=3DF}}}var =
d=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[=
\]'"]+)+\]|\\.|[^ =
>+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,e=3D0,f=3DObject.prototype=
.toString,h=3Dfalse,l=3Dtrue;[0,0].sort(function(){l=3Dfalse;return =
0});var k=3Dfunction(g,i,n,m){n=3Dn||[];var =
p=3Di=3Di||t;if(i.nodeType!=3D=3D1&&i.nodeType!=3D=3D9)return[];if(!g||ty=
peof g!=3D=3D"string")return n;var =
q,u,y,F,M,N=3Dtrue,O=3Dk.isXML(i),D=3D[],R=3Dg;do{d.exec("");if(q=3Dd.exe=
c(R)){R=3Dq[3];D.push(q[1]);if(q[2]){F=3Dq[3];
break}}}while(q);if(D.length>1&&x.exec(g))if(D.length=3D=3D=3D2&&o.relati=
ve[D[0]])u=3DL(D[0]+D[1],i);else =
for(u=3Do.relative[D[0]]?[i]:k(D.shift(),i);D.length;){g=3DD.shift();if(o=
.relative[g])g+=3DD.shift();u=3DL(g,u)}else{if(!m&&D.length>1&&i.nodeType=
=3D=3D=3D9&&!O&&o.match.ID.test(D[0])&&!o.match.ID.test(D[D.length-1])){q=
=3Dk.find(D.shift(),i,O);i=3Dq.expr?k.filter(q.expr,q.set)[0]:q.set[0]}if=
(i){q=3Dm?{expr:D.pop(),set:C(m)}:k.find(D.pop(),D.length=3D=3D=3D1&&(D[0=
]=3D=3D=3D"~"||D[0]=3D=3D=3D"+")&&i.parentNode?i.parentNode:i,O);u=3Dq.ex=
pr?k.filter(q.expr,
q.set):q.set;if(D.length>0)y=3DC(u);else =
N=3Dfalse;for(;D.length;){q=3DM=3DD.pop();if(o.relative[M])q=3DD.pop();el=
se M=3D"";if(q=3D=3Dnull)q=3Di;o.relative[M](y,q,O)}}else =
y=3D[]}y||(y=3Du);y||k.error(M||g);if(f.call(y)=3D=3D=3D"[object =
Array]")if(N)if(i&&i.nodeType=3D=3D=3D1)for(g=3D0;y[g]!=3Dnull;g++){if(y[=
g]&&(y[g]=3D=3D=3Dtrue||y[g].nodeType=3D=3D=3D1&&k.contains(i,y[g])))n.pu=
sh(u[g])}else =
for(g=3D0;y[g]!=3Dnull;g++)y[g]&&y[g].nodeType=3D=3D=3D1&&n.push(u[g]);el=
se n.push.apply(n,y);else C(y,n);if(F){k(F,p,n,m);k.uniqueSort(n)}return =
n};k.uniqueSort=3Dfunction(g){if(w){h=3D
l;g.sort(w);if(h)for(var =
i=3D1;i<g.length;i++)g[i]=3D=3D=3Dg[i-1]&&g.splice(i--,1)}return =
g};k.matches=3Dfunction(g,i){return =
k(g,null,null,i)};k.matchesSelector=3Dfunction(g,i){return =
k(i,null,null,[g]).length>0};k.find=3Dfunction(g,i,n){var =
m;if(!g)return[];for(var p=3D0,q=3Do.order.length;p<q;p++){var =
u,y=3Do.order[p];if(u=3Do.leftMatch[y].exec(g)){var =
F=3Du[1];u.splice(1,1);if(F.substr(F.length-1)!=3D=3D"\\"){u[1]=3D(u[1]||=
"").replace(/\\/g,"");m=3Do.find[y](u,i,n);if(m!=3Dnull){g=3Dg.replace(o.=
match[y],"");break}}}}m||(m=3Di.getElementsByTagName("*"));
return{set:m,expr:g}};k.filter=3Dfunction(g,i,n,m){for(var =
p,q,u=3Dg,y=3D[],F=3Di,M=3Di&&i[0]&&k.isXML(i[0]);g&&i.length;){for(var =
N in o.filter)if((p=3Do.leftMatch[N].exec(g))!=3Dnull&&p[2]){var =
O,D,R=3Do.filter[N];D=3Dp[1];q=3Dfalse;p.splice(1,1);if(D.substr(D.length=
-1)!=3D=3D"\\"){if(F=3D=3D=3Dy)y=3D[];if(o.preFilter[N])if(p=3Do.preFilte=
r[N](p,F,n,y,m,M)){if(p=3D=3D=3Dtrue)continue}else =
q=3DO=3Dtrue;if(p)for(var =
j=3D0;(D=3DF[j])!=3Dnull;j++)if(D){O=3DR(D,p,j,F);var =
s=3Dm^!!O;if(n&&O!=3Dnull)if(s)q=3Dtrue;else F[j]=3Dfalse;else =
if(s){y.push(D);q=3Dtrue}}if(O!=3D=3D
B){n||(F=3Dy);g=3Dg.replace(o.match[N],"");if(!q)return[];break}}}if(g=3D=
=3D=3Du)if(q=3D=3Dnull)k.error(g);else break;u=3Dg}return =
F};k.error=3Dfunction(g){throw"Syntax error, unrecognized expression: =
"+g;};var =
o=3Dk.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\u=
FFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=3D[=
'"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFF=
F\-]|\\.)+)\s*(?:(\S?=3D)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\u=
FFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+=
\-]*)\))?/,
POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=3D[^\-]|$)/,PSEU=
DO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)=
\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrH=
andle:{href:function(g){return =
g.getAttribute("href")}},relative:{"+":function(g,i){var n=3Dtypeof =
i=3D=3D=3D"string",m=3Dn&&!/\W/.test(i);n=3Dn&&!m;if(m)i=3Di.toLowerCase(=
);m=3D0;for(var =
p=3Dg.length,q;m<p;m++)if(q=3Dg[m]){for(;(q=3Dq.previousSibling)&&q.nodeT=
ype!=3D=3D1;);g[m]=3Dn||q&&q.nodeName.toLowerCase()=3D=3D=3D
i?q||false:q=3D=3D=3Di}n&&k.filter(i,g,true)},">":function(g,i){var =
n,m=3Dtypeof =
i=3D=3D=3D"string",p=3D0,q=3Dg.length;if(m&&!/\W/.test(i))for(i=3Di.toLow=
erCase();p<q;p++){if(n=3Dg[p]){n=3Dn.parentNode;g[p]=3Dn.nodeName.toLower=
Case()=3D=3D=3Di?n:false}}else{for(;p<q;p++)if(n=3Dg[p])g[p]=3Dm?n.parent=
Node:n.parentNode=3D=3D=3Di;m&&k.filter(i,g,true)}},"":function(g,i,n){va=
r m,p=3De++,q=3Db;if(typeof =
i=3D=3D=3D"string"&&!/\W/.test(i)){m=3Di=3Di.toLowerCase();q=3Da}q("paren=
tNode",i,p,g,m,n)},"~":function(g,i,n){var m,p=3De++,q=3Db;if(typeof =
i=3D=3D=3D"string"&&!/\W/.test(i)){m=3D
i=3Di.toLowerCase();q=3Da}q("previousSibling",i,p,g,m,n)}},find:{ID:funct=
ion(g,i,n){if(typeof =
i.getElementById!=3D=3D"undefined"&&!n)return(g=3Di.getElementById(g[1]))=
&&g.parentNode?[g]:[]},NAME:function(g,i){if(typeof =
i.getElementsByName!=3D=3D"undefined"){for(var =
n=3D[],m=3Di.getElementsByName(g[1]),p=3D0,q=3Dm.length;p<q;p++)m[p].getA=
ttribute("name")=3D=3D=3Dg[1]&&n.push(m[p]);return =
n.length=3D=3D=3D0?null:n}},TAG:function(g,i){return =
i.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,i,n,m,p,q){g=3D=
" "+g[1].replace(/\\/g,
"")+" ";if(q)return g;q=3D0;for(var =
u;(u=3Di[q])!=3Dnull;q++)if(u)if(p^(u.className&&(" "+u.className+" =
").replace(/[\t\n]/g," ").indexOf(g)>=3D0))n||m.push(u);else =
if(n)i[q]=3Dfalse;return false},ID:function(g){return =
g[1].replace(/\\/g,"")},TAG:function(g){return =
g[1].toLowerCase()},CHILD:function(g){if(g[1]=3D=3D=3D"nth"){var =
i=3D/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]=3D=3D=3D"even"&&"2n"||g[2]=3D=3D=
=3D"odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=3Di[1]+(i[2]||=
1)-0;g[3]=3Di[3]-0}g[0]=3De++;return g},ATTR:function(g,i,n,
m,p,q){i=3Dg[1].replace(/\\/g,"");if(!q&&o.attrMap[i])g[1]=3Do.attrMap[i]=
;if(g[2]=3D=3D=3D"~=3D")g[4]=3D" "+g[4]+" ";return =
g},PSEUDO:function(g,i,n,m,p){if(g[1]=3D=3D=3D"not")if((d.exec(g[3])||"")=
.length>1||/^\w/.test(g[3]))g[3]=3Dk(g[3],null,null,i);else{g=3Dk.filter(=
g[3],i,n,true^p);n||m.push.apply(m,g);return false}else =
if(o.match.POS.test(g[0])||o.match.CHILD.test(g[0]))return true;return =
g},POS:function(g){g.unshift(true);return =
g}},filters:{enabled:function(g){return =
g.disabled=3D=3D=3Dfalse&&g.type!=3D=3D"hidden"},disabled:function(g){ret=
urn g.disabled=3D=3D=3D
true},checked:function(g){return =
g.checked=3D=3D=3Dtrue},selected:function(g){return =
g.selected=3D=3D=3Dtrue},parent:function(g){return!!g.firstChild},empty:f=
unction(g){return!g.firstChild},has:function(g,i,n){return!!k(n[3],g).len=
gth},header:function(g){return/h\d/i.test(g.nodeName)},text:function(g){r=
eturn"text"=3D=3D=3Dg.type},radio:function(g){return"radio"=3D=3D=3Dg.typ=
e},checkbox:function(g){return"checkbox"=3D=3D=3Dg.type},file:function(g)=
{return"file"=3D=3D=3Dg.type},password:function(g){return"password"=3D=3D=
=3Dg.type},submit:function(g){return"submit"=3D=3D=3D
g.type},image:function(g){return"image"=3D=3D=3Dg.type},reset:function(g)=
{return"reset"=3D=3D=3Dg.type},button:function(g){return"button"=3D=3D=3D=
g.type||g.nodeName.toLowerCase()=3D=3D=3D"button"},input:function(g){retu=
rn/input|select|textarea|button/i.test(g.nodeName)}},setFilters:{first:fu=
nction(g,i){return i=3D=3D=3D0},last:function(g,i,n,m){return =
i=3D=3D=3Dm.length-1},even:function(g,i){return =
i%2=3D=3D=3D0},odd:function(g,i){return =
i%2=3D=3D=3D1},lt:function(g,i,n){return =
i<n[3]-0},gt:function(g,i,n){return i>n[3]-0},nth:function(g,i,n){return =
n[3]-
0=3D=3D=3Di},eq:function(g,i,n){return =
n[3]-0=3D=3D=3Di}},filter:{PSEUDO:function(g,i,n,m){var =
p=3Di[1],q=3Do.filters[p];if(q)return q(g,n,i,m);else =
if(p=3D=3D=3D"contains")return(g.textContent||g.innerText||k.getText([g])=
||"").indexOf(i[3])>=3D0;else =
if(p=3D=3D=3D"not"){i=3Di[3];n=3D0;for(m=3Di.length;n<m;n++)if(i[n]=3D=3D=
=3Dg)return false;return true}else k.error("Syntax error, unrecognized =
expression: "+p)},CHILD:function(g,i){var n=3Di[1],m=3Dg;switch(n){case =
"only":case =
"first":for(;m=3Dm.previousSibling;)if(m.nodeType=3D=3D=3D1)return =
false;if(n=3D=3D=3D
"first")return true;m=3Dg;case =
"last":for(;m=3Dm.nextSibling;)if(m.nodeType=3D=3D=3D1)return =
false;return true;case "nth":n=3Di[2];var =
p=3Di[3];if(n=3D=3D=3D1&&p=3D=3D=3D0)return true;var =
q=3Di[0],u=3Dg.parentNode;if(u&&(u.sizcache!=3D=3Dq||!g.nodeIndex)){var =
y=3D0;for(m=3Du.firstChild;m;m=3Dm.nextSibling)if(m.nodeType=3D=3D=3D1)m.=
nodeIndex=3D++y;u.sizcache=3Dq}m=3Dg.nodeIndex-p;return =
n=3D=3D=3D0?m=3D=3D=3D0:m%n=3D=3D=3D0&&m/n>=3D0}},ID:function(g,i){return=
 =
g.nodeType=3D=3D=3D1&&g.getAttribute("id")=3D=3D=3Di},TAG:function(g,i){r=
eturn =
i=3D=3D=3D"*"&&g.nodeType=3D=3D=3D1||g.nodeName.toLowerCase()=3D=3D=3D
i},CLASS:function(g,i){return(" =
"+(g.className||g.getAttribute("class"))+" =
").indexOf(i)>-1},ATTR:function(g,i){var =
n=3Di[1];n=3Do.attrHandle[n]?o.attrHandle[n](g):g[n]!=3Dnull?g[n]:g.getAt=
tribute(n);var m=3Dn+"",p=3Di[2],q=3Di[4];return =
n=3D=3Dnull?p=3D=3D=3D"!=3D":p=3D=3D=3D"=3D"?m=3D=3D=3Dq:p=3D=3D=3D"*=3D"=
?m.indexOf(q)>=3D0:p=3D=3D=3D"~=3D"?(" "+m+" =
").indexOf(q)>=3D0:!q?m&&n!=3D=3Dfalse:p=3D=3D=3D"!=3D"?m!=3D=3Dq:p=3D=3D=
=3D"^=3D"?m.indexOf(q)=3D=3D=3D0:p=3D=3D=3D"$=3D"?m.substr(m.length-q.len=
gth)=3D=3D=3Dq:p=3D=3D=3D"|=3D"?m=3D=3D=3Dq||m.substr(0,q.length+1)=3D=3D=
=3Dq+"-":false},POS:function(g,i,n,m){var p=3Do.setFilters[i[2]];
if(p)return =
p(g,n,i,m)}}},x=3Do.match.POS,r=3Dfunction(g,i){return"\\"+(i-0+1)},A;for=
(A in =
o.match){o.match[A]=3DRegExp(o.match[A].source+/(?![^\[]*\])(?![^\(]*\))/=
.source);o.leftMatch[A]=3DRegExp(/(^(?:.|\r|\n)*?)/.source+o.match[A].sou=
rce.replace(/\\(\d+)/g,r))}var =
C=3Dfunction(g,i){g=3DArray.prototype.slice.call(g,0);if(i){i.push.apply(=
i,g);return i}return =
g};try{Array.prototype.slice.call(t.documentElement.childNodes,0)}catch(J=
){C=3Dfunction(g,i){var n=3D0,m=3Di||[];if(f.call(g)=3D=3D=3D"[object =
Array]")Array.prototype.push.apply(m,
g);else if(typeof g.length=3D=3D=3D"number")for(var =
p=3Dg.length;n<p;n++)m.push(g[n]);else for(;g[n];n++)m.push(g[n]);return =
m}}var =
w,I;if(t.documentElement.compareDocumentPosition)w=3Dfunction(g,i){if(g=3D=
=3D=3Di){h=3Dtrue;return =
0}if(!g.compareDocumentPosition||!i.compareDocumentPosition)return =
g.compareDocumentPosition?-1:1;return =
g.compareDocumentPosition(i)&4?-1:1};else{w=3Dfunction(g,i){var =
n,m,p=3D[],q=3D[];n=3Dg.parentNode;m=3Di.parentNode;var =
u=3Dn;if(g=3D=3D=3Di){h=3Dtrue;return 0}else if(n=3D=3D=3Dm)return =
I(g,i);else if(n){if(!m)return 1}else return-1;
for(;u;){p.unshift(u);u=3Du.parentNode}for(u=3Dm;u;){q.unshift(u);u=3Du.p=
arentNode}n=3Dp.length;m=3Dq.length;for(u=3D0;u<n&&u<m;u++)if(p[u]!=3D=3D=
q[u])return I(p[u],q[u]);return =
u=3D=3D=3Dn?I(g,q[u],-1):I(p[u],i,1)};I=3Dfunction(g,i,n){if(g=3D=3D=3Di)=
return =
n;for(g=3Dg.nextSibling;g;){if(g=3D=3D=3Di)return-1;g=3Dg.nextSibling}ret=
urn 1}}k.getText=3Dfunction(g){for(var =
i=3D"",n,m=3D0;g[m];m++){n=3Dg[m];if(n.nodeType=3D=3D=3D3||n.nodeType=3D=3D=
=3D4)i+=3Dn.nodeValue;else =
if(n.nodeType!=3D=3D8)i+=3Dk.getText(n.childNodes)}return =
i};(function(){var g=3Dt.createElement("div"),
i=3D"script"+(new =
Date).getTime(),n=3Dt.documentElement;g.innerHTML=3D"<a =
name=3D'"+i+"'/>";n.insertBefore(g,n.firstChild);if(t.getElementById(i)){=
o.find.ID=3Dfunction(m,p,q){if(typeof =
p.getElementById!=3D=3D"undefined"&&!q)return(p=3Dp.getElementById(m[1]))=
?p.id=3D=3D=3Dm[1]||typeof =
p.getAttributeNode!=3D=3D"undefined"&&p.getAttributeNode("id").nodeValue=3D=
=3D=3Dm[1]?[p]:B:[]};o.filter.ID=3Dfunction(m,p){var q=3Dtypeof =
m.getAttributeNode!=3D=3D"undefined"&&m.getAttributeNode("id");return =
m.nodeType=3D=3D=3D1&&q&&q.nodeValue=3D=3D=3Dp}}n.removeChild(g);
n=3Dg=3Dnull})();(function(){var =
g=3Dt.createElement("div");g.appendChild(t.createComment(""));if(g.getEle=
mentsByTagName("*").length>0)o.find.TAG=3Dfunction(i,n){var =
m=3Dn.getElementsByTagName(i[1]);if(i[1]=3D=3D=3D"*"){for(var =
p=3D[],q=3D0;m[q];q++)m[q].nodeType=3D=3D=3D1&&p.push(m[q]);m=3Dp}return =
m};g.innerHTML=3D"<a href=3D'#'></a>";if(g.firstChild&&typeof =
g.firstChild.getAttribute!=3D=3D"undefined"&&g.firstChild.getAttribute("h=
ref")!=3D=3D"#")o.attrHandle.href=3Dfunction(i){return =
i.getAttribute("href",2)};g=3Dnull})();t.querySelectorAll&&
function(){var g=3Dk,i=3Dt.createElement("div");i.innerHTML=3D"<p =
class=3D'TEST'></p>";if(!(i.querySelectorAll&&i.querySelectorAll(".TEST")=
.length=3D=3D=3D0)){k=3Dfunction(m,p,q,u){p=3Dp||t;m=3Dm.replace(/\=3D\s*=
([^'"\]]*)\s*\]/g,"=3D'$1']");if(!u&&!k.isXML(p))if(p.nodeType=3D=3D=3D9)=
try{return C(p.querySelectorAll(m),q)}catch(y){}else =
if(p.nodeType=3D=3D=3D1&&p.nodeName.toLowerCase()!=3D=3D"object"){var =
F=3Dp.getAttribute("id"),M=3DF||"__sizzle__";F||p.setAttribute("id",M);tr=
y{return C(p.querySelectorAll("#"+M+" "+m),q)}catch(N){}finally{F||
p.removeAttribute("id")}}return g(m,p,q,u)};for(var n in =
g)k[n]=3Dg[n];i=3Dnull}}();(function(){var =
g=3Dt.documentElement,i=3Dg.matchesSelector||g.mozMatchesSelector||g.webk=
itMatchesSelector||g.msMatchesSelector,n=3Dfalse;try{i.call(t.documentEle=
ment,"[test!=3D'']:sizzle")}catch(m){n=3Dtrue}if(i)k.matchesSelector=3Dfu=
nction(p,q){q=3Dq.replace(/\=3D\s*([^'"\]]*)\s*\]/g,"=3D'$1']");if(!k.isX=
ML(p))try{if(n||!o.match.PSEUDO.test(q)&&!/!=3D/.test(q))return =
i.call(p,q)}catch(u){}return =
k(q,null,null,[p]).length>0}})();(function(){var g=3D
t.createElement("div");g.innerHTML=3D"<div class=3D'test e'></div><div =
class=3D'test'></div>";if(!(!g.getElementsByClassName||g.getElementsByCla=
ssName("e").length=3D=3D=3D0)){g.lastChild.className=3D"e";if(g.getElemen=
tsByClassName("e").length!=3D=3D1){o.order.splice(1,0,"CLASS");o.find.CLA=
SS=3Dfunction(i,n,m){if(typeof =
n.getElementsByClassName!=3D=3D"undefined"&&!m)return =
n.getElementsByClassName(i[1])};g=3Dnull}}})();k.contains=3Dt.documentEle=
ment.contains?function(g,i){return =
g!=3D=3Di&&(g.contains?g.contains(i):true)}:t.documentElement.compareDocu=
mentPosition?
function(g,i){return!!(g.compareDocumentPosition(i)&16)}:function(){retur=
n =
false};k.isXML=3Dfunction(g){return(g=3D(g?g.ownerDocument||g:0).document=
Element)?g.nodeName!=3D=3D"HTML":false};var L=3Dfunction(g,i){for(var =
n,m=3D[],p=3D"",q=3Di.nodeType?[i]:i;n=3Do.match.PSEUDO.exec(g);){p+=3Dn[=
0];g=3Dg.replace(o.match.PSEUDO,"")}g=3Do.relative[g]?g+"*":g;n=3D0;for(v=
ar u=3Dq.length;n<u;n++)k(g,q[n],m);return =
k.filter(p,m)};c.find=3Dk;c.expr=3Dk.selectors;c.expr[":"]=3Dc.expr.filte=
rs;c.unique=3Dk.uniqueSort;c.text=3Dk.getText;c.isXMLDoc=3Dk.isXML;
c.contains=3Dk.contains})();var =
Za=3D/Until$/,$a=3D/^(?:parents|prevUntil|prevAll)/,ab=3D/,/,Na=3D/^.[^:#=
\[\.,]*$/,bb=3DArray.prototype.slice,cb=3Dc.expr.match.POS;c.fn.extend({f=
ind:function(a){for(var =
b=3Dthis.pushStack("","find",a),d=3D0,e=3D0,f=3Dthis.length;e<f;e++){d=3D=
b.length;c.find(a,this[e],b);if(e>0)for(var h=3Dd;h<b.length;h++)for(var =
l=3D0;l<d;l++)if(b[l]=3D=3D=3Db[h]){b.splice(h--,1);break}}return =
b},has:function(a){var b=3Dc(a);return this.filter(function(){for(var =
d=3D0,e=3Db.length;d<e;d++)if(c.contains(this,b[d]))return true})},
not:function(a){return =
this.pushStack(ma(this,a,false),"not",a)},filter:function(a){return =
this.pushStack(ma(this,a,true),"filter",a)},is:function(a){return!!a&&c.f=
ilter(a,this).length>0},closest:function(a,b){var =
d=3D[],e,f,h=3Dthis[0];if(c.isArray(a)){var =
l,k=3D{},o=3D1;if(h&&a.length){e=3D0;for(f=3Da.length;e<f;e++){l=3Da[e];k=
[l]||(k[l]=3Dc.expr.match.POS.test(l)?c(l,b||this.context):l)}for(;h&&h.o=
wnerDocument&&h!=3D=3Db;){for(l in =
k){e=3Dk[l];if(e.jquery?e.index(h)>-1:c(h).is(e))d.push({selector:l,elem:=
h,level:o})}h=3D
h.parentNode;o++}}return =
d}l=3Dcb.test(a)?c(a,b||this.context):null;e=3D0;for(f=3Dthis.length;e<f;=
e++)for(h=3Dthis[e];h;)if(l?l.index(h)>-1:c.find.matchesSelector(h,a)){d.=
push(h);break}else{h=3Dh.parentNode;if(!h||!h.ownerDocument||h=3D=3D=3Db)=
break}d=3Dd.length>1?c.unique(d):d;return =
this.pushStack(d,"closest",a)},index:function(a){if(!a||typeof =
a=3D=3D=3D"string")return =
c.inArray(this[0],a?c(a):this.parent().children());return =
c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var d=3Dtypeof =
a=3D=3D=3D"string"?c(a,b||this.context):
c.makeArray(a),e=3Dc.merge(this.get(),d);return =
this.pushStack(!d[0]||!d[0].parentNode||d[0].parentNode.nodeType=3D=3D=3D=
11||!e[0]||!e[0].parentNode||e[0].parentNode.nodeType=3D=3D=3D11?e:c.uniq=
ue(e))},andSelf:function(){return =
this.add(this.prevObject)}});c.each({parent:function(a){return(a=3Da.pare=
ntNode)&&a.nodeType!=3D=3D11?a:null},parents:function(a){return =
c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return =
c.dir(a,"parentNode",d)},next:function(a){return =
c.nth(a,2,"nextSibling")},prev:function(a){return c.nth(a,
2,"previousSibling")},nextAll:function(a){return =
c.dir(a,"nextSibling")},prevAll:function(a){return =
c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return =
c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return =
c.dir(a,"previousSibling",d)},siblings:function(a){return =
c.sibling(a.parentNode.firstChild,a)},children:function(a){return =
c.sibling(a.firstChild)},contents:function(a){return =
c.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:c.make=
Array(a.childNodes)}},function(a,
b){c.fn[a]=3Dfunction(d,e){var =
f=3Dc.map(this,b,d);Za.test(a)||(e=3Dd);if(e&&typeof =
e=3D=3D=3D"string")f=3Dc.filter(e,f);f=3Dthis.length>1?c.unique(f):f;if((=
this.length>1||ab.test(e))&&$a.test(a))f=3Df.reverse();return =
this.pushStack(f,a,bb.call(arguments).join(","))}});c.extend({filter:func=
tion(a,b,d){if(d)a=3D":not("+a+")";return =
b.length=3D=3D=3D1?c.find.matchesSelector(b[0],a)?[b[0]]:[]:c.find.matche=
s(a,b)},dir:function(a,b,d){var =
e=3D[];for(a=3Da[b];a&&a.nodeType!=3D=3D9&&(d=3D=3D=3DB||a.nodeType!=3D=3D=
1||!c(a).is(d));){a.nodeType=3D=3D=3D1&&
e.push(a);a=3Da[b]}return e},nth:function(a,b,d){b=3Db||1;for(var =
e=3D0;a;a=3Da[d])if(a.nodeType=3D=3D=3D1&&++e=3D=3D=3Db)break;return =
a},sibling:function(a,b){for(var =
d=3D[];a;a=3Da.nextSibling)a.nodeType=3D=3D=3D1&&a!=3D=3Db&&d.push(a);ret=
urn d}});var za=3D/ =
jQuery\d+=3D"(?:\d+|null)"/g,$=3D/^\s+/,Aa=3D/<(?!area|br|col|embed|hr|im=
g|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Ba=3D/<([\w:]+)/,db=3D/<tbo=
dy/i,eb=3D/<|&#?\w+;/,Ca=3D/<(?:script|object|embed|option|style)/i,Da=3D=
/checked\s*(?:[^=3D]|=3D\s*.checked.)/i,fb=3D/\=3D([^=3D"'>\s]+\/)>/g,P=3D=
{option:[1,
"<select =
multiple=3D'multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"=
],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>=
"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tb=
ody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],=
_default:[0,"",""]};P.optgroup=3DP.option;P.tbody=3DP.tfoot=3DP.colgroup=3D=
P.caption=3DP.thead;P.th=3DP.td;if(!c.support.htmlSerialize)P._default=3D=
[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))=
return this.each(function(b){var d=3D
c(this);d.text(a.call(this,b,d.text()))});if(typeof =
a!=3D=3D"object"&&a!=3D=3DB)return =
this.empty().append((this[0]&&this[0].ownerDocument||t).createTextNode(a)=
);return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return =
this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var =
b=3Dc(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.in=
sertBefore(this[0]);b.map(function(){for(var =
d=3Dthis;d.firstChild&&d.firstChild.nodeType=3D=3D=3D1;)d=3Dd.firstChild;=
return d}).append(this)}return this},
wrapInner:function(a){if(c.isFunction(a))return =
this.each(function(b){c(this).wrapInner(a.call(this,b))});return =
this.each(function(){var =
b=3Dc(this),d=3Db.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:fu=
nction(a){return =
this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return =
this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWit=
h(this.childNodes)}).end()},append:function(){return =
this.domManip(arguments,true,function(a){this.nodeType=3D=3D=3D1&&this.ap=
pendChild(a)})},
prepend:function(){return =
this.domManip(arguments,true,function(a){this.nodeType=3D=3D=3D1&&this.in=
sertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].pa=
rentNode)return =
this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,=
this)});else if(arguments.length){var =
a=3Dc(arguments[0]);a.push.apply(a,this.toArray());return =
this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[=
0].parentNode)return =
this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,=

this.nextSibling)});else if(arguments.length){var =
a=3Dthis.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0])=
.toArray());return a}},remove:function(a,b){for(var =
d=3D0,e;(e=3Dthis[d])!=3Dnull;d++)if(!a||c.filter(a,[e]).length){if(!b&&e=
.nodeType=3D=3D=3D1){c.cleanData(e.getElementsByTagName("*"));c.cleanData=
([e])}e.parentNode&&e.parentNode.removeChild(e)}return =
this},empty:function(){for(var =
a=3D0,b;(b=3Dthis[a])!=3Dnull;a++)for(b.nodeType=3D=3D=3D1&&c.cleanData(b=
.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);
return this},clone:function(a){var =
b=3Dthis.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){va=
r =
d=3Dthis.outerHTML,e=3Dthis.ownerDocument;if(!d){d=3De.createElement("div=
");d.appendChild(this.cloneNode(true));d=3Dd.innerHTML}return =
c.clean([d.replace(za,"").replace(fb,'=3D"$1">').replace($,"")],e)[0]}els=
e return =
this.cloneNode(true)});if(a=3D=3D=3Dtrue){na(this,b);na(this.find("*"),b.=
find("*"))}return b},html:function(a){if(a=3D=3D=3DB)return =
this[0]&&this[0].nodeType=3D=3D=3D1?this[0].innerHTML.replace(za,""):null=
;
else if(typeof =
a=3D=3D=3D"string"&&!Ca.test(a)&&(c.support.leadingWhitespace||!$.test(a)=
)&&!P[(Ba.exec(a)||["",""])[1].toLowerCase()]){a=3Da.replace(Aa,"<$1></$2=
>");try{for(var =
b=3D0,d=3Dthis.length;b<d;b++)if(this[b].nodeType=3D=3D=3D1){c.cleanData(=
this[b].getElementsByTagName("*"));this[b].innerHTML=3Da}}catch(e){this.e=
mpty().append(a)}}else c.isFunction(a)?this.each(function(f){var =
h=3Dc(this);h.html(a.call(this,f,h.html()))}):this.empty().append(a);retu=
rn =
this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(c.isFunc=
tion(a))return this.each(function(b){var d=3D
c(this),e=3Dd.html();d.replaceWith(a.call(this,b,e))});if(typeof =
a!=3D=3D"string")a=3Dc(a).detach();return this.each(function(){var =
b=3Dthis.nextSibling,d=3Dthis.parentNode;c(this).remove();b?c(b).before(a=
):c(d).append(a)})}else return =
this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function=
(a){return this.remove(a,true)},domManip:function(a,b,d){var =
e,f,h,l=3Da[0],k=3D[];if(!c.support.checkClone&&arguments.length=3D=3D=3D=
3&&typeof l=3D=3D=3D"string"&&Da.test(l))return =
this.each(function(){c(this).domManip(a,
b,d,true)});if(c.isFunction(l))return this.each(function(x){var =
r=3Dc(this);a[0]=3Dl.call(this,x,b?r.html():B);r.domManip(a,b,d)});if(thi=
s[0]){e=3Dl&&l.parentNode;e=3Dc.support.parentNode&&e&&e.nodeType=3D=3D=3D=
11&&e.childNodes.length=3D=3D=3Dthis.length?{fragment:e}:c.buildFragment(=
a,this,k);h=3De.fragment;if(f=3Dh.childNodes.length=3D=3D=3D1?h=3Dh.first=
Child:h.firstChild){b=3Db&&c.nodeName(f,"tr");f=3D0;for(var =
o=3Dthis.length;f<o;f++)d.call(b?c.nodeName(this[f],"table")?this[f].getE=
lementsByTagName("tbody")[0]||this[f].appendChild(this[f].ownerDocument.c=
reateElement("tbody")):
this[f]:this[f],f>0||e.cacheable||this.length>1?h.cloneNode(true):h)}k.le=
ngth&&c.each(k,Oa)}return this}});c.buildFragment=3Dfunction(a,b,d){var =
e,f,h;b=3Db&&b[0]?b[0].ownerDocument||b[0]:t;if(a.length=3D=3D=3D1&&typeo=
f =
a[0]=3D=3D=3D"string"&&a[0].length<512&&b=3D=3D=3Dt&&!Ca.test(a[0])&&(c.s=
upport.checkClone||!Da.test(a[0]))){f=3Dtrue;if(h=3Dc.fragments[a[0]])if(=
h!=3D=3D1)e=3Dh}if(!e){e=3Db.createDocumentFragment();c.clean(a,b,e,d)}if=
(f)c.fragments[a[0]]=3Dh?e:1;return{fragment:e,cacheable:f}};c.fragments=3D=
{};c.each({appendTo:"append",
prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:=
"replaceWith"},function(a,b){c.fn[a]=3Dfunction(d){var =
e=3D[];d=3Dc(d);var =
f=3Dthis.length=3D=3D=3D1&&this[0].parentNode;if(f&&f.nodeType=3D=3D=3D11=
&&f.childNodes.length=3D=3D=3D1&&d.length=3D=3D=3D1){d[b](this[0]);return=
 this}else{f=3D0;for(var h=3Dd.length;f<h;f++){var =
l=3D(f>0?this.clone(true):this).get();c(d[f])[b](l);e=3De.concat(l)}retur=
n =
this.pushStack(e,a,d.selector)}}});c.extend({clean:function(a,b,d,e){b=3D=
b||t;if(typeof b.createElement=3D=3D=3D"undefined")b=3Db.ownerDocument||
b[0]&&b[0].ownerDocument||t;for(var =
f=3D[],h=3D0,l;(l=3Da[h])!=3Dnull;h++){if(typeof =
l=3D=3D=3D"number")l+=3D"";if(l){if(typeof =
l=3D=3D=3D"string"&&!eb.test(l))l=3Db.createTextNode(l);else if(typeof =
l=3D=3D=3D"string"){l=3Dl.replace(Aa,"<$1></$2>");var =
k=3D(Ba.exec(l)||["",""])[1].toLowerCase(),o=3DP[k]||P._default,x=3Do[0],=
r=3Db.createElement("div");for(r.innerHTML=3Do[1]+l+o[2];x--;)r=3Dr.lastC=
hild;if(!c.support.tbody){x=3Ddb.test(l);k=3Dk=3D=3D=3D"table"&&!x?r.firs=
tChild&&r.firstChild.childNodes:o[1]=3D=3D=3D"<table>"&&!x?r.childNodes:[=
];for(o=3Dk.length-
1;o>=3D0;--o)c.nodeName(k[o],"tbody")&&!k[o].childNodes.length&&k[o].pare=
ntNode.removeChild(k[o])}!c.support.leadingWhitespace&&$.test(l)&&r.inser=
tBefore(b.createTextNode($.exec(l)[0]),r.firstChild);l=3Dr.childNodes}if(=
l.nodeType)f.push(l);else =
f=3Dc.merge(f,l)}}if(d)for(h=3D0;f[h];h++)if(e&&c.nodeName(f[h],"script")=
&&(!f[h].type||f[h].type.toLowerCase()=3D=3D=3D"text/javascript"))e.push(=
f[h].parentNode?f[h].parentNode.removeChild(f[h]):f[h]);else{f[h].nodeTyp=
e=3D=3D=3D1&&f.splice.apply(f,[h+1,0].concat(c.makeArray(f[h].getElements=
ByTagName("script"))));
d.appendChild(f[h])}return f},cleanData:function(a){for(var =
b,d,e=3Dc.cache,f=3Dc.event.special,h=3Dc.support.deleteExpando,l=3D0,k;(=
k=3Da[l])!=3Dnull;l++)if(!(k.nodeName&&c.noData[k.nodeName.toLowerCase()]=
))if(d=3Dk[c.expando]){if((b=3De[d])&&b.events)for(var o in =
b.events)f[o]?c.event.remove(k,o):c.removeEvent(k,o,b.handle);if(h)delete=
 k[c.expando];else =
k.removeAttribute&&k.removeAttribute(c.expando);delete e[d]}}});var =
Ea=3D/alpha\([^)]*\)/i,gb=3D/opacity=3D([^)]*)/,hb=3D/-([a-z])/ig,ib=3D/(=
[A-Z])/g,Fa=3D/^-?\d+(?:px)?$/i,
jb=3D/^-?\d/,kb=3D{position:"absolute",visibility:"hidden",display:"block=
"},Pa=3D["Left","Right"],Qa=3D["Top","Bottom"],W,Ga,aa,lb=3Dfunction(a,b)=
{return =
b.toUpperCase()};c.fn.css=3Dfunction(a,b){if(arguments.length=3D=3D=3D2&&=
b=3D=3D=3DB)return this;return =
c.access(this,a,b,true,function(d,e,f){return =
f!=3D=3DB?c.style(d,e,f):c.css(d,e)})};c.extend({cssHooks:{opacity:{get:f=
unction(a,b){if(b){var d=3DW(a,"opacity","opacity");return =
d=3D=3D=3D""?"1":d}else return =
a.style.opacity}}},cssNumber:{zIndex:true,fontWeight:true,opacity:true,
zoom:true,lineHeight:true},cssProps:{"float":c.support.cssFloat?"cssFloat=
":"styleFloat"},style:function(a,b,d,e){if(!(!a||a.nodeType=3D=3D=3D3||a.=
nodeType=3D=3D=3D8||!a.style)){var =
f,h=3Dc.camelCase(b),l=3Da.style,k=3Dc.cssHooks[h];b=3Dc.cssProps[h]||h;i=
f(d!=3D=3DB){if(!(typeof =
d=3D=3D=3D"number"&&isNaN(d)||d=3D=3Dnull)){if(typeof =
d=3D=3D=3D"number"&&!c.cssNumber[h])d+=3D"px";if(!k||!("set"in =
k)||(d=3Dk.set(a,d))!=3D=3DB)try{l[b]=3Dd}catch(o){}}}else{if(k&&"get"in =
k&&(f=3Dk.get(a,false,e))!=3D=3DB)return f;return =
l[b]}}},css:function(a,b,d){var e,f=3Dc.camelCase(b),
h=3Dc.cssHooks[f];b=3Dc.cssProps[f]||f;if(h&&"get"in =
h&&(e=3Dh.get(a,true,d))!=3D=3DB)return e;else if(W)return =
W(a,b,f)},swap:function(a,b,d){var e=3D{},f;for(f in =
b){e[f]=3Da.style[f];a.style[f]=3Db[f]}d.call(a);for(f in =
b)a.style[f]=3De[f]},camelCase:function(a){return =
a.replace(hb,lb)}});c.curCSS=3Dc.css;c.each(["height","width"],function(a=
,b){c.cssHooks[b]=3D{get:function(d,e,f){var =
h;if(e){if(d.offsetWidth!=3D=3D0)h=3Doa(d,b,f);else =
c.swap(d,kb,function(){h=3Doa(d,b,f)});if(h<=3D0){h=3DW(d,b,b);if(h=3D=3D=
=3D"0px"&&aa)h=3Daa(d,b,b);
if(h!=3Dnull)return =
h=3D=3D=3D""||h=3D=3D=3D"auto"?"0px":h}if(h<0||h=3D=3Dnull){h=3Dd.style[b=
];return h=3D=3D=3D""||h=3D=3D=3D"auto"?"0px":h}return typeof =
h=3D=3D=3D"string"?h:h+"px"}},set:function(d,e){if(Fa.test(e)){e=3DparseF=
loat(e);if(e>=3D0)return e+"px"}else return =
e}}});if(!c.support.opacity)c.cssHooks.opacity=3D{get:function(a,b){retur=
n =
gb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?par=
seFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var =
d=3Da.style;d.zoom=3D1;var =
e=3Dc.isNaN(b)?"":"alpha(opacity=3D"+b*100+")",f=3D
d.filter||"";d.filter=3DEa.test(f)?f.replace(Ea,e):d.filter+" =
"+e}};if(t.defaultView&&t.defaultView.getComputedStyle)Ga=3Dfunction(a,b,=
d){var =
e;d=3Dd.replace(ib,"-$1").toLowerCase();if(!(b=3Da.ownerDocument.defaultV=
iew))return =
B;if(b=3Db.getComputedStyle(a,null)){e=3Db.getPropertyValue(d);if(e=3D=3D=
=3D""&&!c.contains(a.ownerDocument.documentElement,a))e=3Dc.style(a,d)}re=
turn e};if(t.documentElement.currentStyle)aa=3Dfunction(a,b){var =
d,e,f=3Da.currentStyle&&a.currentStyle[b],h=3Da.style;if(!Fa.test(f)&&jb.=
test(f)){d=3Dh.left;
e=3Da.runtimeStyle.left;a.runtimeStyle.left=3Da.currentStyle.left;h.left=3D=
b=3D=3D=3D"fontSize"?"1em":f||0;f=3Dh.pixelLeft+"px";h.left=3Dd;a.runtime=
Style.left=3De}return =
f=3D=3D=3D""?"auto":f};W=3DGa||aa;if(c.expr&&c.expr.filters){c.expr.filte=
rs.hidden=3Dfunction(a){var b=3Da.offsetHeight;return =
a.offsetWidth=3D=3D=3D0&&b=3D=3D=3D0||!c.support.reliableHiddenOffsets&&(=
a.style.display||c.css(a,"display"))=3D=3D=3D"none"};c.expr.filters.visib=
le=3Dfunction(a){return!c.expr.filters.hidden(a)}}var =
mb=3Dc.now(),nb=3D/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
ob=3D/^(?:select|textarea)/i,pb=3D/^(?:color|date|datetime|email|hidden|m=
onth|number|password|range|search|tel|text|time|url|week)$/i,qb=3D/^(?:GE=
T|HEAD)$/,Ra=3D/\[\]$/,T=3D/\=3D\?(&|$)/,ja=3D/\?/,rb=3D/([?&])_=3D[^&]*/=
,sb=3D/^(\w+:)?\/\/([^\/?#]+)/,tb=3D/%20/g,ub=3D/#.*$/,Ha=3Dc.fn.load;c.f=
n.extend({load:function(a,b,d){if(typeof a!=3D=3D"string"&&Ha)return =
Ha.apply(this,arguments);else if(!this.length)return this;var =
e=3Da.indexOf(" ");if(e>=3D0){var =
f=3Da.slice(e,a.length);a=3Da.slice(0,e)}e=3D"GET";if(b)if(c.isFunction(b=
)){d=3Db;b=3Dnull}else if(typeof b=3D=3D=3D
"object"){b=3Dc.param(b,c.ajaxSettings.traditional);e=3D"POST"}var =
h=3Dthis;c.ajax({url:a,type:e,dataType:"html",data:b,complete:function(l,=
k){if(k=3D=3D=3D"success"||k=3D=3D=3D"notmodified")h.html(f?c("<div>").ap=
pend(l.responseText.replace(nb,"")).find(f):l.responseText);d&&h.each(d,[=
l.responseText,k,l])}});return this},serialize:function(){return =
c.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?c.makeArray(this.elements):this}).filter(function(){return =
this.name&&
!this.disabled&&(this.checked||ob.test(this.nodeName)||pb.test(this.type)=
)}).map(function(a,b){var d=3Dc(this).val();return =
d=3D=3Dnull?null:c.isArray(d)?c.map(d,function(e){return{name:b.name,valu=
e:e}}):{name:b.name,value:d}}).get()}});c.each("ajaxStart ajaxStop =
ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" =
"),function(a,b){c.fn[b]=3Dfunction(d){return =
this.bind(b,d)}});c.extend({get:function(a,b,d,e){if(c.isFunction(b)){e=3D=
e||d;d=3Db;b=3Dnull}return =
c.ajax({type:"GET",url:a,data:b,success:d,dataType:e})},
getScript:function(a,b){return =
c.get(a,null,b,"script")},getJSON:function(a,b,d){return =
c.get(a,b,d,"json")},post:function(a,b,d,e){if(c.isFunction(b)){e=3De||d;=
d=3Db;b=3D{}}return =
c.ajax({type:"POST",url:a,data:b,success:d,dataType:e})},ajaxSetup:functi=
on(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,global:=
true,type:"GET",contentType:"application/x-www-form-urlencoded",processDa=
ta:true,async:true,xhr:function(){return new =
E.XMLHttpRequest},accepts:{xml:"application/xml, =
text/xml",html:"text/html",
script:"text/javascript, application/javascript",json:"application/json, =
text/javascript",text:"text/plain",_default:"*/*"}},ajax:function(a){var =
b=3Dc.extend(true,{},c.ajaxSettings,a),d,e,f,h=3Db.type.toUpperCase(),l=3D=
qb.test(h);b.url=3Db.url.replace(ub,"");b.context=3Da&&a.context!=3Dnull?=
a.context:b;if(b.data&&b.processData&&typeof =
b.data!=3D=3D"string")b.data=3Dc.param(b.data,b.traditional);if(b.dataTyp=
e=3D=3D=3D"jsonp"){if(h=3D=3D=3D"GET")T.test(b.url)||(b.url+=3D(ja.test(b=
.url)?"&":"?")+(b.jsonp||"callback")+"=3D?");else if(!b.data||
!T.test(b.data))b.data=3D(b.data?b.data+"&":"")+(b.jsonp||"callback")+"=3D=
?";b.dataType=3D"json"}if(b.dataType=3D=3D=3D"json"&&(b.data&&T.test(b.da=
ta)||T.test(b.url))){d=3Db.jsonpCallback||"jsonp"+mb++;if(b.data)b.data=3D=
(b.data+"").replace(T,"=3D"+d+"$1");b.url=3Db.url.replace(T,"=3D"+d+"$1")=
;b.dataType=3D"script";var =
k=3DE[d];E[d]=3Dfunction(m){if(c.isFunction(k))k(m);else{E[d]=3DB;try{del=
ete =
E[d]}catch(p){}}f=3Dm;c.handleSuccess(b,w,e,f);c.handleComplete(b,w,e,f);=
r&&r.removeChild(A)}}if(b.dataType=3D=3D=3D"script"&&b.cache=3D=3D=3Dnull=
)b.cache=3D
false;if(b.cache=3D=3D=3Dfalse&&l){var =
o=3Dc.now(),x=3Db.url.replace(rb,"$1_=3D"+o);b.url=3Dx+(x=3D=3D=3Db.url?(=
ja.test(b.url)?"&":"?")+"_=3D"+o:"")}if(b.data&&l)b.url+=3D(ja.test(b.url=
)?"&":"?")+b.data;b.global&&c.active++=3D=3D=3D0&&c.event.trigger("ajaxSt=
art");o=3D(o=3Dsb.exec(b.url))&&(o[1]&&o[1].toLowerCase()!=3D=3Dlocation.=
protocol||o[2].toLowerCase()!=3D=3Dlocation.host);if(b.dataType=3D=3D=3D"=
script"&&h=3D=3D=3D"GET"&&o){var =
r=3Dt.getElementsByTagName("head")[0]||t.documentElement,A=3Dt.createElem=
ent("script");if(b.scriptCharset)A.charset=3Db.scriptCharset;
A.src=3Db.url;if(!d){var =
C=3Dfalse;A.onload=3DA.onreadystatechange=3Dfunction(){if(!C&&(!this.read=
yState||this.readyState=3D=3D=3D"loaded"||this.readyState=3D=3D=3D"comple=
te")){C=3Dtrue;c.handleSuccess(b,w,e,f);c.handleComplete(b,w,e,f);A.onloa=
d=3DA.onreadystatechange=3Dnull;r&&A.parentNode&&r.removeChild(A)}}}r.ins=
ertBefore(A,r.firstChild);return B}var =
J=3Dfalse,w=3Db.xhr();if(w){b.username?w.open(h,b.url,b.async,b.username,=
b.password):w.open(h,b.url,b.async);try{if(b.data!=3Dnull&&!l||a&&a.conte=
ntType)w.setRequestHeader("Content-Type",
b.contentType);if(b.ifModified){c.lastModified[b.url]&&w.setRequestHeader=
("If-Modified-Since",c.lastModified[b.url]);c.etag[b.url]&&w.setRequestHe=
ader("If-None-Match",c.etag[b.url])}o||w.setRequestHeader("X-Requested-Wi=
th","XMLHttpRequest");w.setRequestHeader("Accept",b.dataType&&b.accepts[b=
.dataType]?b.accepts[b.dataType]+", */*; =
q=3D0.01":b.accepts._default)}catch(I){}if(b.beforeSend&&b.beforeSend.cal=
l(b.context,w,b)=3D=3D=3Dfalse){b.global&&c.active--=3D=3D=3D1&&c.event.t=
rigger("ajaxStop");w.abort();return false}b.global&&
c.triggerGlobal(b,"ajaxSend",[w,b]);var =
L=3Dw.onreadystatechange=3Dfunction(m){if(!w||w.readyState=3D=3D=3D0||m=3D=
=3D=3D"abort"){J||c.handleComplete(b,w,e,f);J=3Dtrue;if(w)w.onreadystatec=
hange=3Dc.noop}else =
if(!J&&w&&(w.readyState=3D=3D=3D4||m=3D=3D=3D"timeout")){J=3Dtrue;w.onrea=
dystatechange=3Dc.noop;e=3Dm=3D=3D=3D"timeout"?"timeout":!c.httpSuccess(w=
)?"error":b.ifModified&&c.httpNotModified(w,b.url)?"notmodified":"success=
";var =
p;if(e=3D=3D=3D"success")try{f=3Dc.httpData(w,b.dataType,b)}catch(q){e=3D=
"parsererror";p=3Dq}if(e=3D=3D=3D"success"||e=3D=3D=3D"notmodified")d||
c.handleSuccess(b,w,e,f);else =
c.handleError(b,w,e,p);d||c.handleComplete(b,w,e,f);m=3D=3D=3D"timeout"&&=
w.abort();if(b.async)w=3Dnull}};try{var =
g=3Dw.abort;w.abort=3Dfunction(){w&&Function.prototype.call.call(g,w);L("=
abort")}}catch(i){}b.async&&b.timeout>0&&setTimeout(function(){w&&!J&&L("=
timeout")},b.timeout);try{w.send(l||b.data=3D=3Dnull?null:b.data)}catch(n=
){c.handleError(b,w,null,n);c.handleComplete(b,w,e,f)}b.async||L();return=
 w}},param:function(a,b){var =
d=3D[],e=3Dfunction(h,l){l=3Dc.isFunction(l)?l():l;d[d.length]=3D
encodeURIComponent(h)+"=3D"+encodeURIComponent(l)};if(b=3D=3D=3DB)b=3Dc.a=
jaxSettings.traditional;if(c.isArray(a)||a.jquery)c.each(a,function(){e(t=
his.name,this.value)});else for(var f in a)da(f,a[f],b,e);return =
d.join("&").replace(tb,"+")}});c.extend({active:0,lastModified:{},etag:{}=
,handleError:function(a,b,d,e){a.error&&a.error.call(a.context,b,d,e);a.g=
lobal&&c.triggerGlobal(a,"ajaxError",[b,a,e])},handleSuccess:function(a,b=
,d,e){a.success&&a.success.call(a.context,e,d,b);a.global&&c.triggerGloba=
l(a,"ajaxSuccess",
[b,a])},handleComplete:function(a,b,d){a.complete&&a.complete.call(a.cont=
ext,b,d);a.global&&c.triggerGlobal(a,"ajaxComplete",[b,a]);a.global&&c.ac=
tive--=3D=3D=3D1&&c.event.trigger("ajaxStop")},triggerGlobal:function(a,b=
,d){(a.context&&a.context.url=3D=3Dnull?c(a.context):c.event).trigger(b,d=
)},httpSuccess:function(a){try{return!a.status&&location.protocol=3D=3D=3D=
"file:"||a.status>=3D200&&a.status<300||a.status=3D=3D=3D304||a.status=3D=
=3D=3D1223}catch(b){}return false},httpNotModified:function(a,b){var =
d=3Da.getResponseHeader("Last-Modified"),
e=3Da.getResponseHeader("Etag");if(d)c.lastModified[b]=3Dd;if(e)c.etag[b]=
=3De;return a.status=3D=3D=3D304},httpData:function(a,b,d){var =
e=3Da.getResponseHeader("content-type")||"",f=3Db=3D=3D=3D"xml"||!b&&e.in=
dexOf("xml")>=3D0;a=3Df?a.responseXML:a.responseText;f&&a.documentElement=
.nodeName=3D=3D=3D"parsererror"&&c.error("parsererror");if(d&&d.dataFilte=
r)a=3Dd.dataFilter(a,b);if(typeof =
a=3D=3D=3D"string")if(b=3D=3D=3D"json"||!b&&e.indexOf("json")>=3D0)a=3Dc.=
parseJSON(a);else =
if(b=3D=3D=3D"script"||!b&&e.indexOf("javascript")>=3D0)c.globalEval(a);r=
eturn a}});
if(E.ActiveXObject)c.ajaxSettings.xhr=3Dfunction(){if(E.location.protocol=
!=3D=3D"file:")try{return new E.XMLHttpRequest}catch(a){}try{return new =
E.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}};c.support.ajax=3D!!c.aja=
xSettings.xhr();var =
ea=3D{},vb=3D/^(?:toggle|show|hide)$/,wb=3D/^([+\-]=3D)?([\d+.\-]+)(.*)$/=
,ba,pa=3D[["height","marginTop","marginBottom","paddingTop","paddingBotto=
m"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["o=
pacity"]];c.fn.extend({show:function(a,b,d){if(a||a=3D=3D=3D0)return =
this.animate(S("show",
3),a,b,d);else{d=3D0;for(var =
e=3Dthis.length;d<e;d++){a=3Dthis[d];b=3Da.style.display;if(!c.data(a,"ol=
ddisplay")&&b=3D=3D=3D"none")b=3Da.style.display=3D"";b=3D=3D=3D""&&c.css=
(a,"display")=3D=3D=3D"none"&&c.data(a,"olddisplay",qa(a.nodeName))}for(d=
=3D0;d<e;d++){a=3Dthis[d];b=3Da.style.display;if(b=3D=3D=3D""||b=3D=3D=3D=
"none")a.style.display=3Dc.data(a,"olddisplay")||""}return =
this}},hide:function(a,b,d){if(a||a=3D=3D=3D0)return =
this.animate(S("hide",3),a,b,d);else{a=3D0;for(b=3Dthis.length;a<b;a++){d=
=3Dc.css(this[a],"display");d!=3D=3D"none"&&c.data(this[a],"olddisplay",
d)}for(a=3D0;a<b;a++)this[a].style.display=3D"none";return =
this}},_toggle:c.fn.toggle,toggle:function(a,b,d){var e=3Dtypeof =
a=3D=3D=3D"boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.appl=
y(this,arguments);else a=3D=3Dnull||e?this.each(function(){var =
f=3De?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(S=
("toggle",3),a,b,d);return this},fadeTo:function(a,b,d,e){return =
this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},=
a,d,e)},animate:function(a,b,d,e){var f=3Dc.speed(b,
d,e);if(c.isEmptyObject(a))return this.each(f.complete);return =
this[f.queue=3D=3D=3Dfalse?"each":"queue"](function(){var =
h=3Dc.extend({},f),l,k=3Dthis.nodeType=3D=3D=3D1,o=3Dk&&c(this).is(":hidd=
en"),x=3Dthis;for(l in a){var =
r=3Dc.camelCase(l);if(l!=3D=3Dr){a[r]=3Da[l];delete =
a[l];l=3Dr}if(a[l]=3D=3D=3D"hide"&&o||a[l]=3D=3D=3D"show"&&!o)return =
h.complete.call(this);if(k&&(l=3D=3D=3D"height"||l=3D=3D=3D"width")){h.ov=
erflow=3D[this.style.overflow,this.style.overflowX,this.style.overflowY];=
if(c.css(this,"display")=3D=3D=3D"inline"&&c.css(this,"float")=3D=3D=3D"n=
one")if(c.support.inlineBlockNeedsLayout)if(qa(this.nodeName)=3D=3D=3D
"inline")this.style.display=3D"inline-block";else{this.style.display=3D"i=
nline";this.style.zoom=3D1}else =
this.style.display=3D"inline-block"}if(c.isArray(a[l])){(h.specialEasing=3D=
h.specialEasing||{})[l]=3Da[l][1];a[l]=3Da[l][0]}}if(h.overflow!=3Dnull)t=
his.style.overflow=3D"hidden";h.curAnim=3Dc.extend({},a);c.each(a,functio=
n(A,C){var J=3Dnew =
c.fx(x,h,A);if(vb.test(C))J[C=3D=3D=3D"toggle"?o?"show":"hide":C](a);else=
{var w=3Dwb.exec(C),I=3DJ.cur()||0;if(w){var =
L=3DparseFloat(w[2]),g=3Dw[3]||"px";if(g!=3D=3D"px"){c.style(x,A,(L||1)+g=
);I=3D(L||
1)/J.cur()*I;c.style(x,A,I+g)}if(w[1])L=3D(w[1]=3D=3D=3D"-=3D"?-1:1)*L+I;=
J.custom(I,L,g)}else J.custom(I,C,"")}});return =
true})},stop:function(a,b){var =
d=3Dc.timers;a&&this.queue([]);this.each(function(){for(var =
e=3Dd.length-1;e>=3D0;e--)if(d[e].elem=3D=3D=3Dthis){b&&d[e](true);d.spli=
ce(e,1)}});b||this.dequeue();return =
this}});c.each({slideDown:S("show",1),slideUp:S("hide",1),slideToggle:S("=
toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{o=
pacity:"toggle"}},function(a,b){c.fn[a]=3Dfunction(d,e,f){return =
this.animate(b,
d,e,f)}});c.extend({speed:function(a,b,d){var e=3Da&&typeof =
a=3D=3D=3D"object"?c.extend({},a):{complete:d||!d&&b||c.isFunction(a)&&a,=
duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};e.duration=3Dc.fx.off?0:t=
ypeof e.duration=3D=3D=3D"number"?e.duration:e.duration in =
c.fx.speeds?c.fx.speeds[e.duration]:c.fx.speeds._default;e.old=3De.comple=
te;e.complete=3Dfunction(){e.queue!=3D=3Dfalse&&c(this).dequeue();c.isFun=
ction(e.old)&&e.old.call(this)};return =
e},easing:{linear:function(a,b,d,e){return =
d+e*a},swing:function(a,b,d,e){return(-Math.cos(a*
Math.PI)/2+0.5)*e+d}},timers:[],fx:function(a,b,d){this.options=3Db;this.=
elem=3Da;this.prop=3Dd;if(!b.orig)b.orig=3D{}}});c.fx.prototype=3D{update=
:function(){this.options.step&&this.options.step.call(this.elem,this.now,=
this);(c.fx.step[this.prop]||c.fx.step._default)(this)},cur:function(){if=
(this.elem[this.prop]!=3Dnull&&(!this.elem.style||this.elem.style[this.pr=
op]=3D=3Dnull))return this.elem[this.prop];var =
a=3DparseFloat(c.css(this.elem,this.prop));return =
a&&a>-1E4?a:0},custom:function(a,b,d){function e(l){return f.step(l)}
var =
f=3Dthis,h=3Dc.fx;this.startTime=3Dc.now();this.start=3Da;this.end=3Db;th=
is.unit=3Dd||this.unit||"px";this.now=3Dthis.start;this.pos=3Dthis.state=3D=
0;e.elem=3Dthis.elem;if(e()&&c.timers.push(e)&&!ba)ba=3DsetInterval(h.tic=
k,h.interval)},show:function(){this.options.orig[this.prop]=3Dc.style(thi=
s.elem,this.prop);this.options.show=3Dtrue;this.custom(this.prop=3D=3D=3D=
"width"||this.prop=3D=3D=3D"height"?1:0,this.cur());c(this.elem).show()},=
hide:function(){this.options.orig[this.prop]=3Dc.style(this.elem,this.pro=
p);this.options.hide=3Dtrue;
this.custom(this.cur(),0)},step:function(a){var =
b=3Dc.now(),d=3Dtrue;if(a||b>=3Dthis.options.duration+this.startTime){thi=
s.now=3Dthis.end;this.pos=3Dthis.state=3D1;this.update();this.options.cur=
Anim[this.prop]=3Dtrue;for(var e in =
this.options.curAnim)if(this.options.curAnim[e]!=3D=3Dtrue)d=3Dfalse;if(d=
){if(this.options.overflow!=3Dnull&&!c.support.shrinkWrapBlocks){var =
f=3Dthis.elem,h=3Dthis.options;c.each(["","X","Y"],function(k,o){f.style[=
"overflow"+o]=3Dh.overflow[k]})}this.options.hide&&c(this.elem).hide();if=
(this.options.hide||
this.options.show)for(var l in =
this.options.curAnim)c.style(this.elem,l,this.options.orig[l]);this.optio=
ns.complete.call(this.elem)}return =
false}else{a=3Db-this.startTime;this.state=3Da/this.options.duration;b=3D=
this.options.easing||(c.easing.swing?"swing":"linear");this.pos=3Dc.easin=
g[this.options.specialEasing&&this.options.specialEasing[this.prop]||b](t=
his.state,a,0,1,this.options.duration);this.now=3Dthis.start+(this.end-th=
is.start)*this.pos;this.update()}return =
true}};c.extend(c.fx,{tick:function(){for(var a=3D
c.timers,b=3D0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||c.fx.stop=
()},interval:13,stop:function(){clearInterval(ba);ba=3Dnull},speeds:{slow=
:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opa=
city",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=
=3Dnull)a.elem.style[a.prop]=3D(a.prop=3D=3D=3D"width"||a.prop=3D=3D=3D"h=
eight"?Math.max(0,a.now):a.now)+a.unit;else =
a.elem[a.prop]=3Da.now}}});if(c.expr&&c.expr.filters)c.expr.filters.anima=
ted=3Dfunction(a){return c.grep(c.timers,function(b){return a=3D=3D=3D
b.elem}).length};var =
xb=3D/^t(?:able|d|h)$/i,Ia=3D/^(?:body|html)$/i;c.fn.offset=3D"getBoundin=
gClientRect"in t.documentElement?function(a){var =
b=3Dthis[0],d;if(a)return =
this.each(function(l){c.offset.setOffset(this,a,l)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
c.offset.bodyOffset(b);try{d=3Db.getBoundingClientRect()}catch(e){}var =
f=3Db.ownerDocument,h=3Df.documentElement;if(!d||!c.contains(h,b))return =
d||{top:0,left:0};b=3Df.body;f=3Dfa(f);return{top:d.top+(f.pageYOffset||c=
.support.boxModel&&
h.scrollTop||b.scrollTop)-(h.clientTop||b.clientTop||0),left:d.left+(f.pa=
geXOffset||c.support.boxModel&&h.scrollLeft||b.scrollLeft)-(h.clientLeft|=
|b.clientLeft||0)}}:function(a){var b=3Dthis[0];if(a)return =
this.each(function(x){c.offset.setOffset(this,a,x)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
c.offset.bodyOffset(b);c.offset.initialize();var =
d,e=3Db.offsetParent,f=3Db.ownerDocument,h=3Df.documentElement,l=3Df.body=
;d=3D(f=3Df.defaultView)?f.getComputedStyle(b,null):b.currentStyle;
for(var =
k=3Db.offsetTop,o=3Db.offsetLeft;(b=3Db.parentNode)&&b!=3D=3Dl&&b!=3D=3Dh=
;){if(c.offset.supportsFixedPosition&&d.position=3D=3D=3D"fixed")break;d=3D=
f?f.getComputedStyle(b,null):b.currentStyle;k-=3Db.scrollTop;o-=3Db.scrol=
lLeft;if(b=3D=3D=3De){k+=3Db.offsetTop;o+=3Db.offsetLeft;if(c.offset.does=
NotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&xb.test(b.nodeNam=
e))){k+=3DparseFloat(d.borderTopWidth)||0;o+=3DparseFloat(d.borderLeftWid=
th)||0}e=3Db.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisibl=
e&&d.overflow!=3D=3D"visible"){k+=3D
parseFloat(d.borderTopWidth)||0;o+=3DparseFloat(d.borderLeftWidth)||0}d=3D=
d}if(d.position=3D=3D=3D"relative"||d.position=3D=3D=3D"static"){k+=3Dl.o=
ffsetTop;o+=3Dl.offsetLeft}if(c.offset.supportsFixedPosition&&d.position=3D=
=3D=3D"fixed"){k+=3DMath.max(h.scrollTop,l.scrollTop);o+=3DMath.max(h.scr=
ollLeft,l.scrollLeft)}return{top:k,left:o}};c.offset=3D{initialize:functi=
on(){var =
a=3Dt.body,b=3Dt.createElement("div"),d,e,f,h=3DparseFloat(c.css(a,"margi=
nTop"))||0;c.extend(b.style,{position:"absolute",top:0,left:0,margin:0,bo=
rder:0,width:"1px",
height:"1px",visibility:"hidden"});b.innerHTML=3D"<div =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;'><div></div></div><table =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;' cellpadding=3D'0' =
cellspacing=3D'0'><tr><td></td></tr></table>";a.insertBefore(b,a.firstChi=
ld);d=3Db.firstChild;e=3Dd.firstChild;f=3Dd.nextSibling.firstChild.firstC=
hild;this.doesNotAddBorder=3De.offsetTop!=3D=3D5;this.doesAddBorderForTab=
leAndCells=3D
f.offsetTop=3D=3D=3D5;e.style.position=3D"fixed";e.style.top=3D"20px";thi=
s.supportsFixedPosition=3De.offsetTop=3D=3D=3D20||e.offsetTop=3D=3D=3D15;=
e.style.position=3De.style.top=3D"";d.style.overflow=3D"hidden";d.style.p=
osition=3D"relative";this.subtractsBorderForOverflowNotVisible=3De.offset=
Top=3D=3D=3D-5;this.doesNotIncludeMarginInBodyOffset=3Da.offsetTop!=3D=3D=
h;a.removeChild(b);c.offset.initialize=3Dc.noop},bodyOffset:function(a){v=
ar =
b=3Da.offsetTop,d=3Da.offsetLeft;c.offset.initialize();if(c.offset.doesNo=
tIncludeMarginInBodyOffset){b+=3DparseFloat(c.css(a,
"marginTop"))||0;d+=3DparseFloat(c.css(a,"marginLeft"))||0}return{top:b,l=
eft:d}},setOffset:function(a,b,d){var =
e=3Dc.css(a,"position");if(e=3D=3D=3D"static")a.style.position=3D"relativ=
e";var =
f=3Dc(a),h=3Df.offset(),l=3Dc.css(a,"top"),k=3Dc.css(a,"left"),o=3De=3D=3D=
=3D"absolute"&&c.inArray("auto",[l,k])>-1;e=3D{};var =
x=3D{};if(o)x=3Df.position();l=3Do?x.top:parseInt(l,10)||0;k=3Do?x.left:p=
arseInt(k,10)||0;if(c.isFunction(b))b=3Db.call(a,d,h);if(b.top!=3Dnull)e.=
top=3Db.top-h.top+l;if(b.left!=3Dnull)e.left=3Db.left-h.left+k;"using"in =
b?b.using.call(a,
e):f.css(e)}};c.fn.extend({position:function(){if(!this[0])return =
null;var =
a=3Dthis[0],b=3Dthis.offsetParent(),d=3Dthis.offset(),e=3DIa.test(b[0].no=
deName)?{top:0,left:0}:b.offset();d.top-=3DparseFloat(c.css(a,"marginTop"=
))||0;d.left-=3DparseFloat(c.css(a,"marginLeft"))||0;e.top+=3DparseFloat(=
c.css(b[0],"borderTopWidth"))||0;e.left+=3DparseFloat(c.css(b[0],"borderL=
eftWidth"))||0;return{top:d.top-e.top,left:d.left-e.left}},offsetParent:f=
unction(){return this.map(function(){for(var =
a=3Dthis.offsetParent||t.body;a&&!Ia.test(a.nodeName)&&
c.css(a,"position")=3D=3D=3D"static";)a=3Da.offsetParent;return =
a})}});c.each(["Left","Top"],function(a,b){var =
d=3D"scroll"+b;c.fn[d]=3Dfunction(e){var f=3Dthis[0],h;if(!f)return =
null;if(e!=3D=3DB)return =
this.each(function(){if(h=3Dfa(this))h.scrollTo(!a?e:c(h).scrollLeft(),a?=
e:c(h).scrollTop());else this[d]=3De});else =
return(h=3Dfa(f))?"pageXOffset"in =
h?h[a?"pageYOffset":"pageXOffset"]:c.support.boxModel&&h.document.documen=
tElement[d]||h.document.body[d]:f[d]}});c.each(["Height","Width"],functio=
n(a,b){var d=3Db.toLowerCase();
c.fn["inner"+b]=3Dfunction(){return =
this[0]?parseFloat(c.css(this[0],d,"padding")):null};c.fn["outer"+b]=3Dfu=
nction(e){return =
this[0]?parseFloat(c.css(this[0],d,e?"margin":"border")):null};c.fn[d]=3D=
function(e){var f=3Dthis[0];if(!f)return =
e=3D=3Dnull?null:this;if(c.isFunction(e))return =
this.each(function(l){var =
k=3Dc(this);k[d](e.call(this,l,k[d]()))});if(c.isWindow(f))return =
f.document.compatMode=3D=3D=3D"CSS1Compat"&&f.document.documentElement["c=
lient"+b]||f.document.body["client"+b];else =
if(f.nodeType=3D=3D=3D9)return Math.max(f.documentElement["client"+
b],f.body["scroll"+b],f.documentElement["scroll"+b],f.body["offset"+b],f.=
documentElement["offset"+b]);else if(e=3D=3D=3DB){f=3Dc.css(f,d);var =
h=3DparseFloat(f);return c.isNaN(h)?f:h}else return this.css(d,typeof =
e=3D=3D=3D"string"?e:e+"px")}})})(window);

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/ad.js?v=1.1

=EF=BB=BFvar home_domain =3D "blog.csdn.net";
var ad_cnt =3D ad_cnt || 0;

/*CSDN=E5=B9=BF=E5=91=8A=E5=BB=B6=E8=BF=9F=E5=8A=A0=E8=BD=BD =
t:=E5=B9=BF=E5=91=8A=E7=B1=BB=E5=9E=8B=EF=BC=8C=E6=95=B0=E5=AD=97=EF=BC=9B=
id:=E5=AE=B9=E5=99=A8id*/
var Ad =3D function (t, id) {
    this.adType =3D t;
    this.containerId =3D id;
    this.adIndex =3D ad_cnt++;

    this.loadAd =3D function () {
        //document.domain =3D "csdn.net";

        var container =3D document.getElementById(this.containerId);
        var width =3D container.offsetWidth - 2 - =
container.style.paddingLeft - container.style.paddingRight;
        //var height =3D container.offsetHeight - 2 - =
container.style.paddingTop - container.style.paddingBottom;

        var frm =3D document.createElement('iframe');
        frm.id =3D "ad_frm_" + this.adIndex;
        frm.frameBorder =3D "0";
        frm.scrolling =3D "no";
        frm.style.borderWidth =3D "0px";
        frm.style.overflow =3D "hidden";
        if (width > 0) frm.style.width =3D width + "px";
        else frm.style.width =3D "98%";
        frm.style.height =3D "0px";
        frm.src =3D "http://" + home_domain + "/common/ad.html"
            + "?t=3D" + this.adType
            + "&containerId=3D" + this.containerId
            + "&frmId=3D" + frm.id;
        container.appendChild(frm);
    };
    if (jQuery) {
        jQuery((function (_ad) {
            return function () { _ad.loadAd(); }
        })(this));
    } else {
        this.loadAd();
    }
};
/*pongo=E5=B9=BF=E5=91=8A=E5=BB=B6=E8=BF=9F=E5=8A=A0=E8=BD=BD =
id:=E5=B9=BF=E5=91=8Aid=EF=BC=9BcontinerId:=E5=AE=B9=E5=99=A8id*/
var PongoAd =3D function (id, continerId) {
    var func =3D 'window.showad' + id + =
'=3Dfunction(html){document.getElementById("' + continerId + =
'").innerHTML=3Dhtml;}';
    eval(func);
    function loadad(id) {
        var url =3D encodeURIComponent(top.location.href);
        var cbfun =3D "showad" + id;
        var src =3D 'http://a.pongo.cn/Job/GetAdForCallBack?id=3D' + id =
+ '&UrlAdParam=3D' + encodeURIComponent(url) + '&CallBack=3D' + cbfun;
        var sc =3D document.createElement('script');
        sc.type =3D 'text/javascript';=20
        sc.async =3D true;
        sc.src =3D src;
        document.body.appendChild(sc);
    }
    setTimeout(function () { loadad(id); }, 1000);
};
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/js/html.js

var _gaq =3D [];
var userAgent =3D navigator.userAgent.toLowerCase();
// if(userAgent =3D=3D null || userAgent =3D=3D ''){
// //
// }else{
//     if(userAgent.indexOf("android") !=3D -1 || =
userAgent.indexOf("ios") !=3D -1 || userAgent.indexOf("iphone") !=3D -1 =
|| userAgent.indexOf("ipad") !=3D -1 || userAgent.indexOf("windows =
phone") !=3D -1 ){

//   	}else{
//   	  //google =E7=BB=9F=E8=AE=A1start
//   	  =
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=3Dr;i[r]=3Di[r]||func=
tion(){
//   		  (i[r].q=3Di[r].q||[]).push(arguments)},i[r].l=3D1*new =
Date();a=3Ds.createElement(o),
//   		  =
m=3Ds.getElementsByTagName(o)[0];a.async=3D1;a.src=3Dg;m.parentNode.inser=
tBefore(a,m)
//   		  =
})(window,document,'script','//www.google-analytics.com/analytics.js','ga=
');

//   		  ga('create', 'UA-64962204-1', 'auto');
//   		  ga('send', 'pageview');
//         //google =E7=BB=9F=E8=AE=A1end
//    }
// }

//tag=E6=8E=A8=E8=8D=90=E5=BC=B9=E7=AA=97
(function(){
var protocol =3D location.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
$.getScript(protocol + =
'//csdnimg.cn/public/common/tag-suggest-pop/js/main.js?'+(new =
Date()/120000|0));
})();

!(function(){
  var currUser=3D{
      userName:"",
      userNick:'<a class=3D"set-nick" =
href=3D"https://passport.csdn.net/account/profile">=E8=AE=BE=E7=BD=AE=E6=98=
=B5=E7=A7=B0<span class=3D"write-icon"></span></a>',
      userInfo:"",
      desc : '<a class=3D"fill-dec" href=3D"//my.csdn.net" =
target=3D"_blank">=E7=BC=96=E8=BE=91=E8=87=AA=E6=88=91=E4=BB=8B=E7=BB=8D=EF=
=BC=8C=E8=AE=A9=E6=9B=B4=E5=A4=9A=E4=BA=BA=E4=BA=86=E8=A7=A3=E4=BD=A0<spa=
n class=3D"write-icon"></span></a>',
      avatar:"//c.csdnimg.cn/public/common/toolbar/images/100x100.jpg"
    };
  var prodLogo =3D "none";
  var $oScriptTag =3D$("#toolbar-tpl-scriptId");
  var skin =3D$oScriptTag.attr("skin")=3D=3D"black"?" =
csdn-toolbar-skin-black ":"";
  var fixed =3D $oScriptTag.attr("fixed")=3D=3D"top"?" navbar-fixed-top =
":"";
  var prodIndex=3D =
$oScriptTag.attr("domain")?$oScriptTag.attr("domain"):window.location.pro=
tocol+"//"+window.location.host;
      prodIndex+=3D'?ref=3Dtoolbar_logo';
  var getCookie =3Dfunction =
(objName){//=E8=8E=B7=E5=8F=96=E6=8C=87=E5=AE=9A=E5=90=8D=E7=A7=B0=E7=9A=84=
cookie=E7=9A=84=E5=80=BC
      var arrStr =3D document.cookie.split("; ");
      for(var i =3D 0;i < arrStr.length;i ++){
      var temp =3D arrStr[i].split("=3D");
      if(temp[0] =3D=3D objName) return decodeURI(temp[1]);
      }
  }
  var setCookie =3D function (name,value) {
    var Days =3D 30;
    var exp =3D new Date();
    exp.setTime(exp.getTime() + Days*24*60*60*1000);
    document.cookie =3D name + "=3D"+ escape (value) + ";expires=3D" + =
exp.toGMTString();// + ";domain=3D.csdn.net;path=3D/";
  }
  var HTMLEncode =3Dfunction(str) {
      var s =3D "";
      if(str.length =3D=3D 0) return "";
      s =3D str.replace(/&/g, "&amp;").replace(/</g, =
"&lt;").replace(/>/g, "&gt;").replace(/\'/g, "&#39;").replace(/\"/g, =
"&quot;");
      return s;
    }
  var AUtoAvatar =3D function(AU){
    if(!AU||!currUser.userName){
      return false;
    }
    var _AUPath =3D AU.split("").join("/");
    var userName =3D currUser.userName&&currUser.userName.toLowerCase();
    return "http://avatar.csdn.net/"+_AUPath+"/2_"+userName+".jpg";
  }
  var hasLogin =3D false;
  var loginMark =3D"unlogin";
  function checkLogin(callback) {
          currUser.userNick =3D getCookie("UserNick") =
||currUser.userNick;
          currUser.userName =3D getCookie("UserName") || =
currUser.userName;
          currUser.userInfo =3D getCookie("UserInfo") || =
currUser.userInfo;
          currUser.avatar =3D AUtoAvatar(getCookie("AU")) || =
currUser.avatar;
          currUser.desc =3D getCookie("UD") || currUser.desc;
          if(getCookie("UD")){
            currUser.desc =3D =
HTMLEncode(decodeURIComponent(currUser.desc).replace(/\+/g," "));
          }
          callback(currUser);
    }
  checkLogin(function(currUser){
    if(currUser.userName&&currUser.userInfo){
        hasLogin =3D true;
    }
    loginMark =3D hasLogin?"":"unlogin";
  })

  /*
  * init pord logo
  */
  var prodJSON =3D {
      "blog" : "blog-icon",
      "download" : "down-icon",
      "bbs" : "bbs-icon",
      "my" :"space-icon",
      "code" : "code-icon",
      "share" : "share-icon",
      "tag" : "tag-icon",
      "dashboard":"dashboard-icon",
      "news" : "news-icon",
      "tag" : "tag-icon",
      "ask" : "ask-icon",
      "notify" : "notify-icon"
  }
  if(prodJSON[$oScriptTag.attr("prod")]){
    =
prodLogo=3DprodJSON[$oScriptTag.attr("prod")]||$oScriptTag.attr("prod");
  }

  // $( 'head' ).append( '<link rel=3D"stylesheet" =
href=3D"//csdnimg.cn/public/common/toolbar/css/font-awesome.min.css">' =
);
  // =
=E6=B3=A8=E5=86=8Curl=EF=BC=8Chttps://passport.csdn.net/account/register?=
ref=3Dtoolbar

  var tpl =3D'\<div class=3D"csdn-toolbar'+skin+fixed+'">\
        <div class=3D"container row center-block ">\
          <div class=3D"col-md-3 pull-left logo clearfix"><a =
href=3D"http://www.csdn.net?ref=3Dtoolbar" =
title=3D"CSDN=E9=A6=96=E9=A1=B5" target=3D"_blank" class=3D"icon"></a><a =
title=3D"=E9=A2=91=E9=81=93=E9=A6=96=E9=A1=B5" href=3D"'+prodIndex+'" =
class=3D"img '+prodLogo+'"></a></div>\
          <div class=3D"pull-right login-wrap '+loginMark+'">\
            <ul class=3D"btns">\
              <li class=3D"loginlink"><a =
href=3D"https://passport.csdn.net/account/login?ref=3Dtoolbar" =
target=3D"_top">=E7=99=BB=E5=BD=95&nbsp;</a>|<a  target=3D"_top" =
href=3D"http://passport.csdn.net/account/mobileregister?ref=3Dtoolbar&act=
ion=3DmobileRegister">&nbsp;=E6=B3=A8=E5=86=8C</a></li>\
              <li class=3D"search">\
                <div class=3D"icon on-search-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <form action=3D"http://so.csdn.net/search" =
method=3D"get" target=3D"_blank">\
                      <input type=3D"hidden" value=3D"toolbar" =
name=3D"ref" accesskey=3D"2">\
                      <div class=3D"border">\
                        <input placeholder=3D"=E6=90=9C=E7=B4=A2" =
type=3D"text" value=3D"" name=3D"q" accesskey=3D"2"><span =
class=3D"icon-enter-sm"></span>\
                      </div>\
                    </form>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"favor">\
                <div class=3D"icon on-favor-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div style=3D"display:none;" =
class=3D"favor-success"><span =
class=3D"msg">=E6=94=B6=E8=97=8F=E6=88=90=E5=8A=9F</span>\
                      <div class=3D"btns"><span class=3D"btn btn-primary =
ok">=E7=A1=AE=E5=AE=9A</span></div>\
                    </div>\
                    <div style=3D"display:none;" =
class=3D"favor-failed"><span class=3D"icon-danger-lg"></span><span =
class=3D"msg">=E6=94=B6=E8=97=8F=E5=A4=B1=E8=B4=A5=EF=BC=8C=E8=AF=B7=E9=87=
=8D=E6=96=B0=E6=94=B6=E8=97=8F</span>\
                      <div class=3D"btns"><span class=3D"btn btn-primary =
ok">=E7=A1=AE=E5=AE=9A</span></div>\
                    </div>\
                    <form role=3D"form" class=3D"form-horizontal =
favor-form">\
                      <div class=3D"form-group">\
                        <div class=3D"clearfix">\
                          <label for=3D"input-title" class=3D"col-sm-2 =
control-label">=E6=A0=87=E9=A2=98</label>\
                          <div class=3D"col-sm-10">\
                            <input id=3D"inputTitle" type=3D"text" =
placeholder=3D"" class=3D"title form-control">\
                          </div>\
                        </div>\
                        <div class=3D"alert =
alert-danger"><strong></strong>=E6=A0=87=E9=A2=98=E4=B8=8D=E8=83=BD=E4=B8=
=BA=E7=A9=BA</div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-url" class=3D"col-sm-2 =
control-label">=E7=BD=91=E5=9D=80</label>\
                        <div class=3D"col-sm-10">\
                          <input id=3D"input-url" type=3D"text" =
placeholder=3D"" class=3D"url form-control">\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-tag" class=3D"col-sm-2 tag =
control-label">=E6=A0=87=E7=AD=BE</label>\
                        <div class=3D"col-sm-10">\
                          <input id=3D"input-tag" type=3D"text" =
class=3D"form-control tag">\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-description" =
class=3D"description col-sm-2 control-label">=E6=91=98=E8=A6=81</label>\
                        <div class=3D"col-sm-10">\
                          <textarea id=3D"input-description" =
class=3D"form-control description"></textarea>\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <div class=3D"col-sm-offset-2 col-sm-10 ft">\
                          <div class=3D"col-sm-4 pull-left">\
                            <div class=3D"checkbox">\
                              <label>\
                                <input type=3D"checkbox" name=3D"share" =
checked=3D"checked" class=3D"share">=E5=85=AC=E5=BC=80\
                              </label>\
                            </div>\
                          </div>\
                          <div class=3D"col-sm-8 pull-right =
favor-btns">\
                            <button type=3D"button" class=3D"cancel btn =
btn-default">=E5=8F=96=E6=B6=88</button>\
                            <button type=3D"submit" class=3D"submit btn =
btn-primary">=E6=94=B6=E8=97=8F</button>\
                          </div>\
                        </div>\
                      </div>\
                    </form>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"notify">\
                <div style=3D"display:none" class=3D"number"></div>\
                <div style=3D"display:none" =
class=3D"icon-hasnotes-sm"></div>\
                <div id=3D"header_notice_num"></div>\
                <div class=3D"icon on-notify-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div id=3D"note1" class=3D"csdn_note">\
                      <div class=3D"box"></div>\
                    </div>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"ugc">\
                <div class=3D"icon on-ugc-icon">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <dl>\
                      <dt><a =
href=3D"http://geek.csdn.net/news/expert?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-news clearfix" style=3D"display:none;"><em =
class=3D"icon"></em><span>=E5=88=86=E4=BA=AB=E8=B5=84=E8=AE=AF</span></a>=
</dt>\
                      <dt style=3D"border: none;"><a =
href=3D"http://u.download.csdn.net/upload?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-doc clearfix"><em =
class=3D"icon"></em><span>=E4=BC=A0PPT/=E6=96=87=E6=A1=A3</span></a></dt>=
\
                      <dt><a =
href=3D"http://bbs.csdn.net/topics/new?ref=3Dtoolbar" target=3D"_blank" =
class=3D"p-ask clearfix"><em =
class=3D"icon"></em><span>=E6=8F=90=E9=97=AE=E9=A2=98</span></a></dt>\
                      <dt><a =
href=3D"http://write.blog.csdn.net/postedit?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-blog clearfix"><em =
class=3D"icon"></em><span>=E5=86=99=E5=8D=9A=E5=AE=A2</span></a></dt>\
                      <dt><a =
href=3D"http://u.download.csdn.net/upload?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-src clearfix"><em =
class=3D"icon"></em><span>=E4=BC=A0=E8=B5=84=E6=BA=90</span></a></dt>\
                      <dt><a =
href=3D"https://code.csdn.net/projects/new?ref=3Dtoolbar" =
target=3D"_blank" class=3D"c-obj clearfix"><em =
class=3D"icon"></em><span>=E5=88=9B=E5=BB=BA=E9=A1=B9=E7=9B=AE</span></a>=
</dt>\
                      <dt><a =
href=3D"https://code.csdn.net/snippets/new?ref=3Dtoolbar" =
target=3D"_blank" class=3D"c-code clearfix"><em =
class=3D"icon"></em><span>=E5=88=9B=E5=BB=BA=E4=BB=A3=E7=A0=81=E7=89=87</=
span></a></dt>\
                    </dl>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"profile">\
                <div class=3D"icon on-profile-icon"><img =
src=3D"'+currUser.avatar+'" class=3D"curr-icon-img">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div class=3D"bd">\
                      <dl class=3D"clearfix">\
                        <dt class=3D"pull-left img"><a target=3D"_blank" =
href=3D"http://my.csdn.net?ref=3Dtoolbar" class=3D"avatar"><img =
src=3D"'+currUser.avatar+'"></a></dt>\
                        <dd class=3D"info" style=3D"border: none;"><a =
target=3D"_blank" href=3D"http://my.csdn.net?ref=3Dtoolbar" =
class=3D"nickname">'+currUser.userNick+'</a><span =
class=3D"dec">'+currUser.desc+'</span></dd>\
                      </dl>\
                    </div>\
                    <div class=3D"ft clearfix"><a target=3D"_blank" =
href=3D"http://my.csdn.net/my/account/changepwd?ref=3Dtoolbar" =
class=3D"pull-left"><span =
class=3D"icon-cog"></span>=E5=B8=90=E5=8F=B7=E8=AE=BE=E7=BD=AE</a><a =
href=3D"https://passport.csdn.net/account/logout?ref=3Dtoolbar"  =
target=3D"_top" class=3D"pull-left" style=3D"margin-left:132px; =
width:18px; height:27px; white-space:nowrap; overflow:hidden;"><span =
class=3D"icon-signout"></span><span =
class=3D"out">=E9=80=80=E5=87=BA</span></a></div>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"apps">\
                <div id=3D"chasnew123" class=3D"hasnew"></div>\
                <div id=3D"cappsarea123" class=3D"icon on-apps-icon">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                  <div class=3D"detail">\
                    <dl>\
                      <dt>\
                        <h5>=E7=A4=BE=E5=8C=BA</h5>\
                      </dt>\
                      <dd> <a =
href=3D"http://blog.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E5=8D=9A=E5=AE=A2</a></dd>\
                      <dd> <a href=3D"http://bbs.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E8=AE=BA=E5=9D=9B</a></dd>\
                      <dd> <a =
href=3D"http://download.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E4=B8=8B=E8=BD=BD</a></dd>\
                      <dd><a href=3D"http://ask.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94</a></dd>\
                      <dd><a href=3D"http://geek.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E6=9E=81=E5=AE=A2=E5=A4=B4=E6=9D=A1</a></dd>\
                      <dd style=3D"display:none"> <a =
href=3D"http://hero.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E8=8B=B1=E9=9B=84=E4=BC=9A</a></dd>\
                    </dl>\
                  </div>\
                  <div class=3D"detail">\
                    <dl>\
                      <dt>\
                        <h5>=E6=9C=8D=E5=8A=A1</h5>\
                      </dt>\
                      <dd style=3D"display:none"> <a =
href=3D"http://job.csdn.net?ref=3Dtoolbar" target=3D"_blank">JOB<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                      <dd> <a href=3D"http://edu.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E5=AD=A6=E9=99=A2<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                      <dd> <a =
href=3D"https://code.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">CODE</a></dd>\
                      <dd> <a =
href=3D"http://huiyi.csdn.net/?ref=3Dtoolbar" =
target=3D"_blank">=E6=B4=BB=E5=8A=A8</a></dd>\
                      <dd> <a href=3D"http://www.csto.com?ref=3Dtoolbar" =
target=3D"_blank">CSTO</a></dd>\
                      <dd> <a =
href=3D"http://mall.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">C=E5=B8=81=E5=85=91=E6=8D=A2<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                    </dl>\
                  </div>\
                  <div class=3D"detail last">\
                    <dl>\
                      <dt>\
                        <h5>=E4=BF=B1=E4=B9=90=E9=83=A8</h5>\
                      </dt>\
                      <dd> <a href=3D"http://cto.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">CTO=E4=BF=B1=E4=B9=90=E9=83=A8</a></dd>\
                      <dd> <a =
href=3D"http://student.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E9=AB=98=E6=A0=A1=E4=BF=B1=E4=B9=90=E9=83=A8</a></dd>\=

                    </dl>\
                  </div>\
                </div>\
              </div>\
            </li>\
            </ul>\
          </div>\
        </div>\
    </div>';
  $(document.body).append($(tpl));
  $("#chasnew123").hide();
  //var newTag =3D true;
  //if (newTag) {
  //  var hasNew =3D getCookie("csdn_has_new_product");
  //  if (hasNew =3D=3D "2")
  //    $("#chasnew123").hide();
  //  else {
  //    $("#cappsarea123").one("mouseover", function () {
  //      setCookie("csdn_has_new_product", "2");
  //      $("#chasnew123").hide();
  //    });
  //  }
  //}
})();

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://creatim.qtmojo.cn/td/AllyesDeliver.min.js

/*!=0A=
*description: is to deliver third party ads on imedia platform=0A=
*callback: <script src=3D"cdn/ADcallback.min.js"></script>=0A=
*refer:2.0->imedia2.7, 2.1->imedia2.7.1, 2.2->imedia2.8, =
2.2.1->imedia2.8.1=0A=
*date:2014.3.26=0A=
*version:2.2.1=0A=
*email:lei_ding@allyes.com=0A=
*/=0A=
!function(a){var =
b=3Da.document,c=3D"delay.min.js",d=3D"close.gif",e=3Dfunction(a){var =
b=3Da[a.length-1];return"?"!=3Db&&"&"!=3Db&&(a+=3D-1=3D=3Da.lastIndexOf("=
?")?"?":"&"),a},f=3Dfunction(a){var b=3D/(chrome)[ =
\/]([\w.]+)/.exec(a)||/(webkit)[ =
\/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ =
\/]([\w.]+)/.exec(a)||/(msie) =
([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? =
rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}}(na=
vigator.userAgent.toLowerCase()),g=3D"msie"=3D=3D=3Df.browser,h=3Dg&&"6.0=
"=3D=3D=3Df.version,i=3Dfunction(a){return =
parseInt(a)},j=3Dfunction(){var =
a=3D!0;try{a=3DAllyesDeliver.ins,a=3Da?a.getAttribute("ads-debug"):null,a=
=3D"1"=3D=3D=3Da||"true"=3D=3D=3Da}catch(b){}return =
a},k=3Dfunction(b){if(j()){try{b=3D"string"=3D=3Dtypeof b?b:b instanceof =
Error?b.message:JSON&&JSON.stringify(b)}catch(c){b=3D"JSON =
undefined!"}a.console&&console.log(b)}},l=3Dfunction(){return =
Math.ceil(1e10*Math.random()).toString(16)},m=3Dfunction(a){var c;return =
a=3Da||b,c=3Da.getElementsByTagName("script"),c.length?c[c.length-1]:!1},=
n=3Dfunction(a,b){var c=3Dnull;for(c in =
b)b.hasOwnProperty(c)&&(a[c]=3Db[c]);return =
a},o=3D"js=3Die",p=3D"lsid=3D",q=3D"sid=3D",r=3D{Head:"javascript",Void:"=
void"},s=3Dfunction(a){k("start callback checking...");var =
b=3Dfunction(){e&&(clearInterval(e),e=3Dnull),f&&(clearTimeout(f),f=3Dnul=
l),k("clear callback checking.")},c=3D8,d=3Dfunction(a){var =
e,f,g,h=3Dfunction(){b(),AllyesDeliver.next("mm")};try{if(a.frames.length=
>=3Dc)return void =
h()}catch(i){}for(f=3D0,g=3Da.length;g>f;f++){e=3Da[f];try{if(e.frames.le=
ngth>=3Dc)return void =
h();e.frames.length&&d(e.frames)}catch(i){}}},e=3DsetInterval(function(){=
d(a)},50),f=3DsetTimeout(function(){b()},5e3);return =
b},t=3Dfunction(a,b){return k("start =
settimeout..."),setTimeout(function(a){var =
b=3Du("#"+a),c=3Db.getAttribute("ads-tid");return =
function(){k("timeout"),w(c)?k("has =
ads."):AllyesDeliver.next("mm",a)}}(a),b)},u=3Dfunction(a,c){var =
d=3Dnull;return =
c=3Dc||b,0=3D=3D=3Da.indexOf("#")?(a=3Da.substr(1),d=3Dc.getElementById(a=
)):(d=3Dc.getElementsByTagName(a),d=3Dd.length?d:null),d},v=3D["a","img",=
"object","embed","div","ins","span","iframe","canvas","vedio","svg","vml"=
],w=3Dfunction(a){var =
b=3D0,c=3Dv.length,d=3Du("#"+a);if(!d)return!0;for(;c>b;b++)if(u(v[b],d))=
return!0;return!1},x=3Dfunction(a){return =
a.parent!=3D=3Da.self},y=3Dfunction(a){var =
b;try{a.document,b=3D!0}catch(c){b=3D!1}return =
b},z=3Dfunction(){return"undefined"!=3Dtypeof =
allyes_wrap_201314&&allyes_wrap_201314},A=3Dfunction(a){return =
z()?!1:x(a)&&y(a.parent)&&a.parent.AllyesDeliver&&a.location.href=3D=3D=3D=
a.parent.location.href},B=3Dfunction(a){for(;y(a.parent)&&x(a);)a=3Da.par=
ent;return{win:a}},C=3Dfunction(){var b,c=3D"",d=3Da;return =
x(d)?(b=3DB(d),c=3Db.win=3D=3D=3Dd.top?b.win.location.href:b.win.document=
.referrer):c=3Dd.location.href,c},D=3D{add:function(b,c,d){a.addEventList=
ener?b.addEventListener(c,d,!1):a.attachEvent&&b.attachEvent("on"+c,d)},c=
lear:function(b,c,d){a.removeEventListener?b.removeEventListener(c,d,!1):=
a.detachEvent&&b.detachEvent("on"+c,d)},once:function(a,b,c){var =
d=3Dthis,e=3Dfunction(){c.apply(a,arguments),d.clear(a,b,e)};d.add(a,b,e)=
}},E=3Dfunction(a,c,d,e){var f;if("string"=3D=3Dtypeof =
a&&(a=3D0=3D=3D=3Da.indexOf("#")?u(a):b.createElement(a)),!a)return =
null;c=3Dc||{},d=3Dd||{};for(f in =
c)c.hasOwnProperty(f)&&a.setAttribute(f,c[f]);if(f=3Dnull,"string"=3D=3Dt=
ypeof d)a.style.cssText=3Dd;else for(f in =
d)d.hasOwnProperty(f)&&(a.style[f]=3Dd[f]);return =
e=3De||null,e&&(a.innerHTML=3De),a},F=3Dfunction(a,b){var =
c,e,f,g=3Du("#"+a),h=3Dg.getAttribute("ads-outer"),i=3Dg.getAttribute("ad=
s-close"),j=3Du("#wrap_"+a),k=3Du("#pos_"+a),l=3D19,m=3D["margin:0;border=
:0;padding:0;position:fixed;_position:absolute;z-index:9999;"],n=3DAllyes=
Deliver.cdnSrc(d,g),o=3D"display:block;cursor:pointer;width:34px;height:1=
9px;border:none;margin:0;padding:0;position:absolute;top:0;right:0;z-inde=
x:99999;background:transparent url("+n+") =
no-repeat;",p=3Du("#close_"+a);switch(p&&p.parentNode.removeChild(p),"1"=3D=
=3D=3Di?(e=3Db[1]+l,m.push("width:"+b[0]+"px;height:"+e+"px;"),p=3DE("div=
",{id:["close","_",a].join("")},"position:relative;margin:0;border:0;padd=
ing:0;height:"+l+"px;"),j.parentNode.insertBefore(p,j),f=3DE("span",null,=
o),p.appendChild(f),p=3Df):(e=3Db[1],m.push("width:"+b[0]+"px;height:"+b[=
1]+"px;"),p=3DE("div",{id:["close","_",a].join("")},o),j.parentNode.inser=
tBefore(p,j)),D.add(p,"click",function(){return =
k.style.display=3D"none",!1}),"0"=3D=3D=3Di&&(p.style.display=3D"none"),h=
){case"1":m.push("left:0;top:0;"),m.push("_left:expression(eval(document.=
documentElement.scrollLeft||document.body.scrollLeft));_top:expression(ev=
al(document.documentElement.scrollTop||document.body.scrollTop));");break=
;case"2":m.push("right:0;top:0;"),m.push("_left:expression(eval((document=
.documentElement.scrollLeft||document.body.scrollLeft)+(document.document=
Element.clientWidth||document.body.clientWidth)-"+b[0]+"));_top:expressio=
n(eval(document.documentElement.scrollTop||document.body.scrollTop));");b=
reak;case"3":m.push("right:0;bottom:0;"),m.push("_left:expression(eval((d=
ocument.documentElement.scrollLeft||document.body.scrollLeft)+(document.d=
ocumentElement.clientWidth||document.body.clientWidth)-"+b[0]+"));_top:ex=
pression(eval((document.documentElement.scrollTop||document.body.scrollTo=
p)+(document.documentElement.clientHeight||document.body.clientHeight)-"+=
e+"));");break;case"4":m.push("left:0;bottom:0;"),m.push("_left:expressio=
n(eval(document.documentElement.scrollLeft||document.body.scrollLeft));_t=
op:expression(eval((document.documentElement.scrollTop||document.body.scr=
ollTop)+(document.documentElement.clientHeight||document.body.clientHeigh=
t)-"+e+"));");break;default:c=3D/^\d+,\d+$/.test(h)?h.split(","):[0,0],m.=
push("left:"+c[0]+"px;top:"+c[1]+"px;"),m.push("_left:expression(eval((do=
cument.documentElement.scrollLeft||document.body.scrollLeft)+"+c[0]+"));_=
top:expression(eval((document.documentElement.scrollTop||document.body.sc=
rollTop)+"+c[1]+"));")}m=3Dm.join(""),E(k,null,m)},G=3Dfunction(a,b){var =
c=3D[],d=3D[],e=3D[];if("0"=3D=3D=3Da)return{tdiv:"",talign:"",body:""};s=
witch(b){case"1":break;case"2":c.push("position:absolute;right:0;top:0;")=
,d.push("text-align:right;"),e.push('align=3D"right"');break;case"3":c.pu=
sh("position:absolute;right:0;bottom:0;"),d.push("text-align:right;"),e.p=
ush('align=3D"right"');break;case"4":c.push("position:absolute;left:0;bot=
tom:0;"),d.push("text-align:left;"),e.push('align=3D"left"');break;defaul=
t:d.push("text-align:center;"),e.push('align=3D"center"')}return =
c=3Dc.join(""),d=3Dd.join(""),e=3De.join(""),{tdiv:c,talign:e,body:d}},H=3D=
{WIDTH:300,HEIGHT:250};"undefined"=3D=3Dtypeof =
a.AllyesGlobal&&(a.AllyesGlobal=3D{}),a.AllyesDeliver=3D{_hideForNext:fun=
ction(a){a=3Da||null,a&&(u("#"+a).style.display=3D"none")},_createScript:=
function(){var =
c,d,e=3DAllyesDeliver.ins,f=3De.getAttribute("id"),h=3De.getAttribute("ad=
s-cid"),i=3DAllyesGlobal[h],j=3Di.ads,l=3Dfunction(){A(a)&&!g&&b.write("<=
/div>")};if(/google_ad_/i.test(j)){if(d=3DC(),k("adx add google_page_url =
=3D =
"+d),i.ads=3Dj.replace(/google_ad_\w+\s*=3D\s*\S+;/i,function(a){return["=
google_page_url =3D ",'"',d,'"',";",a].join("")}),k("check adx =
px..."),c=3DMath.max(a.screen.width,a.document.body.offsetWidth),c-2*i.wi=
dth<1024)return l(),k("adx px wrong."),void =
AllyesDeliver.next("mm");k("adx px =
right.")}k(i),b.write(i.ads),l(),A(a)&&(i._clearCheck=3Ds(a)),e.setAttrib=
ute("ads-thandle",t(f,i.levelTimeout))},_init:function(){var =
d,f,h,j,r,s,t,u,v,w,x,y,z,B=3DAllyesDeliver.ins?AllyesDeliver.ins:m();if(=
B){if(z=3DB.getAttribute("id")||0,z||(z=3D["allyes_ins_",l()].join(""),B.=
setAttribute("id",z)),u=3DB.getAttribute("ads-output"),u=3D/^[1-2]{1}$/.t=
est(u)?u:"0",B.setAttribute("ads-output",u),"iframe"=3D=3D=3DB.getAttribu=
te("ads-type")&&"0"=3D=3D=3Du&&(B.setAttribute("ads-output","1"),B.setAtt=
ribute("ads-inner","1"),B.setAttribute("ads-type","0"),B.removeAttribute(=
"ads-type")),u=3DB.getAttribute("ads-output"),v=3DB.getAttribute("ads-out=
puts")||"-1","-1"=3D=3D=3Dv&&(B.setAttribute("ads-outputs",u),B.setAttrib=
ute("ads-output",0),B.removeAttribute("ads-output")),"0"!=3D=3Du)return =
this._wrapIfm(B),!1;AllyesDeliver.ins=3DB,j=3DB.getAttribute("ads-src")||=
"",j.lastIndexOf(o)<0&&(j=3De(j),j+=3Do),j=3Dj.replace(new =
RegExp("&"+p+"\\S+"),""),f=3DB.getAttribute("ads-sids")||"",f&&(j=3De(j),=
f=3Df.split(","),j+=3D[p,f].join("")),y=3DB.getAttribute("ads-msid"),y=3D=
null=3D=3D=3Dy?0:y,y=3Di(y),y>0&&(j=3Dj.replace(new =
RegExp("&"+q+"\\S+"),""),j=3De(j),j+=3D[q,y].join("")),d=3DB.getAttribute=
("ads-times")||0,h=3D[l(),d].join("_"),B.setAttribute("ads-tid",h),w=3DB.=
getAttribute("ads-inner")||"5",v=3DB.getAttribute("ads-outputs"),x=3DG(v,=
w),b.write('<div id=3D"'+h+'" '+x.talign+' =
style=3D"padding:0;margin:0;border:0;'+x.tdiv+'">');try{"undefined"!=3Dty=
peof =
allyes_cid?(s=3Dparent.AllyesGlobal[allyes_cid],r=3DAllyesGlobal[allyes_c=
id]=3Dn({},s),allyes_cid=3Dvoid 0,this._createScript()):b.write('<script =
type=3D"text/javascript" data-belong=3D"allyes" =
src=3D"'+j+'"></script>')}catch(C){k(C)}(!A(a)||g)&&(t=3Dthis.cdnSrc(c),b=
.write('<script type=3D"text/javascript" data-belong=3D"allyes" =
src=3D"'+t+'"></script>'))}},_wrapIfm:function(a){var =
c,d,e=3Da.getAttribute("ads-outputs"),f=3Da.getAttribute("ads-inner"),j=3D=
a.getAttribute("ads-outer")||"3",k=3Da.getAttribute("ads-close")||"1",l=3D=
a.getAttribute("id"),m=3Da.getAttribute("ads-width")||H.WIDTH,n=3Da.getAt=
tribute("ads-height")||H.HEIGHT,o=3Db.createElement("iframe"),p=3D[],q=3D=
function(){var =
b=3D[],c=3Da.getAttribute("src"),d=3Da.getAttribute("ads-src"),g=3Da.getA=
ttribute("ads-debug")||"0",h=3DG(e,f);return b.push("<!DOCTYPE =
html><html><head>"),b.push('<meta http-equiv=3D"Content-Type" =
content=3D"text/html; =
charset=3Dutf-8">'),b.push("<style>html,body{padding:0;margin:0;border:0;=
overflow:hidden;background-color:transparent;"+h.body+"}</style>"),b.push=
("</head><body>"),b.push('<script type=3D"text/javascript">var =
allyes_wrap_201314 =3D true;</script>'),b.push('<script id=3D"'+l+'" =
ads-debug=3D"'+g+'" ads-outputs=3D"'+e+'" ads-inner=3D"'+f+'" =
ads-outer=3D"'+j+'" ads-close=3D"'+k+'" type=3D"text/javascript" =
src=3D"'+c+'" =
ads-src=3D"'+d+'"></script>'),b.push("</body></html>"),b.join("")};m=3Di(=
m),n=3Di(n),f=3D/^[1-5]{1}$/.test(f)?f:0,f||(f=3D"2"=3D=3D=3De?"2":"5"),o=
.setAttribute("id",["wrap","_",l].join("")),a.setAttribute("ads-outer",j)=
,a.setAttribute("ads-inner",f),a.setAttribute("ads-close",k),o.frameBorde=
r=3D0,"2"=3D=3D=3De?(h&&b.write("<style>*html,*html,body{background-image=
:url(about:blank);background-attachment:fixed;}</style>"),c=3DE("div",{id=
:["pos","_",l].join("")}),a.parentNode.insertBefore(c,a),c.appendChild(o)=
):a.parentNode.insertBefore(o,a),this._updateOuter(e,l,[m,n]);try{d=3Do.c=
ontentWindow,d.document.open(),d.document.write(q())}catch(s){p.push([r.H=
ead,":",r.Void].join("")+"((function(){"),p.push(" =
document.open();"),p.push(' document.domain=3D"'+b.domain+'";'),p.push(" =
document.write('"+q()+"');"),p.push("})())"),o.src=3Dp.join("")}finally{g=
?setTimeout(function(){try{o.contentWindow.document.close()}catch(a){}},5=
e3):d.document.close()}o.style.cssText=3D"margin:0;padding:0;border:0;",E=
(o,{width:m,height:n}),o.scrolling=3D"no",o.setAttribute("allowtransparen=
cy",!0)},cdnSrc:function(a,b){return"undefined"=3D=3Dtypeof =
AllyesDeliver?[r.Head,":",r.Void,"(0)"].join(""):this._cdnSrc(a,b)},_cdnS=
rc:function(a,b){var =
c=3DAllyesDeliver.ins||b,d=3Dc.getAttribute("src"),e=3Dd.lastIndexOf("/")=
;return =
d=3D0>e?a:[d.substring(0,e),a].join("/")},_updateOuter:function(a,b,c){va=
r =
d,e,f=3Du("#wrap_"+b);E(f,{width:c[0],height:c[1]}),"1"!=3D=3Da&&(d=3Du("=
#pos_"+b),e=3Dd.getAttribute("data-update")||0,e=3Di(e),e>=3D2||(F(b,c),d=
.setAttribute("data-update",e+1)))},init:function(b){var =
c,d,e=3DAllyesDeliver.ins,f=3Db.cid,g=3De.getAttribute("ads-tid");b.ads=3D=
"string"=3D=3Dtypeof =
b.ads?b.ads:b.ads.thirdCode,b.maxLevels=3Di(b.maxLevels),b.levelTimeout=3D=
i(b.levelTimeout)||5,b.levelTimeout*=3D1e3,b.width=3Di(b.width)||H.WIDTH,=
b.height=3Di(b.height)||H.HEIGHT,d=3De.getAttribute("ads-cid")||0,d||e.se=
tAttribute("ads-cid",f),b=3Da.AllyesGlobal[f]=3Dn({},b),c=3Db.type,"scrip=
t"=3D=3D=3Dc?this._createScript():A(a)?this._createScript():(this._hideFo=
rNext(g),this._createMM())},_createMM:function(a){var =
c,d,e=3Da&&u("#"+a)||AllyesDeliver.ins,f=3D!!a,h=3De.getAttribute("ads-ci=
d"),i=3DAllyesGlobal[h],j=3Di.width||H.WIDTH,k=3Di.height||H.HEIGHT,l=3Db=
.createElement("iframe"),m=3De.getAttribute("ads-times")||0,n=3D[],o=3Dfu=
nction(){var =
b=3D[],d=3De.getAttribute("src"),g=3De.getAttribute("ads-src"),i=3De.getA=
ttribute("ads-sids")||"",j=3De.getAttribute("ads-outputs")||"0",k=3De.get=
Attribute("ads-debug")||"0",l=3De.getAttribute("ads-inner")||"5",n=3De.ge=
tAttribute("ads-outer")||"3",o=3De.getAttribute("ads-close")||"1",p=3DG(j=
,l);return b.push("<!DOCTYPE html><html><head>"),b.push('<meta =
http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3Dutf-8">'),b.push("<style>html,body{padding:0;margin:0;border:0;=
overflow:hidden;background-color:transparent;"+p.body+"}</style>"),b.push=
("</head><body>"),f||b.push('<script type=3D"text/javascript">var =
allyes_cid =3D "'+h+'";</script>'),b.push('<script id=3D"'+a+'" =
ads-msid=3D"'+c+'" ads-debug=3D"'+k+'" ads-outputs=3D"'+j+'" =
ads-inner=3D"'+l+'" ads-outer=3D"'+n+'" ads-close=3D"'+o+'" =
ads-cid=3D"'+h+'" type=3D"text/javascript" src=3D"'+d+'" =
ads-times=3D"'+m+'" ads-sids=3D"'+i+'" =
ads-src=3D"'+g+'"></script>'),b.push("</body></html>"),b.join("")};c=3De.=
getAttribute("ads-msid"),c=3Dnull=3D=3D=3Dc?0:c,l.frameBorder=3D0,a=3De.g=
etAttribute("id"),e.parentNode.insertBefore(l,e),l.setAttribute("id",["if=
m","_",m,"_",a].join(""));try{d=3Dl.contentWindow,d.document.open(),d.doc=
ument.write(o())}catch(p){n.push([r.Head,":",r.Void].join("")+"((function=
(){"),n.push(" document.open();"),n.push(' =
document.domain=3D"'+b.domain+'";'),n.push(" =
document.write('"+o()+"');"),n.push("})())"),l.src=3Dn.join("")}finally{g=
?setTimeout(function(){try{l.contentWindow.document.close()}catch(a){}},5=
e3):d.document.close()}l.style.cssText=3D"margin:0;padding:0;border:0;wid=
th:"+j+"px;height:"+k+"px;",l.scrolling=3D"no",l.setAttribute("allowtrans=
parency",!0)},checking:function(){var =
a,b=3DAllyesDeliver.ins,c=3Db.getAttribute("ads-cid"),d=3DAllyesGlobal[c]=
;d&&(a=3Dd.back,a&&(d.back=3D!1,this._init()))},next:function(b,c){var =
d,e,f,g,h,l,m,n=3Dc&&u("#"+c)||AllyesDeliver.ins,o=3Dn.getAttribute("ads-=
cid"),p=3Dn.getAttribute("ads-tid"),q=3DAllyesGlobal[o],r=3Dn.getAttribut=
e("ads-thandle")||0;return =
c=3Dn.getAttribute("id"),f=3Dn.getAttribute("ads-times")||0,f=3Di(f),g=3D=
f,r&&(clearTimeout(i(r)),n.removeAttribute("ads-thandle"),r=3Dnull,k("can=
cel timeout.")),q._clearCheck&&(q._clearCheck(),delete =
q._clearCheck),f>q.maxLevels?void k("to max =
levels:"+q.maxLevels):(this._hideForNext(p),f+=3D1,n.setAttribute("ads-ti=
mes",f),l=3Dq.sid,h=3Dn.getAttribute("ads-sids")||"",h=3Dh?h.split(",").c=
oncat(l):[l],h=3Dh.join(","),n.setAttribute("ads-sids",h),m=3D"undefined"=
=3D=3Dtypeof =
q.mm_sid?0:q.mm_sid,n.setAttribute("ads-msid",m),k("next..."),void(A(a)?(=
e=3Dparent.document.getElementById(c),e.setAttribute("ads-times",f),e.set=
Attribute("ads-sids",h),e.setAttribute("ads-msid",m),q.back=3D!1,d=3D["if=
m","_",g,"_",c].join(""),parent.AllyesDeliver._hideForNext(d),parent.Ally=
esDeliver._createMM(c),j()||parent.AllyesDeliver._clearLast(d)):"script"=3D=
=3D=3Db?q.back=3D!0:(q.back=3D!1,AllyesDeliver._createMM(c))))},_clearLas=
t:function(a){var =
b,c=3Du("#"+a);try{c.src=3D"about:blank",b=3Dc.contentDocument||c.content=
Window.document,b.write(""),b.close(),c.parentNode.removeChild(c),g&&"fun=
ction"=3D=3Dtypeof CollectGarbage&&CollectGarbage()}catch(d){k("relase =
last iframe error...")}}},AllyesDeliver._init()}(window);
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://download.csdn.net/js/jquery.cookie.js

/*!=0A=
 * jQuery Cookie Plugin v1.4.0=0A=
 * https://github.com/carhartl/jquery-cookie=0A=
 *=0A=
 * Copyright 2013 Klaus Hartl=0A=
 * Released under the MIT license=0A=
 */=0A=
(function (factory) {=0A=
	if (typeof define =3D=3D=3D 'function' && define.amd) {=0A=
		// AMD. Register as anonymous module.=0A=
		define(['jquery'], factory);=0A=
	} else {=0A=
		// Browser globals.=0A=
		factory(jQuery);=0A=
	}=0A=
}(function ($) {=0A=
=0A=
	var pluses =3D /\+/g;=0A=
=0A=
	function encode(s) {=0A=
		return config.raw ? s : encodeURIComponent(s);=0A=
	}=0A=
=0A=
	function decode(s) {=0A=
		return config.raw ? s : decodeURIComponent(s);=0A=
	}=0A=
=0A=
	function stringifyCookieValue(value) {=0A=
		return encode(config.json ? JSON.stringify(value) : String(value));=0A=
	}=0A=
=0A=
	function parseCookieValue(s) {=0A=
		if (s.indexOf('"') =3D=3D=3D 0) {=0A=
			// This is a quoted cookie as according to RFC2068, unescape...=0A=
			s =3D s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');=0A=
		}=0A=
=0A=
		try {=0A=
			// Replace server-side written pluses with spaces.=0A=
			// If we can't decode the cookie, ignore it, it's unusable.=0A=
			s =3D decodeURIComponent(s.replace(pluses, ' '));=0A=
		} catch(e) {=0A=
			return;=0A=
		}=0A=
=0A=
		try {=0A=
			// If we can't parse the cookie, ignore it, it's unusable.=0A=
			return config.json ? JSON.parse(s) : s;=0A=
		} catch(e) {}=0A=
	}=0A=
=0A=
	function read(s, converter) {=0A=
		var value =3D config.raw ? s : parseCookieValue(s);=0A=
		return $.isFunction(converter) ? converter(value) : value;=0A=
	}=0A=
=0A=
	var config =3D $.cookie =3D function (key, value, options) {=0A=
=0A=
		// Write=0A=
		if (value !=3D=3D undefined && !$.isFunction(value)) {=0A=
			options =3D $.extend({}, config.defaults, options);=0A=
=0A=
			if (typeof options.expires =3D=3D=3D 'number') {=0A=
				var days =3D options.expires, t =3D options.expires =3D new Date();=0A=
				t.setDate(t.getDate() + days);=0A=
			}=0A=
=0A=
			return (document.cookie =3D [=0A=
				encode(key), '=3D', stringifyCookieValue(value),=0A=
				options.expires ? '; expires=3D' + options.expires.toUTCString() : =
'', // use expires attribute, max-age is not supported by IE=0A=
				options.path    ? '; path=3D' + options.path : '',=0A=
				options.domain  ? '; domain=3D' + options.domain : '',=0A=
				options.secure  ? '; secure' : ''=0A=
			].join(''));=0A=
		}=0A=
=0A=
		// Read=0A=
=0A=
		var result =3D key ? undefined : {};=0A=
=0A=
		// To prevent the for loop in the first place assign an empty array=0A=
		// in case there are no cookies at all. Also prevents odd result when=0A=
		// calling $.cookie().=0A=
		var cookies =3D document.cookie ? document.cookie.split('; ') : [];=0A=
=0A=
		for (var i =3D 0, l =3D cookies.length; i < l; i++) {=0A=
			var parts =3D cookies[i].split('=3D');=0A=
			var name =3D decode(parts.shift());=0A=
			var cookie =3D parts.join('=3D');=0A=
=0A=
			if (key && key =3D=3D=3D name) {=0A=
				// If second argument (value) is a function it's a converter...=0A=
				result =3D read(cookie, value);=0A=
				break;=0A=
			}=0A=
=0A=
			// Prevent storing a cookie that we couldn't decode.=0A=
			if (!key && (cookie =3D read(cookie)) !=3D=3D undefined) {=0A=
				result[name] =3D cookie;=0A=
			}=0A=
		}=0A=
=0A=
		return result;=0A=
	};=0A=
=0A=
	config.defaults =3D {};=0A=
=0A=
	$.removeCookie =3D function (key, options) {=0A=
		if ($.cookie(key) !=3D=3D undefined) {=0A=
			// Must not alter options, thus extending a fresh object...=0A=
			$.cookie(key, '', $.extend({}, options, { expires: -1 }));=0A=
			return true;=0A=
		}=0A=
		return false;=0A=
	};=0A=
=0A=
}));=0A=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/rabbit/search-service/main.js

/*
=E6=90=9C=E7=B4=A2=E6=9C=8D=E5=8A=A1 =
https://code.csdn.net/CSDN_Dev/csdn_searchservice_fe

=E4=BE=9D=E8=B5=96jQuery=EF=BC=8C=E4=BD=BF=E7=94=A8=E7=A4=BA=E4=BE=8B(=E9=
=99=A4=E9=9D=9E=E6=98=8E=E7=A1=AE=E8=A6=81=E6=B1=82=E5=BF=85=E5=A1=AB=EF=BC=
=8C=E9=83=BD=E6=98=AF=E5=8F=AF=E9=80=89=E5=8F=82=E6=95=B0=EF=BC=9B=E9=99=A4=
=E9=9D=9E=E6=98=8E=E7=A1=AE=E8=AF=B4=E6=98=8E=E9=BB=98=E8=AE=A4=E5=80=BC=EF=
=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E5=B0=B1=E6=98=AF=E7=A4=BA=E4=BE=8B=E4=B8=
=AD=E7=9A=84=E5=80=BC):

  <script type=3D"text/javascript" =
src=3D"http://csdnimg.cn/rabbit/search-service/main.js" =
charset=3D"utf-8"></script>
  <script type=3D"text/javascript">
    searchService({
      index: 'blog',
        // =
=E5=BF=85=E5=A1=AB=EF=BC=8C=E4=BD=BF=E7=94=A8=E7=9A=84=E7=B4=A2=E5=BC=95=E5=
=90=8D=E7=A7=B0=EF=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E6=98=AF''
      appendTo: '#output',
        // =
=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E6=98=BE=E7=A4=BA=E5=88=B0=E6=8C=87=E5=
=AE=9A=E5=85=83=E7=B4=A0=E9=87=8C=E9=9D=A2=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=83=
=B3=E6=89=8B=E5=B7=A5=E5=A4=84=E7=90=86=E5=8F=AF=E4=BB=A5=E5=BF=BD=E7=95=A5=
=EF=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E6=98=AF''
      query: {text: {'title,body':'java'}},
        // =
=E5=BF=85=E5=A1=AB=EF=BC=8C=E6=9F=A5=E8=AF=A2=E6=9D=A1=E4=BB=B6=EF=BC=8C=E8=
=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=
=9FAPI
      tmpl: '<li><a href=3D"#{ object.url }" title=3D"#{ object.title =
}">#{ object.title }</a></li>',
        // =
=E6=98=BE=E7=A4=BA=E5=88=B0appendTo=E7=9A=84=E5=85=83=E7=B4=A0=E6=A8=A1=E6=
=9D=BF=EF=BC=8C=E5=8F=AF=E4=BD=BF=E7=94=A8=E7=9A=84=E6=A8=A1=E6=9D=BF=E6=A0=
=87=E7=AD=BE=E4=B8=BB=E8=A6=81=E7=94=B1=E8=BF=94=E5=9B=9E=E7=9A=84=E6=95=B0=
=E6=8D=AE hits =
=E6=95=B0=E6=8D=AE=E5=85=83=E7=B4=A0=E7=9A=84=E7=BB=93=E6=9E=84=E5=86=B3=E5=
=AE=9A=EF=BC=9B
        // =
=E9=99=A4=E6=AD=A4=E4=B9=8B=E5=A4=96=E8=BF=98=E5=8F=AF=E4=BB=A5=E4=BD=BF=E7=
=94=A8 item =E5=92=8C =
data=EF=BC=8C=E5=88=86=E5=88=AB=E4=BB=A3=E8=A1=A8=E6=AF=8F=E4=B8=80=E6=9D=
=A1=E6=95=B0=E6=8D=AE=E7=9A=84=E5=8E=9F=E5=A7=8B=E7=BB=93=E6=9E=84=E5=92=8C=
=E8=BF=94=E5=9B=9E=E7=9A=84=E6=95=B4=E4=B8=AA=E6=95=B0=E6=8D=AE
        // =
=E4=B9=9F=E5=8F=AF=E4=BB=A5=E8=AE=BF=E9=97=AEwindow=E4=B8=8B=E7=9A=84=E5=8F=
=98=E9=87=8F
      from: 0,
        // =
=E8=A6=81=E4=BB=8E=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E4=B8=AD=E7=AC=AC=E5=
=A4=9A=E5=B0=91=E6=9D=A1=E5=BC=80=E5=A7=8B=E8=8E=B7=E5=8F=96=E6=95=B0=E6=8D=
=AE
      size: 6,
        // =
=E8=A6=81=E4=BB=8E=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E4=B8=AD=E8=8E=B7=E5=
=8F=96=E5=A4=9A=E5=B0=91=E6=9D=A1=E6=95=B0=E6=8D=AE
      filter: =
{"range":{"created_at":{"from":2010072320,"to":2010072330}}},
        // =
=E9=BB=98=E8=AE=A4=E4=B8=8D=E4=BC=A0=E9=80=92=E8=BF=99=E4=B8=AA=E5=8F=82=E6=
=95=B0=EF=BC=8C=E8=BF=87=E6=BB=A4=E6=9D=A1=E4=BB=B6=EF=BC=8C=E8=AF=A6=E7=BB=
=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=9FAPI
      sort: { 'updated_at': 'desc' },
        // =
=E9=BB=98=E8=AE=A4=E4=B8=8D=E4=BC=A0=E9=80=92=E8=BF=99=E4=B8=AA=E5=8F=82=E6=
=95=B0=EF=BC=8C=E6=8E=92=E5=BA=8F=E5=AD=97=E6=AE=B5, =
=E8=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=
=BB=9FAPI
      fields: ['title', 'url'],
        // =
=E6=9C=80=E7=BB=88=E6=98=BE=E7=A4=BA=E7=9A=84=E5=AD=97=E6=AE=B5=EF=BC=8C=E8=
=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=
=9FAPI
      token: 'search_js_dkuyqthzbajmncbsb_token'
        // =E8=AE=BF=E9=97=AE=E6=8E=A7=E5=88=B6=E6=A0=87=E8=AF=86
    }, function(err, data, options){
      // =
=E5=A4=84=E7=90=86=E5=AE=8C=E6=88=90=E6=97=B6=E7=9A=84=E5=9B=9E=E8=B0=83
      // =
err=E6=98=AF=E9=94=99=E8=AF=AF=E4=BF=A1=E6=81=AF=EF=BC=8C=E5=A6=82=E6=9E=9C=
=E6=97=A0=E9=94=99=E5=B0=86=E4=B8=BAnull
      // =
data=E6=98=AF=E6=90=9C=E7=B4=A2=E5=88=B0=E7=9A=84=E5=8E=9F=E5=A7=8B=E6=95=
=B0=E6=8D=AE
      // =
options=E6=98=AF=E4=B8=8A=E9=9D=A2=E8=B0=83=E7=94=A8=E6=9C=80=E7=BB=88=E4=
=BD=BF=E7=94=A8=E7=9A=84=E5=8F=82=E6=95=B0
    });
  </script>

 */
;(function(definition, undefined){
  var global =3D this, exports =3D {}, $ =3D global.jQuery;
  definition(global, exports, $);

  if(global.csdn =3D=3D=3D undefined){
    global.csdn =3D exports;
  } else {
    $.extend(global.csdn, exports);
  }
  $.extend(global, exports);

}(function(global, exports, $, undefined){
  document.domain =3D 'csdn.net';

  var searchServiceReady =3D false
    , searchArgs =3D []
    , searchService =3D exports.searchService =3D function(){
      var args =3D [].slice.call(arguments, 0);
      if(searchServiceReady){
        searchServiceFunc.apply(null, args);
      }else{
        searchArgs.push(args);
      }
    }
    , render =3D searchService.render =3D function(tmpl, item, data){
      return tmpl.replace(/#\{ +([^}]+) +\}/gm, function($0, $1){
        var fieldN =3D $1;
        if(eval('item.' + $1) !=3D=3D undefined) $1 =3D 'item.' + $1;
        //return eval($1);
        var val =3D eval($1);
        if (fieldN.toLowerCase() =3D=3D "title") {
          var =
reg=3D/[^`~!\$%\^\*\(\)=3D\|\{\}':;',\\\[\\\]\.<>\/\?~=EF=BC=81=EF=BF=A5%=
=E2=80=A6=E2=80=A6*\=EF=BC=88\=EF=BC=89=E2=80=94=E2=80=94\|\{\}=E3=80=90=E3=
=80=91=E2=80=98=EF=BC=9B=EF=BC=9A=E2=80=9D=E2=80=9C=E2=80=99=E3=80=82=EF=BC=
=8C=E3=80=81=EF=BC=9F]/g;
          var titleFilter =3D val.match(reg).join( '' );
          val =3D titleFilter;
        }
        return val;
      });
    }
    , ajaxProxyCaches =3D {}
    , ajaxProxy =3D searchService.ajaxProxy =3D function(proxyUrl, =
opts){
      var c =3D ajaxProxyCaches[proxyUrl];
      if(c =3D=3D=3D undefined){
        c =3D ajaxProxyCaches[proxyUrl] =3D [];
        var func =3D arguments.callee;
        $('<iframe src=3D"' + proxyUrl + '" =
style=3D"display:none">').load(function(){
          c.contentWindow =3D this.contentWindow;
          func(proxyUrl, opts);
        }).prependTo('body');
      }else if(c.contentWindow =3D=3D=3D undefined){
        c.push(opts);
      }else{
        do{
          c.contentWindow.jQuery.ajax(opts);
        }while(opts =3D c.shift());
      }
    }
    , trackingAd =3D function(ele){
      if(typeof window.csdn !=3D=3D 'undefined' && typeof =
window.csdn.trackingAd =3D=3D=3D 'function'){
        window.csdn.trackingAd(ele);
      }else{
        $(document).bind('trackingAd-ready', function(){
          trackingAd(ele);
        });
      }
    }
    , searchServiceFunc =3D function(opts, callback){
      var tmpl =3D ( opts.url =3D=3D 'search' ) ? '<li><a href=3D"#{ =
object.url }" title=3D"#{ object.title }">#{ object.title }</a></li>' : =
'<li><a href=3D"#{ url }" title=3D"#{ title }" strategy=3D"#{ strategy =
}">#{ title }</a></li>';
      opts =3D $.extend({
        index: '',
        appendTo: '',
        query: '',
        tmpl: tmpl,
        from: 0,
        size: 6,
        fields: ['title', 'url'],
        token: 'search_js_dkuyqthzbajmncbsb_token',
        render: render
      }, opts);

      if(!opts.index || !opts.query) return;

      var postData =3D {};
      if ( opts.url =3D=3D 'recommend' )
      {
        var userId =3D $.cookie( 'UserName' ) || 'fake_userId';
        var uuid =3D $.cookie( 'uuid_tt_dd' ) || 'fake_uuid';
        var reg =3D /(\d+)$/;
        var href =3D window.location.href;
        var downId =3D reg.test( href ) ? RegExp.$1 : '';
        // var query =3D $( '.info' ).find( 'h1' ).attr( 'title' ) || $( =
'.info h1' ).text();

        postData =3D {
          userId: userId,
          size: 10,
          his: opts.his + ':' + downId,
          client: opts.client || 'download_cf_enhance',
          query: opts.query,
          cid: uuid
        };

        $.ajax( {
          type: 'GET',
          url: 'http://recdm.csdn.net/getRecommendList.html',
          data: postData,
          dataType: 'jsonp',
          jsonp: 'jsonp',
          success: function ( data ) {
            var appendTo =3D opts.appendTo, tmpl =3D opts.tmpl;
            if(data =3D=3D=3D null || data.ok =3D=3D=3D false && =
data.message){
              var msg =3D data !=3D=3D null ? data.message : =
'=E8=AF=B7=E6=B1=82=E5=A4=B1=E8=B4=A5';
              if(appendTo){
                $(appendTo).append(render('<div =
class=3D"search-error">#{ item }</div>', msg));
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(msg, data, opts);
              }
            }else if( data.length > 0 ){
              if( appendTo ){
                $(appendTo).append($.map(data, function(i){
                  return opts.render(tmpl, i, data);
                }).join(''));
                trackingAd(appendTo);
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(null, data, opts);
              }
            }
          }
        } );
      }
      else if ( opts.url =3D=3D 'search' )
      {
        $.map(['query', 'from', 'size', 'filter', 'sort', 'fields'], =
function(k){
          if(opts.hasOwnProperty(k)){
            postData[k] =3D opts[k];
          }
        });
        ajaxProxy('http://search.api.csdn.net/proxy.html', {
          type: 'POST',
          url: 'http://search.api.csdn.net/' + opts.index + =
'/csdn/_search',
          data: JSON.stringify(postData),
          dataType: 'json',
          headers: {
            'X-ACL-TOKEN': opts.token
          },
          success: function(data){
            var appendTo =3D opts.appendTo, tmpl =3D opts.tmpl;
            if(data =3D=3D=3D null || data.ok =3D=3D=3D false && =
data.message){
              var msg =3D data !=3D=3D null ? data.message : =
'=E8=AF=B7=E6=B1=82=E5=A4=B1=E8=B4=A5';
              if(appendTo){
                $(appendTo).append(render('<div =
class=3D"search-error">#{ item }</div>', msg));
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(msg, data, opts);
              }
            }else if(data.hits){
              if(appendTo){
                $(appendTo).append($.map(data.hits, function(i){
                  return opts.render(tmpl, i, data);
                }).join(''));
                trackingAd(appendTo);
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(null, data, opts);
              }
            }
          }
        });
      }
    }
    ;

  if(global.JSON =3D=3D=3D undefined){
    $.getScript('http://csdnimg.cn/rabbit/search-service/json2.js', =
function(){
      searchServiceReady =3D true;
      var args;
      while(args =3D searchArgs.shift()){
        searchService.apply(null, args);
      }
    });
  }else{
    searchServiceReady =3D true;
  }

}));
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML

/*=0A=
 *  /MathJax.js=0A=
 *=0A=
 *  Copyright (c) 2009-2014 The MathJax Consortium=0A=
 *=0A=
 *  Licensed under the Apache License, Version 2.0 (the "License");=0A=
 *  you may not use this file except in compliance with the License.=0A=
 *  You may obtain a copy of the License at=0A=
 *=0A=
 *      http://www.apache.org/licenses/LICENSE-2.0=0A=
 *=0A=
 *  Unless required by applicable law or agreed to in writing, software=0A=
 *  distributed under the License is distributed on an "AS IS" BASIS,=0A=
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or =
implied.=0A=
 *  See the License for the specific language governing permissions and=0A=
 *  limitations under the License.=0A=
 */=0A=
=0A=
if(document.getElementById&&document.childNodes&&document.createElement){=
if(!(window.MathJax&&MathJax.Hub)){if(window.MathJax){window.MathJax=3D{A=
uthorConfig:window.MathJax}}else{window.MathJax=3D{}}MathJax.isPacked=3Dt=
rue;MathJax.version=3D"2.4.0";MathJax.fileversion=3D"2.4.0";MathJax.cdnVe=
rsion=3D"2.4-beta-2";MathJax.cdnFileVersions=3D{};(function(d){var =
b=3Dwindow[d];if(!b){b=3Dwindow[d]=3D{}}var e=3D[];var =
c=3Dfunction(f){var g=3Df.constructor;if(!g){g=3Dfunction(){}}for(var h =
in f){if(h!=3D=3D"constructor"&&f.hasOwnProperty(h)){g[h]=3Df[h]}}return =
g};var a=3Dfunction(){return function(){return =
arguments.callee.Init.call(this,arguments)}};b.Object=3Dc({constructor:a(=
),Subclass:function(f,h){var =
g=3Da();g.SUPER=3Dthis;g.Init=3Dthis.Init;g.Subclass=3Dthis.Subclass;g.Au=
gment=3Dthis.Augment;g.protoFunction=3Dthis.protoFunction;g.can=3Dthis.ca=
n;g.has=3Dthis.has;g.isa=3Dthis.isa;g.prototype=3Dnew =
this(e);g.prototype.constructor=3Dg;g.Augment(f,h);return =
g},Init:function(f){var =
g=3Dthis;if(f.length=3D=3D=3D1&&f[0]=3D=3D=3De){return g}if(!(g =
instanceof f.callee)){g=3Dnew f.callee(e)}return =
g.Init.apply(g,f)||g},Augment:function(f,g){var h;if(f!=3Dnull){for(h in =
f){if(f.hasOwnProperty(h)){this.protoFunction(h,f[h])}}if(f.toString!=3D=3D=
this.prototype.toString&&f.toString!=3D=3D{}.toString){this.protoFunction=
("toString",f.toString)}}if(g!=3Dnull){for(h in =
g){if(g.hasOwnProperty(h)){this[h]=3Dg[h]}}}return =
this},protoFunction:function(g,f){this.prototype[g]=3Df;if(typeof =
f=3D=3D=3D"function"){f.SUPER=3Dthis.SUPER.prototype}},prototype:{Init:fu=
nction(){},SUPER:function(f){return =
f.callee.SUPER},can:function(f){return =
typeof(this[f])=3D=3D=3D"function"},has:function(f){return =
typeof(this[f])!=3D=3D"undefined"},isa:function(f){return(f instanceof =
Object)&&(this instanceof f)}},can:function(f){return =
this.prototype.can.call(this,f)},has:function(f){return =
this.prototype.has.call(this,f)},isa:function(g){var =
f=3Dthis;while(f){if(f=3D=3D=3Dg){return true}else{f=3Df.SUPER}}return =
false},SimpleSUPER:c({constructor:function(f){return =
this.SimpleSUPER.define(f)},define:function(f){var =
h=3D{};if(f!=3Dnull){for(var g in =
f){if(f.hasOwnProperty(g)){h[g]=3Dthis.wrap(g,f[g])}}if(f.toString!=3D=3D=
this.prototype.toString&&f.toString!=3D=3D{}.toString){h.toString=3Dthis.=
wrap("toString",f.toString)}}return =
h},wrap:function(i,h){if(typeof(h)!=3D=3D"function"||!h.toString().match(=
/\.\s*SUPER\s*\(/)){return h}var =
g=3Dfunction(){this.SUPER=3Dg.SUPER[i];try{var =
f=3Dh.apply(this,arguments)}catch(j){delete this.SUPER;throw j}delete =
this.SUPER;return f};g.toString=3Dfunction(){return =
h.toString.apply(h,arguments)};return =
g}})})})("MathJax");(function(BASENAME){var =
BASE=3Dwindow[BASENAME];if(!BASE){BASE=3Dwindow[BASENAME]=3D{}}var =
CALLBACK=3Dfunction(data){var cb=3Dfunction(){return =
arguments.callee.execute.apply(arguments.callee,arguments)};for(var id =
in =
CALLBACK.prototype){if(CALLBACK.prototype.hasOwnProperty(id)){if(typeof(d=
ata[id])!=3D=3D"undefined"){cb[id]=3Ddata[id]}else{cb[id]=3DCALLBACK.prot=
otype[id]}}}cb.toString=3DCALLBACK.prototype.toString;return =
cb};CALLBACK.prototype=3D{isCallback:true,hook:function(){},data:[],objec=
t:window,execute:function(){if(!this.called||this.autoReset){this.called=3D=
!this.autoReset;return =
this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)))=
}},reset:function(){delete this.called},toString:function(){return =
this.hook.toString.apply(this.hook,arguments)}};var =
ISCALLBACK=3Dfunction(f){return(typeof(f)=3D=3D=3D"function"&&f.isCallbac=
k)};var EVAL=3Dfunction(code){return eval.call(window,code)};var =
TESTEVAL=3Dfunction(){EVAL("var __TeSt_VaR__ =3D =
1");if(window.__TeSt_VaR__){try{delete =
window.__TeSt_VaR__}catch(error){window.__TeSt_VaR__=3Dnull}}else{if(wind=
ow.execScript){EVAL=3Dfunction(code){BASE.__code=3Dcode;code=3D"try =
{"+BASENAME+".__result =3D eval("+BASENAME+".__code)} catch(err) =
{"+BASENAME+".__result =3D err}";window.execScript(code);var =
result=3DBASE.__result;delete BASE.__result;delete BASE.__code;if(result =
instanceof Error){throw result}return =
result}}else{EVAL=3Dfunction(code){BASE.__code=3Dcode;code=3D"try =
{"+BASENAME+".__result =3D eval("+BASENAME+".__code)} catch(err) =
{"+BASENAME+".__result =3D err}";var =
head=3D(document.getElementsByTagName("head"))[0];if(!head){head=3Ddocume=
nt.body}var =
script=3Ddocument.createElement("script");script.appendChild(document.cre=
ateTextNode(code));head.appendChild(script);head.removeChild(script);var =
result=3DBASE.__result;delete BASE.__result;delete BASE.__code;if(result =
instanceof Error){throw result}return result}}}TESTEVAL=3Dnull};var =
USING=3Dfunction(args,i){if(arguments.length>1){if(arguments.length=3D=3D=
=3D2&&!(typeof arguments[0]=3D=3D=3D"function")&&arguments[0] instanceof =
Object&&typeof =
arguments[1]=3D=3D=3D"number"){args=3D[].slice.call(args,i)}else{args=3D[=
].slice.call(arguments,0)}}if(args instanceof =
Array&&args.length=3D=3D=3D1){args=3Dargs[0]}if(typeof =
args=3D=3D=3D"function"){if(args.execute=3D=3D=3DCALLBACK.prototype.execu=
te){return args}return CALLBACK({hook:args})}else{if(args instanceof =
Array){if(typeof(args[0])=3D=3D=3D"string"&&args[1] instanceof =
Object&&typeof args[1][args[0]]=3D=3D=3D"function"){return =
CALLBACK({hook:args[1][args[0]],object:args[1],data:args.slice(2)})}else{=
if(typeof args[0]=3D=3D=3D"function"){return =
CALLBACK({hook:args[0],data:args.slice(1)})}else{if(typeof =
args[1]=3D=3D=3D"function"){return =
CALLBACK({hook:args[1],object:args[0],data:args.slice(2)})}}}}else{if(typ=
eof(args)=3D=3D=3D"string"){if(TESTEVAL){TESTEVAL()}return =
CALLBACK({hook:EVAL,data:[args]})}else{if(args instanceof Object){return =
CALLBACK(args)}else{if(typeof(args)=3D=3D=3D"undefined"){return =
CALLBACK({})}}}}}throw Error("Can't make callback from given data")};var =
DELAY=3Dfunction(time,callback){callback=3DUSING(callback);callback.timeo=
ut=3DsetTimeout(callback,time);return callback};var =
WAITFOR=3Dfunction(callback,signal){callback=3DUSING(callback);if(!callba=
ck.called){WAITSIGNAL(callback,signal);signal.pending++}};var =
WAITEXECUTE=3Dfunction(){var signals=3Dthis.signal;delete =
this.signal;this.execute=3Dthis.oldExecute;delete this.oldExecute;var =
result=3Dthis.execute.apply(this,arguments);if(ISCALLBACK(result)&&!resul=
t.called){WAITSIGNAL(result,signals)}else{for(var =
i=3D0,m=3Dsignals.length;i<m;i++){signals[i].pending--;if(signals[i].pend=
ing<=3D0){signals[i].call()}}}};var =
WAITSIGNAL=3Dfunction(callback,signals){if(!(signals instanceof =
Array)){signals=3D[signals]}if(!callback.signal){callback.oldExecute=3Dca=
llback.execute;callback.execute=3DWAITEXECUTE;callback.signal=3Dsignals}e=
lse{if(signals.length=3D=3D=3D1){callback.signal.push(signals[0])}else{ca=
llback.signal=3Dcallback.signal.concat(signals)}}};var =
AFTER=3Dfunction(callback){callback=3DUSING(callback);callback.pending=3D=
0;for(var =
i=3D1,m=3Darguments.length;i<m;i++){if(arguments[i]){WAITFOR(arguments[i]=
,callback)}}if(callback.pending=3D=3D=3D0){var =
result=3Dcallback();if(ISCALLBACK(result)){callback=3Dresult}}return =
callback};var =
HOOKS=3DMathJax.Object.Subclass({Init:function(reset){this.hooks=3D[];thi=
s.reset=3Dreset},Add:function(hook,priority){if(priority=3D=3Dnull){prior=
ity=3D10}if(!ISCALLBACK(hook)){hook=3DUSING(hook)}hook.priority=3Dpriorit=
y;var =
i=3Dthis.hooks.length;while(i>0&&priority<this.hooks[i-1].priority){i--}t=
his.hooks.splice(i,0,hook);return hook},Remove:function(hook){for(var =
i=3D0,m=3Dthis.hooks.length;i<m;i++){if(this.hooks[i]=3D=3D=3Dhook){this.=
hooks.splice(i,1);return}}},Execute:function(){var =
callbacks=3D[{}];for(var =
i=3D0,m=3Dthis.hooks.length;i<m;i++){if(this.reset){this.hooks[i].reset()=
}var =
result=3Dthis.hooks[i].apply(window,arguments);if(ISCALLBACK(result)&&!re=
sult.called){callbacks.push(result)}}if(callbacks.length=3D=3D=3D1){retur=
n null}if(callbacks.length=3D=3D=3D2){return callbacks[1]}return =
AFTER.apply({},callbacks)}});var =
EXECUTEHOOKS=3Dfunction(hooks,data,reset){if(!hooks){return =
null}if(!(hooks instanceof Array)){hooks=3D[hooks]}if(!(data instanceof =
Array)){data=3D(data=3D=3Dnull?[]:[data])}var =
handler=3DHOOKS(reset);for(var =
i=3D0,m=3Dhooks.length;i<m;i++){handler.Add(hooks[i])}return =
handler.Execute.apply(handler,data)};var =
QUEUE=3DBASE.Object.Subclass({Init:function(){this.pending=3D0;this.runni=
ng=3D0;this.queue=3D[];this.Push.apply(this,arguments)},Push:function(){v=
ar callback;for(var =
i=3D0,m=3Darguments.length;i<m;i++){callback=3DUSING(arguments[i]);if(cal=
lback=3D=3D=3Darguments[i]&&!callback.called){callback=3DUSING(["wait",th=
is,callback])}this.queue.push(callback)}if(!this.running&&!this.pending){=
this.Process()}return =
callback},Process:function(queue){while(!this.running&&!this.pending&&thi=
s.queue.length){var =
callback=3Dthis.queue[0];queue=3Dthis.queue.slice(1);this.queue=3D[];this=
.Suspend();var =
result=3Dcallback();this.Resume();if(queue.length){this.queue=3Dqueue.con=
cat(this.queue)}if(ISCALLBACK(result)&&!result.called){WAITFOR(result,thi=
s)}}},Suspend:function(){this.running++},Resume:function(){if(this.runnin=
g){this.running--}},call:function(){this.Process.apply(this,arguments)},w=
ait:function(callback){return callback}});var =
SIGNAL=3DQUEUE.Subclass({Init:function(name){QUEUE.prototype.Init.call(th=
is);this.name=3Dname;this.posted=3D[];this.listeners=3DHOOKS(true)},Post:=
function(message,callback,forget){callback=3DUSING(callback);if(this.post=
ing||this.pending){this.Push(["Post",this,message,callback,forget])}else{=
this.callback=3Dcallback;callback.reset();if(!forget){this.posted.push(me=
ssage)}this.Suspend();this.posting=3Dtrue;var =
result=3Dthis.listeners.Execute(message);if(ISCALLBACK(result)&&!result.c=
alled){WAITFOR(result,this)}this.Resume();delete =
this.posting;if(!this.pending){this.call()}}return =
callback},Clear:function(callback){callback=3DUSING(callback);if(this.pos=
ting||this.pending){callback=3Dthis.Push(["Clear",this,callback])}else{th=
is.posted=3D[];callback()}return =
callback},call:function(){this.callback(this);this.Process()},Interest:fu=
nction(callback,ignorePast,priority){callback=3DUSING(callback);this.list=
eners.Add(callback,priority);if(!ignorePast){for(var =
i=3D0,m=3Dthis.posted.length;i<m;i++){callback.reset();var =
result=3Dcallback(this.posted[i]);if(ISCALLBACK(result)&&i=3D=3D=3Dthis.p=
osted.length-1){WAITFOR(result,this)}}}return =
callback},NoInterest:function(callback){this.listeners.Remove(callback)},=
MessageHook:function(msg,callback,priority){callback=3DUSING(callback);if=
(!this.hooks){this.hooks=3D{};this.Interest(["ExecuteHooks",this])}if(!th=
is.hooks[msg]){this.hooks[msg]=3DHOOKS(true)}this.hooks[msg].Add(callback=
,priority);for(var =
i=3D0,m=3Dthis.posted.length;i<m;i++){if(this.posted[i]=3D=3Dmsg){callbac=
k.reset();callback(this.posted[i])}}return =
callback},ExecuteHooks:function(msg){var type=3D((msg instanceof =
Array)?msg[0]:msg);if(!this.hooks[type]){return null}return =
this.hooks[type].Execute(msg)}},{signals:{},find:function(name){if(!SIGNA=
L.signals[name]){SIGNAL.signals[name]=3Dnew SIGNAL(name)}return =
SIGNAL.signals[name]}});BASE.Callback=3DBASE.CallBack=3DUSING;BASE.Callba=
ck.Delay=3DDELAY;BASE.Callback.After=3DAFTER;BASE.Callback.Queue=3DQUEUE;=
BASE.Callback.Signal=3DSIGNAL.find;BASE.Callback.Hooks=3DHOOKS;BASE.Callb=
ack.ExecuteHooks=3DEXECUTEHOOKS})("MathJax");(function(e){var =
a=3Dwindow[e];if(!a){a=3Dwindow[e]=3D{}}var =
d=3D(navigator.vendor=3D=3D=3D"Apple Computer, Inc."&&typeof =
navigator.vendorSub=3D=3D=3D"undefined");var g=3D0;var =
h=3Dfunction(i){if(document.styleSheets&&document.styleSheets.length>g){g=
=3Ddocument.styleSheets.length}if(!i){i=3D(document.getElementsByTagName(=
"head"))[0];if(!i){i=3Ddocument.body}}return i};var f=3D[];var =
c=3Dfunction(){for(var =
k=3D0,j=3Df.length;k<j;k++){a.Ajax.head.removeChild(f[k])}f=3D[]};var =
b=3D{};b[e]=3D"";a.Ajax=3D{loaded:{},loading:{},loadHooks:{},timeout:15*1=
000,styleDelay:1,config:{root:"",path:b},STATUS:{OK:1,ERROR:-1},fileURL:f=
unction(j){var i=3Dj.match(/^\[([-._a-z0-9]+)\]/i);if(i&&i[1] in =
b){j=3D(b[i[1]]||this.config.root)+j.substr(i[1].length+2)}return =
j},fileName:function(j){var =
i=3Dthis.config.root;if(j.substr(0,i.length)=3D=3D=3Di){j=3D"["+e+"]"+j.s=
ubstr(i.length)}else{for(var k in =
b){if(b.hasOwnProperty(k)&&b[k]){if(j.substr(0,b[k].length)=3D=3D=3Db[k])=
{j=3D"["+k+"]"+j.substr(b[k].length);break}}}}return =
j},fileRev:function(j){var =
i=3Da.cdnFileVersions[name]||a.cdnVersion;if(i){i=3D"?rev=3D"+i}return =
i},urlRev:function(i){return =
this.fileURL(i)+this.fileRev(i)},Require:function(k,n){n=3Da.Callback(n);=
var l;if(k instanceof Object){for(var j in =
k){if(k.hasOwnProperty(j)){l=3Dj.toUpperCase();k=3Dk[j]}}}else{l=3Dk.spli=
t(/\./).pop().toUpperCase()}k=3Dthis.fileURL(k);if(this.loaded[k]){n(this=
.loaded[k])}else{var m=3D{};m[l]=3Dk;this.Load(m,n)}return =
n},Load:function(k,m){m=3Da.Callback(m);var l;if(k instanceof =
Object){for(var j in =
k){if(k.hasOwnProperty(j)){l=3Dj.toUpperCase();k=3Dk[j]}}}else{l=3Dk.spli=
t(/\./).pop().toUpperCase()}k=3Dthis.fileURL(k);if(this.loading[k]){this.=
addHook(k,m)}else{this.head=3Dh(this.head);if(this.loader[l]){this.loader=
[l].call(this,k,m)}else{throw Error("Can't load files of type =
"+l)}}return m},LoadHook:function(l,m,k){m=3Da.Callback(m);if(l =
instanceof Object){for(var j in =
l){if(l.hasOwnProperty(j)){l=3Dl[j]}}}l=3Dthis.fileURL(l);if(this.loaded[=
l]){m(this.loaded[l])}else{this.addHook(l,m,k)}return =
m},addHook:function(j,k,i){if(!this.loadHooks[j]){this.loadHooks[j]=3DMat=
hJax.Callback.Hooks()}this.loadHooks[j].Add(k,i)},Preloading:function(){f=
or(var l=3D0,j=3Darguments.length;l<j;l++){var =
k=3Dthis.fileURL(arguments[l]);if(!this.loading[k]){this.loading[k]=3D{pr=
eloaded:true}}}},loader:{JS:function(k,m){var j=3Dthis.fileName(k);var =
i=3Ddocument.createElement("script");var =
l=3Da.Callback(["loadTimeout",this,k]);this.loading[k]=3D{callback:m,time=
out:setTimeout(l,this.timeout),status:this.STATUS.OK,script:i};this.loadi=
ng[k].message=3Da.Message.File(j);i.onerror=3Dl;i.type=3D"text/javascript=
";i.src=3Dk+this.fileRev(j);this.head.appendChild(i)},CSS:function(j,l){v=
ar i=3Dthis.fileName(j);var =
k=3Ddocument.createElement("link");k.rel=3D"stylesheet";k.type=3D"text/cs=
s";k.href=3Dj+this.fileRev(i);this.loading[j]=3D{callback:l,message:a.Mes=
sage.File(i),status:this.STATUS.OK};this.head.appendChild(k);this.timer.c=
reate.call(this,[this.timer.file,j],k)}},timer:{create:function(j,i){j=3D=
a.Callback(j);if(i.nodeName=3D=3D=3D"STYLE"&&i.styleSheet&&typeof(i.style=
Sheet.cssText)!=3D=3D"undefined"){j(this.STATUS.OK)}else{if(window.chrome=
&&i.nodeName=3D=3D=3D"LINK"){j(this.STATUS.OK)}else{if(d){this.timer.star=
t(this,[this.timer.checkSafari2,g++,j],this.styleDelay)}else{this.timer.s=
tart(this,[this.timer.checkLength,i,j],this.styleDelay)}}}return =
j},start:function(j,i,k,l){i=3Da.Callback(i);i.execute=3Dthis.execute;i.t=
ime=3Dthis.time;i.STATUS=3Dj.STATUS;i.timeout=3Dl||j.timeout;i.delay=3Di.=
total=3Dk||0;if(k){setTimeout(i,k)}else{i()}},time:function(i){this.total=
+=3Dthis.delay;this.delay=3DMath.floor(this.delay*1.05+5);if(this.total>=3D=
this.timeout){i(this.STATUS.ERROR);return 1}return =
0},file:function(j,i){if(i<0){a.Ajax.loadTimeout(j)}else{a.Ajax.loadCompl=
ete(j)}},execute:function(){this.hook.call(this.object,this,this.data[0],=
this.data[1])},checkSafari2:function(i,j,k){if(i.time(k)){return}if(docum=
ent.styleSheets.length>j&&document.styleSheets[j].cssRules&&document.styl=
eSheets[j].cssRules.length){k(i.STATUS.OK)}else{setTimeout(i,i.delay)}},c=
heckLength:function(i,l,n){if(i.time(n)){return}var m=3D0;var =
j=3D(l.sheet||l.styleSheet);try{if((j.cssRules||j.rules||[]).length>0){m=3D=
1}}catch(k){if(k.message.match(/protected variable|restricted =
URI/)){m=3D1}else{if(k.message.match(/Security =
error/)){m=3D1}}}if(m){setTimeout(a.Callback([n,i.STATUS.OK]),0)}else{set=
Timeout(i,i.delay)}}},loadComplete:function(i){i=3Dthis.fileURL(i);var =
j=3Dthis.loading[i];if(j&&!j.preloaded){a.Message.Clear(j.message);clearT=
imeout(j.timeout);if(j.script){if(f.length=3D=3D=3D0){setTimeout(c,0)}f.p=
ush(j.script)}this.loaded[i]=3Dj.status;delete =
this.loading[i];this.addHook(i,j.callback)}else{if(j){delete =
this.loading[i]}this.loaded[i]=3Dthis.STATUS.OK;j=3D{status:this.STATUS.O=
K}}if(!this.loadHooks[i]){return null}return =
this.loadHooks[i].Execute(j.status)},loadTimeout:function(i){if(this.load=
ing[i].timeout){clearTimeout(this.loading[i].timeout)}this.loading[i].sta=
tus=3Dthis.STATUS.ERROR;this.loadError(i);this.loadComplete(i)},loadError=
:function(i){a.Message.Set(["LoadFailed","File failed to load: =
%1",i],null,2000);a.Hub.signal.Post(["file load =
error",i])},Styles:function(k,l){var =
i=3Dthis.StyleString(k);if(i=3D=3D=3D""){l=3Da.Callback(l);l()}else{var =
j=3Ddocument.createElement("style");j.type=3D"text/css";this.head=3Dh(thi=
s.head);this.head.appendChild(j);if(j.styleSheet&&typeof(j.styleSheet.css=
Text)!=3D=3D"undefined"){j.styleSheet.cssText=3Di}else{j.appendChild(docu=
ment.createTextNode(i))}l=3Dthis.timer.create.call(this,l,j)}return =
l},StyleString:function(n){if(typeof(n)=3D=3D=3D"string"){return n}var =
k=3D"",o,m;for(o in n){if(n.hasOwnProperty(o)){if(typeof =
n[o]=3D=3D=3D"string"){k+=3Do+" {"+n[o]+"}\n"}else{if(n[o] instanceof =
Array){for(var =
l=3D0;l<n[o].length;l++){m=3D{};m[o]=3Dn[o][l];k+=3Dthis.StyleString(m)}}=
else{if(o.substr(0,6)=3D=3D=3D"@media"){k+=3Do+" =
{"+this.StyleString(n[o])+"}\n"}else{if(n[o]!=3Dnull){m=3D[];for(var j =
in =
n[o]){if(n[o].hasOwnProperty(j)){if(n[o][j]!=3Dnull){m[m.length]=3Dj+": =
"+n[o][j]}}}k+=3Do+" {"+m.join("; ")+"}\n"}}}}}}return =
k}}})("MathJax");MathJax.HTML=3D{Element:function(c,e,d){var =
f=3Ddocument.createElement(c);if(e){if(e.style){var =
b=3De.style;e.style=3D{};for(var g in =
b){if(b.hasOwnProperty(g)){e.style[g.replace(/-([a-z])/g,this.ucMatch)]=3D=
b[g]}}}MathJax.Hub.Insert(f,e)}if(d){if(!(d instanceof =
Array)){d=3D[d]}for(var a=3D0;a<d.length;a++){if(d[a] instanceof =
Array){f.appendChild(this.Element(d[a][0],d[a][1],d[a][2]))}else{if(c=3D=3D=
=3D"script"){this.setScript(f,d[a])}else{f.appendChild(document.createTex=
tNode(d[a]))}}}}return f},ucMatch:function(a,b){return =
b.toUpperCase()},addElement:function(b,a,d,c){return =
b.appendChild(this.Element(a,d,c))},TextNode:function(a){return =
document.createTextNode(a)},addText:function(a,b){return =
a.appendChild(this.TextNode(b))},setScript:function(a,b){if(this.setScrip=
tBug){a.text=3Db}else{while(a.firstChild){a.removeChild(a.firstChild)}thi=
s.addText(a,b)}},getScript:function(a){var =
b=3D(a.text=3D=3D=3D""?a.innerHTML:a.text);return =
b.replace(/^\s+/,"").replace(/\s+$/,"")},Cookie:{prefix:"mjx",expires:365=
,Set:function(a,e){var d=3D[];if(e){for(var g in =
e){if(e.hasOwnProperty(g)){d.push(g+":"+e[g].toString().replace(/&/g,"&&"=
))}}}var =
b=3Dthis.prefix+"."+a+"=3D"+escape(d.join("&;"));if(this.expires){var =
f=3Dnew Date();f.setDate(f.getDate()+this.expires);b+=3D"; =
expires=3D"+f.toGMTString()}try{document.cookie=3Db+"; =
path=3D/"}catch(c){}},Get:function(a,d){if(!d){d=3D{}}var g=3Dnew =
RegExp("(?:^|;\\s*)"+this.prefix+"\\."+a+"=3D([^;]*)(?:;|$)");var =
f;try{f=3Dg.exec(document.cookie)}catch(c){}if(f&&f[1]!=3D=3D""){var =
j=3Dunescape(f[1]).split("&;");for(var =
e=3D0,b=3Dj.length;e<b;e++){f=3Dj[e].match(/([^:]+):(.*)/);var =
h=3Df[2].replace(/&&/g,"&");if(h=3D=3D=3D"true"){h=3Dtrue}else{if(h=3D=3D=
=3D"false"){h=3Dfalse}else{if(h.match(/^-?(\d+(\.\d+)?|\.\d+)$/)){h=3Dpar=
seFloat(h)}}}d[f[1]]=3Dh}}return =
d}}};MathJax.Localization=3D{locale:"en",directory:"[MathJax]/localizatio=
n",strings:{ast:{menuTitle:"asturianu"},br:{menuTitle:"brezhoneg"},ca:{me=
nuTitle:"catal\u00E0"},cdo:{menuTitle:"M\u00ECng-d\u0115\u0324ng-ng\u1E73=
\u0304"},cs:{menuTitle:"\u010De\u0161tina"},da:{menuTitle:"dansk"},de:{me=
nuTitle:"Deutsch"},en:{menuTitle:"English",isLoaded:true},eo:{menuTitle:"=
Esperanto"},es:{menuTitle:"espa\u00F1ol"},fa:{menuTitle:"\u0641\u0627\u06=
31\u0633\u06CC"},fi:{menuTitle:"suomi"},fr:{menuTitle:"fran\u00E7ais"},gl=
:{menuTitle:"galego"},he:{menuTitle:"\u05E2\u05D1\u05E8\u05D9\u05EA"},ia:=
{menuTitle:"interlingua"},it:{menuTitle:"italiano"},ja:{menuTitle:"\u65E5=
\u672C\u8A9E"},kn:{menuTitle:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},ko:{menuTi=
tle:"\uD55C\uAD6D\uC5B4"},lb:{menuTitle:"L\u00EBtzebuergesch"},mk:{menuTi=
tle:"\u043C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},nl:{m=
enuTitle:"Nederlands"},oc:{menuTitle:"occitan"},pl:{menuTitle:"polski"},p=
t:{menuTitle:"portugus\u00EA"},"pt-br":{menuTitle:"portugu\u00EAs do =
Brasil"},ru:{menuTitle:"\u0440\u0443\u0441\u0441\u043A\u0438\u0439"},sl:{=
menuTitle:"sloven\u0161\u010Dina"},sv:{menuTitle:"svenska"},tr:{menuTitle=
:"T\u00FCrk\u00E7e"},uk:{menuTitle:"\u0443\u043A\u0440\u0430\u0457\u043D\=
u0441\u044C\u043A\u0430"},vi:{menuTitle:"Ti\u1EBFng =
Vi\u1EC7t"},"zh-hans":{menuTitle:"\u4E2D\u6587\uFF08\u7B80\u4F53\uFF09"}}=
,pattern:/%(\d+|\{\d+\}|\{[a-z]+:\%\d+(?:\|(?:%\{\d+\}|%.|[^\}])*)+\}|.)/=
g,SPLIT:("axb".split(/(x)/).length=3D=3D=3D3?function(a,b){return =
a.split(b)}:function(c,e){var =
a=3D[],b,d=3D0;e.lastIndex=3D0;while(b=3De.exec(c)){a.push(c.substr(d,b.i=
ndex-d));a.push.apply(a,b.slice(1));d=3Db.index+b[0].length}a.push(c.subs=
tr(d));return a}),_:function(b,a){if(a instanceof Array){return =
this.processSnippet(b,a)}return =
this.processString(this.lookupPhrase(b,a),[].slice.call(arguments,2))},pr=
ocessString:function(l,o,g){var =
j,e;for(j=3D0,e=3Do.length;j<e;j++){if(g&&o[j] instanceof =
Array){o[j]=3Dthis.processSnippet(g,o[j])}}var =
f=3Dthis.SPLIT(l,this.pattern);for(j=3D1,e=3Df.length;j<e;j+=3D2){var =
p=3Df[j].charAt(0);if(p>=3D"0"&&p<=3D"9"){f[j]=3Do[f[j]-1];if(typeof =
f[j]=3D=3D=3D"number"){f[j]=3Dthis.number(f[j])}}else{if(p=3D=3D=3D"{"){p=
=3Df[j].substr(1);if(p>=3D"0"&&p<=3D"9"){f[j]=3Do[f[j].substr(1,f[j].leng=
th-2)-1];if(typeof =
f[j]=3D=3D=3D"number"){f[j]=3Dthis.number(f[j])}}else{var =
k=3Df[j].match(/^\{([a-z]+):%(\d+)\|(.*)\}$/);if(k){if(k[1]=3D=3D=3D"plur=
al"){var d=3Do[k[2]-1];if(typeof =
d=3D=3D=3D"undefined"){f[j]=3D"???"}else{d=3Dthis.plural(d)-1;var =
h=3Dk[3].replace(/(^|[^%])(%%)*%\|/g,"$1$2%\uEFEF").split(/\|/);if(d>=3D0=
&&d<h.length){f[j]=3Dthis.processString(h[d].replace(/\uEFEF/g,"|"),o,g)}=
else{f[j]=3D"???"}}}else{f[j]=3D"%"+f[j]}}}}}if(f[j]=3D=3Dnull){f[j]=3D"?=
??"}}if(!g){return f.join("")}var =
a=3D[],b=3D"";for(j=3D0;j<e;j++){b+=3Df[j];j++;if(j<e){if(f[j] =
instanceof =
Array){a.push(b);a=3Da.concat(f[j]);b=3D""}else{b+=3Df[j]}}}if(b!=3D=3D""=
){a.push(b)}return a},processSnippet:function(g,e){var c=3D[];for(var =
d=3D0,b=3De.length;d<b;d++){if(e[d] instanceof Array){var =
f=3De[d];if(typeof f[1]=3D=3D=3D"string"){var h=3Df[0];if(!(h instanceof =
Array)){h=3D[g,h]}var =
a=3Dthis.lookupPhrase(h,f[1]);c=3Dc.concat(this.processMarkdown(a,f.slice=
(2),g))}else{if(f[1] instanceof =
Array){c=3Dc.concat(this.processSnippet.apply(this,f))}else{if(f.length>=3D=
3){c.push([f[0],f[1],this.processSnippet(g,f[2])])}else{c.push(e[d])}}}}e=
lse{c.push(e[d])}}return =
c},markdownPattern:/(%.)|(\*{1,3})((?:%.|.)+?)\2|(`+)((?:%.|.)+?)\4|\[((?=
:%.|.)+?)\]\(([^\s\)]+)\)/,processMarkdown:function(b,h,d){var =
j=3D[],e;var c=3Db.split(this.markdownPattern);var g=3Dc[0];for(var =
f=3D1,a=3Dc.length;f<a;f+=3D8){if(c[f+1]){e=3Dthis.processString(c[f+2],h=
,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D[["b","i","i"][c[f+1].length-1],{},e];if(c[f+1].lengt=
h=3D=3D=3D3){e=3D["b",{},e]}}else{if(c[f+3]){e=3Dthis.processString(c[f+4=
].replace(/^\s/,"").replace(/\s$/,""),h,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D["code",{},e]}else{if(c[f+5]){e=3Dthis.processString(=
c[f+5],h,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D["a",{href:this.processString(c[f+6],h),target:"_blan=
k"},e]}else{g+=3Dc[f];e=3Dnull}}}if(e){j=3Dthis.concatString(j,g,h,d);j.p=
ush(e);g=3D""}if(c[f+7]!=3D=3D""){g+=3Dc[f+7]}}j=3Dthis.concatString(j,g,=
h,d);return =
j},concatString:function(a,c,b,d){if(c!=3D""){c=3Dthis.processString(c,b,=
d);if(!(c instanceof Array)){c=3D[c]}a=3Da.concat(c)}return =
a},lookupPhrase:function(f,a,d){if(!d){d=3D"_"}if(f instanceof =
Array){d=3D(f[0]||"_");f=3D(f[1]||"")}var =
c=3Dthis.loadDomain(d);if(c){MathJax.Hub.RestartAfter(c)}var =
b=3Dthis.strings[this.locale];if(b){if(b.domains&&d in b.domains){var =
e=3Db.domains[d];if(e.strings&&f in e.strings){a=3De.strings[f]}}}return =
a},loadFile:function(b,d,e){e=3DMathJax.Callback(e);b=3D(d.file||b);if(!b=
.match(/\.js$/)){b+=3D".js"}if(!b.match(/^([a-z]+:|\[MathJax\])/)){var =
a=3D(this.strings[this.locale].directory||this.directory+"/"+this.locale|=
|"[MathJax]/localization/"+this.locale);b=3Da+"/"+b}var =
c=3DMathJax.Ajax.Require(b,function(){d.isLoaded=3Dtrue;return =
e()});return(c.called?null:c)},loadDomain:function(c,e){var =
b,a=3Dthis.strings[this.locale];if(a){if(!a.isLoaded){b=3Dthis.loadFile(t=
his.locale,a);if(b){return =
MathJax.Callback.Queue(b,["loadDomain",this,c]).Push(e||{})}}if(a.domains=
&&c in a.domains){var =
d=3Da.domains[c];if(!d.isLoaded){b=3Dthis.loadFile(c,d);if(b){return =
MathJax.Callback.Queue(b).Push(e)}}}}return =
MathJax.Callback(e)()},Try:function(a){a=3DMathJax.Callback(a);a.autoRese=
t=3Dtrue;try{a()}catch(b){if(!b.restart){throw =
b}MathJax.Callback.After(["Try",this,a],b.restart)}},resetLocale:function=
(a){if(!a){return}a=3Da.toLowerCase();while(!this.strings[a]){var =
c=3Da.lastIndexOf("-");if(c=3D=3D=3D-1){return}a=3Da.substring(0,c)}var =
b=3Dthis.strings[a].remap;this.locale=3Db?b:a},setLocale:function(a){this=
.resetLocale(a);if(MathJax.Menu){this.loadDomain("MathMenu")}},addTransla=
tion:function(b,e,c){var =
d=3Dthis.strings[b],a=3Dfalse;if(!d){d=3Dthis.strings[b]=3D{};a=3Dtrue}if=
(!d.domains){d.domains=3D{}}if(e){if(!d.domains[e]){d.domains[e]=3D{}}d=3D=
d.domains[e]}MathJax.Hub.Insert(d,c);if(a&&MathJax.Menu.menu){MathJax.Men=
u.CreateLocaleMenu()}},setCSS:function(b){var =
a=3Dthis.strings[this.locale];if(a){if(a.fontFamily){b.style.fontFamily=3D=
a.fontFamily}if(a.fontDirection){b.style.direction=3Da.fontDirection;if(a=
.fontDirection=3D=3D=3D"rtl"){b.style.textAlign=3D"right"}}}return =
b},fontFamily:function(){var =
a=3Dthis.strings[this.locale];return(a?a.fontFamily:null)},fontDirection:=
function(){var =
a=3Dthis.strings[this.locale];return(a?a.fontDirection:null)},plural:func=
tion(b){var a=3Dthis.strings[this.locale];if(a&&a.plural){return =
a.plural(b)}if(b=3D=3D1){return 1}return 2},number:function(b){var =
a=3Dthis.strings[this.locale];if(a&&a.number){return a.number(b)}return =
b}};MathJax.Message=3D{ready:false,log:[{}],current:null,textNodeBug:(nav=
igator.vendor=3D=3D=3D"Apple Computer, Inc."&&typeof =
navigator.vendorSub=3D=3D=3D"undefined")||(window.hasOwnProperty&&window.=
hasOwnProperty("konqueror")),styles:{"#MathJax_Message":{position:"fixed"=
,left:"1px",bottom:"2px","background-color":"#E6E6E6",border:"1px solid =
#959595",margin:"0px",padding:"2px =
8px","z-index":"102",color:"black","font-size":"80%",width:"auto","white-=
space":"nowrap"},"#MathJax_MSIE_Frame":{position:"absolute",top:0,left:0,=
width:"0px","z-index":101,border:"0px",margin:"0px",padding:"0px"}},brows=
ers:{MSIE:function(a){MathJax.Message.msieFixedPositionBug=3D((document.d=
ocumentMode||0)<7);if(MathJax.Message.msieFixedPositionBug){MathJax.Hub.c=
onfig.styles["#MathJax_Message"].position=3D"absolute"}MathJax.Message.qu=
irks=3D(document.compatMode=3D=3D=3D"BackCompat")},Chrome:function(a){Mat=
hJax.Hub.config.styles["#MathJax_Message"].bottom=3D"1.5em";MathJax.Hub.c=
onfig.styles["#MathJax_Message"].left=3D"1em"}},Init:function(a){if(a){th=
is.ready=3Dtrue}if(!document.body||!this.ready){return =
false}if(this.div&&this.div.parentNode=3D=3Dnull){this.div=3Ddocument.get=
ElementById("MathJax_Message");if(this.div){this.text=3Dthis.div.firstChi=
ld}}if(!this.div){var =
b=3Ddocument.body;if(this.msieFixedPositionBug&&window.attachEvent){b=3Dt=
his.frame=3Dthis.addDiv(document.body);b.removeAttribute("id");b.style.po=
sition=3D"absolute";b.style.border=3Db.style.margin=3Db.style.padding=3D"=
0px";b.style.zIndex=3D"101";b.style.height=3D"0px";b=3Dthis.addDiv(b);b.i=
d=3D"MathJax_MSIE_Frame";window.attachEvent("onscroll",this.MoveFrame);wi=
ndow.attachEvent("onresize",this.MoveFrame);this.MoveFrame()}this.div=3Dt=
his.addDiv(b);this.div.style.display=3D"none";this.text=3Dthis.div.append=
Child(document.createTextNode(""))}return true},addDiv:function(a){var =
b=3Ddocument.createElement("div");b.id=3D"MathJax_Message";if(a.firstChil=
d){a.insertBefore(b,a.firstChild)}else{a.appendChild(b)}return =
b},MoveFrame:function(){var =
a=3D(MathJax.Message.quirks?document.body:document.documentElement);var =
b=3DMathJax.Message.frame;b.style.left=3Da.scrollLeft+"px";b.style.top=3D=
a.scrollTop+"px";b.style.width=3Da.clientWidth+"px";b=3Db.firstChild;b.st=
yle.height=3Da.clientHeight+"px"},localize:function(a){return =
MathJax.Localization._(a,a)},filterText:function(a,c,b){if(MathJax.Hub.co=
nfig.messageStyle=3D=3D=3D"simple"){if(b=3D=3D=3D"LoadFile"){if(!this.loa=
ding){this.loading=3Dthis.localize("Loading")+" =
"}a=3Dthis.loading;this.loading+=3D"."}else{if(b=3D=3D=3D"ProcessMath"){i=
f(!this.processing){this.processing=3Dthis.localize("Processing")+" =
"}a=3Dthis.processing;this.processing+=3D"."}else{if(b=3D=3D=3D"TypesetMa=
th"){if(!this.typesetting){this.typesetting=3Dthis.localize("Typesetting"=
)+" "}a=3Dthis.typesetting;this.typesetting+=3D"."}}}}return =
a},Set:function(c,e,b){if(e=3D=3Dnull){e=3Dthis.log.length;this.log[e]=3D=
{}}var d=3D"";if(c instanceof Array){d=3Dc[0];if(d instanceof =
Array){d=3Dd[1]}try{c=3DMathJax.Localization._.apply(MathJax.Localization=
,c)}catch(a){if(!a.restart){throw =
a}if(!a.restart.called){if(this.log[e].restarted=3D=3Dnull){this.log[e].r=
estarted=3D0}this.log[e].restarted++;delete =
this.log[e].cleared;MathJax.Callback.After(["Set",this,c,e,b],a.restart);=
return e}}}if(this.timer){clearTimeout(this.timer);delete =
this.timer}this.log[e].text=3Dc;this.log[e].filteredText=3Dc=3Dthis.filte=
rText(c,e,d);if(typeof(this.log[e].next)=3D=3D=3D"undefined"){this.log[e]=
.next=3Dthis.current;if(this.current!=3Dnull){this.log[this.current].prev=
=3De}this.current=3De}if(this.current=3D=3D=3De&&MathJax.Hub.config.messa=
geStyle!=3D=3D"none"){if(this.Init()){if(this.textNodeBug){this.div.inner=
HTML=3Dc}else{this.text.nodeValue=3Dc}this.div.style.display=3D"";if(this=
.status){window.status=3D"";delete =
this.status}}else{window.status=3Dc;this.status=3Dtrue}}if(this.log[e].re=
started){if(this.log[e].cleared){b=3D0}if(--this.log[e].restarted=3D=3D=3D=
0){delete =
this.log[e].cleared}}if(b){setTimeout(MathJax.Callback(["Clear",this,e]),=
b)}else{if(b=3D=3D0){this.Clear(e,0)}}return =
e},Clear:function(b,a){if(this.log[b].prev!=3Dnull){this.log[this.log[b].=
prev].next=3Dthis.log[b].next}if(this.log[b].next!=3Dnull){this.log[this.=
log[b].next].prev=3Dthis.log[b].prev}if(this.current=3D=3D=3Db){this.curr=
ent=3Dthis.log[b].next;if(this.text){if(this.div.parentNode=3D=3Dnull){th=
is.Init()}if(this.current=3D=3Dnull){if(this.timer){clearTimeout(this.tim=
er);delete =
this.timer}if(a=3D=3Dnull){a=3D600}if(a=3D=3D=3D0){this.Remove()}else{thi=
s.timer=3DsetTimeout(MathJax.Callback(["Remove",this]),a)}}else{if(MathJa=
x.Hub.config.messageStyle!=3D=3D"none"){if(this.textNodeBug){this.div.inn=
erHTML=3Dthis.log[this.current].filteredText}else{this.text.nodeValue=3Dt=
his.log[this.current].filteredText}}}if(this.status){window.status=3D"";d=
elete =
this.status}}else{if(this.status){window.status=3D(this.current=3D=3Dnull=
?"":this.log[this.current].text)}}}delete this.log[b].next;delete =
this.log[b].prev;delete =
this.log[b].filteredText;if(this.log[b].restarted){this.log[b].cleared=3D=
true}},Remove:function(){this.text.nodeValue=3D"";this.div.style.display=3D=
"none"},File:function(a){return this.Set(["LoadFile","Loading =
%1",a],null,null)},Log:function(){var b=3D[];for(var =
c=3D1,a=3Dthis.log.length;c<a;c++){b[c]=3Dthis.log[c].text}return =
b.join("\n")}};MathJax.Hub=3D{config:{root:"",config:[],styleSheets:[],st=
yles:{".MathJax_Preview":{color:"#888"}},jax:[],extensions:[],preJax:null=
,postJax:null,displayAlign:"center",displayIndent:"0",preRemoveClass:"Mat=
hJax_Preview",showProcessingMessages:true,messageStyle:"normal",delayStar=
tupUntil:"none",skipStartupTypeset:false,elements:[],positionToHash:true,=
showMathMenu:true,showMathMenuMSIE:true,menuSettings:{zoom:"None",CTRL:fa=
lse,ALT:false,CMD:false,Shift:false,discoverable:false,zscale:"200%",rend=
erer:"",font:"Auto",context:"MathJax",locale:"en",mpContext:false,mpMouse=
:false,texHints:true,semantics:false},errorSettings:{message:["[",["MathP=
rocessingError","Math Processing =
Error"],"]"],style:{color:"#CC0000","font-style":"italic"}}},preProcessor=
s:MathJax.Callback.Hooks(true),inputJax:{},outputJax:{order:{}},processUp=
dateTime:250,processUpdateDelay:10,signal:MathJax.Callback.Signal("Hub"),=
Config:function(a){this.Insert(this.config,a);if(this.config.Augment){thi=
s.Augment(this.config.Augment)}},CombineConfig:function(c,f){var =
b=3Dthis.config,g,e;c=3Dc.split(/\./);for(var =
d=3D0,a=3Dc.length;d<a;d++){g=3Dc[d];if(!b[g]){b[g]=3D{}}e=3Db;b=3Db[g]}e=
[g]=3Db=3Dthis.Insert(f,b);return =
b},Register:{PreProcessor:function(){MathJax.Hub.preProcessors.Add.apply(=
MathJax.Hub.preProcessors,arguments)},MessageHook:function(){return =
MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},Start=
upHook:function(){return =
MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,a=
rguments)},LoadHook:function(){return =
MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}},getAllJax:function(=
e){var c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax){c.p=
ush(b[d].MathJax.elementJax)}}return c},getJaxByType:function(f,e){var =
c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d=
].MathJax.elementJax.mimeType=3D=3D=3Df){c.push(b[d].MathJax.elementJax)}=
}return c},getJaxByInputType:function(f,e){var =
c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d=
].type&&b[d].type.replace(/ =
*;(.|\s)*/,"")=3D=3D=3Df){c.push(b[d].MathJax.elementJax)}}return =
c},getJaxFor:function(a){if(typeof(a)=3D=3D=3D"string"){a=3Ddocument.getE=
lementById(a)}if(a&&a.MathJax){return =
a.MathJax.elementJax}if(a&&a.isMathJax){while(a&&!a.jaxID){a=3Da.parentNo=
de}if(a){return MathJax.OutputJax[a.jaxID].getJaxFromMath(a)}}return =
null},isJax:function(a){if(typeof(a)=3D=3D=3D"string"){a=3Ddocument.getEl=
ementById(a)}if(a&&a.isMathJax){return =
1}if(a&&a.tagName!=3Dnull&&a.tagName.toLowerCase()=3D=3D=3D"script"){if(a=
.MathJax){return(a.MathJax.state=3D=3D=3DMathJax.ElementJax.STATE.PROCESS=
ED?1:-1)}if(a.type&&this.inputJax[a.type.replace(/ =
*;(.|\s)*/,"")]){return -1}}return =
0},setRenderer:function(d,c){if(!d){return}if(!MathJax.OutputJax[d]){this=
.config.menuSettings.renderer=3D"";var =
b=3D"[MathJax]/jax/output/"+d+"/config.js";return =
MathJax.Ajax.Require(b,["setRenderer",this,d,c])}else{this.config.menuSet=
tings.renderer=3Dd;if(c=3D=3Dnull){c=3D"jax/mml"}var =
a=3Dthis.outputJax;if(a[c]&&a[c].length){if(d!=3D=3Da[c][0].id){a[c].unsh=
ift(MathJax.OutputJax[d]);return this.signal.Post(["Renderer =
Selected",d])}}return null}},Queue:function(){return =
this.queue.Push.apply(this.queue,arguments)},Typeset:function(e,f){if(!Ma=
thJax.isReady){return null}var c=3Dthis.elementCallback(e,f);var =
b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){b.Push(["PreProces=
s",this,c.elements[d]],["Process",this,c.elements[d]])}}return =
b.Push(c.callback)},PreProcess:function(e,f){var =
c=3Dthis.elementCallback(e,f);var b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){b.Push(["Post",thi=
s.signal,["Begin =
PreProcess",c.elements[d]]],(arguments.callee.disabled?{}:["Execute",this=
.preProcessors,c.elements[d]]),["Post",this.signal,["End =
PreProcess",c.elements[d]]])}}return =
b.Push(c.callback)},Process:function(a,b){return =
this.takeAction("Process",a,b)},Update:function(a,b){return =
this.takeAction("Update",a,b)},Reprocess:function(a,b){return =
this.takeAction("Reprocess",a,b)},Rerender:function(a,b){return =
this.takeAction("Rerender",a,b)},takeAction:function(g,e,h){var =
c=3Dthis.elementCallback(e,h);var =
b=3DMathJax.Callback.Queue(["Clear",this.signal]);for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){var =
f=3D{scripts:[],start:new =
Date().getTime(),i:0,j:0,jax:{},jaxIDs:[]};b.Push(["Post",this.signal,["B=
egin "+g,c.elements[d]]],["Post",this.signal,["Begin =
Math",c.elements[d],g]],["prepareScripts",this,g,c.elements[d],f],["Post"=
,this.signal,["Begin Math =
Input",c.elements[d],g]],["processInput",this,f],["Post",this.signal,["En=
d Math =
Input",c.elements[d],g]],["prepareOutput",this,f,"preProcess"],["Post",th=
is.signal,["Begin Math =
Output",c.elements[d],g]],["processOutput",this,f],["Post",this.signal,["=
End Math =
Output",c.elements[d],g]],["prepareOutput",this,f,"postProcess"],["Post",=
this.signal,["End Math",c.elements[d],g]],["Post",this.signal,["End =
"+g,c.elements[d]]])}}return =
b.Push(c.callback)},scriptAction:{Process:function(a){},Update:function(b=
){var =
a=3Db.MathJax.elementJax;if(a&&a.needsUpdate()){a.Remove(true);b.MathJax.=
state=3Da.STATE.UPDATE}else{b.MathJax.state=3Da.STATE.PROCESSED}},Reproce=
ss:function(b){var =
a=3Db.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=3Da.STATE.U=
PDATE}},Rerender:function(b){var =
a=3Db.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=3Da.STATE.O=
UTPUT}}},prepareScripts:function(h,e,g){if(arguments.callee.disabled){ret=
urn}var b=3Dthis.elementScripts(e);var =
f=3DMathJax.ElementJax.STATE;for(var d=3D0,a=3Db.length;d<a;d++){var =
c=3Db[d];if(c.type&&this.inputJax[c.type.replace(/ =
*;(.|\n)*/,"")]){if(c.MathJax){if(c.MathJax.elementJax&&c.MathJax.element=
Jax.hover){MathJax.Extension.MathEvents.Hover.ClearHover(c.MathJax.elemen=
tJax)}if(c.MathJax.state!=3D=3Df.PENDING){this.scriptAction[h](c)}}if(!c.=
MathJax){c.MathJax=3D{state:f.PENDING}}if(c.MathJax.state!=3D=3Df.PROCESS=
ED){g.scripts.push(c)}}}},checkScriptSiblings:function(a){if(a.MathJax.ch=
ecked){return}var =
b=3Dthis.config,f=3Da.previousSibling;if(f&&f.nodeName=3D=3D=3D"#text"){v=
ar =
d,e,c=3Da.nextSibling;if(c&&c.nodeName!=3D=3D"#text"){c=3Dnull}if(b.preJa=
x){if(typeof(b.preJax)=3D=3D=3D"string"){b.preJax=3Dnew =
RegExp(b.preJax+"$")}d=3Df.nodeValue.match(b.preJax)}if(b.postJax&&c){if(=
typeof(b.postJax)=3D=3D=3D"string"){b.postJax=3Dnew =
RegExp("^"+b.postJax)}e=3Dc.nodeValue.match(b.postJax)}if(d&&(!b.postJax|=
|e)){f.nodeValue=3Df.nodeValue.replace(b.preJax,(d.length>1?d[1]:""));f=3D=
null}if(e&&(!b.preJax||d)){c.nodeValue=3Dc.nodeValue.replace(b.postJax,(e=
.length>1?e[1]:""))}if(f&&!f.nodeValue.match(/\S/)){f=3Df.previousSibling=
}}if(b.preRemoveClass&&f&&f.className=3D=3D=3Db.preRemoveClass){a.MathJax=
.preview=3Df}a.MathJax.checked=3D1},processInput:function(a){var =
b,i=3DMathJax.ElementJax.STATE;var =
h,e,d=3Da.scripts.length;try{while(a.i<d){h=3Da.scripts[a.i];if(!h){a.i++=
;continue}e=3Dh.previousSibling;if(e&&e.className=3D=3D=3D"MathJax_Error"=
){e.parentNode.removeChild(e)}if(!h.MathJax||h.MathJax.state=3D=3D=3Di.PR=
OCESSED){a.i++;continue}if(!h.MathJax.elementJax||h.MathJax.state=3D=3D=3D=
i.UPDATE){this.checkScriptSiblings(h);var g=3Dh.type.replace(/ =
*;(.|\s)*/,"");b=3Dthis.inputJax[g].Process(h,a);if(typeof =
b=3D=3D=3D"function"){if(b.called){continue}this.RestartAfter(b)}b.Attach=
(h,this.inputJax[g].id);this.saveScript(b,a,h,i)}else{if(h.MathJax.state=3D=
=3D=3Di.OUTPUT){this.saveScript(h.MathJax.elementJax,a,h,i)}}a.i++;var =
c=3Dnew =
Date().getTime();if(c-a.start>this.processUpdateTime&&a.i<a.scripts.lengt=
h){a.start=3Dc;this.RestartAfter(MathJax.Callback.Delay(1))}}}catch(f){re=
turn =
this.processError(f,a,"Input")}if(a.scripts.length&&this.config.showProce=
ssingMessages){MathJax.Message.Set(["ProcessMath","Processing math: =
%1%%",100],0)}a.start=3Dnew Date().getTime();a.i=3Da.j=3D0;return =
null},saveScript:function(a,d,b,c){if(!this.outputJax[a.mimeType]){b.Math=
Jax.state=3Dc.UPDATE;throw Error("No output jax registered for =
"+a.mimeType)}a.outputJax=3Dthis.outputJax[a.mimeType][0].id;if(!d.jax[a.=
outputJax]){if(d.jaxIDs.length=3D=3D=3D0){d.jax[a.outputJax]=3Dd.scripts}=
else{if(d.jaxIDs.length=3D=3D=3D1){d.jax[d.jaxIDs[0]]=3Dd.scripts.slice(0=
,d.i)}d.jax[a.outputJax]=3D[]}d.jaxIDs.push(a.outputJax)}if(d.jaxIDs.leng=
th>1){d.jax[a.outputJax].push(b)}b.MathJax.state=3Dc.OUTPUT},prepareOutpu=
t:function(c,f){while(c.j<c.jaxIDs.length){var =
e=3Dc.jaxIDs[c.j],d=3DMathJax.OutputJax[e];if(d[f]){try{var =
a=3Dd[f](c);if(typeof =
a=3D=3D=3D"function"){if(a.called){continue}this.RestartAfter(a)}}catch(b=
){if(!b.restart){MathJax.Message.Set(["PrepError","Error preparing %1 =
output (%2)",e,f],null,600);MathJax.Hub.lastPrepError=3Db;c.j++}return =
MathJax.Callback.After(["prepareOutput",this,c,f],b.restart)}}c.j++}retur=
n null},processOutput:function(h){var =
b,g=3DMathJax.ElementJax.STATE,d,a=3Dh.scripts.length;try{while(h.i<a){d=3D=
h.scripts[h.i];if(!d||!d.MathJax||d.MathJax.error){h.i++;continue}var =
c=3Dd.MathJax.elementJax;if(!c){h.i++;continue}b=3DMathJax.OutputJax[c.ou=
tputJax].Process(d,h);d.MathJax.state=3Dg.PROCESSED;h.i++;if(d.MathJax.pr=
eview){d.MathJax.preview.innerHTML=3D""}this.signal.Post(["New =
Math",c.inputID]);var e=3Dnew =
Date().getTime();if(e-h.start>this.processUpdateTime&&h.i<h.scripts.lengt=
h){h.start=3De;this.RestartAfter(MathJax.Callback.Delay(this.processUpdat=
eDelay))}}}catch(f){return =
this.processError(f,h,"Output")}if(h.scripts.length&&this.config.showProc=
essingMessages){MathJax.Message.Set(["TypesetMath","Typesetting math: =
%1%%",100],0);MathJax.Message.Clear(0)}h.i=3Dh.j=3D0;return =
null},processMessage:function(d,b){var =
a=3DMath.floor(d.i/(d.scripts.length)*100);var =
c=3D(b=3D=3D=3D"Output"?["TypesetMath","Typesetting math: =
%1%%"]:["ProcessMath","Processing math: =
%1%%"]);if(this.config.showProcessingMessages){MathJax.Message.Set(c.conc=
at(a),0)}},processError:function(b,c,a){if(!b.restart){if(!this.config.er=
rorSettings.message){throw =
b}this.formatError(c.scripts[c.i],b);c.i++}this.processMessage(c,a);retur=
n =
MathJax.Callback.After(["process"+a,this,c],b.restart)},formatError:funct=
ion(b,e){var d=3D"Error: "+e.message+"\n";if(e.sourceURL){d+=3D"\nfile: =
"+e.sourceURL}if(e.line){d+=3D"\nline: =
"+e.line}b.MathJax.error=3DMathJax.OutputJax.Error.Jax(d,b);var =
f=3Dthis.config.errorSettings;var =
a=3DMathJax.Localization._(f.messageId,f.message);var =
c=3DMathJax.HTML.Element("span",{className:"MathJax_Error",jaxID:"Error",=
isMathJax:true},a);if(MathJax.Extension.MathEvents){c.oncontextmenu=3DMat=
hJax.Extension.MathEvents.Event.Menu;c.onmousedown=3DMathJax.Extension.Ma=
thEvents.Event.Mousedown}else{MathJax.Ajax.Require("[MathJax]/extensions/=
MathEvents.js",function(){c.oncontextmenu=3DMathJax.Extension.MathEvents.=
Event.Menu;c.onmousedown=3DMathJax.Extension.MathEvents.Event.Mousedown})=
}b.parentNode.insertBefore(c,b);if(b.MathJax.preview){b.MathJax.preview.i=
nnerHTML=3D""}this.lastError=3De;this.signal.Post(["Math Processing =
Error",b,e])},RestartAfter:function(a){throw =
this.Insert(Error("restart"),{restart:MathJax.Callback(a)})},elementCallb=
ack:function(c,f){if(f=3D=3Dnull&&(c instanceof Array||typeof =
c=3D=3D=3D"function")){try{MathJax.Callback(c);f=3Dc;c=3Dnull}catch(d){}}=
if(c=3D=3Dnull){c=3Dthis.config.elements||[]}if(!(c instanceof =
Array)){c=3D[c]}c=3D[].concat(c);for(var =
b=3D0,a=3Dc.length;b<a;b++){if(typeof(c[b])=3D=3D=3D"string"){c[b]=3Ddocu=
ment.getElementById(c[b])}}if(!document.body){document.body=3Ddocument.ge=
tElementsByTagName("body")[0]}if(c.length=3D=3D0){c.push(document.body)}i=
f(!f){f=3D{}}return{elements:c,callback:f}},elementScripts:function(d){if=
(d instanceof Array){var b=3D[];for(var =
c=3D0,a=3Dd.length;c<a;c++){b.push.apply(b,this.elementScripts(d[c]))}ret=
urn =
b}if(typeof(d)=3D=3D=3D"string"){d=3Ddocument.getElementById(d)}if(!docum=
ent.body){document.body=3Ddocument.getElementsByTagName("body")[0]}if(d=3D=
=3Dnull){d=3Ddocument.body}if(d.tagName!=3Dnull&&d.tagName.toLowerCase()=3D=
=3D=3D"script"){return[d]}return =
d.getElementsByTagName("script")},Insert:function(c,a){for(var b in =
a){if(a.hasOwnProperty(b)){if(typeof a[b]=3D=3D=3D"object"&&!(a[b] =
instanceof Array)&&(typeof c[b]=3D=3D=3D"object"||typeof =
c[b]=3D=3D=3D"function")){this.Insert(c[b],a[b])}else{c[b]=3Da[b]}}}retur=
n c},SplitList:("trim" in String.prototype?function(a){return =
a.trim().split(/\s+/)}:function(a){return =
a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/)})};MathJax.Hub.Inser=
t(MathJax.Hub.config.styles,MathJax.Message.styles);MathJax.Hub.Insert(Ma=
thJax.Hub.config.styles,{".MathJax_Error":MathJax.Hub.config.errorSetting=
s.style});MathJax.Extension=3D{};MathJax.Hub.Configured=3DMathJax.Callbac=
k({});MathJax.Hub.Startup=3D{script:"",queue:MathJax.Callback.Queue(),sig=
nal:MathJax.Callback.Signal("Startup"),params:{},Config:function(){this.q=
ueue.Push(["Post",this.signal,"Begin =
Config"]);if(this.params.locale){MathJax.Localization.resetLocale(this.pa=
rams.locale);MathJax.Hub.config.menuSettings.locale=3Dthis.params.locale}=
if(this.params.config){var c=3Dthis.params.config.split(/,/);for(var =
b=3D0,a=3Dc.length;b<a;b++){if(!c[b].match(/\.js$/)){c[b]+=3D".js"}this.q=
ueue.Push(["Require",MathJax.Ajax,this.URL("config",c[b])])}}this.queue.P=
ush(["Config",MathJax.Hub,MathJax.AuthorConfig]);if(this.script.match(/\S=
/)){this.queue.Push(this.script+";\n1;")}this.queue.Push(["ConfigDelay",t=
his],["ConfigBlocks",this],[function(d){return =
d.loadArray(MathJax.Hub.config.config,"config",null,true)},this],["Post",=
this.signal,"End Config"])},ConfigDelay:function(){var =
a=3Dthis.params.delayStartupUntil||MathJax.Hub.config.delayStartupUntil;i=
f(a=3D=3D=3D"onload"){return =
this.onload}if(a=3D=3D=3D"configured"){return =
MathJax.Hub.Configured}return a},ConfigBlocks:function(){var =
c=3Ddocument.getElementsByTagName("script");var =
f=3Dnull,b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.length;d<a;d++){var e=3DString(c[d].type).replace(/ =
/g,"");if(e.match(/^text\/x-mathjax-config(;.*)?$/)&&!e.match(/;executed=3D=
true/)){c[d].type+=3D";executed=3Dtrue";f=3Db.Push(c[d].innerHTML+";\n1;"=
)}}return f},Cookie:function(){return =
this.queue.Push(["Post",this.signal,"Begin =
Cookie"],["Get",MathJax.HTML.Cookie,"menu",MathJax.Hub.config.menuSetting=
s],[function(d){if(d.menuSettings.locale){MathJax.Localization.resetLocal=
e(d.menuSettings.locale)}var =
f=3Dd.menuSettings.renderer,b=3Dd.jax;if(f){var =
c=3D"output/"+f;b.sort();for(var =
e=3D0,a=3Db.length;e<a;e++){if(b[e].substr(0,7)=3D=3D=3D"output/"){break}=
}if(e=3D=3Da-1){b.pop()}else{while(e<a){if(b[e]=3D=3D=3Dc){b.splice(e,1);=
break}e++}}b.unshift(c)}},MathJax.Hub.config],["Post",this.signal,"End =
Cookie"])},Styles:function(){return =
this.queue.Push(["Post",this.signal,"Begin =
Styles"],["loadArray",this,MathJax.Hub.config.styleSheets,"config"],["Sty=
les",MathJax.Ajax,MathJax.Hub.config.styles],["Post",this.signal,"End =
Styles"])},Jax:function(){var =
f=3DMathJax.Hub.config,c=3DMathJax.Hub.outputJax;for(var =
g=3D0,b=3Df.jax.length,d=3D0;g<b;g++){var =
e=3Df.jax[g].substr(7);if(f.jax[g].substr(0,7)=3D=3D=3D"output/"&&c.order=
[e]=3D=3Dnull){c.order[e]=3Dd;d++}}var =
a=3DMathJax.Callback.Queue();return a.Push(["Post",this.signal,"Begin =
Jax"],["loadArray",this,f.jax,"jax","config.js"],["Post",this.signal,"End=
 Jax"])},Extensions:function(){var a=3DMathJax.Callback.Queue();return =
a.Push(["Post",this.signal,"Begin =
Extensions"],["loadArray",this,MathJax.Hub.config.extensions,"extensions"=
],["Post",this.signal,"End =
Extensions"])},Message:function(){MathJax.Message.Init(true)},Menu:functi=
on(){var =
b=3DMathJax.Hub.config.menuSettings,a=3DMathJax.Hub.outputJax,d;for(var =
c in =
a){if(a.hasOwnProperty(c)){if(a[c].length){d=3Da[c];break}}}if(d&&d.lengt=
h){if(b.renderer&&b.renderer!=3D=3Dd[0].id){d.unshift(MathJax.OutputJax[b=
.renderer])}b.renderer=3Dd[0].id}},Hash:function(){if(MathJax.Hub.config.=
positionToHash&&document.location.hash&&document.body&&document.body.scro=
llIntoView){var d=3Ddocument.location.hash.substr(1);var =
f=3Ddocument.getElementById(d);if(!f){var =
c=3Ddocument.getElementsByTagName("a");for(var =
e=3D0,b=3Dc.length;e<b;e++){if(c[e].name=3D=3D=3Dd){f=3Dc[e];break}}}if(f=
){while(!f.scrollIntoView){f=3Df.parentNode}f=3Dthis.HashCheck(f);if(f&&f=
.scrollIntoView){setTimeout(function(){f.scrollIntoView(true)},1)}}}},Has=
hCheck:function(b){if(b.isMathJax){var =
a=3DMathJax.Hub.getJaxFor(b);if(a&&MathJax.OutputJax[a.outputJax].hashChe=
ck){b=3DMathJax.OutputJax[a.outputJax].hashCheck(b)}}return =
b},MenuZoom:function(){if(MathJax.Hub.config.showMathMenu){if(!MathJax.Ex=
tension.MathMenu){setTimeout(function(){MathJax.Callback.Queue(["Require"=
,MathJax.Ajax,"[MathJax]/extensions/MathMenu.js",{}],["loadDomain",MathJa=
x.Localization,"MathMenu"])},1000)}else{setTimeout(MathJax.Callback(["loa=
dDomain",MathJax.Localization,"MathMenu"]),1000)}if(!MathJax.Extension.Ma=
thZoom){setTimeout(MathJax.Callback(["Require",MathJax.Ajax,"[MathJax]/ex=
tensions/MathZoom.js",{}]),2000)}}},onLoad:function(){var =
a=3Dthis.onload=3DMathJax.Callback(function(){MathJax.Hub.Startup.signal.=
Post("onLoad")});if(document.body&&document.readyState){if(MathJax.Hub.Br=
owser.isMSIE){if(document.readyState=3D=3D=3D"complete"){return[a]}}else{=
if(document.readyState!=3D=3D"loading"){return[a]}}}if(window.addEventLis=
tener){window.addEventListener("load",a,false);if(!this.params.noDOMConte=
ntEvent){window.addEventListener("DOMContentLoaded",a,false)}}else{if(win=
dow.attachEvent){window.attachEvent("onload",a)}else{window.onload=3Da}}r=
eturn =
a},Typeset:function(a,b){if(MathJax.Hub.config.skipStartupTypeset){return=
 function(){}}return this.queue.Push(["Post",this.signal,"Begin =
Typeset"],["Typeset",MathJax.Hub,a,b],["Post",this.signal,"End =
Typeset"])},URL:function(b,a){if(!a.match(/^([a-z]+:\/\/|\[|\/)/)){a=3D"[=
MathJax]/"+b+"/"+a}return a},loadArray:function(b,f,c,a){if(b){if(!(b =
instanceof Array)){b=3D[b]}if(b.length){var =
h=3DMathJax.Callback.Queue(),j=3D{},e;for(var =
g=3D0,d=3Db.length;g<d;g++){e=3Dthis.URL(f,b[g]);if(c){e+=3D"/"+c}if(a){h=
.Push(["Require",MathJax.Ajax,e,j])}else{h.Push(MathJax.Ajax.Require(e,j)=
)}}return h.Push({})}}return null}};(function(d){var =
b=3Dwindow[d],e=3D"["+d+"]";var c=3Db.Hub,a=3Db.Ajax,f=3Db.Callback;var =
g=3DMathJax.Object.Subclass({JAXFILE:"jax.js",require:null,config:{},Init=
:function(i,h){if(arguments.length=3D=3D=3D0){return =
this}return(this.constructor.Subclass(i,h))()},Augment:function(k,j){var =
i=3Dthis.constructor,h=3D{};if(k!=3Dnull){for(var l in =
k){if(k.hasOwnProperty(l)){if(typeof =
k[l]=3D=3D=3D"function"){i.protoFunction(l,k[l])}else{h[l]=3Dk[l]}}}if(k.=
toString!=3D=3Di.prototype.toString&&k.toString!=3D=3D{}.toString){i.prot=
oFunction("toString",k.toString)}}c.Insert(i.prototype,h);i.Augment(null,=
j);return this},Translate:function(h,i){throw =
Error(this.directory+"/"+this.JAXFILE+" failed to define the Translate() =
method")},Register:function(h){},Config:function(){this.config=3Dc.Combin=
eConfig(this.id,this.config);if(this.config.Augment){this.Augment(this.co=
nfig.Augment)}},Startup:function(){},loadComplete:function(i){if(i=3D=3D=3D=
"config.js"){return a.loadComplete(this.directory+"/"+i)}else{var =
h=3Df.Queue();h.Push(c.Register.StartupHook("End =
Config",{}),["Post",c.Startup.signal,this.id+" Jax =
Config"],["Config",this],["Post",c.Startup.signal,this.id+" Jax =
Require"],[function(j){return =
MathJax.Hub.Startup.loadArray(j.require,this.directory)},this],[function(=
j,k){return =
MathJax.Hub.Startup.loadArray(j.extensions,"extensions/"+k)},this.config|=
|{},this.id],["Post",c.Startup.signal,this.id+" Jax =
Startup"],["Startup",this],["Post",c.Startup.signal,this.id+" Jax =
Ready"]);if(this.copyTranslate){h.Push([function(j){j.preProcess=3Dj.preT=
ranslate;j.Process=3Dj.Translate;j.postProcess=3Dj.postTranslate},this.co=
nstructor.prototype])}return =
h.Push(["loadComplete",a,this.directory+"/"+i])}}},{id:"Jax",version:"2.4=
.0",directory:e+"/jax",extensionDir:e+"/extensions"});b.InputJax=3Dg.Subc=
lass({elementJax:"mml",sourceMenuTitle:["Original","Original =
Form"],copyTranslate:true,Process:function(l,q){var j=3Df.Queue(),o;var =
k=3Dthis.elementJax;if(!(k instanceof Array)){k=3D[k]}for(var =
n=3D0,h=3Dk.length;n<h;n++){o=3Db.ElementJax.directory+"/"+k[n]+"/"+this.=
JAXFILE;if(!this.require){this.require=3D[]}else{if(!(this.require =
instanceof =
Array)){this.require=3D[this.require]}}this.require.push(o);j.Push(a.Requ=
ire(o))}o=3Dthis.directory+"/"+this.JAXFILE;var =
p=3Dj.Push(a.Require(o));if(!p.called){this.constructor.prototype.Process=
=3Dfunction(){if(!p.called){return p}throw Error(o+" failed to load =
properly")}}k=3Dc.outputJax["jax/"+k[0]];if(k){j.Push(a.Require(k[0].dire=
ctory+"/"+this.JAXFILE))}return j.Push({})},needsUpdate:function(h){var =
i=3Dh.SourceElement();return(h.originalText!=3D=3Db.HTML.getScript(i))},R=
egister:function(h){if(!c.inputJax){c.inputJax=3D{}}c.inputJax[h]=3Dthis}=
},{id:"InputJax",version:"2.4.0",directory:g.directory+"/input",extension=
Dir:g.extensionDir});b.OutputJax=3Dg.Subclass({copyTranslate:true,preProc=
ess:function(j){var =
i,h=3Dthis.directory+"/"+this.JAXFILE;this.constructor.prototype.preProce=
ss=3Dfunction(k){if(!i.called){return i}throw Error(h+" failed to load =
properly")};i=3Da.Require(h);return i},Register:function(i){var =
h=3Dc.outputJax;if(!h[i]){h[i]=3D[]}if(h[i].length&&(this.id=3D=3D=3Dc.co=
nfig.menuSettings.renderer||(h.order[this.id]||0)<(h.order[h[i][0].id]||0=
))){h[i].unshift(this)}else{h[i].push(this)}if(!this.require){this.requir=
e=3D[]}else{if(!(this.require instanceof =
Array)){this.require=3D[this.require]}}this.require.push(b.ElementJax.dir=
ectory+"/"+(i.split(/\//)[1])+"/"+this.JAXFILE)},Remove:function(h){}},{i=
d:"OutputJax",version:"2.4.0",directory:g.directory+"/output",extensionDi=
r:g.extensionDir,fontDir:e+(b.isPacked?"":"/..")+"/fonts",imageDir:e+(b.i=
sPacked?"":"/..")+"/images"});b.ElementJax=3Dg.Subclass({Init:function(i,=
h){return =
this.constructor.Subclass(i,h)},inputJax:null,outputJax:null,inputID:null=
,originalText:"",mimeType:"",sourceMenuTitle:["MathMLcode","MathML =
Code"],Text:function(i,j){var =
h=3Dthis.SourceElement();b.HTML.setScript(h,i);h.MathJax.state=3Dthis.STA=
TE.UPDATE;return c.Update(h,j)},Reprocess:function(i){var =
h=3Dthis.SourceElement();h.MathJax.state=3Dthis.STATE.UPDATE;return =
c.Reprocess(h,i)},Update:function(h){return =
this.Rerender(h)},Rerender:function(i){var =
h=3Dthis.SourceElement();h.MathJax.state=3Dthis.STATE.OUTPUT;return =
c.Process(h,i)},Remove:function(h){if(this.hover){this.hover.clear(this)}=
b.OutputJax[this.outputJax].Remove(this);if(!h){c.signal.Post(["Remove =
Math",this.inputID]);this.Detach()}},needsUpdate:function(){return =
b.InputJax[this.inputJax].needsUpdate(this)},SourceElement:function(){ret=
urn document.getElementById(this.inputID)},Attach:function(i,j){var =
h=3Di.MathJax.elementJax;if(i.MathJax.state=3D=3D=3Dthis.STATE.UPDATE){h.=
Clone(this)}else{h=3Di.MathJax.elementJax=3Dthis;if(i.id){this.inputID=3D=
i.id}else{i.id=3Dthis.inputID=3Db.ElementJax.GetID();this.newID=3D1}}h.or=
iginalText=3Db.HTML.getScript(i);h.inputJax=3Dj;if(h.root){h.root.inputID=
=3Dh.inputID}return h},Detach:function(){var =
h=3Dthis.SourceElement();if(!h){return}try{delete =
h.MathJax}catch(i){h.MathJax=3Dnull}if(this.newID){h.id=3D""}},Clone:func=
tion(h){var i;for(i in =
this){if(!this.hasOwnProperty(i)){continue}if(typeof(h[i])=3D=3D=3D"undef=
ined"&&i!=3D=3D"newID"){delete this[i]}}for(i in =
h){if(!h.hasOwnProperty(i)){continue}if(typeof(this[i])=3D=3D=3D"undefine=
d"||(this[i]!=3D=3Dh[i]&&i!=3D=3D"inputID")){this[i]=3Dh[i]}}}},{id:"Elem=
entJax",version:"2.4.0",directory:g.directory+"/element",extensionDir:g.e=
xtensionDir,ID:0,STATE:{PENDING:1,PROCESSED:2,UPDATE:3,OUTPUT:4},GetID:fu=
nction(){this.ID++;return"MathJax-Element-"+this.ID},Subclass:function(){=
var =
h=3Dg.Subclass.apply(this,arguments);h.loadComplete=3Dthis.prototype.load=
Complete;return =
h}});b.ElementJax.prototype.STATE=3Db.ElementJax.STATE;b.OutputJax.Error=3D=
{id:"Error",version:"2.4.0",config:{},ContextMenu:function(){return =
b.Extension.MathEvents.Event.ContextMenu.apply(b.Extension.MathEvents.Eve=
nt,arguments)},Mousedown:function(){return =
b.Extension.MathEvents.Event.AltContextMenu.apply(b.Extension.MathEvents.=
Event,arguments)},getJaxFromMath:function(h){return(h.nextSibling.MathJax=
||{}).error},Jax:function(j,i){var =
h=3DMathJax.Hub.inputJax[i.type.replace(/ =
*;(.|\s)*/,"")];return{inputJax:(h||{id:"Error"}).id,outputJax:"Error",so=
urceMenuTitle:["ErrorMessage","Error =
Message"],sourceMenuFormat:"Error",originalText:MathJax.HTML.getScript(i)=
,errorText:j}}};b.InputJax.Error=3D{id:"Error",version:"2.4.0",config:{},=
sourceMenuTitle:["Original","Original =
Form"]}})("MathJax");(function(n){var =
g=3Dwindow[n];if(!g){g=3Dwindow[n]=3D{}}var c=3Dg.Hub;var =
r=3Dc.Startup;var v=3Dc.config;var =
f=3Ddocument.getElementsByTagName("head")[0];if(!f){f=3Ddocument.childNod=
es[0]}var =
b=3D(document.documentElement||document).getElementsByTagName("script");v=
ar e=3Dnew RegExp("(^|/)"+n+"\\.js(\\?.*)?$");for(var =
p=3Db.length-1;p>=3D0;p--){if((b[p].src||"").match(e)){r.script=3Db[p].in=
nerHTML;if(RegExp.$2){var s=3DRegExp.$2.substr(1).split(/\&/);for(var =
o=3D0,k=3Ds.length;o<k;o++){var =
l=3Ds[o].match(/(.*)=3D(.*)/);if(l){r.params[unescape(l[1])]=3Dunescape(l=
[2])}}}v.root=3Db[p].src.replace(/(^|\/)[^\/]*(\?.*)?$/,"").replace(/^(ht=
tps?:)\/\/[0-9a-f]+(-[0-9a-f]+)?.ssl.cf1.rackcdn.com\//,"$1//cdn.mathjax.=
org/");g.Ajax.config.root=3Dv.root;break}}var =
h=3Dnavigator.userAgent;var =
a=3D{isMac:(navigator.platform.substr(0,3)=3D=3D=3D"Mac"),isPC:(navigator=
.platform.substr(0,3)=3D=3D=3D"Win"),isMSIE:("ActiveXObject" in =
window&&"clipboardData" in =
window),isFirefox:(h.match(/Gecko\//)&&!h.match(/like =
Gecko/)),isSafari:(h.match(/ =
(Apple)?WebKit\//)!=3Dnull&&(!window.chrome||window.chrome.loadTimes=3D=3D=
null)),isChrome:(window.chrome!=3Dnull&&window.chrome.loadTimes!=3Dnull),=
isOpera:(window.opera!=3Dnull&&window.opera.version!=3Dnull),isKonqueror:=
("konqueror" in =
window&&navigator.vendor=3D=3D"KDE"),versionAtLeast:function(x){var =
w=3D(this.version).split(".");x=3D(new String(x)).split(".");for(var =
y=3D0,j=3Dx.length;y<j;y++){if(w[y]!=3Dx[y]){return =
parseInt(w[y]||"0")>=3DparseInt(x[y])}}return =
true},Select:function(j){var i=3Dj[c.Browser];if(i){return =
i(c.Browser)}return null}};var d=3Dh.replace(/^Mozilla\/(\d+\.)+\d+ =
/,"").replace(/[a-z][-a-z0-9._: ]+\/\d+[^ ]*-[^ ]*\.([a-z][a-z])?\d+ =
/i,"").replace(/Gentoo |Ubuntu\/(\d+\.)*\d+ (\([^)]*\) =
)?/,"");c.Browser=3Dc.Insert(c.Insert(new =
String("Unknown"),{version:"0.0"}),a);for(var u in =
a){if(a.hasOwnProperty(u)){if(a[u]&&u.substr(0,2)=3D=3D=3D"is"){u=3Du.sli=
ce(2);if(u=3D=3D=3D"Mac"||u=3D=3D=3D"PC"){continue}c.Browser=3Dc.Insert(n=
ew String(u),a);var q=3Dnew RegExp(".*(Version/| Trident/.*; =
rv:)((?:\\d+\\.)+\\d+)|.*("+u+")"+(u=3D=3D"MSIE"?" =
":"/")+"((?:\\d+\\.)*\\d+)|(?:^|\\(| )([a-z][-a-z0-9._: =
]+|(?:Apple)?WebKit)/((?:\\d+\\.)+\\d+)");var =
t=3Dq.exec(d)||["","","","unknown","0.0"];c.Browser.name=3D(t[1]!=3D""?u:=
(t[3]||t[5]));c.Browser.version=3Dt[2]||t[4]||t[6];break}}}c.Browser.Sele=
ct({Safari:function(j){var =
i=3DparseInt((String(j.version).split("."))[0]);if(i>85){j.webkit=3Dj.ver=
sion}if(i>=3D534){j.version=3D"5.1"}else{if(i>=3D533){j.version=3D"5.0"}e=
lse{if(i>=3D526){j.version=3D"4.0"}else{if(i>=3D525){j.version=3D"3.1"}el=
se{if(i>500){j.version=3D"3.0"}else{if(i>400){j.version=3D"2.0"}else{if(i=
>85){j.version=3D"1.0"}}}}}}}j.isMobile=3D(navigator.appVersion.match(/Mo=
bile/i)!=3Dnull);j.noContextMenu=3Dj.isMobile},Firefox:function(j){if((j.=
version=3D=3D=3D"0.0"||h.match(/Firefox/)=3D=3Dnull)&&navigator.product=3D=
=3D=3D"Gecko"){var m=3Dh.match(/[\/ ]rv:(\d+\.\d.*?)[\) =
]/);if(m){j.version=3Dm[1]}else{var =
i=3D(navigator.buildID||navigator.productSub||"0").substr(0,8);if(i>=3D"2=
0111220"){j.version=3D"9.0"}else{if(i>=3D"20111120"){j.version=3D"8.0"}el=
se{if(i>=3D"20110927"){j.version=3D"7.0"}else{if(i>=3D"20110816"){j.versi=
on=3D"6.0"}else{if(i>=3D"20110621"){j.version=3D"5.0"}else{if(i>=3D"20110=
320"){j.version=3D"4.0"}else{if(i>=3D"20100121"){j.version=3D"3.6"}else{i=
f(i>=3D"20090630"){j.version=3D"3.5"}else{if(i>=3D"20080617"){j.version=3D=
"3.0"}else{if(i>=3D"20061024"){j.version=3D"2.0"}}}}}}}}}}}}j.isMobile=3D=
(navigator.appVersion.match(/Android/i)!=3Dnull||h.match(/ =
Fennec\//)!=3Dnull||h.match(/Mobile/)!=3Dnull)},Opera:function(i){i.versi=
on=3Dopera.version()},MSIE:function(j){j.isIE9=3D!!(document.documentMode=
&&(window.performance||window.msPerformance));MathJax.HTML.setScriptBug=3D=
!j.isIE9||document.documentMode<9;var w=3Dfalse;try{new =
ActiveXObject("MathPlayer.Factory.1");j.hasMathPlayer=3Dw=3Dtrue}catch(m)=
{}try{if(w&&!r.params.NoMathPlayer){var =
i=3Ddocument.createElement("object");i.id=3D"mathplayer";i.classid=3D"cls=
id:32F66A20-7614-11D4-BD11-00104BD3F987";document.getElementsByTagName("h=
ead")[0].appendChild(i);document.namespaces.add("m","http://www.w3.org/19=
98/Math/MathML");j.mpNamespace=3Dtrue;if(document.readyState&&(document.r=
eadyState=3D=3D=3D"loading"||document.readyState=3D=3D=3D"interactive")){=
document.write('<?import namespace=3D"m" =
implementation=3D"#MathPlayer">');j.mpImported=3Dtrue}}else{document.name=
spaces.add("mjx_IE_fix","http://www.w3.org/1999/xlink")}}catch(m){}}});c.=
Browser.Select(MathJax.Message.browsers);if(g.AuthorConfig&&typeof =
g.AuthorConfig.AuthorInit=3D=3D=3D"function"){g.AuthorConfig.AuthorInit()=
}c.queue=3Dg.Callback.Queue();c.queue.Push(["Post",r.signal,"Begin"],["Co=
nfig",r],["Cookie",r],["Styles",r],["Message",r],function(){var =
i=3Dg.Callback.Queue(r.Jax(),r.Extensions());return =
i.Push({})},["Menu",r],r.onLoad(),function(){MathJax.isReady=3Dtrue},["Ty=
peset",r],["Hash",r],["MenuZoom",r],["Post",r.signal,"End"])})("MathJax")=
}};=0A=

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/category.js

=EF=BB=BF
$(function()
{
  =20
        var aCategory =3D $(".category_r label"),
            aClose =3D $(".category_r").find(".J_close");
        aCategory.click(function () {
            if ($(this).find(".subItem").is(":hidden")) {
                //close all
                var thisClickText =3D $(this).attr("onclick");

                $.each(aCategory, function (i) {
                    var thisCategory =3D $(aCategory[i]);
                    var thisCategoryText =3D =
thisCategory.attr("onclick");
                  =20
                    if (thisCategoryText !=3D thisClickText)
                    {
                        if =
(!thisCategory.find(".subItem").is(":hidden")) {
                            thisCategory.find(".arrow-up").hide().end()
                                .find(".arrow-down").show();
                            thisCategory.find(".subItem").hide();
                        }
                    }
                });

                $(this).find(".arrow-up").show().end()
                        .find(".arrow-down").hide();
                $(this).find(".subItem").show();

                //$("#body").css("overflow", "visible");
                //$("#main").css("overflow", "visible");              =20
            }
            else {
                $(this).find(".arrow-up").hide().end()
                       .find(".arrow-down").show();
                $(this).find(".subItem").hide();

               // $("#body").css("overflow", "hidden");
               // $("#main").css("overflow", "hidden");
            }
        });
        aClose.click(function () {
            $(this).parents(".subItem").hide()
                    .siblings(".arrow-up").hide()
                    .siblings(".arrow-down").show();

            //$("#body").css("overflow", "hidden");
            //$("#main").css("overflow", "hidden");

            return false;
        });

     $(".similar_c_t label span").click(function () {        =20
         $(".similar_cur").removeClass("similar_cur");
         $(this).parent().addClass("similar_cur");
     });
})

function GetCategoryArticles(id,username,type,aid)
{
    var topid =3D "top_" + id;

    if (type =3D=3D "top") {
        var objtop =3D $("#" + topid +" li");
        if (objtop.length > 0)
        {
            return;
        }
    }
    var url =3D "/" + username + "/svc/GetCategoryArticleList?id=3D" + =
id + "&type=3D"+ type;
	//url=3D"http://dev.blog.csdn.net:5391"+url;
	$.get(url, function (res) {	 =20

	    if (type =3D=3D "top")
	    {
	        var objtop =3D $("#" + topid);
	        objtop.html("");	      =20
	        $(res).each(function (i) {
	            var obj =3D res[i];
	            if (aid !=3D obj.articleid) {	            =20
	                var articleurl =3D "http://blog.csdn.net/" + username + =
"/article/details/" + obj.articleid;
	                var aritcleid =3D "top_aritcle_" + obj.articleid + =
Math.random().toString().replace("0.");
	                objtop.append("<li class=3D\"tracking-ad\" =
data-mod=3D\"popu_140\"><em>=E2=80=A2</em><a href=3D'" + articleurl + "' =
 id=3D'" + aritcleid + "' target=3D\"_blank\"></a></li> ");
	                $("#" + aritcleid).text(obj.title);
	                $("#" + aritcleid).attr("title",obj.title);
	            }
	        });

	        var count =3D =
$(objtop.parent().parent().find("em")[0]).text().replace("=EF=BC=88", =
"").replace("=EF=BC=89", "");
	        if (parseInt(count) > 5)
	        {
	            var moreurl =3D objtop.parent().find(".subItem_t =
a").attr("href");
	            objtop.append("<li style=3D\"padding-left: 300px;\"><a =
href=3D'" + moreurl + "' =
target=3D\"_blank\">=E6=9B=B4=E5=A4=9A</a></li>");
	        }

	    }
	    else if (type =3D=3D "foot")
	    {	       	      =20
	        var objfootleft =3D $(".similar_list.fl");
	        var objfootright =3D $(".similar_list.fr");

	        objfootleft.html("");
	        objfootright.html("");

	        var j =3D 0;

	        $.each(res, function (i) {	           =20
	            var obj =3D res[i];
	            if (aid !=3D obj.articleid) {
	                var articleurl =3D "http://blog.csdn.net/" + username + =
"/article/details/" + obj.articleid;
	                var aritcleid =3D "foot_aritcle_" + obj.articleid + =
Math.random().toString().replace("0.");

	                var html =3D "<li><em>=E2=80=A2</em><a href=3D'" + =
articleurl + "'  id=3D'" + aritcleid + "' =
target=3D\"_blank\"></a><span>" + obj.posttime + =
"</span><label><i>=E9=98=85=E8=AF=BB</i><b>" + obj.viewcount + =
"</b></label></li> ";
	                if (j % 2 =3D=3D 1) {
	                    objfootright.append(html);
	                }
	                else {
	                    objfootleft.append(html);
	                }
	                $("#" + aritcleid).text(obj.title);
	                $("#" + aritcleid).attr("title",obj.title);
	                j++;

	                $(".similar_article").show();
	            }
	        });

	        var count =3D $(".similar_cur span =
em").text().replace("=EF=BC=88", "").replace("=EF=BC=89", "");
	        if (parseInt(count) > 10) {
	            var moreurl =3D"";
	            $.each($(".subItem_t a"), function (i) {
	                if($(this).attr("href").toString().indexOf(id)>-1)
	                {
	                    moreurl =3D $(this).attr("href");	                  =
 =20
	                }
	            });
	            if (moreurl !=3D "") {
	                //objfootright.append("<li style=3D\"padding-left: =
200px;\"><a href=3D'" + moreurl + "' =
target=3D\"_blank\">=E6=9B=B4=E5=A4=9A</a></li>");
	                $(".MoreArticle").remove();
	                $(".similar_wrap").append('<a href=3D' + moreurl + ' =
class=3D"MoreArticle">=E6=9B=B4=E5=A4=9A=E6=96=87=E7=AB=A0</a>');
	            }
	        }
	    }
	});
}
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://csdnimg.cn/jobreco/job_reco.js

/*
UI=E5=9C=B0=E5=9D=80=EF=BC=9A\\192.168.6.119\=E4=BA=A7=E5=93=81=E7=AE=A1=E7=
=90=86\2_=E6=95=B0=E6=8D=AE=E6=94=AF=E6=92=91\03_UI\=E8=81=8C=E4=BD=8D=E6=
=8E=A8=E8=8D=90
=E5=BC=95=E7=94=A8=E6=96=B9=E6=B3=95=EF=BC=9A<script =
src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
=E8=B0=83=E7=94=A8=E6=96=B9=E6=B3=95=EF=BC=9Acsdn.position.show({
sourceType: "", =
//=E5=8D=9A=E5=AE=A2blog=EF=BC=8C=E8=AE=BA=E5=9D=9Bdiscussion_topic, =
=E4=B8=8B=E8=BD=BD download=EF=BC=8C=E9=97=AE=E7=AD=94ask_topic, =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4space=EF=BC=9F=EF=BC=9F, =
=E8=8B=B1=E9=9B=84=E4=BC=9Ahero=EF=BC=9F=EF=BC=9F, =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD course, csto
tplType: "", //=E6=A8=A1=E6=9D=BF=E7=B1=BB=E5=9E=8B=EF=BC=8C
               =E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9AblogDetail,
               =E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9AblogSpec,
               =
=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9AbbsDetail=EF=BC=8C
               =
=E9=97=AE=E7=AD=94=E8=AF=A6=E6=83=85=EF=BC=9AaskDetail=EF=BC=8C
               =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=97=B4=
=EF=BC=9ApersonalSpaceMy=EF=BC=8C
               =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E9=A6=96=E9=A1=B5=EF=BC=9Apersonal=
SpaceHome=EF=BC=8C
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5=EF=BC=9AheroHome
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=9AheroExpert
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=A6=
=E6=83=85=E9=A1=B5=EF=BC=9AheroFightDetail
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=9A=
=EF=BC=9AheroMy
               =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=BB=
=E5=88=97=E8=A1=A8=EF=BC=9A=E6=97=A0
               =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=
=E9=A1=B5=EF=BC=9AeduDetail
               =E6=90=9C=E7=B4=A2=EF=BC=9Asearch
               =
=E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90=EF=BC=9AdownMy
               =
=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=BD=
=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AdownDetail

               =
CSTO=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=9AcstoCaseList
               =
CSTO=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoCaseDetail
               CSTO=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=9AcstoMy
               =
CSTO=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AcstoProjectList=

               =
CSTO=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoProjectDeta=
il

searchType: "", =
//=E9=A1=B5=E9=9D=A2=E7=B1=BB=E5=9E=8B=EF=BC=8C=E7=94=A8=E4=BA=8E=E6=90=9C=
=E7=B4=A2=E5=87=BD=E6=95=B0=EF=BC=8Cdetail(=E8=AF=A6=E6=83=85=E9=A1=B5) =
/ list(=E5=88=97=E8=A1=A8=E9=A1=B5)=E3=80=82
searchKey: "", =
//=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97=EF=BC=8C=E4=BE=8B=E5=A6=82=
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9A=E5=8D=9A=E6=96=87ID=EF=BC=8C=
=E5=A6=82=E6=9E=9C=E6=98=AF=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9A=E5=
=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82
username: "", =
//=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D
containerId: "" //=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
});
=E4=B8=BE=E4=BE=8B=EF=BC=9A
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_blog_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "blog",
     tplType: "blogDetail",
     searchType: "detail",
     searchKey: "=E5=8D=9A=E6=96=87ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_blog_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E9=A1=B5
<div id=3D"job_blog_reco_spec">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "blog",
     tplType: "blogSpec",
     searchType: "list",
     searchKey: =
"=E4=B8=93=E6=A0=8F=E5=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_blog_reco_spec"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_bbs_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "discussion_topic",
     tplType: "bbsDetail",
     searchType: "detail",
     searchKey: "=E8=B4=B4=E5=AD=90ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_bbs_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E9=97=AE=E7=AD=94=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_ask_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "ask_topic",
     tplType: "askDetail",
     searchType: "detail",
     searchKey: "=E9=97=AE=E9=A2=98ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_ask_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=97=B4=

<div id=3D"job_myspace_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "my",
     tplType: "personalSpaceMy",
     searchType: "list",
     searchKey: "NO",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_myspace_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E9=A6=96=E9=A1=B5
<div id=3D"job_myhome_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "my",
     tplType: "personalSpaceHome",
     searchType: "list",
     searchKey: "NO",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_myhome_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
  });
 </script>
</div>







 =
=E8=8B=B1=E9=9B=84=E4=BC=9A-=E9=A6=96=E9=A1=B5=EF=BC=8C=E6=AD=A3=E5=9C=A8=
=E5=8F=91=E7=94=9F=E7=9A=84=E4=B8=8B=E9=9D=A2=E3=80=82
 http://hero.csdn.net/
 <div id=3D"job_yx_home_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroHome",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_home_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=8C=E5=AE=A1=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=E4=B8=8B=E9=9D=A2=E3=
=80=82
 http://hero.csdn.net/Examine/Apply
 <div id=3D"job_yx_expert_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroExpert",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_expert_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=A6=
=E6=83=85=E9=A1=B5=EF=BC=8C=E5=8F=91=E5=B8=83=E5=85=AC=E5=8F=B8=E4=B8=8B=E9=
=9D=A2=E3=80=82
 =
http://hero.csdn.net/OnlineCompiler/Index?ID=3D10646&ExamID=3D10649&from=3D=
4
 <div id=3D"job_yx_fight_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroFightDetail",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_fight_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>


 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=9A=
=EF=BC=8C=E5=88=97=E8=A1=A8=E7=9A=84=E4=B8=8B=E9=9D=A2=E3=80=82
 http://hero.csdn.net/Exam/List
 <div id=3D"job_yx_my_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_my_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>


 =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=BB=
=E5=88=97=E8=A1=A8
 <div id=3D"job_edu_detail_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
 csdn.position.show({
 sourceType: "course",
 tplType: "eduDetail",
 searchType: "list",
 searchKey: =
"=E9=A1=B5=E9=9D=A2=E4=B8=8A=E7=9A=84=E6=90=9C=E7=B4=A2=E7=B1=BB=E5=9E=8B=
",
 username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
 containerId: "job_edu_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
 });
 </script>
 </div>




 =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=
=E9=A1=B5=EF=BC=8C=E5=9C=A8=E5=8F=B3=E4=BE=A7=E6=8E=A8=E8=8D=90=E8=AF=BE=E7=
=A8=8B=E4=B8=8B=E8=BE=B9=E3=80=82
 http://edu.csdn.net/course/detail/326
 <div id=3D"job_edu_detail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "course",
   tplType: "eduDetail",
   searchType: "detail",
   searchKey: "=E8=AF=BE=E7=A8=8BID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_edu_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



 =E6=90=9C=E7=B4=A2
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_search_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: =
"all=EF=BC=88=E8=AF=A5=E5=85=B3=E9=94=AE=E5=AD=97=E6=9A=82=E6=97=B6=E4=B8=
=8D=E8=A2=AB=E4=BD=BF=E7=94=A8=EF=BC=89",
   tplType: "search",
   searchType: "list",
   searchKey: "=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_search_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_down_my_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "download",
   tplType: "downMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_down_my_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=BD=
=E8=AF=A6=E6=83=85=E9=A1=B5
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_down_detail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "download",
   tplType: "downDetail",
   searchType: "detail",
   searchKey: "=E8=B5=84=E6=BA=90ID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_down_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=8C=E6=94=BE=E5=9C=
=A8=E2=80=9C=E4=B8=8A=E5=91=A8=E6=9C=80=E5=8F=97=E6=AC=A2=E8=BF=8E=E2=80=9D=
=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/case
 <div id=3D"job_csto_caselist_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoCaseList",
   searchType: "list",
   searchKey: =
"=E7=AD=9B=E9=80=89=E6=9D=A1=E4=BB=B6=E9=87=8C=E7=9A=84=E7=83=AD=E9=97=A8=
=E5=88=86=E7=B1=BB=E5=92=8C=E7=83=AD=E9=97=A8=E6=8A=80=E6=9C=AF=EF=BC=8C=E9=
=80=97=E5=8F=B7=E5=88=86=E9=9A=94",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_caselist_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=8C=E6=94=BE=E5=9C=
=A8=E2=80=9C=E6=9C=80=E8=BF=91=E6=B5=8F=E8=A7=88=E8=BF=87=E7=9A=84=E4=BA=BA=
=E2=80=9D=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/case/show/id:21740
 <div id=3D"job_csto_casedetail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoCaseDetail",
   searchType: "detail",
   searchKey: "=E6=A1=88=E4=BE=8BID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_casedetail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=8C=E6=94=BE=E5=9C=A8=E2=80=9C=E6=88=
=91=E7=9A=84=E8=B5=84=E6=96=99=E2=80=9D=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/my/info/edit
 <div id=3D"job_csto_my_reco1">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_my_reco1"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 CSTO-=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5
 http://www.csto.com/project/list
 <div id=3D"job_csto_projlist_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoProjectList",
   searchType: "list",
   searchKey: =
"=E7=AD=9B=E9=80=89=E6=9D=A1=E4=BB=B6=E9=87=8C=E7=9A=84=E7=83=AD=E9=97=A8=
=E5=88=86=E7=B1=BB=E5=92=8C=E7=83=AD=E9=97=A8=E6=8A=80=E6=9C=AF=EF=BC=8C=E9=
=80=97=E5=8F=B7=E5=88=86=E9=9A=94",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_projlist_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



 CSTO-=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5
 http://www.csto.com/p/72969
 <div id=3D"job_csto_projdetail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoProjectDetail",
   searchType: "detail",
   searchKey: "=E9=A1=B9=E7=9B=AEID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_projdetail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



//-----------------------------------------------------------------------=
-------------------------------------------
=E8=AF=BE=E7=A8=8B=E6=8E=A8=E8=8D=90
//-----------------------------------------------------------------------=
-------------------------------------------

 =
=E6=90=9C=E7=B4=A2=E9=A1=B5=E7=9A=84=E5=9F=B9=E8=AE=AD=E6=8E=A8=E8=8D=90
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"edu_so_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
       csdn.position.showEdu({
           sourceType: "so",
           searchType: "detail",
           searchKey: "=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97",
           username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
           recordcount: "4",
           containerId: "edu_so_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
       });
   </script>
 </div>


=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E9=A1=B5


 =
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5=E5=B0=86=E5=8E=9F=E6=9D=A5=E7=
=9A=84adCollege=E6=B3=A8=E9=87=8A=E6=8E=89=EF=BC=8C=E5=85=B6=E7=9B=B8=E5=90=
=8C=E4=BD=8D=E7=BD=AE=E6=94=BE=E7=BD=AE=E5=A6=82=E4=B8=8Bdiv=E3=80=82
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5
 http://blog.csdn.net/hu1991die/article/details/45564465
 <div id=3D"adCollege" style=3D"width: 42%;float: left;">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
     csdn.position.showEdu({
         sourceType: "blog",
         searchType: "detail",
         searchKey: "=E5=8D=9A=E6=96=87id",
         username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
         recordcount: "5",
         containerId: "adCollege"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
     });
 </script>
 </div>


 =
=E4=B8=8B=E8=BD=BD=E8=AF=A6=E6=83=85=E9=A1=B5=E5=B0=86=E5=8E=9F=E6=9D=A5=E7=
=9A=84related =
po_down_detail_big_div=E6=B3=A8=E9=87=8A=E6=8E=89=EF=BC=8C=E5=85=B6=E7=9B=
=B8=E5=90=8C=E4=BD=8D=E7=BD=AE=E6=94=BE=E7=BD=AE=E5=A6=82=E4=B8=8Bdiv=E3=80=
=82
=E4=B8=8B=E8=BD=BD=E8=AF=A6=E6=83=85=E9=A1=B5
 http://download.csdn.net/detail/dudud20/8662993
 <div id=3D"edu_down_reco" class=3D"related po_down_detail_big_div">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
     csdn.position.showEdu({
         sourceType: "down",
         searchType: "detail",
         searchKey: "=E4=B8=8B=E8=BD=BD=E8=B5=84=E6=BA=90id",
         username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
         recordcount: "5",
         containerId: "edu_down_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
     });
 </script>
 </div>






//-----------------------------------------------------------------------=
-------------------------------------------
//-----------------------------------------------------------------------=
-------------------------------------------



*/
$(document).ready(function() {
  var i =3D 1;
});
(function (window) {
  var csdn =3D window.csdn || {};
  function Position() {
    this.prefix =3D window.location.protocol;


    $("<link>")
      .attr({ rel: "stylesheet",
        type: "text/css",
        href: window.location.protocol + =
"//csdnimg.cn/jobreco/job_reco.css" =
//"//c.csdnimg.cn/jobreco/job_reco.css"//
      })
      .appendTo("head");

    /*
     http://blog.csdn.net/lmj623565791/article/details/42407923#t7
     http://blog.csdn.net/column.html
     http://bbs.csdn.net/topics/390963719
     http://ask.csdn.net/
     http://my.csdn.net/
     http://my.csdn.net/my/mycsdn
     http://hero.csdn.net/
    */

    //=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9AtplType =3D =
blogDetail
    this.blogTpl =3D '<dl class=3D"blog-ass-articl tracking-ad" =
data-mod=3D"{0}">' +
      =
'<dt><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<l=
abel class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></span>' +
      '<a href=3D"{1}" target=3D"_blank" =
class=3D"po_blg_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_blg_detail_csdn">CSDN JOB</label></a></dt>' =
+
      '{2}' +
      '</dl>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36  =
  //{1}=EF=BC=8Chttp, https ://job.csdn.net    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.blogItem =3D '<dd class=3D"po_blg_dd">' +
      '<div class=3D"po_blg_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_blg_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<label class=3D"po_blg_separator">|</label>' +
      '<div class=3D"po_blg_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<a class=3D"po_blg_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</dd>' ;
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9AtplType =3D blogSpec
    this.blogSpecTpl =3D '<div class=3D"box_1 tracking-ad" =
data-mod=3D"{0}">' +
      '<div style=3D"position: relative;">' +
      =
'<h2>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<label =
class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></h2>'=
 +
      '</div>' +
      '<ul class=3D"list_comm">' +
      '{2}' +
      '</ul>' +
      '<div class=3D"po_blg_spec_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_blg_spec_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_blg_spec_csdn">CSDN =
JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.blogSpecItem =3D '<li>' +
      '<div class=3D"po_blg_spec_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_blg_spec_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<div class=3D"po_blg_spec_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_blg_spec_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9AtplType =3D bbsDetail
    this.bbsTpl =3D '<div id=3D"topic-suggest" class=3D"po_bbs_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"related-tags po_bbs_tit_div">' +
      =
'<span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<label=
 class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></span=
>' +
      '<a class=3D"po_bbs_more" href=3D"{1}" =
target=3D"_blank">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=A8&=
nbsp;<label class=3D"po_bbs_csdn">CSDN JOB</label></a>' +
      '</div>' +
      '<div class=3D"related-topics po_bbs_item_div">' +
      '<ul>' +
      '{2}' +
      '</ul>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.bbsItem =3D '<li class=3D"po_bbs_li"><div class=3D"po_bbs_po">' =
+
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_bbs_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<label class=3D"po_bbs_separator">|</label>' +
      '<div class=3D"po_bbs_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_bbs_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E9=97=AE=E7=AD=94=E9=A6=96=E9=A1=B5=EF=BC=9AtplType =3D askDetail
    this.askTpl =3D '<div class=3D"mod_other_ask hot_tags po_ask_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"other_ask">' +
      =
'<h3><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<l=
abel class=3D"po_ask_tiao">=E8=B7=B3</label><label =
class=3D"po_ask_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">=EF=BC=81</label></span></h3>' +
      '<div class=3D"po_ask_div_list">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_ask_more_div"><a href=3D"{1}" target=3D"_blank" =
class=3D"po_ask_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_my_home_csdn">CSDN JOB</label></a></div>' +
      '</div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.askItem =3D '<div class=3D"po_ask_item_div">' +
      '<div class=3D"po_ask_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_ask_salary">' +
      '<a href=3D"{6}" target=3D"_blank">{7}</a>' +
      '</div>' +
      '<div class=3D"po_ask_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<a class=3D"po_ask_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4-=E9=A6=96=E9=A1=B5=EF=BC=9AtplType=
 =3D personalSpaceHome
    this.perSpaceHomeTpl =3D '<div class=3D"phr_third clearfix =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"phr_third_tit po_my_home_tit">' +
      '<div class=3D"phrt_t =
po_my_home_t">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp=
;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;=EF=BC=81</label></div>' +
      '</div>' +
      '<div class=3D"phr_third_con po_my_home_div">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_my_home_more"><a href=3D"{1}" target=3D"_blank" =
class=3D"po_my_home_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_my_home_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.perSpaceHomeItem =3D '<div class=3D"po_my_home_item_div =
clearfix">' +
      '<div class=3D"po_my_home_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_my_home_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_my_home_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_my_home_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4-=E6=88=91=E7=9A=84=EF=BC=9AtplType=
 =3D personalSpaceMy
    this.perSpaceMyTpl =3D '<div class=3D"interested_con tracking-ad" =
data-mod=3D"{0}" style=3D"display: block;">' +
      '<h3 =
class=3D"po_my_my_h3">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;=EF=BC=81</label></h3>' +
      '{2}' +
      '<div class=3D"po_my_my_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_my_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_my_my_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.perSpaceMyItem =3D '<div class=3D"po_my_my_item_div">' +
      '<div class=3D"po_my_my_po">' +
      '<a class=3D"po_my_my_po_a" href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_my_my_salary">' +
      '<a href=3D"{6}" target=3D"_blank">{7}</a>' +
      '</div>' +
      '<div class=3D"po_my_my_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<a class=3D"po_my_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5


    //=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5
    this.heroHomeTpl =3D '<div class=3D"her_topic_right tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"haping_t">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F=
&nbsp;<span class=3D"po_yx_home_tiao">=E8=B7=B3</span><span =
class=3D"po_yx_home_ba">=E5=90=A7</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_home_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_home_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_yx_home_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroHomeItem =3D '<div class=3D"her_platform =
po_yx_home_item_div">' +
      '<div class=3D"po_yx_home_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_home_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_yx_home_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_yx_home_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=
=84
    this.heroExpertTpl =3D '<div class=3D"her-r-expli po_yx_ex_div =
tracking-ad" data-mod=3D"{0}">' +
      '<h3 class=3D"tit"><span =
class=3D"po_yx_ex_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;</span><label class=3D"po_yx_home_tiao =
px_yx_ex_tiao">=E8=B7=B3</label><label class=3D"po_yx_home_ba =
px_yx_ex_ba">=E5=90=A7</label><span =
class=3D"po_yx_ex_tit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_ex_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_ex_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_ex_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroExpertItem =3D '<dl class=3D"her-r-explicon =
po_yx_ex_po_item_div">' +
      '<dt class=3D"po_yx_ex_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></dt>' +
      '<dd class=3D"po_yx_ex_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></dd>' +
      '<dd class=3D"py_yx_ex_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></dd>' +
      '<a class=3D"po_yx_ex_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</dl>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=
=A6=E6=83=85=E9=A1=B5
    this.heroFightDetailTpl =3D '<div class=3D"her_format_right =
py_yx_fd_div tracking-ad" data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_yx_fd_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=
=EF=BC=9F&nbsp;</span><label =
class=3D"po_yx_home_tiao">=E8=B7=B3</label><label =
class=3D"po_yx_home_ba">=E5=90=A7</label><span>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_fd_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_fd_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_fd_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroFightDetailItem =3D '<div class=3D"po_yx_fd_item_div">' +
      '<div class=3D"po_yx_fd_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_fd_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_yx_fd_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_yx_fd_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=
=9A
    this.heroMyTpl =3D '<div class=3D"her-resultli po_yx_my_div =
tracking-ad" data-mod=3D"{0}">' +
      =
'<h3><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;</=
span><label class=3D"po_yx_home_tiao">=E8=B7=B3</label><label =
class=3D"po_yx_home_ba">=E5=90=A7</label><span>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span>' +
      '<a href=3D"{1}" target=3D"_blank" =
class=3D"po_yx_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_my_csdn">CSDN JOB</label></a></h3>' +
      '{2}' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroMyItem =3D '<div class=3D"po_yx_my_item_div">' +
      '<div class=3D"po_yx_my_item_dot">=E2=96=AA</div>' +
      '<div class=3D"po_yx_my_item_cont">' +
      '<div class=3D"po_yx_my_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_my_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<label class=3D"po_yx_my_separator">|</label>' +
      '<div class=3D"po_yx_my_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '</div>' +
      '<a class=3D"po_yx_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    this.heroFightDetailTpl =3D this.heroMyTpl;
    this.heroFightDetailItem =3D this.heroMyItem;


    =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=
=85=E9=A1=B5
    this.eduDetailTpl =3D '<div class=3D"boutique-curr-box tracking-ad" =
data-mod=3D"{0}">' +
      '<div =
class=3D"boutique-curr"><h3>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=
=EF=BC=9F&nbsp;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label=
></h3>' +
      '<div class=3D"cutt-column">' +
      '{2}' +
      '<div class=3D"po_edu_detail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_edu_detail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_edu_detail_csdn">CSDN =
JOB</label></a></div>' +
      =
'</div></div></div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0po=
pu_36    //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.eduDetailItem =3D '<div class=3D"po_edu_detail_item_div =
clearfix">' +
      '<div class=3D"po_edu_detail_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}<a></div>' +
      '<div class=3D"po_edu_detail_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_edu_detail_company"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_edu_detail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=
=BB=E5=88=97=E8=A1=A8
    this.eduListTpl =3D this.eduDetailTpl;
    this.eduListItem =3D this.eduDetailItem;


//-----------------------------------------------------------------------=
---------------------------------------------------------
    //=E6=90=9C=E7=B4=A2=E5=9F=B9=E8=AE=AD=E6=8E=A8=E5=B9=BF
    this.search_reco_edu =3D '' +
        '<div class=3D"common-box tracking-ad" data-mod=3D"popu_84" =
style=3D"display: block;">' + //todo =
=E5=A2=9E=E5=8A=A0=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
        '<h3 id=3D"job-pos-title" =
class=3D"po_search_tit">=E7=B2=BE=E5=93=81=E8=AF=BE=E7=A8=8B<a =
class=3D"class-edu-more" =
href=3D"http://edu.csdn.net">=E6=9B=B4=E5=A4=9A</a></h3>' +
        '<div class=3D"po_search_div">' +
        '{0}' +
        '</div>' +
        '</div>';
    this.search_reco_edu_item =3D '<div class=3D"po_search_item_div">' +
        '<div class=3D"class-img-box"><a href=3D"{0}" target=3D"_blank" =
strategy=3D"{7}"><img src=3D"{1}"></a></div>' +
        '<div class=3D"class-content-box">' +
        '<div class=3D"class-content-tit"><a href=3D"{2}" =
target=3D"_blank" title=3D"{3}" strategy=3D"{8}">{4}</a></div>' +
        '<div =
class=3D"class-content-hp">=E5=A5=BD=E8=AF=84=E7=8E=87=EF=BC=9A<a =
href=3D"{9}" class=3D"class-content-hp-hpl">{5}%</a>  <span =
class=3D"class-content-hp-rzx"><i =
class=3D"class-content-icon">&nbsp;</i><a href=3D"{10}" =
class=3D"class-content-icon-rdx">{6}</a>=E4=BA=BA=E5=9C=A8=E5=AD=A6</span=
></div>' +
        '</div>' +
        '</div>';

      //<div id=3D"adCollege" style=3D"width: 42%;float: left;">
      this.blog_reco_edu =3D '<div class=3D"tracking-ad" =
data-mod=3D"popu_84">{0}</div>';            //todo =
=E5=A2=9E=E5=8A=A0=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
      this.blog_reco_edu_item =3D '<dd =
style=3D"background:url(http://static.blog.csdn.net/skin/default/images/b=
log-dot-red3.gif) no-repeat 0 10px; white-space: nowrap;">' +
          '<a href=3D"{0}" title=3D"{1}" strategy=3D"{3}" =
target=3D"_blank">{2}</a>' +
          '</dd>';

      //<div class=3D"related po_down_detail_big_div">
      this.down_reco_edu =3D '<div class=3D"section-list panel =
panel-default tracking-ad" data-mod=3D"popu_84">' + //todo =
=E4=BF=AE=E6=94=B9=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
          '<div class=3D"panel-heading po_down_detail_tit_div">' +
          '<h3 class=3D"panel-title =
po_down_detail_tit">=E7=9B=B8=E5=85=B3=E8=AF=BE=E7=A8=8B</h3>' +
          '</div>' +
          '<div class=3D"panel-body">' +
          '<ul class=3D"down_edu_t">' +
          '{0}' +
          '</ul>' +
          '</div>' +
          '</div>' +
          '';
      this.down_reco_edu_item =3D '  <li style=3D"line-height: =
25px;display:block;margin-bottom: 9px;margin-top: 9px;padding-top: =
0px;">' +
          '<div style=3D"padding:0;margin:0;border:0;text-overflow: =
ellipsis;overflow: hidden;">' +
          '<a href=3D"{0}" title=3D"{1}" alt=3D"" target=3D"_blank" =
strategy=3D"{3}">{2}</a>' +
          '</div>' +
          '</li>';

      this.edu_detail_url_base =3D 'http://edu.csdn.net/course/detail/';

//=E7=BB=93=E6=9D=9F=E3=80=82
//-----------------------------------------------------------------------=
-----------------------------------------------------------------





    //=E6=90=9C=E7=B4=A2
    this.searchTpl =3D '<div class=3D"common-box tracking-ad" =
data-mod=3D"{0}" style=3D"display: block;">' +
      '<h3 id=3D"job-pos-title" =
class=3D"po_search_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_search_div">' +
      '{2}' +
      '<div class=3D"po_search_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_search_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_search_csdn">CSDN JOB</label></a></div>' =
+
      '</div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.searchItem =3D '<div class=3D"po_search_item_div">' +
      '<div class=3D"po_search_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_search_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_search_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_search_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>' +
      '';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD



    //=E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90
    this.downMyTpl =3D '<div id=3D"my-tags-side" class=3D"panel =
panel-default tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"panel-heading po_downmy_div">' +
      '<h3 =
class=3D"panel-title">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '</div>' +
      '<div>' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_downmy_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_downmy_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_downmy_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.downMyItem =3D '<div class=3D"po_downmy_item_div">' +
      '<div class=3D"po_downmy_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_downmy_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_downmy_salary_div"><a =
href=3D"{6}">{7}</a></div>' +
      '<a class=3D"po_downmy_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD



    =
//=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=
=BD=E8=AF=A6=E6=83=85=E9=A1=B5
    this.downDetailTpl =3D '<div class=3D"related po_down_detail_big_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div>' +
      '<div class=3D"section-list panel panel-default">' +
      '<div class=3D"panel-heading po_down_detail_tit_div">' +
      '<h3 class=3D"panel-title =
po_down_detail_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F=
&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<a class=3D"po_downdetail_more" href=3D"{1}" =
target=3D"_blank">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=A8&=
nbsp;<label class=3D"po_dwondetail_csdn">CSDN JOB</label></a>' +
      '</div>' +
      '{2}' +
      '</div>' +
      '</div>' +
      '</div>';
    this.downDetailItem =3D '<div class=3D"panel-body =
po_down_detail_item_div">' +
      '<ul>' +
      '<li>' +
      '<div class=3D"po_down_detail_left"><a class=3D"con" href=3D"{0}" =
title=3D"{1}" target=3D"_blank">=E3=80=90{7}=E3=80=91{2}</a></div>' +
      '<div class=3D"po_down_detail_right"><a =
class=3D"po_downdetail_iwant" =
href=3D"http://job.csdn.net/Job/Index?jobID=3D81328" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>' +
      '</ul>' +
      '</div>';



    =
//CSTO=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=9AcstoCaseList
    this.cstoCaseListTpl =3D '<div class=3D"contbox tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_caselist_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=
=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_caselist_div">' +
      '{2}' +
      '<div class=3D"po_caselist_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_caselist_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_caselist_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</div>';
    this.cstoCaseListItem =3D '<div class=3D"po_caselist_item_div">' +
      '<div class=3D"po_caselist_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_caselist_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_caselist_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_caselist_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';



    =
//CSTO=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoCaseDetai=
l
    this.cstoCaseDetailTpl =3D '<ul class=3D"case_list =
po_case_detail_div tracking-ad" data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_casedetail_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=
=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_casedetail_div">' +
      '{2}' +
      '<div class=3D"po_casedetail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_casedetail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_casedetail_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</ul>';
    this.cstoCaseDetailItem =3D '<div class=3D"po_casedetail_item_div =
clearfix">' +
      '<div class=3D"po_casedetail_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_casedetail_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_casedetail_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<a class=3D"po_casedetail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';






    //CSTO=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=9AcstoMy
    this.cstoMyTpl =3D '<ul class=3D"menu tracking-ad" =
data-mod=3D"{0}">' +
      '<li class=3D"icon selected po_csto_my_big_div">' +
      '<h3 =
class=3D"po_csto_my_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=
=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_csto_my_div">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_csto_my_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_csto_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_csto_my_csdn">CSDN JOB</label></a></div>' =
+
      '</li>' +
      '</ul>';
    this.cstoMyItem =3D '<div class=3D"po_csto_my_item_div">' +
      '<div class=3D"po_csto_my_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_csto_my_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_csto_my_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_csto_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';


    =
//CSTO=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AcstoProjectLi=
st
    this.cstoProjectListTpl =3D '' +
      '' +
      '' +
      '';
    this.cstoProjectListItem =3D '' +
      '' +
      '' +
      '';




    =
//CSTO=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoProjectDe=
tail
    this.cstoProjectDetailTpl =3D '<div class=3D"bid_scheme tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_proj_detail_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=
=86=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_proj_detail_div">' +
      '{2}' +
      '<div class=3D"po_proj_detail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_proj_detail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_proj_detail_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</div>';
    this.cstoProjectDetailItem =3D '<div =
class=3D"po_proj_detail_item_div clearfix">' +
      '<div class=3D"po_proj_detail_po_div"><a href=3D"{0}" =
title=3D"{1}" strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_proj_detail_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_proj_detail_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_proj_detail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
      this.getCount =3D 300;
  };

  Position.prototype =3D {
    show: function(conf) {
      var _conf =3D conf;
      var _this =3D this;
      _this.show_inner(_conf);
      /*$(window).load(function() {
        _this.show_inner(_conf);
      });*/
    },
    showEdu: function(conf) {
        var _conf =3D conf;
        var _this =3D this;
        _this.show_edu_mlgb(_conf);
    },
    show_edu_mlgb: function(conf) {
        this.sourceType =3D conf.sourceType;//blog, bbs, downlowd, ask, =
space, hero, edu, csto .....
        this.searchType =3D conf.searchType;
        this.searchKey =3D conf.searchKey;
        this.username =3D conf.username ? conf.username : '';
        this.recordcount =3D conf.recordcount;
        this.containerId =3D conf.containerId;

        this.$container =3D $("#" + this.containerId);
        this.prefix =3D window.location.protocol;
        this.load_edu_reco();
    },
      load_edu_reco: function() {
          var tpl =3D '';
          var itemTpl =3D '';
          var _url =3D '';
          _data =3D {};
          //var urlBase =3D 'http://192.168.5.75:9400';
          //var urlBase =3D 'http://p.search.dm.csdn.net';

          var kk =3D =
this.searchKey.replace(/%/g,"%25").replace(/#/g,"%23").replace(/&/g,"%26"=
).replace(/\+/g, "%2B");
          var urlBase =3D =
'http://internalapi.csdn.net/psearch/psearch/query?x-acl-token=3DkUOm7x6d=
CaKGFa8RxxLQ5Hm75ioK&index_name=3Dpro_course_v2';
          if (this.sourceType =3D=3D 'so') {
              tpl =3D this.search_reco_edu;
              itemTpl =3D this.search_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&searchStr=3D=E5=88=
=9D=E7=BA=A7java=E6=95=99=E7=A8=8B&user_id=3Dblogchong';
              _url =3D urlBase + '&search_str=3D' + kk; // + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'user_id': =
this.username, 'size': this.recordcount}; //'search_str': kk,
              if (this.username =3D=3D '')
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'size': =
this.recordcount}; //'search_str': kk,
          } else if (this.sourceType =3D=3D 'blog') {
              tpl =3D this.blog_reco_edu;
              itemTpl =3D this.blog_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&pro_id=3D4552125=
1&pro_type=3Dblog&user_id=3Dblogchong';
              _url =3D urlBase + '&pro_id=3D' + kk;// + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'blog', 'user_id': this.username, 'size': this.recordcount}; //'pro_id': =
kk,

              if (this.username =3D=3D '')
                  _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'blog', 'size': this.recordcount}; //'pro_id': kk,
          } else if (this.sourceType =3D=3D 'down') {
              tpl =3D this.down_reco_edu;
              itemTpl =3D this.down_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&pro_id=3D4552125=
1&pro_type=3Dblog&user_id=3Dblogchong';
              _url =3D urlBase + '&pro_id=3D' + kk;// + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'download', 'user_id': this.username, 'size': this.recordcount}; =
//'pro_id': kk,
              if (this.username =3D=3D '')
                  _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'download', 'size': this.recordcount}; //'pro_id': kk,
          }
          if (tpl =3D=3D '') return;
          var _this =3D this;
          $.ajax({
              type: 'get',
              url: _url,
              data: _data,
              dataType: "jsonp",
              jsonp: "callback",
              async: false,
              success: function(result) {
                  if (result.hits && result.hits.length > 0) {
                      var htmlItems =3D '';
                      for (var i =3D 0; i < _this.recordcount; i ++) {
                          var item =3D result.hits[i].object;
                          var htmlItem =3D '';
                          if (_this.sourceType =3D=3D 'so') {
                              var rzx =3D item.stu_count ? =
item.stu_count : 0;
                              var kcurl =3D _this.edu_detail_url_base + =
item.id;
                              htmlItem =3D itemTpl.replace(/\{0\}/, =
kcurl) //=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{1\}/, item.pic)            =
//=E5=9B=BE=E7=89=87url
                                  .replace(/\{2\}/, kcurl)               =
//=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{3\}/, item.title)          =
//=E8=AF=BE=E7=A8=8B=E6=A0=87=E9=A2=98
                                  .replace(/\{4\}/, item.title)          =
//=E8=AF=BE=E7=A8=8B=E5=90=8D=E7=A7=B0
                                  .replace(/\{5\}/, item.good_ratio =
=3D=3D 0 ? 100 : item.good_ratio)     //=E5=A5=BD=E8=AF=84=E7=8E=87
                                  .replace(/\{6\}/, rzx)                 =
//=E6=AD=A3=E5=9C=A8=E5=AD=A6=E4=B9=A0=E7=9A=84=E4=BA=BA=E6=95=B0
                                  .replace(/\{7\}/, item.rc_flag)        =
//=E7=AD=96=E7=95=A5
                                  .replace(/\{8\}/, item.rc_flag)        =
//=E7=AD=96=E7=95=A5
                                  .replace(/\{9\}/, kcurl)               =
//=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{10\}/, kcurl);             =
//=E8=AF=BE=E7=A8=8Burl
                          } else if (_this.sourceType =3D=3D 'blog' || =
_this.sourceType =3D=3D 'down') {
                              htmlItem =3D itemTpl.replace(/\{0\}/, =
_this.edu_detail_url_base + item.id)
                                  .replace(/\{1\}/, item.title)
                                  .replace(/\{2\}/, item.title) =
//'=E3=80=90=E7=B2=BE=E5=93=81=E8=AF=BE=E7=A8=8B=E3=80=91' + item.title
                                  .replace(/\{3\}/, item.rc_flag);
                          }
                          htmlItems +=3D htmlItem;
                      }
                      var jHtml =3D tpl.replace(/\{0\}/, htmlItems);
                      var tdd =3D $(jHtml).appendTo(_this.$container);
                      var tds =3D [];
                      tds.push(tdd[0]);
                      try {
                          window['trackingAd']($(tds));
                      } catch(ee){};
                  }
              },
              error: function(result) {
                  var i =3D 0;
              }
          }); =
//=E9=97=AE=E9=A2=98=EF=BC=9A=E8=AE=B0=E5=BD=95=E6=95=B0=EF=BC=9B=E7=B1=BB=
=E5=9E=8B=E5=8F=AA=E6=9C=89blog=E3=80=81download=E3=80=81bbs=E6=B2=A1=E6=9C=
=89=E6=90=9C=E7=B4=A2=EF=BC=9B

          //todo =
=E6=9A=82=E6=97=B6=E5=A4=84=E7=90=86=E4=B8=80=E4=B8=8B=EF=BC=8C=E5=9B=A0=E4=
=B8=BA=E7=9C=8B=E4=B8=8D=E6=87=82=E5=8E=9F=E6=9D=A5=E7=9A=84=E7=8C=9C=E4=BD=
=A0=E5=9C=A8=E6=89=BE=E4=BB=A3=E7=A0=81=E3=80=82=E5=90=8E=E9=9D=A2=E6=89=BE=
=E6=97=B6=E9=97=B4=E6=8A=8A=E7=8C=9C=E4=BD=A0=E5=9C=A8=E6=89=BE=E8=B0=83=E6=
=95=B4=E4=B8=BA=E5=8F=AA=E6=98=BE=E7=A4=BA5=E6=9D=A1=E6=95=B0=E6=8D=AE=E3=
=80=82
          $(function() {
              var count =3D 0;
              var setFive =3D setInterval(function() {
                  count ++;
                  if (count > _this.getCount) {
                      clearInterval(setFive);
                  }
                  $('#res').hide();
                  var cc =3D $('#res').children();
                  if (cc.length > 5) {
                      for (var i =3D 0; i < cc.length; i++) {
                          clearInterval(setFive);
                          var item =3D cc[i];
                          if (i > 4) {
                              $(item).remove();
                          }
                      }
                      $('#res').show();
                  }
              }, 200);
          });
      },
    show_inner: function(conf) {
      this.sourceType =3D conf.sourceType;//blog=EF=BC=8Cbbs, =
download=EF=BC=8Cask, space, hero, edu, csto .....
      this.tplType =3D conf.tplType;
      =
//=E6=A8=A1=E6=9D=BF=E7=B1=BB=E5=9E=8B=EF=BC=8C=E5=8D=9A=E5=AE=A2=E8=AF=A6=
=E6=83=85=EF=BC=9AblogDetail=EF=BC=8C=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=
=EF=BC=9AblogSpec=EF=BC=8C=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9Abb=
sDetail=EF=BC=8C=E9=97=AE=E7=AD=94=E9=A6=96=E9=A1=B5=EF=BC=9AaskDetail=EF=
=BC=8C=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=
=97=B4=EF=BC=9ApersonalSpaceMy=EF=BC=8C=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4=
--=E9=A6=96=E9=A1=B5=EF=BC=9ApersonalSpaceHome=EF=BC=8C
      =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5=EF=BC=9AheroHome=EF=BC=8C=
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=9AheroExpert=EF=BC=8C=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=
=E9=A2=98=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AheroFightDetail=EF=BC=
=8C=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=
=9A=EF=BC=9AheroMy=EF=BC=8C
      =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=
=BB=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AeduList=EF=BC=8C=E5=9C=A8=E7=BA=BF=
=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9A=
eduDetail=EF=BC=8C.....
      this.searchType =3D =
conf.searchType;//=E9=A1=B5=E9=9D=A2=E7=B1=BB=E5=9E=8B=EF=BC=8C=E7=94=A8=E4=
=BA=8E=E6=90=9C=E7=B4=A2=E5=87=BD=E6=95=B0=EF=BC=8Cdetail(=E8=AF=A6=E6=83=
=85=E9=A1=B5) / list(=E5=88=97=E8=A1=A8=E9=A1=B5)=E3=80=82
      this.searchKey =3D =
conf.searchKey;//=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97=EF=BC=8C=E4=
=BE=8B=E5=A6=82=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9A=E5=8D=9A=E6=96=
=87ID=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=98=AF=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=
=8F=EF=BC=9A=E5=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82
      this.username =3D conf.username;
      this.containerId =3D conf.containerId;

      this.$container =3D $("#" + this.containerId);
      this.prefix =3D window.location.protocol;

      this.load();
    },
    goInPage: function(containerTpl, itemTpl, container, _prefix) {
      var homeUrl =3D _prefix + "//job.csdn.net";
      var jHtml =3D containerTpl.replace(/\{0\}/, "popu_72")
       .replace(/\{1\}/, homeUrl)
       .replace(/\{2\}/, totalHtmlItems);
       //container.html(jHtml);
       container.html("");
       var tdd =3D $(jHtml).appendTo(container);
       var tds =3D [];
       tds.push(tdd[0]);
       try {
       window['trackingAd']($(tds));
       } catch(ee) {};
       return true;
    },
    totalHtmlItems: "",
    load: function() {
      var that =3D this;
      if (that.searchKey =3D=3D=3D "NO" && that.username =3D=3D=3D "") {
        return;
      }

      var _url =3D that.get_url(that.username, that.searchType, =
that.searchKey, that.sourceType, that.tplType);
      var _strategy =3D that.get_strategy(that.username, =
that.searchType);
      var containerTpl =3D that.get_containerTpl(that.tplType);
      var itemTpl =3D that.get_itemTpl(that.tplType);

      //that.username =3D that.getUserName();

      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function (obj) {
          totalHtmlItems =3D "";
          var htmlItems =3D "";
          var count =3D obj.hits.length;
          if (obj.hits && obj.hits.length > 0) {
            totalHtmlItems =3D that.getData(that.$container, obj.hits, =
containerTpl, itemTpl, that.prefix, _strategy, true);
          }
          if (count < 4 && that.username && that.searchType =3D=3D =
"detail") {
            =
//=E4=BB=A5=E5=86=85=E5=AE=B9=E6=90=9C=E7=B4=A2=E8=81=8C=E4=BD=8D=EF=BC=8C=
=E5=86=8D=E6=AC=A1=E5=8F=91=E9=80=81=E8=AF=B7=E6=B1=82
            var _strategy_detail =3D that.get_strategy("", "detail");
            that.loadByDetail(containerTpl, itemTpl, _strategy_detail, =
count, that.$container, that.prefix);
          } else if (count < 4) {
            =
//=E4=BB=A5=E6=9C=80=E6=96=B0=E8=81=8C=E4=BD=8D=E5=8F=91=E9=80=81=E8=AF=B7=
=E6=B1=82=E3=80=82
            var _strategy_latest =3D that.get_strategy("", "latest");
            htmlItems =3D that.loadByLatest(containerTpl, itemTpl, =
_strategy_latest, count, that.$container, that.prefix);
          }
          if (count >=3D 4) {
            that.goInPage(containerTpl, itemTpl, that.$container, =
that.prefix);
          }
        },
        error: function(err) {
          var i =3D 0;
          //alert('err');
        }
      });
    },
    loadByDetail: function(_containerTpl, _itemTpl, _strategy, _count, =
_containerObj, _prefix) {
      var that =3D this;
      var _url =3D that.get_url("", that.searchType, that.searchKey, =
that.sourceType, that.tplType , 4 - _count);
      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function (obj) {
          var count =3D obj.hits.length;
          var htmlItems =3D "";
          if (obj.hits && obj.hits.length > 0) {
            totalHtmlItems +=3D that.getData(_containerObj, obj.hits, =
_containerTpl, _itemTpl, _prefix, _strategy, false);
          }
          if (count + _count < 4) {
            =
//=E4=BB=A5=E6=9C=80=E6=96=B0=E8=81=8C=E4=BD=8D=E5=86=8D=E6=AC=A1=E5=8F=91=
=E9=80=81=E8=AF=B7=E6=B1=82=E3=80=82
            var _strategy_latest =3D that.get_strategy("", "latest");
            that.loadByLatest(_containerTpl, _itemTpl, _strategy, count =
+ _count, _containerObj, _prefix);
          }
          if (count + _count >=3D 4) {
            that.goInPage(_containerTpl, _itemTpl, _containerObj, =
_prefix);
          }
        },
        error: function(err) {
          var i =3D 0;
        }
      });
    },
    loadByLatest: function(_containerTpl, _itemTpl, _strategy, _count, =
_containerObj, _prefix) {
      var that =3D this;
      var _url =3D =
"http://job.csdn.net/api/lastJobList";//http://job.csdn.net/api/lastJobLi=
st //http://tmpjob.csdn.net/api/LastJobList

      var homeUrl =3D _prefix + "//job.csdn.net";
      var jobUrl =3D _prefix + "//job.csdn.net/Job/Index?jobID=3D";
      var companyUrl =3D _prefix + =
"//pr.csdn.net/enterprise/ent_home?orgid=3D";

      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function(obj) {
          var count =3D obj;
          if (obj.Data && obj.Data.paperList && =
obj.Data.paperList.length > 0 && obj.Data.paperList.length >=3D 4 - =
_count) {
            var htmlItems =3D "";
            for (var i =3D 0; i <  4 - _count; i ++) {
              var item =3D obj.Data.paperList[i];
              if (item.JobID && item.JobName && item.OrgID && =
item.OrgName && item.SalaryMax && item.SalaryMin) {
                var salaryText =3D "";
                if (item.SalaryMax =3D=3D 0 && item.SalaryMin =3D=3D 0) =
{
                  salaryText =3D "=E9=9D=A2=E8=AE=AE";
                } else {
                  var mins =3D item.SalaryMin / 1000;
                  var maxs =3D item.SalaryMax / 1000;
                  salaryText =3D mins + "-" + maxs + "K/=E6=9C=88";
                }

                var htmlItem =3D _itemTpl.replace(/\{0\}/, jobUrl + =
item.JobID)
                  .replace(/\{1\}/, item.JobName)
                  .replace(/\{2\}/, item.JobName)
                  .replace(/\{3\}/, companyUrl + item.OrgID)
                  .replace(/\{4\}/, item.OrgName)
                  .replace(/\{5\}/, item.OrgName)
                  .replace(/\{6\}/, jobUrl + item.JobID)
                  .replace(/\{7\}/, salaryText)
                  .replace(/\{8\}/, _strategy)
                  .replace(/\{9\}/, jobUrl + item.JobID);

                htmlItems  +=3D htmlItem;
              }
            }
            totalHtmlItems +=3D htmlItems;
            /*if (htmlItems !=3D "") {
              var jHtml =3D _containerTpl.replace(/\{0\}/, "popu_72")
                .replace(/\{1\}/, homeUrl)
                .replace(/\{2\}/, htmlItems);
              //_containerObj.html("");
              var tdd =3D $(jHtml).appendTo(_containerObj);
              var tds =3D [];
              tds.push(tdd[0]);
              try {
                window['trackingAd']($(tds));
              } catch (ee) {};
            }*/
          }
          that.goInPage(_containerTpl, _itemTpl, _containerObj, =
_prefix);
          return "";
          /*
           obj.Data.paperList[0].JobID
           obj.Data.paperList[0].JobName
           obj.Data.paperList[0].OrgID
           obj.Data.paperList[0].OrgName
           obj.Data.paperList[0].SalaryMax
           obj.Data.paperList[0].SalaryMin
          * */
        },
        error: function(err) {
          var i =3D 0;
        }
      });
    },
    getData: function(container, items, containerTpl, itemTpl, prefix, =
_strategy, isClear) {
      var homeUrl =3D prefix + "//job.csdn.net";
      var jobUrl =3D prefix + =
"//job.csdn.net/Job/Index?jobID=3D";//=E8=81=8C=E4=BD=8D=E9=A1=B5=E9=9D=A2=
url=EF=BC=8C=E6=A0=B7=E4=BE=8B=EF=BC=9Ahttp://job.csdn.net/Job/Index?jobI=
D=3D80500=EF=BC=8Chttp://tmpjob.csdn.net/Job/Index?jobID=3D80500
      var companyUrl =3D prefix + =
"//pr.csdn.net/enterprise/ent_home?orgid=3D";//3=EF=BC=8C=E6=A0=B7=E4=BE=8B=
=EF=BC=9Ahttp://pr.csdn.net/enterprise/ent_home?orgid=3D406854=EF=BC=8Cht=
tp://lpr.csdn.net/enterprise/ent_home?orgid=3D406854

      var htmlItems =3D "";
      for (var i =3D 0; i < items.length; i++) {
        var item =3D items[i];
        var obj =3D item.object;
        if (obj.id && obj.title && obj.org_id && obj.org_name) {
          var salaryText =3D "";
          if (obj.salary_max =3D=3D 0 && obj.salary_min =3D=3D 0) {
            salaryText =3D "=E9=9D=A2=E8=AE=AE";
          } else {
            var mins =3D obj.salary_min / 1000;
            var maxs =3D obj.salary_max / 1000;
            salaryText =3D mins + "-" + maxs + "K/=E6=9C=88";
          }

          var htmlItem =3D itemTpl.replace(/\{0\}/, jobUrl + obj.id)
            .replace(/\{1\}/, obj.title)
            .replace(/\{2\}/, obj.title)
            .replace(/\{3\}/, companyUrl + obj.org_id)
            .replace(/\{4\}/, obj.org_name)
            .replace(/\{5\}/, obj.org_name)
            .replace(/\{6\}/, jobUrl + obj.id)
            .replace(/\{7\}/, salaryText)
            .replace(/\{8\}/, _strategy)
            .replace(/\{9\}/, jobUrl + obj.id);
          //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5  =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0  =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0  =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5  =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0  =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0  =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5  =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4  =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5
          htmlItems +=3D htmlItem;
        }
      }
      return htmlItems;

      /*var jHtml =3D containerTpl.replace(/\{0\}/, "popu_72")
        .replace(/\{1\}/, homeUrl)
        .replace(/\{2\}/, htmlItems);
      //container.html(jHtml);
      if (isClear) {
        container.html("");
      }
      var tdd =3D $(jHtml).appendTo(container);
      var tds =3D [];
      tds.push(tdd[0]);
      try {
        window['trackingAd']($(tds));
      } catch(ee) {};
      return true; */
    },
    get_strategy: function(un, searcht) {
      var _st =3D "";
      if (un !=3D "") {
        _st =3D "PersonalRecommend";
      } else if (searcht =3D=3D "detail") {
        _st =3D "DetailRecommend";
      } else if (searcht =3D=3D "list") {
        _st =3D "ListRecommend";
      } else if (searcht =3D=3D "latest") {
        _st =3D "LatestRecommend";
      } else {
        _st =3D "unknown";
      }

      return _st;
    },
    get_itemTpl: function(tplType) {
      var c =3D "";
      switch (tplType) {
        case "blogDetail":
          c =3D this.blogItem;
          break;
        case "blogSpec":
          c =3D this.blogSpecItem;
          break;
        case "bbsDetail":
          c =3D this.bbsItem;
          break;
        case "askDetail":
          c =3D this.askItem;
          break;
        case "personalSpaceMy":
          c =3D this.perSpaceMyItem;
          break;
        case "personalSpaceHome":
          c =3D this.perSpaceHomeItem;
          break;
        case "heroHome":
          c =3D this.heroHomeItem;
          break;
        case "heroExpert":
          c =3D this.heroExpertItem;
          break;
        case "heroFightDetail":
          c =3D this.heroFightDetailItem;
          break;
        case "heroMy":
          c =3D this.heroMyItem;
          break;
        case "eduList":
          c =3D this.eduListItem;
          break;
        case "eduDetail":
          c =3D this.eduDetailItem;
          break;
        case "search":
          c =3D this.searchItem;
          break;
        case "downMy":
          c =3D this.downMyItem;
          break;
        case "downDetail":
          c =3D this.downDetailItem;
          break;
        case"cstoCaseList":
          c =3D this.cstoCaseListItem;
          break;
        case"cstoCaseDetail":
          c =3D this.cstoCaseDetailItem;
          break;
        case"cstoMy":
          c =3D this.cstoMyItem;
          break;
        case"cstoProjectList":
          c =3D =
this.cstoCaseListItem;//=E5=90=8C=E6=A1=88=E4=BE=8B=E5=88=97=E8=A1=A8
          break;
        case"cstoProjectDetail":
          c =3D this.cstoProjectDetailItem;
          break;
        default:
          break;
      }
      return c;
    },
    get_containerTpl: function(tplType) {
      var c =3D "";
      switch (tplType) {
        case "blogDetail":
          c =3D this.blogTpl;
          break;
        case "blogSpec":
          c =3D this.blogSpecTpl;
          break;
        case "bbsDetail":
          c =3D this.bbsTpl;
          break;
        case "askDetail":
          c =3D this.askTpl;
          break;
        case "personalSpaceMy":
          c =3D this.perSpaceMyTpl;
          break;
        case "personalSpaceHome":
          c =3D this.perSpaceHomeTpl;
          break;
        case "heroHome":
          c =3D this.heroHomeTpl
          break;
        case "heroExpert":
          c =3D this.heroExpertTpl;
          break;
        case "heroFightDetail":
          c =3D this.heroFightDetailTpl;
          break;
        case "heroMy":
          c =3D this.heroMyTpl;
          break;
        case "eduList":
          c =3D this.eduListTpl;
          break;
        case "eduDetail":
          c =3D this.eduDetailTpl;
          break;
        case "search":
          c =3D this.searchTpl;
          break;
        case "downMy":
          c =3D this.downMyTpl;
          break;
        case "downDetail":
          c =3D this.downDetailTpl;
          break;
        case "cstoCaseList":
          c =3D this.cstoCaseListTpl;
          break;
        case "cstoCaseDetail":
          c =3D this.cstoCaseDetailTpl;
          break;
        case "cstoMy":
          c =3D this.cstoMyTpl;
          break;
        case "cstoProjectList":
          c =3D =
this.cstoCaseListTpl;//=E5=90=8C=E6=A1=88=E4=BE=8B=E5=88=97=E8=A1=A8
          break;
        case "cstoProjectDetail":
          c =3D this.cstoProjectDetailTpl;
          break;
        default:
          break;
      }
      return c;
    },
    get_url: function(un, searcht, key, st, tt, count) {
      var _st =3D st;
      var kk =3D =
key.replace(/%/g,"%25").replace(/#/g,"%23").replace(/&/g,"%26").replace(/=
\+/g, "%2B");
      var u =3D =
"http://internalapi.csdn.net/psearch/psearch/query?x-acl-token=3DkUOm7x6d=
CaKGFa8RxxLQ5Hm75ioK&index_name=3Dtest_b2d_job_141211&_client_=3D";
      //var u =3D =
"http://p.search.dm.csdn.net/v2/test_b2d_job_141211/csdn/_search?_client_=
=3D";
      if (un !=3D "" && un !=3D undefined && un !=3D null) {
        _st =3D "uc_proxy";
        u =3D u + "search_job_by_user";
        u =3D u + "&from=3D1&size=3D4";
        u =3D u + "&id=3D" + un;
      } else if (tt =3D=3D "search") {
        u =3D u + "job_position_query";
        u =3D u + "&like=3Dtitle:" + kk;
        u =3D u + "&shouldNum=3D0&from=3D1&size=3D" + (count ? count : =
4);
      } else if (searcht =3D=3D "detail") {
        u =3D u + "search_job_by_content";
        u =3D u + "&id=3D" + kk;
        u =3D u + "&from=3D1&size=3D" + (count ? count : 4);
      } else if (searcht =3D=3D "list") {
        u =3D u + "search_job_by_content";
        u =3D u + "&content=3D" + kk;
        u =3D u + "&from=3D1&size=3D" + (count ? count : 4);
      }
      u =3D u + "&source_type=3D" + _st;
      u =3D u + =
"&fields=3Did,publish_time,title,org_name,org_id,salary_max,salary_min";
      return u;
    },
    getThisCss: function() {
      $("<link>")
        .attr({ rel: "stylesheet",
          type: "text/css",
          href: csdn.position.prefix + =
"//csdnimg.cn/jobreco/job_reco.css"
        })
        .appendTo("head");
    },
    getUserName: function() {
      return this.getCookie("UserName");
    },
    getCookie: function(objName) {
      var arrStr =3D document.cookie.split("; ");
      for(var i =3D 0;i < arrStr.length;i ++){
        var temp =3D arrStr[i].split("=3D");
        if(temp[0] =3D=3D objName) return decodeURI(temp[1]);
      }
    },
    evil: function() {
    }
  };

  csdn.position =3D new Position();
  window["csdn"] =3D csdn;
})(window);
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://csdnim.qtmojo.com/main/s?user=csdn|blog|banner2&db=csdnim&border=0&local=yes&js=ie

ADFHOST68=3D"http://csdnim.qtmojo.com";
ADFCID68=3D15;
ADFBID68=3D68;
ADFLOC=3D'CNJSNJ00';
ADFUSER68=3D"http://csdnim.qtmojo.com/c?d=3Dcsdnim&i=3Dz15,10496454,68,14=
9&rf=3D&a=3DdBC8yoeL23AjQ2A5yG64h4hcsxXD&u=3D";
ALLYESID4=3D"CsU5s2wCn0BTeux0JUy";
ADFPGC=3D"2,5,15,0,71,68,149,10496454";

document.write("<script type=3D\"text/javascript\">\n");=0A=
document.write("/*=B2=A9=BF=CD=C6=B5=B5=C0=C4=DA=C8=DD=D2=B3=CF=C2=B7=BDB=
anner728*90=A3=AC=B4=B4=BD=A8=D3=DA2014-7-3*/\n");=0A=
document.write("var cpro_id =3D \"u1607657\";\n");=0A=
document.write("</Scr"+"ipt>\n");=0A=
document.write("<script =
src=3D\"http://cpro.baidustatic.com/cpro/ui/c.js\" =
type=3D\"text/javascript\"></Scr"+"ipt>");


------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/comment.js

=EF=BB=BFvar list =3D []; //=E8=AF=84=E8=AE=BA=E5=88=97=E8=A1=A8
var editorId =3D "#comment_content";
var verifycodeId =3D "#img_verifycode";
var listId =3D "#comment_list";

$(document).ready(init_comment);

function init_comment() {
    load_comment_form();

    editor =3D $(editorId);

    var editor_inter =3D null;
    if (editor.length > 0) {
       // var v =3D ["html", "objc", "javascript", "css", "php", =
"csharp", "cpp", "java", "python", "ruby", "vb", "delphi", "sql", =
"plain"];
       // var k =3D ["HTML/XML","Objective-C", "JavaScript", "CSS", =
"PHP", "C#", "C++", "Java", "Python", "Ruby", "Visual Basic", "Delphi", =
"SQL", "=E5=85=B6=E5=AE=83"];
       // for (var i =3D 0; i < v.length; i++) {
      //      $("#lang_list").append('<a href=3D"#' + v[i] + '">' + k[i] =
+ '</a>');
        // }
        $("#lang_list").append('<a class=3D"long_name" =
href=3D"#html">HTML/XML</a><a class=3D"long_name" =
href=3D"#objc">objective-c</a><a class=3D"zhong_name" =
href=3D"#delphi">Delphi</a><a  class=3D"zhong_name" =
href=3D"#ruby">Ruby</a><a href=3D"#php">PHP</a><a class=3D"duan_name" =
href=3D"#csharp">C#</a><a style=3D" border-right: none;"  =
class=3D"duan_name" href=3D"#cpp">C++</a><a style=3D" =
border-bottom:none;"class=3D"long_name" =
href=3D"#javascript">JavaScript</a><a style=3D" border-bottom:none;" =
class=3D"long_name" href=3D"#vb">Visual Basic</a><a style=3D" =
border-bottom:none;" class=3D"zhong_name" href=3D"#python">Python</a><a =
style=3D" border-bottom:none;" class=3D"zhong_name" =
href=3D"#java">Java</a><a style=3D"border-bottom:none;" =
class=3D"duan_name" href=3D"#css">CSS</a><a =
style=3D"border-bottom:none;" class=3D"duan_name" =
href=3D"#sql">SQL</a><a style=3D"border:none;"  class=3D"duan_name" =
href=3D"#plain">=E5=85=B6=E5=AE=83</a>');
        editor.focus(function () {
            editor_inter =3D setInterval(function () {
                commentTip("=E8=BF=98=E8=83=BD=E8=BE=93=E5=85=A5" + =
(1000 - editor.val().length) + "=E4=B8=AA=E5=AD=97=E7=AC=A6");
            }, 200);
        }).blur(function () {
            if (editor_inter) clearInterval(editor_inter);
        });
    }

    //=E5=8A=A0=E8=BD=BD=E5=88=97=E8=A1=A8
    loadList(1);
}
function noComments() {
    $(listId).html('<br =
/>&nbsp;&nbsp;=E6=9A=82=E6=97=A0=E8=AF=84=E8=AE=BA<br /><br /><div =
class=3D"clear"></div>');
}
function loadList(pageIndex, isSub) {
    if (commentscount =3D=3D 0) {
        noComments();
        return;
    }
    pageIndex =3D parseInt(pageIndex) || 1;

    =
$("#comments_bar").html("=E6=AD=A3=E5=9C=A8=E5=8A=A0=E8=BD=BD=E8=AF=84=E8=
=AE=BA...");
    //var cmtUrl =3D "../../comment/list/" + fileName + "?page=3D" + =
(pageIndex || 1);
    var url =3D location.href.toString().split('/');
    var cmtUrl =3D "http://"+url[2]+"/"+url[3]+"/comment/list/" + =
fileName + "?page=3D" + (pageIndex || 1);
    if (isSub) cmtUrl +=3D "&_" + Math.random();
    $.get(cmtUrl, function (json) {

        if (!json) {
            noComments();
            return;
        }
        var data =3D (typeof json =3D=3D 'object') ? json : eval("(" + =
json + ")");
        if (isSub) list =3D data.list;
        else list =3D list.concat(data.list);

        var listHtml =3D '';

        //=E6=9E=84=E9=80=A0=E4=B8=BB=E9=A2=98
        var topics =3D getTopics(list);

        var total =3D data.total > 0 ? data.total : topics.length;
        //=E7=BB=84=E8=A3=85HTM
        for (var i =3D 0; i < topics.length; i++) {
            var comment =3D topics[i];
            var layer =3D total - i;

            listHtml +=3D getItemHtml(comment, layer);
        }
        listHtml +=3D '<div class=3D"clear"></div>';
        //=E8=BE=93=E5=87=BA=E5=88=97=E8=A1=A8
        $(listId).html(listHtml);
        =
//=E9=AB=98=E4=BA=AE=E8=AF=84=E8=AE=BA=E4=B8=AD=E7=9A=84=E4=BB=A3=E7=A0=81=
=E6=AE=B5
        dp.SyntaxHighlighter.HighlightAll('code2');
        //=E5=B1=95=E7=A4=BA=E6=98=B5=E7=A7=B0
        new CNick(listId + ' a.username').showNickname();

        //=E5=88=86=E9=A1=B5=E5=A4=84=E7=90=86
        if (data.page.PageIndex >=3D data.page.PageCount) {
            $("#comment_bar").hide();
        } else {
            $("#comment_bar").html('<div id=3D"load_comments" page=3D"' =
+ (pageIndex + 1) + =
'">=E6=9F=A5=E7=9C=8B=E6=9B=B4=E5=A4=9A=E8=AF=84=E8=AE=BA</div>');
        }
        //=E6=B7=BB=E5=8A=A0=E6=8C=89=E9=92=AE=E4=BA=8B=E4=BB=B6
        setBtnEvent();
    });
};

//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E4=B8=BB=E9=A2=98
function getTopics(list) {
    var topics =3D [];
    for (var i =3D 0; i < list.length; i++) {
        var t =3D list[i];
        if (t.ParentId =3D=3D 0) {
            t.Replies =3D getReplies(t, list);
            topics.push(t);
        }
    }
    return topics;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E5=9B=9E=E5=A4=8D
function getReplies(item, list) {
    var replies =3D [];
    for (var i =3D 0; i < list.length; i++) {
        var r =3D list[i];
        if (r.ParentId =3D=3D item.CommentId) {
            r.Replies =3D getReplies(r, list);
            replies.push(r);
        }
    }
    return replies;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E7=9A=84HTML
function getItemHtml(comment, index, floor, deep) {
    if (!deep) deep =3D 0;
    var sty =3D deep > 3 ? ' style=3D"margin-left:0;"' : '';
    var html =3D '<dl class=3D"comment_item comment_' + =
(comment.ParentId > 0 ? "reply" : "topic") + '" =
id=3D"comment_item_{id}"' + sty + '>' +
		'<dt class=3D"comment_head" floor=3D' + (floor || index) + '>' + =
(comment.ParentId > 0 ? "Re:" : index + '=E6=A5=BC') + ' <span =
class=3D"user">';

    if (comment.UserName !=3D null && comment.UserName !=3D '')
        html +=3D '<a class=3D"username" href=3D"/' + comment.UserName + =
'" target=3D"_blank">' + comment.UserName + '</a>';
    else
        html +=3D '[=E6=B8=B8=E5=AE=A2]';

    html +=3D " <span class=3D'ptime'>" + comment.PostTime + =
"=E5=8F=91=E8=A1=A8</span> ";
    html +=3D ' <a href=3D"#reply" class=3D"cmt_btn reply" =
title=3D"=E5=9B=9E=E5=A4=8D">[=E5=9B=9E=E5=A4=8D]</a> <span =
class=3D"comment_manage" style=3D"display:none;" commentid=3D{id} =
username=3D{username}> <a href=3D"#quote" class=3D"cmt_btn quote" =
title=3D"=E5=BC=95=E7=94=A8">[=E5=BC=95=E7=94=A8]</a> <a =
href=3D"#report" class=3D"cmt_btn report" =
title=3D"=E4=B8=BE=E6=8A=A5">[=E4=B8=BE=E6=8A=A5]</a>';
    if (username =3D=3D currentUserName || comment.UserName =3D=3D =
currentUserName) html +=3D ' <a href=3D"#delete" class=3D"cmt_btn =
delete" title=3D"=E5=88=A0=E9=99=A4">[=E5=88=A0=E9=99=A4]</a>';
    html +=3D '</span></dt>';
    html +=3D '<dd class=3D"comment_userface"><a href=3D"/' + =
comment.UserName + '" target=3D"_blank"><img src=3D"' + comment.Userface =
+ '" width=3D"40" height=3D"40" /></a></dd>';
    html +=3D '<dd class=3D"comment_body">' + replaceUBBToHTML(comment) =
+ '</dd>';
    html =3D html.replace(/\{id\}/g, =
comment.CommentId).replace(/\{username\}/g, comment.UserName);

    if (comment.Replies !=3D null) {
        for (var j =3D 0; j < comment.Replies.length; j++) {
            html +=3D getItemHtml(comment.Replies[j], j + 1, index, deep =
+ 1);
        }
    }
    html +=3D "</dl>";

    return html;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E5=AF=B9=E8=B1=A1
function getComment(commentId, list) {
    for (var i =3D 0; i < list.length; i++) {
        var comment =3D list[i];
        if (comment.CommentId =3D=3D commentId)
            return comment;
    }
    return null;
}
function setBtnEvent() {

    $("#load_comments").click(function () {
        var page =3D $(this).attr("page");
        loadList(page);
    });

    //=E8=AF=84=E8=AE=BA=E6=8C=89=E9=92=AE=E7=82=B9=E5=87=BB
    $(".comment_head a").click(function () {
        var action =3D $(this).attr("href");

        action =3D action.substring(action.lastIndexOf('#'));

        var commentId =3D $(this).parent().attr("commentid");
        switch (action) {
            case "#reply":
                if (currentUserName) {
                    commentId =3D $(".comment_manage", =
$(this).parent()).attr("commentid");
                    replyComment(commentId, list);
                    setEditorFocus();
                }
                return true;
            case "#quote":
                if (currentUserName) {
                    quoteComment(commentId, list);
                    setEditorFocus();
                }
                return true;
            case "#report":
                reportComment(commentId, this);
                break;
            case "#delete":
                deleteComment(commentId);
                break;
            default:
                return true;
        }
        return false;
    });

    $(".comment_item").mouseover(function () {
        $(".comment_manage", $(this)).eq(0).show();
    }).mouseout(function () {
        $(".comment_manage", $(this)).eq(0).hide();
    });
}
/*=E4=BD=BF=E8=AF=84=E8=AE=BA=E6=A1=86=E8=8E=B7=E5=BE=97=E7=84=A6=E7=82=B9=
*/
function setEditorFocus() {
    var val =3D editor.val();
    editor.val('');
    editor.focus();
    editor.val(val);
}
//=E5=BC=95=E7=94=A8=E8=AF=84=E8=AE=BA
function quoteComment(commentId, list) {
    var comment =3D getComment(commentId, list);
    var content =3D comment.Content;
    if (comment.Content.length > 50) {
        content =3D comment.Content.substring(0, 50) + "...";
    }
    editor.val("[quote=3D" + (comment.UserName =3D=3D null ? =
"=E6=B8=B8=E5=AE=A2" : comment.UserName) + "]" + content + =
"[/quote]\r\n");
}
//=E5=9B=9E=E5=A4=8D=E8=AF=84=E8=AE=BA
function replyComment(commentId, list) {
    var comment =3D getComment(commentId, list);
    editor.val('[reply]' + comment.UserName + "[/reply]\r\n");
    $("#comment_replyId").val(commentId);
}
//=E4=B8=BE=E6=8A=A5=E8=AF=84=E8=AE=BA
function reportComment(commentId, e) {
    report(commentId, 3, e);
}
//=E5=88=A0=E9=99=A4=E8=AF=84=E8=AE=BA
function deleteComment(commentId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=BF=99=
=E7=AF=87=E8=AF=84=E8=AE=BA=E5=90=97=EF=BC=9F")) return;

    var delUrl =3D blog_address + "/comment/delete?commentid=3D" + =
commentId + "&filename=3D" + fileName;
    $.get(delUrl, function (data) {
        if (data.result =3D=3D 1) {
            $("#comment_item_" + commentId).hide().remove();
        } else {
            =
alert("=E4=BD=A0=E6=B2=A1=E6=9C=89=E5=88=A0=E9=99=A4=E8=AF=A5=E8=AF=84=E8=
=AE=BA=E7=9A=84=E6=9D=83=E9=99=90=EF=BC=81");
        }
    });
}
//=E6=9B=BF=E6=8D=A2=E8=AF=84=E8=AE=BA=E7=9A=84UBB=E4=BB=A3=E7=A0=81
function replaceUBBToHTML(comment) {
    var content =3D $.trim(comment.Content);

    var re =3D /\[code=3D([\w#\.]+)\]([\s\S]*?)\[\/code\]/ig;

    var codelist =3D [];
    while ((mc =3D re.exec(content)) !=3D null) {
        codelist.push(mc[0]);
        content =3D content.replace(mc[0], "--code--");
    }
    content =3D replaceQuote(content);
    //content =3D content.replace(/\[e(\d+)\]/g, "<img src=3D\"" + =
static_host + "/images/emotions/e$1.gif\"\/>");
    content =3D =
content.replace(/\[reply]([\s\S]*?)\[\/reply\][\r\n]{0,2}/gi, =
"=E5=9B=9E=E5=A4=8D$1=EF=BC=9A");
    content =3D =
content.replace(/\[url=3D([^\]]+)]([\s\S]*?)\[\/url\]/gi, '<a =
href=3D"$1" target=3D"_blank">$2</a>');
    content =3D =
content.replace(/\[img(=3D([^\]]+))?]([\s\S]*?)\[\/img\]/gi, '<img =
src=3D"$3" style=3D"max-width:400px;max-height:200px;" border=3D"0" =
title=3D"$2" />');
    //content =3D content.replace(/\[(\/?)(b|i|u|p)\]/ig, "<$1$2>");
    content =3D content.replace(/\r?\n/ig, "<br />");

    if (codelist.length > 0) {
        var re1 =3D /--code--/ig;
        var i =3D 0;
        while ((mc =3D re1.exec(content)) !=3D null) {
            content =3D content.replace(mc[0], codelist[i]);
            i++;
        }
    }
    content =3D =
content.replace(/\[code=3D([\w#\.]+)\]([\s\S]*?)\[\/code\]/ig, function =
(m0, m1, m2) {
        if ($.trim(m2) =3D=3D "") return '';
        return '<pre name=3D"code2" class=3D"' + m1 + '">' + m2 + =
'</pre>';
    });
    return content;
}
//=E6=9B=BF=E6=8D=A2=E8=AF=84=E8=AE=BA=E7=9A=84=E5=BC=95=E7=94=A8
function replaceQuote(str) {
    var m =3D /\[quote=3D([^\]]+)]([\s\S]*)\[\/quote\]/gi.exec(str);
    if (m) {
        return str.replace(m[0], =
'<fieldset><legend>=E5=BC=95=E7=94=A8=E2=80=9C' + m[1] + =
'=E2=80=9D=E7=9A=84=E8=AF=84=E8=AE=BA=EF=BC=9A</legend>' + =
replaceQuote(m[2]) + '</fieldset>');
    } else {
        return str;
    }
}



function load_comment_form() {
    var un =3D getcookie("UserName").toLowerCase();
    if (islock) {
        $("#comment_form").html("<div =
class=3D'notice'>=E8=AF=A5=E6=96=87=E7=AB=A0=E5=B7=B2=E8=A2=AB=E7=A6=81=E6=
=AD=A2=E8=AF=84=E8=AE=BA=EF=BC=81</div>");
    } else if (currentUserName || (un !=3D =
null&&un!=3D""&&un!=3Dundefined)) {
        var html =3D '<a name=3D"commentbox"></a><a =
name=3D"reply"></a><a name=3D"quote"></a><form action=3D"/' + username + =
'/comment/submit?id=3D' + fileName + '" method=3D"post" =
onsubmit=3D"return subform(this);">' +
		'<div class=3D"commentform"><div =
class=3D"panel_head">=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA</div>' +
		'<ul><li class=3D"left">=E7=94=A8 =E6=88=B7 =E5=90=8D=EF=BC=9A</li><li =
class=3D"right">' + currentUserName + '</li></ul>' +
		'<ul><li =
class=3D"left">=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=EF=BC=9A</li><li =
class=3D"right" style=3D"position:relative;">' +
		'<div id=3D"ubbtools">' +
		'<a href=3D"#insertcode" code=3D"code"><img src=3D"' + static_host + =
'/images/ubb/code.gif" border=3D"0" =
alt=3D"=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81" =
title=3D"=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81"/></a>' +
		'</div>' +
		'<div id=3D"lang_list" style=3D"position: absolute; top: 28px; left: =
0px; display: none;"></div>' +
		'<textarea class=3D"comment_content" name=3D"comment_content" =
id=3D"comment_content" style=3D"width: 400px; height: =
200px;"></textarea>' +
		'</li></ul>' +
        '<ul><input type=3D"hidden" id=3D"comment_replyId" =
name=3D"comment_replyId" />' +
		'<input type=3D"hidden" id=3D"comment_userId" name=3D"comment_userId" =
value=3D"521203" />' +
		'<input type=3D"hidden" id=3D"commentId" name=3D"commentId" value=3D"" =
/>';	=09

        if (isBole)
        {
            html +=3D '<input type=3D"checkbox" value=3D"1" =
id=3D"boleattohome" name=3D"boleattohome" =
/>=E6=8E=A8=E8=8D=90=E5=88=B0=E9=A6=96=E9=A1=B5';
        }
       =20
        html+=3D '<input type=3D"submit" class=3D"comment_btn" =
value=3D"=E6=8F=90=E4=BA=A4" />&nbsp;&nbsp;<span id=3D"tip_comment" =
style=3D"color: Red; display: none;"></span>' +
		'</ul></div></form>';

        $("#comment_form").html(html);
    } else {
        var curl =3D encodeURIComponent(location.href);
        $("#comment_form").html('<div =
class=3D"guest_link">=E6=82=A8=E8=BF=98=E6=B2=A1=E6=9C=89=E7=99=BB=E5=BD=95=
,=E8=AF=B7' +
		//'<a href=3D"javascript:void(0);" =
onclick=3D"javascript:csdn.showLogin(function (dat) =
{js_logined(dat.data.userName);});">[=E7=99=BB=E5=BD=95]</a>=E6=88=96' +
        '<a href=3D"javascript:void(0);" =
onclick=3D"javascript:loginbox();">[=E7=99=BB=E5=BD=95]</a>=E6=88=96' +
		'<a href=3D"http://passport.csdn.net/account/register?from=3D' + curl =
+ '">[=E6=B3=A8=E5=86=8C]</a></div>');
    }
    ubb_event();=20
}

function getcookie(name) {
    var cookie_start =3D document.cookie.indexOf(name);
    var cookie_end =3D document.cookie.indexOf(";", cookie_start);
    return cookie_start =3D=3D -1 ? '' : =
unescape(document.cookie.substring(cookie_start + name.length + 1, =
(cookie_end > cookie_start ? cookie_end : document.cookie.length)));
}

var c_doing =3D false;
function subform(e) {
    if (c_doing) return false;
    var content =3D $.trim($(editorId).val());
    if (content =3D=3D "") {
        =
commentTip("=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=E6=B2=A1=E6=9C=89=E5=A1=AB=
=E5=86=99!");
        return false;
    } else if (content.length > 1000) {
        =
commentTip("=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=E5=A4=AA=E9=95=BF=E4=BA=86=
=EF=BC=8C=E4=B8=8D=E8=83=BD=E8=B6=85=E8=BF=871000=E4=B8=AA=E5=AD=97=E7=AC=
=A6=EF=BC=81");
        return false;
    }
    var commentId =3D $("#commentId").val();
    =
commentTip("=E6=AD=A3=E5=9C=A8=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA...");
    var beginTime =3D new Date();
    $(editorId).attr("disabled", true);
    $("button[type=3Dsubmit]", e).attr("disabled", true);
    c_doing =3D true;
    $.ajax({
        type: "POST",
        url: $(e).attr("action"),
        data: {
            "commentid": commentId,
            "content": content,
            "replyId": $("#comment_replyId").val(),
            "boleattohome": $("#boleattohome").val()
        },
        success: function (data) {
            c_doing =3D false;
            commentTip(data.content);
            if (data.result) {
                var rcommentid=3D$("#comment_replyId").val()
                $(editorId).val('');
                $("#comment_replyId,#comment_verifycode").val('');

                commentscount++;
                loadList(1, true);
                $(editorId).attr("disabled", false);
                $("button[type=3Dsubmit]", e).attr("disabled", false);

                =
commentTip("=E5=8F=91=E8=A1=A8=E6=88=90=E5=8A=9F=EF=BC=81=E8=AF=84=E8=AE=BA=
=E8=80=97=E6=97=B6:" + (new Date() - beginTime) + "=E6=AF=AB=E7=A7=92")

                if (rcommentid!=3Dundefined && rcommentid !=3D "")
                {
                    $("html,body").animate({ scrollTop: =
$("#comment_item_" + rcommentid).offset().top }, 1000);
                }
               =20
            }
        }
    });
    return false;
}

//=E6=93=8D=E4=BD=9C=E6=8F=90=E7=A4=BA
var _c_t;
function commentTip(message) {
    $("#tip_comment").html(message).show();
    clearTimeout(_c_t);
    _c_t =3D setTimeout(function () {
        $("#tip_comment").hide();
    }, 10000);
}

function ubb_event() {
    //ubb=E6=8C=89=E9=92=AE=E4=BA=8B=E4=BB=B6
    $("#ubbtools").children().click(function () {
        var selectedValue =3D editor.selection();
        editor.focus();
        var code =3D $(this).attr("code");
        switch (code) {
            case "code":
                var lang_list =3D $("#lang_list");
                lang_list.show();
                lang_list.children().each(function () {
                    $(this).unbind("click").click(function () {
                        editor.val("[code=3D" + =
$.trim(this.href.split('#')[1]) + "]\n" + selectedValue + "\n[/code]");
                        lang_list.hide();
                    });
                });
                editor.click(function (e) {
                    lang_list.hide();
                });
                break;
            default:
                editor.val("[" + code + "]" + selectedValue + "[/" + =
code + "]");
                break;
        }
        return false;
    });
}
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/rabbit/cnick/cnick.js

var __hasProp=3D{}.hasOwnProperty;!function(a){var =
b,c,d,e;d=3Dthis,b=3Dd.jQuery,c=3D{},a(d,c,b),void =
0=3D=3D=3Dd.csdn&&(d.csdn=3Dc);for(e in =
c)__hasProp.call(c,e)&&(d[e]=3Dd.csdn[e]=3Dc[e])}(function(a,b,c){var =
d,e,f,g,h;if(!(a.CNick instanceof Function&&a.cnick instanceof =
Function&&(null!=3D(h=3Da.csdn)?h.cnick:void 0)instanceof =
Function))return void =
0=3D=3D=3DString.prototype.trim&&(String.prototype.trim=3Dfunction(){retu=
rn this.replace(/^\s+|\s+$/g,"")}),g=3D{},e=3Dfunction(b,c){var =
d,e;return =
arguments.length>1?(g[b]=3Dc,null!=3D(d=3Da.localStorage)?d["cnick_"+b]=3D=
+new Date+","+c:void 0):null!=3Db?g[b]||function(a){var =
b,c,d,e;if(null!=3Da)return =
d=3Da.split(","),b=3Dd[0],c=3Dd[1],0<(e=3Dnew Date-new =
Date(parseInt(b,10)))&&1728e5>e?c:void =
0}(null!=3D(e=3Da.localStorage)?e["cnick_"+b]:void 0):void =
0},b.cnick=3Df=3Dfunction(b,d,f){var =
g,h,i,j,k,l,m,n,o,p;for(null=3D=3Db&&(b=3D"a.user_name"),null=3D=3Dd&&(d=3D=
a.document),null=3D=3Df&&(f=3D!1),h=3Dc(b,d).filter(function(){return =
f||null=3D=3Dc(this).data("orig_username")}).data("orig_username",""),k=3D=
{},o=3D0,p=3Dh.length;p>o;o++)g=3Dh[o],m=3Dg.innerHTML.trim(),null!=3D(l=3D=
e(m))?c(g).data("orig_username",m).text(l):(j=3Dk.hasOwnProperty(m)?k[m]:=
k[m]=3D[],j.push(g));for(n=3Dfunction(){var a;a=3D[];for(i in =
k)__hasProp.call(k,i)&&a.push(i);return =
a}();n.length>0;)c.getJSON("https://passport.csdn.net/get/nick?callback=3D=
?",{users:n.splice(0,100).join()},function(a){var =
b,d,f,g,h;if(d=3Da.status,b=3Da.data,d&&b)for(f=3D0,g=3Db.length;g>f;f++)=
h=3Db[f],m=3Dh.u,i=3Dh.n,"null"=3D=3D=3Di&&(i=3Dm),c(k[m]).data("orig_use=
rname",m).text(function(a,b){return i||b}),e(m,i)})},c(function(){return =
f()}),a.CNick=3Dd=3Dfunction(){function a(a){this.selector=3Da}return =
a.prototype.showNickname=3Dfunction(){return f(this.selector)},a}()});
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/newblog.min.js

/*plugins.js*/
;
(function($) {
    $.fn.extend({selection: function() {
        var selectedValue =3D '';
        var me =3D this[0];
        if (document.selection) {
            var range =3D document.selection.createRange();
            selectedValue =3D range.text;
        }
        else if (typeof (me.selectionStart) =3D=3D 'number') {
            var start =3D me.selectionStart;
            var end =3D me.selectionEnd;
            if (start !=3D end) {
                selectedValue =3D me.value.substring(start, end);
            }
        }
        return $.trim(selectedValue);
    },parseHtml: function(val) {
        var me =3D this[0];
        var value =3D $(this).val();
        if (document.selection) {
            var range =3D document.selection.createRange();
            if (range.text) {
                range.text =3D val;
            } else {
                $(this).val(value + val);
            }
        } else if (typeof (me.selectionStart) =3D=3D 'number') {
            var start =3D me.selectionStart;
            var end =3D me.selectionEnd;
            var startVal =3D value.substring(0, start);
            var endVal =3D value.substring(end);
            $(this).val(startVal + val + endVal);
        }
        else
            $(this).val(value + val);
        me.selectionStart =3D me.selectionEnd =3D $(this).val().length;
        me.focus();
    }});
})(jQuery);
jQuery.cookie =3D function(name, value, options) {
    if (typeof value !=3D 'undefined') {
        options =3D options || {};
        if (value =3D=3D=3D null) {
            value =3D '';
            options.expires =3D -1;
        }
        var expires =3D '';
        if (options.expires && (typeof options.expires =3D=3D 'number' =
|| options.expires.toUTCString)) {
            var date;
            if (typeof options.expires =3D=3D 'number') {
                date =3D new Date();
                date.setTime(date.getTime() + (options.expires * 24 * 60 =
* 60 * 1000));
            } else {
                date =3D options.expires;
            }
            expires =3D '; expires=3D' + date.toUTCString();
        }
        var path =3D options.path ? '; path=3D' + (options.path) : '';
        var domain =3D options.domain ? '; domain=3D' + (options.domain) =
: '';
        var secure =3D options.secure ? '; secure' : '';
        document.cookie =3D [name, '=3D', encodeURIComponent(value), =
expires, path, domain, secure].join('');
    } else {
        var cookieValue =3D null;
        if (document.cookie && document.cookie !=3D '') {
            var cookies =3D document.cookie.split(';');
            for (var i =3D 0; i < cookies.length; i++) {
                var cookie =3D jQuery.trim(cookies[i]);
                if (cookie.substring(0, name.length + 1) =3D=3D (name + =
'=3D')) {
                    cookieValue =3D =
decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
};
jQuery.createMask =3D function() {
    var height =3D document.documentElement.clientHeight;
    var width =3D document.documentElement.clientWidth;
    var bodyHeight =3D $("body").height();
    if (bodyHeight > height) {
        height =3D bodyHeight;
    }
    var mask =3D {};
    if ($("#mask_div").length =3D=3D 0) {
        $("body").append('<div id=3D"mask_div" =
style=3D"position:absolute;top:0;left:0;filter:alpha(opacity=3D20);-moz-o=
pacity:0.2;opacity:.2;"></div>')
    }
    mask =3D $("#mask_div");
    mask.css({"width": width,"height": height,"background": "#000"});
};
jQuery.removeMask =3D function() {
    $("#mask_div").remove();
};
Array.prototype.contain =3D function(val) {
    for (var i =3D 0; i < this.length; i++) {
        if (this[i] =3D=3D=3D val) {
            return true;
        }
    }
    return false;
}
/*common.js*/
$(document).ready(function() {
  =20
    $("#btnSubmit").click(function () {
        var key =3D $("#inputSearch").val();
        if (key =3D=3D "") {
            =
alert("=E8=AF=B7=E8=BE=93=E5=85=A5=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=
=AD=97");
            $("#inputSearch").focus();
            return false;
        }
        $("#inputQ").val('blog:' + username + ' ' + key);
        return true;
    });
   =20
    initArchives();
   =20
  =20
    initDigg();
    buildCTable();
    initShareButtons();
  =20
});
function initArchives() {
    var shortlist =3D '';
    var hidelist =3D '';
    var list =3D $("#archive_list");
    list.children().each(function(i) {
        if (i < 5)
            shortlist +=3D "<li>" + $(this).html() + "</li>";
        else
            hidelist +=3D "<li>" + $(this).html() + "</li>";
    });
    if (hidelist =3D=3D '')
        return;
    hidelist =3D '<span class=3D"hidelist" style=3D"display:none;">' + =
hidelist + '</span>';
    list.html(shortlist + hidelist + '<div id=3D"archive_list_button" =
class=3D"list_closed">=E5=B1=95=E5=BC=80</div>');
    $("#archive_list_button").toggle(function() {
        $(this).html("=E6=94=B6=E8=B5=B7");
        $(this).removeClass("list_closed").addClass("list_opended");
        $(".hidelist", list).show();
    }, function() {
        $(this).html("=E5=B1=95=E5=BC=80");
        $(this).removeClass("list_opended").addClass("list_closed");
        $(".hidelist", list).hide();
    });
}
function initShareButtons() {
    var panel =3D $("#sharePanel");
    if (panel.length =3D=3D 0)
        return;
    var url =3D encodeURIComponent(document.location);
    var title =3D encodeURIComponent(document.title);
    var shareto =3D {"sina": function() {
        var _u =3D 'http://v.t.sina.com.cn/share/share.php?url=3D' + url =
+ '&title=3D' + title;
        var imgs =3D $(".article_content img");
        if (imgs.length > 0) {
            _u +=3D "&pic=3D" + encodeURIComponent(imgs[0].src);
        }
        openWindow(_u);
    },"qq": function() {
        var _site =3D 'http://blog.csdn.net';
        var _u =3D 'http://v.t.qq.com/share/share.php?url=3D' + url + =
'&site=3D' + _site + '&title=3D' + title;
        var imgs =3D $(".article_content img");
        if (imgs.length > 0) {
            _u +=3D "&pic=3D" + encodeURIComponent(imgs[0].src);
        }
        openWindow(_u);
    }};
    =
$("#sharePanel").html('<span>=E5=88=86=E4=BA=AB=E5=88=B0=EF=BC=9A</span> =
<a name=3D"sina" class=3D"share_sina" =
title=3D"=E5=88=86=E4=BA=AB=E5=88=B0=E6=96=B0=E6=B5=AA=E5=BE=AE=E5=8D=9A"=
></a><a name=3D"qq" class=3D"share_qq" =
title=3D"=E5=88=86=E4=BA=AB=E5=88=B0=E8=85=BE=E8=AE=AF=E5=BE=AE=E5=8D=9A"=
></a>');
    $("#sharePanel a").each(function() {
        var name =3D $(this).attr("name");
        if (!name)
            return;
        $(this).click(function() {
            shareto[name]();
            return false;
        });
    });
}
function initDigg() {
    var diggdiv =3D $("#digg");
    if (diggdiv.length > 0) {
        var articleId =3D diggdiv.attr("ArticleId");
        $("#btnDigg,#btnBury").click(function () {
                if ($(this).attr("class") =3D=3D "digg digg_disable")
                {
                    return;
                }
                var id =3D $(this).attr("id");
                var action =3D id =3D=3D "btnDigg" ? "digg" : "bury";
                //blog_address =3D =
"http://dev.blog.csdn.net:5391/csdntest01";
                $.get(blog_address + "/article/" + action + =
"?ArticleId=3D" + articleId, function (data) {
                    $("#btnDigg dd").html(data.digg);
                    $("#btnBury dd").html(data.bury);                    =

                });         =20
        });
    }
}
function initBodyHeight() {
    var siderHeight =3D $("#sider").height();
    var mainHeight =3D $("#main").height();
    if (siderHeight > mainHeight) {
        $("#body").height(siderHeight);
    }
    else {
        $("#body").height(mainHeight + 100);
    }
}
function collectArticle(title, fileName) {
    openWindow("http://wz.csdn.net/storeit.aspx?t=3D" + =
encodeURIComponent(title) + "&u=3D" + blog_address + "/article/details/" =
+ fileName, title);
}
function untopArticle(articleId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=8F=96=E6=B6=88=E7=BD=AE=
=E9=A1=B6=E8=BF=99=E7=AF=87=E6=96=87=E7=AB=A0=E5=90=97=EF=BC=9F"))
        return;
    $.get(blog_address + "/article/untop?articleId=3D" + articleId, =
function(txt) {
        var data =3D eval("(" + txt + ")");
        if (data.result) {
            =
alert("=E6=96=87=E7=AB=A0=E5=B7=B2=E5=8F=96=E6=B6=88=E7=BD=AE=E9=A1=B6=EF=
=BC=81");
            location.reload();
        } else {
            if (data.content)
                alert(data.content);
            else
                =
alert("=E6=97=A0=E6=B3=95=E5=8F=96=E6=B6=88=E7=BD=AE=E9=A1=B6=EF=BC=8C=E8=
=AF=B7=E5=88=B0=E5=90=8E=E5=8F=B0=E6=93=8D=E4=BD=9C=EF=BC=81");
        }
    });
}
function deleteArticle(articleId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=BF=99=
=E7=AF=87=E6=96=87=E7=AB=A0=E5=90=97=EF=BC=9F"))
        return;
    $.get(blog_address + "/article/delete?articleId=3D" + articleId, =
function(txt) {
        var data =3D eval("(" + txt + ")");
        if (data.result) {
            =
alert("=E6=96=87=E7=AB=A0=E5=B7=B2=E5=88=A0=E9=99=A4=EF=BC=81");
            location.reload();
        } else {
            if (data.content)
                alert(data.content);
            else
                =
alert("=E6=97=A0=E6=B3=95=E5=88=A0=E9=99=A4=EF=BC=8C=E8=AF=B7=E5=88=B0=E5=
=90=8E=E5=8F=B0=E5=88=A0=E9=99=A4=EF=BC=81");
        }
    });
}
function openWindow(url, title) {
    var _t =3D title || encodeURI(document.title);
    var _u =3D url || encodeURIComponent(document.location);
    var f =3D function() {
        var left =3D (screen.width - 600) / 2;
        var top =3D (screen.height - 450) / 2;
        if (!window.open(url, '', =
'toolbar=3D0,resizable=3D1,scrollbars=3Dyes,status=3D1,width=3D600,height=
=3D400'))
            location.href =3D url;
    }
    if (/Firefox/.test(navigator.userAgent))
        setTimeout(f, 0);
    else
        f();
}
function report(id, t, e) {
    $.createMask();
    var url =3D blog_address + "/common/report?id=3D" + id + "&t=3D" + =
t;
    if (t =3D=3D 3) {
        var floor =3D =
e.parentNode.parentNode.parentNode.getAttribute('floor');
        url +=3D "&floor=3D" + floor;
    }
    var top =3D (document.documentElement.clientHeight - 400) / 2 + =
(document.documentElement.scrollTop || document.body.scrollTop);
    var left =3D (document.documentElement.clientWidth - 400) / 2;
    $("#report_dialog").load(url).css({"top": top + "px","left": =
left}).show();
}
function getCalendar(time) {
    $("#calendar").load(blog_address + "/Article/Calendar?time=3D" + =
time + "&.calendar");
    return false;
}
;
function buildCTable() {
    var hs =3D $('#article_content').find('h1,h2,h3,h4,h5,h6');
    if (hs.length < 2)
        return;
    var s =3D '';
    s +=3D '<div style=3D"clear:both"></div>';
    s +=3D '<div style=3D"border:solid 1px #ccc; background:#eee; =
float:left; min-width:200px;padding:4px 10px;">';
    s +=3D '<p style=3D"text-align:right;margin:0;"><span =
style=3D"float:left;">=E7=9B=AE=E5=BD=95<a href=3D"#" =
title=3D"=E7=B3=BB=E7=BB=9F=E6=A0=B9=E6=8D=AE=E6=96=87=E7=AB=A0=E4=B8=ADH=
1=E5=88=B0H6=E6=A0=87=E7=AD=BE=E8=87=AA=E5=8A=A8=E7=94=9F=E6=88=90=E6=96=87=
=E7=AB=A0=E7=9B=AE=E5=BD=95">(?)</a></span><a href=3D"#" =
onclick=3D"javascript:return openct(this);" =
title=3D"=E5=B1=95=E5=BC=80">[+]</a></p>';
    s +=3D '<ol =
style=3D"display:none;margin-left:14px;padding-left:14px;line-height:160%=
;">';
    var old_h =3D 0, ol_cnt =3D 0;
    for (var i =3D 0; i < hs.length; i++) {
        var h =3D parseInt(hs[i].tagName.substr(1), 10);
        if (!old_h)
            old_h =3D h;
        if (h > old_h) {
            s +=3D '<ol>';
            ol_cnt++;
        }
        else if (h < old_h && ol_cnt > 0) {
            s +=3D '</ol>';
            ol_cnt--;
        }
        if (h =3D=3D 1) {
            while (ol_cnt > 0) {
                s +=3D '</ol>';
                ol_cnt--;
            }
        }
        old_h =3D h;
        var tit =3D hs.eq(i).text().replace(/^\d+[.=E3=80=81\s]+/g, '');
        tit =3D tit.replace(/[^a-zA-Z0-9_\-\s\u4e00-\u9fa5]+/g, '');

        if (tit.length < 100) {
            s +=3D '<li><a href=3D"#t' + i + '">' + tit + '</a></li>';
            hs.eq(i).html('<a name=3D"t' + i + '"></a>' + =
hs.eq(i).html());
        }
    }
    while (ol_cnt > 0) {
        s +=3D '</ol>';
        ol_cnt--;
    }
    s +=3D '</ol></div>';
    s +=3D '<div style=3D"clear:both"></div>';
    $(s).insertBefore($('#article_content'));
}
function openct(e) {
    if (e.innerHTML =3D=3D '[+]') {
        $(e).attr('title', =
'=E6=94=B6=E8=B5=B7').html('[-]').parent().next().show();
    } else {
        $(e).attr('title', =
'=E5=B1=95=E5=BC=80').html('[+]').parent().next().hide();
    }
    e.blur();
    return false;
}
/*blogger.js*/
$(document).ready(function () {
   =20
    var un =3D getUN().toLowerCase();
    if (un =3D=3D _blogger.toLowerCase()) {
        $('.interact').hide();
    } else if (un) {
        set_guanzhu_status(un);
    } else {
        if (un !=3D "") {
            $('#span_add_follow')[0].onclick =3D (function() {
                loginto(0);
            });
        }
    }
   =20
});
function set_guanzhu_status(un) {
    var url =3D "http://my.csdn.net/index.php/follow/check_is_followed/" =
+ encodeURIComponent(un) + "/" + encodeURIComponent(_blogger) + =
"?jsonpcallback=3D?";
    $.getJSON(url, {}, function(data) {
        if (data.succ =3D=3D 1 && data.info =3D=3D 1) {
            $('#span_add_follow').attr('class', 'attented')[0].onclick =
=3D (function() {
                return false;
            });
        } else {
            $('#span_add_follow')[0].onclick =3D guanzhu;
        }
    }, 'json');
}
function guanzhu() {
    var url =3D =
"http://my.csdn.net/index.php/follow/do_follow?jsonpcallback=3D?";
    $.getJSON(url, {"username": _blogger}, function(data) {
        if (data.succ =3D=3D 1) {
            alert('=E5=85=B3=E6=B3=A8=E6=88=90=E5=8A=9F=EF=BC=81');
            $('#span_add_follow').attr('class', 'attented')[0].onclick =
=3D (function() {
                return false;
            });
        } else {
            alert(data.msg);
        }
    });
    return false;
}
function getUN() {
    var m =3D document.cookie.match(new RegExp("(^| =
)UserName=3D([^;]*)(;|$)"));
    if (m)
        return m[2];
    else
        return '';
}
function loginto(n) {
    if (!n) {
        csdn.showLogin(function(data) {
            js_logined(data.data.userName);
        });
    } else {
        if (!getUN()) {
            csdn.showLogin(function(data) {
                js_logined(data.data.userName);
            });
        } else {
            location =3D 'http://my.csdn.net/my/letter/send/' + =
_blogger;
        }
    }
}
function js_logined(un) {
    location =3D '?reload';
}
/*SyntaxHighlighter/shCore-src.js*/
var a, dp =3D {sh: {Toolbar: {},Utils: {},RegexLib: {},Brushes: =
{},Strings: {AboutDialog: =
'<html><head><title>About...</title></head><body =
class=3D"dp-about"><table cellspacing=3D"0"><tr><td class=3D"copy"><p =
class=3D"title">dp.SyntaxHighlighter</div><div class=3D"para">Version: =
{V}</p><p><a =
href=3D"http://www.dreamprojections.com/syntaxhighlighter/?ref=3Dabout" =
target=3D"_blank">http://www.dreamprojections.com/syntaxhighlighter</a></=
p>&copy;2004-2007 Alex Gorbatchev.</td></tr><tr><td =
class=3D"footer"><input type=3D"button" class=3D"close" value=3D"OK" =
onClick=3D"window.close()"/></td></tr></table></body></html>'},ClipboardS=
wf: =
'http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf',Ver=
sion: "1.5.1"}};
dp.SyntaxHighlighter =3D dp.sh;
dp.sh.Toolbar.Commands =3D {ExpandSource: {label: "+ expand =
source",check: function(b) {
    return b.collapse
},func: function(b, c) {
    b.parentNode.removeChild(b);
    c.div.className =3D c.div.className.replace("collapsed", "");
}},ViewSource: {label: "view plain",func: function(b, c) {
    b =3D dp.sh.Utils.FixForBlogger(c.originalCode).replace(/</g, =
"&lt;");
    c =3D window.open("", "_blank", "width=3D750, height=3D400, =
location=3D0, resizable=3D1, menubar=3D0, scrollbars=3D0");
    c.document.write('<textarea style=3D"width:99%;height:99%">' + b + =
"</textarea>");
    c.document.close();
}},CopyToClipboard: {label: "copy",check: function() {
    return window.clipboardData !=3D null || dp.sh.ClipboardSwf !=3D =
null
},func: function(b, c) {
    b =3D dp.sh.Utils.FixForBlogger(c.originalCode).replace(/&lt;/g, =
"<").replace(/&gt;/g, ">").replace(/&amp;/g, "&");
    if (window.clipboardData)
        window.clipboardData.setData("text", b);
    else if (dp.sh.ClipboardSwf !=3D null) {
        var d =3D c.flashCopier;
        if (d =3D=3D null) {
            d =3D document.createElement("div");
            c.flashCopier =3D d;
            c.div.appendChild(d);
        }
        d.innerHTML =3D '<embed src=3D"' + dp.sh.ClipboardSwf + '" =
FlashVars=3D"clipboard=3D' + encodeURIComponent(b) + '" width=3D"0" =
height=3D"0" type=3D"application/x-shockwave-flash"></embed>';
    }
    alert("The code is in your clipboard now");
}},PrintSource: {label: "print",func: function(b, c) {
    b =3D document.createElement("IFRAME");
    var d =3D null;
    b.style.cssText =3D =
"position:absolute;width:0px;height:0px;left:-500px;top:-500px;";
    document.body.appendChild(b);
    d =3D b.contentWindow.document;
    dp.sh.Utils.CopyStyles(d, window.document);
    d.write('<div class=3D"' + c.div.className.replace("collapsed", "") =
+ ' printing">' + c.div.innerHTML + "</div>");
    d.close();
    b.contentWindow.focus();
    b.contentWindow.print();
    alert("Printing...");
    document.body.removeChild(b);
}},About: {label: "?",func: function() {
    var b =3D window.open("", "_blank", =
"dialog,width=3D300,height=3D150,scrollbars=3D0"), c =3D b.document;
    dp.sh.Utils.CopyStyles(c, window.document);
    c.write(dp.sh.Strings.AboutDialog.replace("{V}", dp.sh.Version));
    c.close();
    b.focus()
}}};
dp.sh.Toolbar.Create =3D function(b) {
    var _code =3D b.source.className;
    var c =3D document.createElement("DIV");
    c.className =3D "tools";
    c.innerHTML =3D '<b>[' + _code + ']</b> ';
    for (var d in dp.sh.Toolbar.Commands) {
        var f =3D dp.sh.Toolbar.Commands[d];
        f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<a =
href=3D"#" class=3D"' + d + '" title=3D"' + f.label + '" =
onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return false;\">" + =
f.label + "</a>")
    }
    return c;
};
dp.sh.Toolbar.Command =3D function(b, c) {
    for (var d =3D c; d !=3D null && =
d.className.indexOf("dp-highlighter") =3D=3D -1; )
        d =3D d.parentNode;
    d !=3D null && dp.sh.Toolbar.Commands[b].func(c, d.highlighter)
};
dp.sh.Utils.CopyStyles =3D function(b, c) {
    c =3D c.getElementsByTagName("link");
    for (var d =3D 0; d < c.length; d++)
        c[d].rel.toLowerCase() =3D=3D "stylesheet" && b.write('<link =
type=3D"text/css" rel=3D"stylesheet" href=3D"' + c[d].href + =
'"></link>')
};
dp.sh.Utils.FixForBlogger =3D function(b) {
    return dp.sh.isBloggerMode =3D=3D true ? =
b.replace(/<br\s*\/?>|&lt;br\s*\/?&gt;/gi, "\n") : b
};
dp.sh.RegexLib =3D {MultiLineCComments: new RegExp("/\\*[\\s\\S]*?\\*/", =
"gm"),SingleLineCComments: new RegExp("//.*$", =
"gm"),SingleLinePerlComments: new RegExp("#.*$", =
"gm"),DoubleQuotedString: new RegExp('"(?:\\.|(\\\\\\")|[^\\""\\n])*"', =
"g"),SingleQuotedString: new RegExp("'(?:\\.|(\\\\\\')|[^\\''\\n])*'", =
"g")};
dp.sh.Match =3D function(b, c, d) {
    this.value =3D b;
    this.index =3D c;
    this.length =3D b.length;
    this.css =3D d
};
dp.sh.Highlighter =3D function() {
    this.noGutter =3D false;
    this.addControls =3D true;
    this.collapse =3D false;
    this.tabsToSpaces =3D true;
    this.wrapColumn =3D 80;
    this.showColumns =3D true
};
dp.sh.Highlighter.SortCallback =3D function(b, c) {
    if (b.index < c.index)
        return -1;
    else if (b.index > c.index)
        return 1;
    else if (b.length < c.length)
        return -1;
    else if (b.length > c.length)
        return 1;
    return 0
};
a =3D dp.sh.Highlighter.prototype;
a.CreateElement =3D function(b) {
    b =3D document.createElement(b);
    b.highlighter =3D this;
    return b
};
a.GetMatches =3D function(b, c) {
    for (var d =3D null; (d =3D b.exec(this.code)) !=3D null; )
        this.matches[this.matches.length] =3D new dp.sh.Match(d[0], =
d.index, c)
};
a.AddBit =3D function(b, c) {
    if (!(b =3D=3D null || b.length =3D=3D 0)) {
        var d =3D this.CreateElement("SPAN");
        b =3D b.replace(/ /g, "&nbsp;");
        b =3D b.replace(/</g, "&lt;");
        b =3D b.replace(/(\r?\n)|(\[BR\])/gm, "&nbsp;<br>");
        if (c !=3D null)
            if (/br/gi.test(b)) {
                b =3D b.split("&nbsp;<br>");
                for (var f =3D 0; f < b.length; f++) {
                    d =3D this.CreateElement("SPAN");
                    d.className =3D c;
                    d.innerHTML =3D b[f];
                    this.div.appendChild(d);
                    f + 1 < b.length && =
this.div.appendChild(this.CreateElement("BR"))
                }
            } else {
                d.className =3D c;
                d.innerHTML =3D b;
                this.div.appendChild(d)
            }
        else {
            d.innerHTML =3D b;
            this.div.appendChild(d)
        }
    }
};
a.IsInside =3D function(b) {
    if (b =3D=3D null || b.length =3D=3D 0)
        return false;
    for (var c =3D 0; c < this.matches.length; c++) {
        var d =3D this.matches[c];
        if (d !=3D null)
            if (b.index > d.index && b.index < d.index + d.length)
                return true
    }
    return false
};
a.ProcessRegexList =3D function() {
    for (var b =3D 0; b < this.regexList.length; b++)
        this.GetMatches(this.regexList[b].regex, this.regexList[b].css)
};
a.ProcessSmartTabs =3D function(b) {
    function c(h, e, l) {
        var m =3D h.substr(0, e);
        h =3D h.substr(e + 1, h.length);
        e =3D "";
        for (var i =3D 0; i < l; i++)
            e +=3D " ";
        return m + e + h
    }
    function d(h, e) {
        if (h.indexOf(p) =3D=3D -1)
            return h;
        for (var l =3D 0; (l =3D h.indexOf(p)) !=3D -1; )
            h =3D c(h, l, e - l % e);
        return h
    }
    b =3D b.split("\n");
    for (var f =3D "", p =3D "\t", q =3D 0; q < b.length; q++)
        f +=3D d(b[q], 4) + "\n";
    return f
};
a.SwitchToList =3D function() {
    var b =3D this.div.innerHTML.replace(/<(br)\/?>/gi, =
"\n").split("\n");
    this.addControls =3D=3D true && =
this.bar.appendChild(dp.sh.Toolbar.Create(this));
    if (this.showColumns) {
        for (var c =3D this.CreateElement("div"), d =3D =
this.CreateElement("div"), f =3D 1; f <=3D 150; )
            if (f % 10 =3D=3D 0) {
                c.innerHTML +=3D f;
                f +=3D (f + "").length
            } else {
                c.innerHTML +=3D "&middot;";
                f++
            }
        d.className =3D "columns";
        d.appendChild(c);
        this.bar.appendChild(d)
    }
    f =3D 0;
    for (c =3D this.firstLine; f < b.length - 1; f++, c++) {
        d =3D this.CreateElement("LI");
        var p =3D this.CreateElement("SPAN");
        d.className =3D f % 2 =3D=3D 0 ? "alt" : "";
        p.innerHTML =3D b[f] + "&nbsp;";
        d.appendChild(p);
        this.ol.appendChild(d)
    }
    this.div.innerHTML =3D "";
};
a.Highlight =3D function(b) {
    function c(e) {
        return e.replace(/^\s*(.*?)[\s\n]*$/g, "$1")
    }
    function d(e) {
        return e.replace(/\n*$/, "").replace(/^\n*/, "")
    }
    function f(e) {
        e =3D dp.sh.Utils.FixForBlogger(e).split("\n");
        for (var l =3D new RegExp("^\\s*", "g"), m =3D 1E3, i =3D 0; i < =
e.length && m > 0; i++)
            if (c(e[i]).length !=3D 0) {
                var g =3D l.exec(e[i]);
                if (g !=3D null && g.length > 0)
                    m =3D Math.min(g[0].length, m)
            }
        if (m > 0)
            for (i =3D 0; i < e.length; i++)
                e[i] =3D e[i].substr(m);
        return e.join("\n");
    }
    function p(e, l, m) {
        return e.substr(l, m - l)
    }
    var q =3D 0;
    if (b =3D=3D null)
        b =3D "";
    this.originalCode =3D b;
    this.code =3D d(f(b));
    this.div =3D this.CreateElement("DIV");
    this.bar =3D this.CreateElement("DIV");
    this.ol =3D this.CreateElement("OL");
    this.matches =3D [];
    this.div.className =3D "dp-highlighter";
    this.div.highlighter =3D this;
    this.bar.className =3D "bar";
    this.ol.start =3D this.firstLine;
    if (this.CssClass !=3D null)
        this.ol.className =3D this.CssClass;
    if (this.collapse)
        this.div.className +=3D " collapsed";
    if (this.noGutter)
        this.div.className +=3D " nogutter";
    if (this.tabsToSpaces =3D=3D true)
        this.code =3D this.ProcessSmartTabs(this.code);
    this.ProcessRegexList();
    if (this.matches.length =3D=3D 0)
        this.AddBit(this.code, null);
    else {
        this.matches =3D =
this.matches.sort(dp.sh.Highlighter.SortCallback);
        for (b =3D 0; b < this.matches.length; b++)
            if (this.IsInside(this.matches[b]))
                this.matches[b] =3D null;
        for (b =3D 0; b < this.matches.length; b++) {
            var h =3D this.matches[b];
            if (!(h =3D=3D null || h.length =3D=3D 0)) {
                this.AddBit(p(this.code, q, h.index), null);
                this.AddBit(h.value, h.css);
                q =3D h.index + h.length
            }
        }
        this.AddBit(this.code.substr(q), null)
    }
    this.SwitchToList();
    this.div.appendChild(this.bar);
    this.div.appendChild(this.ol)
};
a.GetKeywords =3D function(b) {
    return "\\b" + b.replace(/ /g, "\\b|\\b") + "\\b"
};
dp.sh.BloggerMode =3D function() {
    dp.sh.isBloggerMode =3D true
};
dp.sh.HighlightAll =3D function(b, c, d, f, p, q) {
    function h() {
        for (var k =3D arguments, j =3D 0; j < k.length; j++)
            if (k[j] !=3D null) {
                if (typeof k[j] =3D=3D "string" && k[j] !=3D "")
                    return k[j] + "";
                if (typeof k[j] =3D=3D "object" && k[j].value !=3D "")
                    return k[j].value + ""
            }
        return null
    }
    function e(k, j) {
        for (var o =3D 0; o < j.length; o++)
            if (j[o] =3D=3D k)
                return true;
        return false
    }
    function l(k, j, o) {
        k =3D new RegExp("^" + k + "\\[(\\w+)\\]$", "gi");
        for (var s =3D null, u =3D 0; u < j.length; u++)
            if ((s =3D k.exec(j[u])) !=3D null)
                return s[1];
        return o
    }
    function m(k, j, o) {
        o =3D document.getElementsByTagName(o);
        for (var s =3D 0; s < o.length; s++) {
            o[s].getAttribute("name") =3D=3D j && k.push(o[s]);
        }
    }
    var i =3D [], g =3D null, v =3D {};
    m(i, b, "pre");
    m(i, b, "textarea");
    if (i.length !=3D 0) {
        for (var n in dp.sh.Brushes) {
            g =3D dp.sh.Brushes[n].Aliases;
            if (g !=3D null)
                for (b =3D 0; b < g.length; b++)
                    v[g[b]] =3D n
        }
        for (b =3D 0; b < i.length; b++) {
            n =3D i[b];
            var r =3D h(n.attributes["class"], n.className, =
n.attributes.language, n.language);
            g =3D "";
            if (r !=3D null) {
                r =3D r.split(":");
                g =3D r[0].toLowerCase();
                if (v[g] !=3D null) {
                    g =3D new dp.sh.Brushes[v[g]];
                    n.style.display =3D "none";
                    g.noGutter =3D c =3D=3D null ? e("nogutter", r) : =
!c;
                    g.addControls =3D d =3D=3D null ? !e("nocontrols", =
r) : d;
                    g.collapse =3D f =3D=3D null ? e("collapse", r) : f;
                    g.showColumns =3D q =3D=3D null ? e("showcolumns", =
r) : q;
                    var w =3D document.getElementsByTagName("head")[0];
                    if (g.Style && w) {
                        var t =3D document.createElement("style");
                        t.setAttribute("type", "text/css");
                        if (t.styleSheet)
                            t.styleSheet.cssText =3D g.Style;
                        else {
                            var x =3D document.createTextNode(g.Style);
                            t.appendChild(x)
                        }
                        w.appendChild(t);
                    }
                    g.firstLine =3D p =3D=3D null ? =
parseInt(l("firstline", r, 1)) : p;
                    g.source =3D n;
                    g.Highlight(n.innerHTML);
                    g.div.className +=3D " bg_" + n.className;
                    n.parentNode.insertBefore(g.div, n);
                }
            }
        }
    }
};
dp.sh.Brushes.Xml =3D function() {
    this.CssClass =3D "dp-xml";
    this.Style =3D ""
};
dp.sh.Brushes.Xml.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Xml.Aliases =3D ["xml", "xhtml", "xslt", "html", "xhtml"];
dp.sh.Brushes.Xml.prototype.ProcessRegexList =3D function() {
    function c(d, e) {
        d[d.length] =3D e
    }
    var a =3D null, b =3D null;
    this.GetMatches(new =
RegExp("(&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](&gt;|>)", "gm"), =
"cdata");
    this.GetMatches(new RegExp("(&lt;|<)!--\\s*.*?\\s*--(&gt;|>)", =
"gm"), "comments");
    for (b =3D new =
RegExp("([:\\w-.]+)\\s*=3D\\s*(\".*?\"|'.*?'|\\w+)*|(\\w+)", "gm"); (a =
=3D b.exec(this.code)) !=3D null; )
        if (a[1] !=3D null) {
            c(this.matches, new dp.sh.Match(a[1], a.index, =
"attribute"));
            a[2] !=3D undefined && c(this.matches, new dp.sh.Match(a[2], =
a.index + a[1].length + a[0].substr(a[1].length).indexOf(a[2]), =
"attribute-value"))
        }
    this.GetMatches(new RegExp("(&lt;|<)/*\\?*(?!\\!)|/*\\?*(&gt;|>)", =
"gm"), "tag");
    for (b =3D new RegExp("(?:&lt;|<)/*\\?*\\s*([:\\w-.]+)", "gm"); (a =
=3D b.exec(this.code)) !=3D null; )
        c(this.matches, new dp.sh.Match(a[1], a.index + =
a[0].indexOf(a[1]), "tag-name"))
};
dp.sh.Brushes.Vb =3D function() {
    this.regexList =3D [{regex: new RegExp("'.*$", "gm"),css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: new RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("AddHandler AddressOf AndAlso Alias And Ansi As =
Assembly Auto Boolean ByRef Byte ByVal Call Case Catch CBool CByte CChar =
CDate CDec CDbl Char CInt Class CLng CObj Const CShort CSng CStr CType =
Date Decimal Declare Default Delegate Dim DirectCast Do Double Each Else =
ElseIf End Enum Erase Error Event Exit False Finally For Friend Function =
Get GetType GoSub GoTo Handles If Implements Imports In Inherits Integer =
Interface Is Let Lib Like Long Loop Me Mod Module MustInherit =
MustOverride MyBase MyClass Namespace New Next Not Nothing =
NotInheritable NotOverridable Object On Option Optional Or OrElse =
Overloads Overridable Overrides ParamArray Preserve Private Property =
Protected Public RaiseEvent ReadOnly ReDim REM RemoveHandler Resume =
Return Select Set Shadows Shared Short Single Static Step Stop String =
Structure Sub SyncLock Then Throw To True Try TypeOf Unicode Until =
Variant When While With WithEvents WriteOnly Xor"), "gm"),css: =
"keyword"}];
    this.CssClass =3D "dp-vb"
};
dp.sh.Brushes.Vb.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Vb.Aliases =3D ["vb", "vb.net"];
dp.sh.Brushes.Sql =3D function() {
    this.regexList =3D [{regex: new RegExp("--(.*)$", "gm"),css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp(this.GetKeywords("abs avg case cast coalesce convert count =
current_timestamp current_user day isnull left lower month nullif =
replace right session_user space substring sum system_user upper user =
year"), "gmi"),css: "func"}, {regex: new RegExp(this.GetKeywords("all =
and any between cross in join like not null or outer some"), "gmi"),css: =
"op"}, {regex: new RegExp(this.GetKeywords("absolute action add after =
alter as asc at authorization begin bigint binary bit by cascade char =
character check checkpoint close collate column commit committed connect =
connection constraint contains continue create cube current current_date =
current_time cursor database date deallocate dec decimal declare default =
delete desc distinct double drop dynamic else end end-exec escape except =
exec execute false fetch first float for force foreign forward free from =
full function global goto grant group grouping having hour ignore index =
inner insensitive insert instead int integer intersect into is isolation =
key last level load local max min minute modify move name national nchar =
next no numeric of off on only open option order out output partial =
password precision prepare primary prior privileges procedure public =
read real references relative repeatable restrict return returns revoke =
rollback rollup rows rule schema scroll second section select sequence =
serializable set size smallint static statistics table temp temporary =
then time timestamp to top transaction translation trigger true truncate =
uncommitted union unique update values varchar varying view when where =
with work"), "gmi"),css: "keyword"}];
    this.CssClass =3D "dp-sql";
    this.Style =3D ""
};
dp.sh.Brushes.Sql.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Sql.Aliases =3D ["sql"];
dp.sh.Brushes.Ruby =3D function() {
    this.regexList =3D [{regex: =
dp.sh.RegexLib.SingleLinePerlComments,css: "comment"}, {regex: =
dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp(":[a-z][A-Za-z0-9_]*", "g"),css: "symbol"}, {regex: new =
RegExp("(\\$|@@|@)\\w+", "g"),css: "variable"}, {regex: new =
RegExp(this.GetKeywords("alias and BEGIN begin break case class def =
define_method defined do each else elsif END end ensure false for if in =
module new next nil not or raise redo rescue retry return self super =
then throw true undef unless until when while yield"), "gm"),css: =
"keyword"}, {regex: new RegExp(this.GetKeywords("Array Bignum Binding =
Class Continuation Dir Exception FalseClass File::Stat File Fixnum Fload =
Hash Integer IO MatchData Method Module NilClass Numeric Object Proc =
Range Regexp String Struct::TMS Symbol ThreadGroup Thread Time =
TrueClass"), "gm"),css: "builtin"}];
    this.CssClass =3D "dp-rb";
    this.Style =3D ""
};
dp.sh.Brushes.Ruby.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Ruby.Aliases =3D ["ruby", "rails", "ror"];
dp.sh.Brushes.Python =3D function() {
    this.regexList =3D [{regex: =
dp.sh.RegexLib.SingleLinePerlComments,css: "comment"}, {regex: new =
RegExp("^\\s*@\\w+", "gm"),css: "decorator"}, {regex: new =
RegExp("(['\"]{3})([^\\1])*?\\1", "gm"),css: "comment"}, {regex: new =
RegExp('"(?!")(?:\\.|\\\\\\"|[^\\""\\n\\r])*"', "gm"),css: "string"}, =
{regex: new RegExp("'(?!')*(?:\\.|(\\\\\\')|[^\\''\\n\\r])*'", =
"gm"),css: "string"}, {regex: new RegExp("\\b\\d+\\.?\\w*", "g"),css: =
"number"}, {regex: new RegExp(this.GetKeywords("and assert break class =
continue def del elif else except exec finally for from global if import =
in is lambda not or pass print raise return try yield while"), =
"gm"),css: "keyword"}, {regex: new RegExp(this.GetKeywords("None True =
False self cls class_"), "gm"),css: "special"}];
    this.CssClass =3D "dp-py";
    this.Style =3D ""
};
dp.sh.Brushes.Python.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Python.Aliases =3D ["py", "python"];
dp.sh.Brushes.Plain =3D function() {
    this.regexList =3D []
};
dp.sh.Brushes.Plain.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Plain.Aliases =3D ["plain", "text", "txt"];
dp.sh.Brushes.Php =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\$\\w+", "g"),css: "vars"}, {regex: new =
RegExp(this.GetKeywords("abs acos acosh addcslashes addslashes =
array_change_key_case array_chunk array_combine array_count_values =
array_diff array_diff_assoc array_diff_key array_diff_uassoc =
array_diff_ukey array_fill array_filter array_flip array_intersect =
array_intersect_assoc array_intersect_key array_intersect_uassoc =
array_intersect_ukey array_key_exists array_keys array_map array_merge =
array_merge_recursive array_multisort array_pad array_pop array_product =
array_push array_rand array_reduce array_reverse array_search =
array_shift array_slice array_splice array_sum array_udiff =
array_udiff_assoc array_udiff_uassoc array_uintersect =
array_uintersect_assoc array_uintersect_uassoc array_unique =
array_unshift array_values array_walk array_walk_recursive atan atan2 =
atanh base64_decode base64_encode base_convert basename bcadd bccomp =
bcdiv bcmod bcmul bindec bindtextdomain bzclose bzcompress bzdecompress =
bzerrno bzerror bzerrstr bzflush bzopen bzread bzwrite ceil chdir =
checkdate checkdnsrr chgrp chmod chop chown chr chroot chunk_split =
class_exists closedir closelog copy cos cosh count count_chars date =
decbin dechex decoct deg2rad delete ebcdic2ascii echo empty end ereg =
ereg_replace eregi eregi_replace error_log error_reporting =
escapeshellarg escapeshellcmd eval exec exit exp explode =
extension_loaded feof fflush fgetc fgetcsv fgets fgetss file_exists =
file_get_contents file_put_contents fileatime filectime filegroup =
fileinode filemtime fileowner fileperms filesize filetype floatval flock =
floor flush fmod fnmatch fopen fpassthru fprintf fputcsv fputs fread =
fscanf fseek fsockopen fstat ftell ftok getallheaders getcwd getdate =
getenv gethostbyaddr gethostbyname gethostbynamel getimagesize =
getlastmod getmxrr getmygid getmyinode getmypid getmyuid getopt =
getprotobyname getprotobynumber getrandmax getrusage getservbyname =
getservbyport gettext gettimeofday gettype glob gmdate gmmktime =
ini_alter ini_get ini_get_all ini_restore ini_set interface_exists =
intval ip2long is_a is_array is_bool is_callable is_dir is_double =
is_executable is_file is_finite is_float is_infinite is_int is_integer =
is_link is_long is_nan is_null is_numeric is_object is_readable is_real =
is_resource is_scalar is_soap_fault is_string is_subclass_of =
is_uploaded_file is_writable is_writeable mkdir mktime nl2br =
parse_ini_file parse_str parse_url passthru pathinfo readlink realpath =
rewind rewinddir rmdir round str_ireplace str_pad str_repeat str_replace =
str_rot13 str_shuffle str_split str_word_count strcasecmp strchr strcmp =
strcoll strcspn strftime strip_tags stripcslashes stripos stripslashes =
stristr strlen strnatcasecmp strnatcmp strncasecmp strncmp strpbrk =
strpos strptime strrchr strrev strripos strrpos strspn strstr strtok =
strtolower strtotime strtoupper strtr strval substr substr_compare"), =
"gmi"),css: "func"}, {regex: new RegExp(this.GetKeywords("and or xor =
__FILE__ __LINE__ array as break case cfunction class const continue =
declare default die do else elseif enddeclare endfor endforeach endif =
endswitch endwhile extends for foreach function include include_once =
global if new old_function return static switch use require require_once =
var while __FUNCTION__ __CLASS__ __METHOD__ abstract interface public =
implements extends private protected throw"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-c"
};
dp.sh.Brushes.Php.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Php.Aliases =3D ["php"];
dp.sh.Brushes.JScript =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("abstract boolean break byte case catch char =
class const continue debugger default delete do double else enum export =
extends false final finally float for function goto if implements import =
in instanceof int interface long native new null package private =
protected public return short static super switch synchronized this =
throw throws transient true try typeof var void volatile while with"), =
"gm"),css: "keyword"}];
    this.CssClass =3D "dp-c"
};
dp.sh.Brushes.JScript.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.JScript.Aliases =3D ["js", "jscript", "javascript"];
dp.sh.Brushes.Java =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b", "gi"),css: "number"}, =
{regex: new RegExp("(?!\\@interface\\b)\\@[\\$\\w]+\\b", "g"),css: =
"annotation"}, {regex: new RegExp("\\@interface\\b", "g"),css: =
"keyword"}, {regex: new RegExp(this.GetKeywords("abstract assert boolean =
break byte case catch char class const continue default do double else =
enum extends false final finally float for goto if implements import =
instanceof int interface long native new null package private protected =
public return short static strictfp super switch synchronized this throw =
throws true transient try void volatile while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-j";
    this.Style =3D ""
};
dp.sh.Brushes.Java.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Java.Aliases =3D ["java"];
dp.sh.Brushes.Delphi =3D function() {
    this.regexList =3D [{regex: new RegExp("\\(\\*[\\s\\S]*?\\*\\)", =
"gm"),css: "comment"}, {regex: new RegExp("{(?!\\$)[\\s\\S]*?}", =
"gm"),css: "comment"}, {regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, =
{regex: new RegExp("\\{\\$[a-zA-Z]+ .+\\}", "g"),css: "directive"}, =
{regex: new RegExp("\\b[\\d\\.]+\\b", "g"),css: "number"}, {regex: new =
RegExp("\\$[a-zA-Z0-9]+\\b", "g"),css: "number"}, {regex: new =
RegExp(this.GetKeywords("abs addr and ansichar ansistring array as asm =
begin boolean byte cardinal case char class comp const constructor =
currency destructor div do double downto else end except exports =
extended false file finalization finally for function goto if =
implementation in inherited int64 initialization integer interface is =
label library longint longword mod nil not object of on or packed =
pansichar pansistring pchar pcurrency pdatetime pextended pint64 pointer =
private procedure program property pshortstring pstring pvariant =
pwidechar pwidestring protected public published raise real real48 =
record repeat set shl shortint shortstring shr single smallint string =
then threadvar to true try type unit until uses val var varirnt while =
widechar widestring with word write writeln xor"), "gm"),css: =
"keyword"}];
    this.CssClass =3D "dp-delphi";
    this.Style =3D ""
};
dp.sh.Brushes.Delphi.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Delphi.Aliases =3D ["delphi", "pascal"];
dp.sh.Brushes.CSS =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.MultiLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\#[a-zA-Z0-9]{3,6}", "g"),css: "value"}, {regex: new =
RegExp("(-?\\d+)(.\\d+)?(px|em|pt|:|%|)", "g"),css: "value"}, {regex: =
new RegExp("!important", "g"),css: "important"}, {regex: new =
RegExp(this.GetKeywordsCSS("ascent azimuth background-attachment =
background-color background-image background-position background-repeat =
background baseline bbox border-collapse border-color border-spacing =
border-style border-top border-right border-bottom border-left =
border-top-color border-right-color border-bottom-color =
border-left-color border-top-style border-right-style =
border-bottom-style border-left-style border-top-width =
border-right-width border-bottom-width border-left-width border-width =
border cap-height caption-side centerline clear clip color content =
counter-increment counter-reset cue-after cue-before cue cursor =
definition-src descent direction display elevation empty-cells float =
font-size-adjust font-family font-size font-stretch font-style =
font-variant font-weight font height letter-spacing line-height =
list-style-image list-style-position list-style-type list-style =
margin-top margin-right margin-bottom margin-left margin marker-offset =
marks mathline max-height max-width min-height min-width orphans =
outline-color outline-style outline-width outline overflow padding-top =
padding-right padding-bottom padding-left padding page page-break-after =
page-break-before page-break-inside pause pause-after pause-before pitch =
pitch-range play-during position quotes richness size slope src =
speak-header speak-numeral speak-punctuation speak speech-rate stemh =
stemv stress table-layout text-align text-decoration text-indent =
text-shadow text-transform unicode-bidi unicode-range units-per-em =
vertical-align visibility voice-family volume white-space widows width =
widths word-spacing x-height z-index"), "gm"),css: "keyword"}, {regex: =
new RegExp(this.GetValuesCSS("above absolute all always aqua armenian =
attr aural auto avoid baseline behind below bidi-override black blink =
block blue bold bolder both bottom braille capitalize caption center =
center-left center-right circle close-quote code collapse compact =
condensed continuous counter counters crop cross crosshair cursive =
dashed decimal decimal-leading-zero default digits disc dotted double =
embed embossed e-resize expanded extra-condensed extra-expanded fantasy =
far-left far-right fast faster fixed format fuchsia gray green groove =
handheld hebrew help hidden hide high higher icon inline-table inline =
inset inside invert italic justify landscape large larger left-side left =
leftwards level lighter lime line-through list-item local loud =
lower-alpha lowercase lower-greek lower-latin lower-roman lower low ltr =
marker maroon medium message-box middle mix move narrower navy ne-resize =
no-close-quote none no-open-quote no-repeat normal nowrap n-resize =
nw-resize oblique olive once open-quote outset outside overline pointer =
portrait pre print projection purple red relative repeat repeat-x =
repeat-y rgb ridge right right-side rightwards rtl run-in screen scroll =
semi-condensed semi-expanded separate se-resize show silent silver =
slower slow small small-caps small-caption smaller soft solid speech =
spell-out square s-resize static status-bar sub super sw-resize =
table-caption table-cell table-column table-column-group =
table-footer-group table-header-group table-row table-row-group teal =
text-bottom text-top thick thin top transparent tty tv ultra-condensed =
ultra-expanded underline upper-alpha uppercase upper-latin upper-roman =
url visible wait white wider w-resize x-fast x-high x-large x-loud x-low =
x-slow x-small x-soft xx-large xx-small yellow"), "g"),css: "value"}, =
{regex: new RegExp(this.GetValuesCSS("[mM]onospace [tT]ahoma [vV]erdana =
[aA]rial [hH]elvetica [sS]ans-serif [sS]erif"), "g"),css: "value"}];
    this.CssClass =3D "dp-css";
    this.Style =3D ""
};
dp.sh.Highlighter.prototype.GetKeywordsCSS =3D function(a) {
    return "\\b([a-z_]|)" + a.replace(/ /g, =
"(?=3D:)\\b|\\b([a-z_\\*]|\\*|)") + "(?=3D:)\\b"
};
dp.sh.Highlighter.prototype.GetValuesCSS =3D function(a) {
    return "\\b" + a.replace(/ /g, "(?!-)(?!:)\\b|\\b()") + ":\\b"
};
dp.sh.Brushes.CSS.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.CSS.Aliases =3D ["css"];
dp.sh.Brushes.CSharp =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("abstract as base bool break byte case catch =
char checked class const continue decimal default delegate do double =
else enum event explicit extern false finally fixed float for foreach =
get goto if implicit in int interface internal is lock long namespace =
new null object operator out override params private protected public =
readonly ref return sbyte sealed set short sizeof stackalloc static =
string struct switch this throw true try typeof uint ulong unchecked =
unsafe ushort using virtual void while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-c";
    this.Style =3D ""
};
dp.sh.Brushes.CSharp.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.CSharp.Aliases =3D ["c#", "c-sharp", "csharp"];
dp.sh.Brushes.Cpp =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new RegExp("^ =
*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD =
DWORDLONG DWORD_PTR DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP =
HBRUSH HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP =
HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE HKEY HKL =
HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT HRGN HRSRC =
HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID LCTYPE LGRPID LONG =
LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE LPCOLORREF LPCSTR =
LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR LPTSTR =
LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR =
PCWSTR PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE =
PHKEY PINT PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR =
PLONG32 PLONG64 POINTER_32 POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR =
PTBYTE PTCHAR PTSTR PUCHAR PUHALF_PTR PUINT PUINT_PTR PUINT32 PUINT64 =
PULONG PULONGLONG PULONG_PTR PULONG32 PULONG64 PUSHORT PVOID PWCHAR =
PWORD PWSTR SC_HANDLE SC_LOCK SERVICE_STATUS_HANDLE SHORT SIZE_T SSIZE_T =
TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 UINT64 ULONG ULONGLONG =
ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD WPARAM WPARAM =
WPARAM char bool short int __int32 __int64 __int8 __int16 long float =
double __wchar_t clock_t _complex _dev_t _diskfree_t div_t ldiv_t =
_exception _EXCEPTION_POINTERS FILE _finddata_t _finddatai64_t =
_wfinddata_t _wfinddatai64_t __finddata64_t __wfinddata64_t =
_FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv intptr_t jmp_buf mbstate_t =
_off_t _onexit_t _PNH ptrdiff_t _purecall_handler sig_atomic_t size_t =
_stat __stat64 _stati64 terminate_function time_t __time64_t _timeb =
__timeb64 tm uintptr_t _utimbuf va_list wchar_t wctrans_t wctype_t =
wint_t signed"), "gm"),css: "datatypes"}, {regex: new =
RegExp(this.GetKeywords("break case catch class const __finally =
__exception __try const_cast continue private public protected =
__declspec default delete deprecated dllexport dllimport do dynamic_cast =
else enum explicit extern if for friend goto inline mutable naked =
namespace new noinline noreturn nothrow register reinterpret_cast return =
selectany sizeof static static_cast struct switch template this thread =
throw true false try typedef typeid typename union using uuid virtual =
void volatile whcar_t while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-cpp";
    this.Style =3D ""
};
dp.sh.Brushes.Cpp.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Cpp.Aliases =3D ["cpp", "c", "c++"];
dp.sh.Brushes.Objc =3D function() {
    var datatypes =3D 'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD =
DWORDLONG DWORD_PTR ' +
        'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' +
        'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP =
HDWP ' +
        'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE =
HKEY ' +
        'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN =
HRESULT ' +
        'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID =
LCTYPE ' +
        'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL =
LPBYTE LPCOLORREF ' +
        'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG =
LPSTR LPTSTR ' +
        'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR =
PCTSTR PCWSTR ' +
        'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR =
PHANDLE PHKEY PINT ' +
        'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 =
PLONG64 POINTER_32 ' +
        'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR =
PUCHAR PUHALF_PTR ' +
        'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR =
PULONG32 PULONG64 ' +
        'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK =
SERVICE_STATUS_HANDLE SHORT ' +
        'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 =
UINT64 ULONG ' +
        'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD =
WPARAM WPARAM WPARAM ' +
        'char bool short int __int32 __int64 __int8 __int16 long float =
double __wchar_t ' +
        'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception =
_EXCEPTION_POINTERS ' +
        'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t =
__finddata64_t ' +
        '__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv =
intptr_t id ' +
        'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t =
_purecall_handler ' +
        'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function =
' +
        'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' +
        'va_list wchar_t wctrans_t wctype_t wint_t signed';
    var keywords =3D 'break case catch class copy const __finally =
__exception __try ' +
        'const_cast continue private public protected __declspec ' +
        'default delete deprecated dllexport dllimport do dynamic_cast ' =
+
        'else enum explicit extern if for friend getter goto inline ' +
        'mutable naked namespace new nil NO noinline nonatomic noreturn =
nothrow NULL ' +
        'readonly readwrite register reinterpret_cast retain strong =
return SEL selectany self ' +
        'setter sizeof static static_cast struct super switch template ' =
+
        'thread throw true false try typedef typeid typename union ' +
        'using uuid virtual void volatile whcar_t while YES';
    //=E9=A1=BA=E5=BA=8F=E5=BE=88=E9=87=8D=E8=A6=81
    this.regexList =3D [
        {regex: new RegExp(this.GetKeywords(datatypes), 'gm'),css: =
'keyword'},  // primitive data types
        {regex: new RegExp(this.GetKeywords(keywords), 'gm'),css: =
'keyword'},  // keywords
        {regex: new RegExp('@\\w+\\b', 'g'),css: 'keyword'},  // =
@-keywords
        {regex: new RegExp('[: ]nil', 'g'),css: 'keyword'},  // =
nil-workaround
        {regex: new RegExp('\\.\\w+', 'g'),css: 'xcodeconstants'},  // =
accessors
        {regex: new RegExp(' \\w+(?=3D[:\\]])', 'g'),css: 'vars'},  // =
messages
        {regex: dp.sh.RegexLib.SingleLineCComments,css: 'comment'},  // =
comments
        {regex: dp.sh.RegexLib.MultiLineCComments,css: 'comment'},  // =
comments
        {regex: dp.sh.RegexLib.DoubleQuotedString,css: 'string'},  // =
strings
        {regex: dp.sh.RegexLib.SingleQuotedString,css: 'string'},  // =
strings
        {regex: new RegExp('@"[^"]*"', 'gm'),css: 'string'},  // strings
        {regex: new RegExp('\\d', 'gm'),css: 'xcodenumber'},  // numeric =
values
        {regex: new RegExp('^ *#.*', 'gm'),css: 'xcodepreprocessor'},  =
// preprocessor
        {regex: new RegExp('\\w+(?=3D \\*)', 'g'),css: 'keyword'} // =
object types - variable declaration
        /*{ regex: new RegExp('\\b[A-Z]\\w+\\b(?=3D[ ,;])', 'gm'),  css: =
'xcodekeyword' },*/ // object types - protocol
    ];
    this.CssClass =3D 'dp-objc';
    this.Style =3D '.dp-objc .vars { color: #d00; }';
}
dp.sh.Brushes.Objc.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Objc.Aliases =3D ['objc'];
/*ZeroClipboard/ZeroClipboard.js*/
var ZeroClipboard =3D {version: "1.0.7",clients: {},moviePath: =
'http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf',nex=
tId: 1,$: function(thingy) {
    if (typeof (thingy) =3D=3D 'string')
        thingy =3D document.getElementById(thingy);
    if (true || !thingy.addClass) {
        thingy.hide =3D function() {
            this.style.display =3D 'none';
        };
        thingy.show =3D function() {
            this.style.display =3D '';
        };
        thingy.addClass =3D function(name) {
            this.removeClass(name);
            this.className +=3D ' ' + name;
        };
        thingy.removeClass =3D function(name) {
            var classes =3D this.className.split(/\s+/);
            var idx =3D -1;
            for (var k =3D 0; k < classes.length; k++) {
                if (classes[k] =3D=3D name) {
                    idx =3D k;
                    k =3D classes.length;
                }
            }
            if (idx > -1) {
                classes.splice(idx, 1);
                this.className =3D classes.join(' ');
            }
            return this;
        };
        thingy.hasClass =3D function(name) {
            return !!this.className.match(new RegExp("\\s*" + name + =
"\\s*"));
        };
    }
    return thingy;
},setMoviePath: function(path) {
    this.moviePath =3D path;
},dispatch: function(id, eventName, args) {
    var client =3D this.clients[id];
    if (client) {
        client.receiveEvent(eventName, args);
    }
},register: function(id, client) {
    this.clients[id] =3D client;
},getDOMObjectPosition: function(obj, stopObj) {
    var info =3D {left: 0,top: 0,width: obj.width ? obj.width : =
obj.offsetWidth,height: obj.height ? obj.height : obj.offsetHeight};
    while (obj && (obj !=3D stopObj)) {
        info.left +=3D obj.offsetLeft;
        info.top +=3D obj.offsetTop;
        obj =3D obj.offsetParent;
    }
    return info;
},Client: function(elem) {
    this.handlers =3D {};
    this.id =3D ZeroClipboard.nextId++;
    this.movieId =3D 'ZeroClipboardMovie_' + this.id;
    ZeroClipboard.register(this.id, this);
    if (elem)
        this.glue(elem);
}};
ZeroClipboard.Client.prototype =3D {id: 0,ready: false,movie: =
null,clipText: '',handCursorEnabled: true,cssEffects: true,handlers: =
null,glue: function(elem, appendElem, stylesToAdd) {
    this.domElement =3D ZeroClipboard.$(elem);
    var zIndex =3D 99;
    if (this.domElement.style.zIndex) {
        zIndex =3D parseInt(this.domElement.style.zIndex, 10) + 1;
    }
    if (typeof (appendElem) =3D=3D 'string') {
        appendElem =3D ZeroClipboard.$(appendElem);
    }
    else if (typeof (appendElem) =3D=3D 'undefined') {
        appendElem =3D document.getElementsByTagName('body')[0];
    }
    var box =3D ZeroClipboard.getDOMObjectPosition(this.domElement, =
appendElem);
    this.div =3D document.createElement('div');
    var style =3D this.div.style;
    style.position =3D 'absolute';
    style.left =3D '' + box.left + 'px';
    style.top =3D '' + box.top + 'px';
    style.width =3D '' + box.width + 'px';
    style.height =3D '' + box.height + 'px';
    style.zIndex =3D zIndex;
    if (typeof (stylesToAdd) =3D=3D 'object') {
        for (addedStyle in stylesToAdd) {
            style[addedStyle] =3D stylesToAdd[addedStyle];
        }
    }
    appendElem.appendChild(this.div);
    this.div.innerHTML =3D this.getHTML(box.width, box.height);
},getHTML: function(width, height) {
    var html =3D '';
    var flashvars =3D 'id=3D' + this.id + '&width=3D' + width + =
'&height=3D' + height;
    if (navigator.userAgent.match(/MSIE/)) {
        var protocol =3D location.href.match(/^https/i) ? 'https://' : =
'http://';
        html +=3D '<object =
classid=3D"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase=3D"' + =
protocol + =
'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=3D9=
,0,0,0" width=3D"' + width + '" height=3D"' + height + '" id=3D"' + =
this.movieId + '" align=3D"middle"><param name=3D"allowScriptAccess" =
value=3D"always" /><param name=3D"allowFullScreen" value=3D"false" =
/><param name=3D"movie" value=3D"' + ZeroClipboard.moviePath + '" =
/><param name=3D"loop" value=3D"false" /><param name=3D"menu" =
value=3D"false" /><param name=3D"quality" value=3D"best" /><param =
name=3D"bgcolor" value=3D"#ffffff" /><param name=3D"flashvars" =
value=3D"' + flashvars + '"/><param name=3D"wmode" =
value=3D"transparent"/></object>';
    }
    else {
        html +=3D '<embed id=3D"' + this.movieId + '" src=3D"' + =
ZeroClipboard.moviePath + '" loop=3D"false" menu=3D"false" =
quality=3D"best" bgcolor=3D"#ffffff" width=3D"' + width + '" height=3D"' =
+ height + '" name=3D"' + this.movieId + '" align=3D"middle" =
allowScriptAccess=3D"always" allowFullScreen=3D"false" =
type=3D"application/x-shockwave-flash" =
pluginspage=3D"http://www.macromedia.com/go/getflashplayer" =
flashvars=3D"' + flashvars + '" wmode=3D"transparent" />';
    }
    return html;
},hide: function() {
    if (this.div) {
        this.div.style.left =3D '-2000px';
    }
},show: function() {
    this.reposition();
},destroy: function() {
    if (this.domElement && this.div) {
        this.hide();
        this.div.innerHTML =3D '';
        var body =3D document.getElementsByTagName('body')[0];
        try {
            body.removeChild(this.div);
        } catch (e) {
            ;
        }
        this.domElement =3D null;
        this.div =3D null;
    }
},reposition: function(elem) {
    if (elem) {
        this.domElement =3D ZeroClipboard.$(elem);
        if (!this.domElement)
            this.hide();
    }
    if (this.domElement && this.div) {
        var box =3D ZeroClipboard.getDOMObjectPosition(this.domElement);
        var style =3D this.div.style;
        style.left =3D '' + box.left + 'px';
        style.top =3D '' + box.top + 'px';
    }
},setText: function(newText) {
    this.clipText =3D newText;
    if (this.ready)
        this.movie.setText(newText);
},addEventListener: function(eventName, func) {
    eventName =3D eventName.toString().toLowerCase().replace(/^on/, '');
    if (!this.handlers[eventName])
        this.handlers[eventName] =3D [];
    this.handlers[eventName].push(func);
},setHandCursor: function(enabled) {
    this.handCursorEnabled =3D enabled;
    if (this.ready)
        this.movie.setHandCursor(enabled);
},setCSSEffects: function(enabled) {
    this.cssEffects =3D !!enabled;
},receiveEvent: function(eventName, args) {
    eventName =3D eventName.toString().toLowerCase().replace(/^on/, '');
    switch (eventName) {
        case 'load':
            this.movie =3D document.getElementById(this.movieId);
            if (!this.movie) {
                var self =3D this;
                setTimeout(function() {
                    self.receiveEvent('load', null);
                }, 1);
                return;
            }
            if (!this.ready && navigator.userAgent.match(/Firefox/) && =
navigator.userAgent.match(/Windows/)) {
                var self =3D this;
                setTimeout(function() {
                    self.receiveEvent('load', null);
                }, 100);
                this.ready =3D true;
                return;
            }
            this.ready =3D true;
            this.movie.setText(this.clipText);
            this.movie.setHandCursor(this.handCursorEnabled);
            break;
        case 'mouseover':
            if (this.domElement && this.cssEffects) {
                this.domElement.addClass('hover');
                if (this.recoverActive)
                    this.domElement.addClass('active');
            }
            break;
        case 'mouseout':
            if (this.domElement && this.cssEffects) {
                this.recoverActive =3D false;
                if (this.domElement.hasClass('active')) {
                    this.domElement.removeClass('active');
                    this.recoverActive =3D true;
                }
                this.domElement.removeClass('hover');
            }
            break;
        case 'mousedown':
            if (this.domElement && this.cssEffects) {
                this.domElement.addClass('active');
            }
            break;
        case 'mouseup':
            if (this.domElement && this.cssEffects) {
                this.domElement.removeClass('active');
                this.recoverActive =3D false;
            }
            break;
    }
    if (this.handlers[eventName]) {
        for (var idx =3D 0, len =3D this.handlers[eventName].length; idx =
< len; idx++) {
            var func =3D this.handlers[eventName][idx];
            if (typeof (func) =3D=3D 'function') {
                func(this, args);
            }
            else if ((typeof (func) =3D=3D 'object') && (func.length =
=3D=3D 2)) {
                func[0][func[1]](this, args);
            }
            else if (typeof (func) =3D=3D 'string') {
                window[func](this, args);
            }
        }
    }
}};
/*article_code.js*/
$(document).ready(function() {
    $(".article_content pre").each(function() {
        var $this =3D $(this);
        if ($this.attr("class").indexOf("brush:") !=3D -1) {
            var lang =3D =
$this.attr("class").split(';')[0].split(':')[1];
            $this.attr('name', 'code');
            $this.attr('class', lang);
        }
        if ($this.attr("class")) {
            $this.attr('name', 'code');
        }
    });
    $('.article_content textarea[name=3Dcode]').each(function() {
        var $this =3D $(this);
        if ($this.attr("class").indexOf(":") !=3D -1) {
            $this.attr("class", $this.attr("class").split(':')[0]);
        }
    });
    dp.SyntaxHighlighter.HighlightAll('code');
    $('.highlighter').addClass('dp-highlighter');
    if (!window.clipboardData) {
        setTimeout("setCopyBtn()", 1000);
    }
});
function setCopyBtn() {
    $('.CopyToClipboard').each(function() {
        var clip =3D new ZeroClipboard.Client();
        clip.setHandCursor(true);
        clip.addEventListener('load', function(client) {
        });
        clip.addEventListener('mouseOver', function(client) {
            var _c_ode =3D =
client.movie.parentNode.parentNode.parentNode.parentNode.nextSibling.inne=
rHTML;
            _c_ode =3D _c_ode.replace(/&lt;/g, "<").replace(/&gt;/g, =
">").replace(/&amp;/g, "&");
            client.setText(_c_ode);
        });
        clip.addEventListener('complete', function(client, text) {
            =
alert("=E4=BB=A3=E7=A0=81=E5=B7=B2=E7=BB=8F=E5=A4=8D=E5=88=B6=E5=88=B0=E4=
=BD=A0=E7=9A=84=E5=89=AA=E8=B4=B4=E6=9D=BF=E3=80=82");
        });
        clip.glue(this, this.parentNode);
    });
}

jQuery(function() {
    new CNick().showNickname();
});
/*medal...show.js*/
var __mm_arr =3D null;
function printMedal(m_arr) {
    //__mm_arr =3D m_arr;
    //var s =3D "<div id=3D'bms_box'>";
    //for (var i =3D 0; i < m_arr.length; i++) {
    //    s +=3D "<a href=3D'http://medal.blog.csdn.net/allmedal.aspx' =
target=3D_blank>";
    //    s +=3D "<img src=3D'" + m_arr[i].src + "'";
    //    s +=3D " onmouseover=3D'm_over_m(this," + i + ")'";
    //    s +=3D " onmouseout=3D'm_out_m()'";
    //    s +=3D " alt=3D'' />";
    //    s +=3D "</a>";
    //}
    //s +=3D "</div>";
    //$('#blog_medal').append($(s));
}
var __mm_over =3D false;
function m_over_m(e, i) {
    __mm_over =3D true;
    showMedalInfo(e, i);
}
function m_out_m() {
    __mm_over =3D false;
    hideMedalInfo();
}
var __mm_intro =3D null;
function showMedalInfo(e, i) {
    if (__mm_intro) {
        document.body.removeChild(__mm_intro);
        __mm_intro =3D null;
    }
    //var m =3D __mm_arr[i];
    var s =3D "";

    var img =3D $("#bms_box a img[onmouseover$=3D'" + i + =
")']").attr("src");
    var title =3D "";
    var desc =3D "";
    if (img.indexOf("zhuanlandaren")>-1)
    {
        title =3D "=E4=B8=93=E6=A0=8F=E8=BE=BE=E4=BA=BA"; desc =3D =
"=E6=8E=88=E4=BA=88=E6=88=90=E5=8A=9F=E5=88=9B=E5=BB=BA=E4=B8=AA=E4=BA=BA=
=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82=E4=
=B8=93=E6=A0=8F=E4=B8=AD=E6=B7=BB=E5=8A=A0=E4=BA=94=E7=AF=87=E4=BB=A5=E4=B8=
=8A=E5=8D=9A=E6=96=87=E5=8D=B3=E5=8F=AF=E7=82=B9=E4=BA=AE=EF=BC=81=E6=92=B0=
=E5=86=99=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E6=B5=93=E7=BC=A9=E6=8A=80=E6=
=9C=AF=E7=B2=BE=E5=8D=8E=EF=BC=8C=E4=B8=93=E6=A0=8F=E8=BE=BE=E4=BA=BA=E5=B0=
=B1=E6=98=AF=E4=BD=A0=EF=BC=81";
    }
    else if (img.indexOf("chizhiyiheng")>-1)
    {
        title =3D "=E6=8C=81=E4=B9=8B=E4=BB=A5=E6=81=92"; desc =3D =
"=E6=8E=88=E4=BA=88=E6=AF=8F=E4=B8=AA=E8=87=AA=E7=84=B6=E6=9C=88=E5=86=85=
=E5=8F=91=E5=B8=834=E7=AF=87=E6=88=964=E7=AF=87=E4=BB=A5=E4=B8=8A=E5=8E=9F=
=E5=88=9B=E6=88=96=E7=BF=BB=E8=AF=91IT=E5=8D=9A=E6=96=87=E7=9A=84=E7=94=A8=
=E6=88=B7=E3=80=82=E4=B8=8D=E7=A7=AF=E8=B7=AC=E6=AD=A5=E6=97=A0=E4=BB=A5=E8=
=87=B3=E5=8D=83=E9=87=8C=EF=BC=8C=E4=B8=8D=E7=A7=AF=E5=B0=8F=E6=B5=81=E6=97=
=A0=E4=BB=A5=E6=88=90=E6=B1=9F=E6=B5=B7=EF=BC=8C=E7=A8=8B=E5=BA=8F=E4=BA=BA=
=E7=94=9F=E7=9A=84=E7=B2=BE=E5=BD=A9=E9=9C=80=E8=A6=81=E5=9D=9A=E6=8C=81=E4=
=B8=8D=E6=87=88=E5=9C=B0=E7=A7=AF=E7=B4=AF=EF=BC=81";
    }
    else if (img.indexOf("weiruanmvp")>-1) {
        title =3D "=E5=BE=AE=E8=BD=AFMVP"; desc =3D =
"=E6=8E=88=E4=BA=88=E9=80=9A=E8=BF=87CSDN=E5=8D=9A=E5=AE=A2=E5=B9=B3=E5=8F=
=B0=E7=A7=AF=E6=9E=81=E5=88=86=E4=BA=AB=E5=BE=AE=E8=BD=AF=E7=9B=B8=E5=85=B3=
=E6=8A=80=E6=9C=AF=E7=9F=A5=E8=AF=86=E5=92=8C=E4=B8=93=E4=B8=9A=E6=8A=80=E8=
=83=BD=EF=BC=8C=E5=B9=B6=E5=81=9A=E5=87=BA=E7=AA=81=E5=87=BA=E8=B4=A1=E7=8C=
=AE=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82";
    }
    else if (img.indexOf("bokezhixing")>-1) {
        title =3D "=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=98=9F"; desc =3D =
"=E6=8E=88=E4=BA=88=E9=80=9A=E8=BF=87\"CSDN=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=
=98=9F=E8=AF=84=E9=80=89\"=E4=B8=AD=E8=84=B1=E9=A2=96=E8=80=8C=E5=87=BA=E7=
=9A=84=E5=8D=81=E5=A4=A7=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=98=9F=E7=A7=B0=E5=8F=
=B7=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82";
    }

    s +=3D "<div  style=3D'  z-index:99999 ; left: 15%;  top: -9px;  =
position: absolute;  width: 0;  height: 0;  border-left: 10px solid =
transparent;  border-right: 10px solid transparent;  border-bottom: 8px =
solid #EAEAEA; '></div>";
    s +=3D "<dl onmouseover=3D'__mm_over=3Dtrue;' =
onmouseout=3D'm_out_m();'>";
    s +=3D "<dt><img src=3D'" + img.replace(".png", "") + "middle.png" + =
"' /></dt>";
    s +=3D "<dd><strong>" + title + "</strong>" + desc + "</dd>";
    s +=3D "</dl>";
    __mm_intro =3D document.createElement("div");
    __mm_intro.className =3D "medal_intro";
    var pos =3D $(e).position();
    var left =3D pos.left - 39;
    if (left < 0)
        left =3D 0;
    __mm_intro.style.left =3D left + 'px';
    __mm_intro.style.top =3D pos.top + 32 + 4 + 'px';
    __mm_intro.innerHTML =3D s;
    document.body.appendChild(__mm_intro);
}
function hideMedalInfo() {
    setTimeout(function() {
        if (!__mm_over && __mm_intro) {
            document.body.removeChild(__mm_intro);
            __mm_intro =3D null;
        }
    }, 500);
}

$("#leveImg").hover(
    function () {
        $("#smallTittle")[0].style.display=3D"inline-block";
    },
    function () {
        $("#smallTittle")[0].style.display=3D"none";
    }
);

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://medal.blog.csdn.net/showblogmedal.ashx?blogid=79517

cHJpbnRNZWRhbChbeydzcmMnOidodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvaW1hZ2VzL21l
ZGFsL2hvbGRvbl9zMi5naWYnLCd0aXRsZSc6J+aMgeS5i+S7peaBkicsJ2Rlc2MnOifmjojkuojm
r4/kuKroh6rnhLbmnIjlhoXlj5HluIM056+H5oiWNOevh+S7peS4iuWOn+WIm+aIlue/u+ivkUlU
5Y2a5paH55qE55So5oi344CC5LiN56ev6Les5q2l5peg5Lul6Iez5Y2D6YeM77yM5LiN56ev5bCP
5rWB5peg5Lul5oiQ5rGf5rW377yM56iL5bqP5Lq655Sf55qE57K+5b2p6ZyA6KaB5Z2a5oyB5LiN
5oeI5Zyw56ev57Sv77yBJywnZGVzYzInOicxMuaciOS7veWPkeihqDTnr4fljp/liJsv57+76K+R
5paH56ugJywnY291bnQnOjF9XSk7

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/JavaScript1.js

=EF=BB=BF; (function () {
    protocol =3D location.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
    document.write("<link rel=3D'stylesheet' type=3D'text/css' href=3D'" =
+ protocol + "//csdnimg.cn/pubfooter/css/pub_footer_2014.css' />");
    document.write("<div class=3D'pub_fo'>");
    document.write("<div id=3D'pub_footerall' =
class=3D'pub_footer_new'>");
    document.write("<dl>");
    document.write("<dt></dt>");
    document.write(" <dd class=3D'foot_sub_menu'><a =
href=3D'http://www.csdn.net/company/about.html' =
target=3D'_blank'>=E5=85=AC=E5=8F=B8=E7=AE=80=E4=BB=8B</a><span>|</span><=
a href=3D'http://www.csdn.net/company/recruit.html' =
target=3D'_blank'>=E6=8B=9B=E8=B4=A4=E7=BA=B3=E5=A3=AB</a><span>|</span><=
a href=3D'http://www.csdn.net/company/marketing.html' =
target=3D'_blank'>=E5=B9=BF=E5=91=8A=E6=9C=8D=E5=8A=A1</a><span>|</span><=
a href=3D'http://www.csdn.net/company/account.html' =
target=3D'_blank'>=E9=93=B6=E8=A1=8C=E6=B1=87=E6=AC=BE=E5=B8=90=E5=8F=B7<=
/a><span>|</span><a href=3D'http://www.csdn.net/company/contact.html' =
target=3D'_blank'>=E8=81=94=E7=B3=BB=E6=96=B9=E5=BC=8F</a><span>|</span><=
a href=3D'http://www.csdn.net/company/statement.html' =
target=3D'_blank'>=E7=89=88=E6=9D=83=E5=A3=B0=E6=98=8E</a><span>|</span><=
a href=3D'http://www.csdn.net/company/layer.html' =
target=3D'_blank'>=E6=B3=95=E5=BE=8B=E9=A1=BE=E9=97=AE</a><span>|</span><=
a =
href=3D'mailto:webmaster@csdn.net'>=E9=97=AE=E9=A2=98=E6=8A=A5=E5=91=8A</=
a><span>|</span><a target=3D'_blank' =
href=3D'http://www.csdn.net/friendlink.html'>=E5=90=88=E4=BD=9C=E4=BC=99=E4=
=BC=B4</a><span>|</span><a href=3D'http://bbs.csdn.net/forums/Service' =
target=3D'_blank'>=E8=AE=BA=E5=9D=9B=E5=8F=8D=E9=A6=88</a></dd>");
    document.write("<dd class=3D'foot_contact'><a =
href=3D'http://wpa.qq.com/msgrd?v=3D3&uin=3D2355263776&site=3Dqq&menu=3Dy=
es' target=3D'_blank' =
class=3D'qq'>=E7=BD=91=E7=AB=99=E5=AE=A2=E6=9C=8D</a><a =
href=3D'http://wpa.qq.com/msgrd?v=3D3&uin=3D2251809102&site=3Dqq&menu=3Dy=
es' target=3D'_blank' =
class=3D'qq'>=E6=9D=82=E5=BF=97=E5=AE=A2=E6=9C=8D</a><a =
href=3D'http://e.weibo.com/csdnsupport/profile' target=3D'_blank' =
class=3D'weibo'>=E5=BE=AE=E5=8D=9A=E5=AE=A2=E6=9C=8D</a><a =
href=3D'mailto:webmaster@csdn.net' class=3D'email' =
title=3D'=E8=81=94=E7=B3=BB=E9=82=AE=E7=AE=B1'>webmaster@csdn.net</a><spa=
n class=3D'phone' =
title=3D'=E6=9C=8D=E5=8A=A1=E7=83=AD=E7=BA=BF'>400-600-2320</span><span =
class=3D'interval'>|</span><span>=E5=8C=97=E4=BA=AC=E5=88=9B=E6=96=B0=E4=B9=
=90=E7=9F=A5=E4=BF=A1=E6=81=AF=E6=8A=80=E6=9C=AF=E6=9C=89=E9=99=90=E5=85=AC=
=E5=8F=B8 =E7=89=88=E6=9D=83=E6=89=80=E6=9C=89</span><span =
class=3D'interval'>|</span><span>=E6=B1=9F=E8=8B=8F=E4=B9=90=E7=9F=A5=E7=BD=
=91=E7=BB=9C=E6=8A=80=E6=9C=AF=E6=9C=89=E9=99=90=E5=85=AC=E5=8F=B8 =
=E6=8F=90=E4=BE=9B=E5=95=86=E5=8A=A1=E6=94=AF=E6=8C=81</span></dd>");
    document.write("<dd  =
class=3D'foot_copyright'><span>=E4=BA=AC&nbsp;ICP&nbsp;=E8=AF=81&nbsp;090=
02463&nbsp;=E5=8F=B7</span><span =
class=3D'interval'>|</span><span>Copyright &copy; 1999-2014, CSDN.NET, =
All Rights Reserved&nbsp;</span><a =
href=3D'http://www.hd315.gov.cn/beian/view.asp?bianhao=3D0102020010321000=
10' target=3D'_blank'><img =
src=3D'http://c.csdnimg.cn/pubfooter/images/gongshang_logos.gif' =
alt=3D'GongshangLogo' alt=3D'' title=3D'' /></a></dd>");
    document.write("</dl>");
    document.write("</div>");
    document.write("</div>");
    document.write('<script id=3D"noticeScript" type=3D"text/javascript" =
 btnId=3D"header_notice_num" wrapId=3D"note1" count=3D"5" subcount=3D"5" =
src=3D"' + protocol + =
'//csdnimg.cn/rabbit/notev2/js/notify.js?9d86d94"></script>');

    var head =3D document.getElementsByTagName('head')[0]
        , s, ss =3D [
            protocol + '//csdnimg.cn/rabbit/tracking-ad/main.js?75eacd6'
        ]
    ;

    for (var i =3D 0; i < ss.length; i++) {
        s =3D document.createElement('script')
        s.type =3D 'text/javascript';
        s.charset =3D 'utf-8';
        s.src =3D ss[i];
        head.insertBefore(s, null);
    }
}());
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.csdn.net/ui/scripts/Csdn/counter.js

document.write('<script type=3D"text/javascript" charset=3D"UTF-8" =
src=3D"http://message.csdn.net/msg.popup.js"><'+'/script>');
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: 7bit
Content-Location: http://ad.csdn.net/scripts/ad-blog.js

var ad_type = 'ms1593';
var ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';
document.writeln(ad_sc);

/*ad_type = 'ms1587_2';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);

ad_type = 'ms1584_3';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);

ad_type = 'ms1585_4';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);

ad_type = 'ms1573_5';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);

ad_type = 'ms1548_6';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);
*/
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/js/toolbar.js

// Generated by CoffeeScript 1.6.3
(function () {
  !(function (window) {
    var Toolbar;
    var currUser =3D {
      //use to join avator
      AU: ""
    };
    var isNotifyShowed =3D false;
    var AUtoAvatar =3D function (AU) {
      _AUPath =3D AU.split("").join("/");
      return "http://avatar.csdn.net/" + _AUPath + "/2_" + =
currUser.userName + ".jpg";
    }
    var getActive =3D function () {
      return document.activeElement;
    }
    Toolbar =3D function (opts) {
      this.opts =3D opts;
      this.Doms =3D {};
      this.Curr =3D null;
      this.init.apply(this, [opts]);
    };
    Toolbar.prototype =3D {
      init: function (opts) {
        opts =3D opts || this.opts;
        this.getDoms(opts).bindEvent();
        this.initFavor();
        this.initNotify();
        this.initProfile();
      },

      /*
       * =E8=81=9A=E5=90=88=E6=89=80=E6=9C=89dom=E6=8A=93=E5=8F=96
       */
      getDoms: function (opts) {
        opts =3D opts || this.opts;
        this.Doms.wraper =3D opts.wraper;
        this.folded =3D true;
        this.Doms.listBtns =3D $(opts.wraper + " ul.btns>li");
        this.Doms.profile =3D $(opts.wraper + " .profile");
        return this;
      },
      bindEvent: function (opts) {
        var _this =3D this;
        var $loginWrap =3D $(this.Doms.wraper + " .login-wrap");
        opts =3D opts || this.opts;

        this.Doms.listBtns.bind('mouseover', function (event) {
          _this.Curr =3D $(this).parent().children().filter(".on")[0];

          if ($(event.target).hasClass("notify") || =
$(event.target).parents().filter(".notify").length) {

            if (!isNotifyShowed || opts.notifyInst.isHasNewMsg()) {
              $("#header_notice_num").trigger("click");
              isNotifyShowed =3D true;
            }
          }
          if (_this.Curr =3D=3D this) {
            return;
          }
          $(_this.Curr).removeClass("on");
          $(this).addClass("on");
          _this.folded =3D false;
        });
        $(this.Doms.wraper).bind('mouseout',function(e){
            =
if($(getActive()).parents().filter(_this.Doms.wraper).length>0){
              return;
            }
            $(document.body).trigger("toolbar-fold");
        });
        $(document).bind("click", function (e) {
          if ($(e.target).parents().filter(_this.Doms.wraper).length =
<=3D 0) {
            $(document.body).trigger("toolbar-fold");
          }
        });

        $(document.body).bind("toolbar-fold", function (e) {
          _this.Doms.listBtns.filter(".on").removeClass("on");
        });
        $(this.Doms.wraper + " .search form").bind("keyup", function (e) =
{
          if (e.keycode =3D=3D 13) {
            this.submit();
          }
        });
        // $(document).bind("userLogined",function(e,userData){
        //   $loginWrap.removeClass("unlogin");
        //   userData.userName&&$loginWrap.show();
        // });

        // $(document).bind("userLoginOut",function(e,username){
        //   $loginWrap.addClass("unlogin").removeClass("hide").show();
        // });


        return this;
      },
      initLogo: function (opts) {},
      initFavor: function () {
        var _wraper =3D this.Doms.wraper + " .favor"
        var _title =3D document.title;
        var _url =3D document.location.href;
        var $title =3D $(_wraper + " .title");
        var $url =3D $(_wraper + " .url");
        // var $tag =3D $(_wraper + " .tag");
        // var $description =3D $(_wraper + " .description");
        var $tag =3D $(_wraper + " #input-tag");
        var $description =3D $(_wraper + " #input-description");
        var $share =3D $(_wraper + " .share");
        var $cancel =3D $(_wraper + " .cancel");
        var $submit =3D $(_wraper + " .submit");
        var $ok =3D $(_wraper + " .ok");


        //set value
        $title.val(_title);
        $url.val(_url);
        $share.attr("checked", true);

        //bind event
        $cancel.bind("click", function (e) {
          $(document.body).trigger("toolbar-fold");
        });

        $ok.bind("click", function (e) {
          $(_wraper + " .favor-failed").hide();
          $(_wraper + " .favor-success").hide();
          $(_wraper + " .favor-form").show();
          $(document.body).trigger("toolbar-fold");
        });


        $submit.bind("click", function (e) {
          var _data =3D {
            title: $title.val(),
            //url:encodeURIComponent($url.val()),
            url: $url.val(),
            description: $description.val(),
            tag: $tag.val(),
            share: $share[0].checked ? 1 : 0
          }

            function resetForm() {
              $(_wraper + " .title").val($title.val());
              $(_wraper + " .url").val(window.location.href);
              $(_wraper + " .tag").val("");
              $(_wraper + " .description").val("");
            }

            function cbSuccess() {
              $(_wraper + " .favor-failed").show();
              $(_wraper + " .favor-success").hide();
              $(_wraper + " .favor-form").hide();
            }

            function cbError() {
              $(_wraper + " .favor-failed").hide();
              $(_wraper + " .favor-success").show();
              $(_wraper + " .favor-form").hide();
            }
          $.ajax({
            data: _data,
            jsonp: "jsonpcallback",
            dataType: "jsonp",
            url: "http://my.csdn.net/service/favorite/add_favorite",
            success: function (data) {
              if (data.success =3D=3D "-1") {
                cbSuccess();
                resetForm();
              }
              if (data.success =3D=3D "1") {
                cbError();
                resetForm();
              }
            }
          });

          return false;
        });

      },
      initNotify: function (opts) {
        var _this =3D this;
        var opts =3D opts || this.opts;
        if (!opts.notifyInst) {
          $(opts.wraper + " .notify").hide();
          throw "notify.js not loaded!";
        }
        $(document).bind("toolbar-setNotesNum", function (e, num) {
          var $number =3D $(_this.Doms.wraper + " .number");
          var $hasnotes =3D $(_this.Doms.wraper + " .icon-hasnotes-sm");
          if (num <=3D 0) {
            $hasnotes.hide();
            return;
          } else if (num > 0) {
            $hasnotes.show();
          }
        });
        if (opts.notifyInst) {
          opts.notifyInst.on("receive_unreads", function (e, data) {
            var num =3D opts.notifyInst.getlocalUnread().length;
            $(document).trigger("toolbar-setNotesNum", num);
          });
          opts.notifyInst.on("receive_setreaded", function (e, data) {
            var num =3D opts.notifyInst.getlocalUnread().length;
            $(document).trigger("toolbar-setNotesNum", num);
          });
        }
      },
      initProfile: function (userData) {
        var _this =3D this;
      }
    };
    return window["Toolbar"] =3D Toolbar;
  })(window);

  var $oScriptTag =3D $("#csdn-toolbar-id");
  var inst =3D typeof csdn_note =3D=3D 'undefined' ? null : csdn_note;
  new Toolbar({
    wraper: ".csdn-toolbar",
    notifyInst: inst
  });
}).call(this);
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/wmd.js

/**
 * marked - a markdown parser
 * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/chjj/marked
 */

;(function() {

/**
 * Block-Level Grammar
 */

var block =3D {
  newline: /^\n+/,
  code: /^( {4}[^\n]+\n*)+/,
  fences: noop,
  hr: /^( *[-*_]){3,} *(?:\n+|$)/,
  heading: /^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,
  nptable: noop,
  lheading: /^([^\n]+)\n *(=3D|-){2,} *(?:\n+|$)/,
  blockquote: /^( *>[^\n]+(\n[^\n]+)*\n*)+/,
  list: /^( *)(bull) [\s\S]+?(?:hr|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
  html: /^ *(?:comment|closed|closing) *(?:\n{2,}|\s*$)/,
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? =
*(?:\n+|$)/,
  table: noop,
  paragraph: =
/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,
  text: /^[^\n]+/
};

block.bullet =3D /(?:[*+-]|\d+\.)/;
block.item =3D /^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;
block.item =3D replace(block.item, 'gm')
  (/bull/g, block.bullet)
  ();

block.list =3D replace(block.list)
  (/bull/g, block.bullet)
  ('hr', /\n+(?=3D(?: *[-*_]){3,} *(?:\n+|$))/)
  ();

block._tag =3D '(?!(?:'
  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'
  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'
  + '|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|@)\\b';

block.html =3D replace(block.html)
  ('comment', /<!--[\s\S]*?-->/)
  ('closed', /<(tag)[\s\S]+?<\/\1>/)
  ('closing', /<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)
  (/tag/g, block._tag)
  ();

block.paragraph =3D replace(block.paragraph)
  ('hr', block.hr)
  ('heading', block.heading)
  ('lheading', block.lheading)
  ('blockquote', block.blockquote)
  ('tag', '<' + block._tag)
  ('def', block.def)
  ();

/**
 * Normal Block Grammar
 */

block.normal =3D merge({}, block);

/**
 * GFM Block Grammar
 */

block.gfm =3D merge({}, block.normal, {
  fences: /^ *(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n+|$)/,
  paragraph: /^/
});

block.gfm.paragraph =3D replace(block.paragraph)
  ('(?!', '(?!'
    + block.gfm.fences.source.replace('\\1', '\\2') + '|'
    + block.list.source.replace('\\1', '\\3') + '|')
  ();

/**
 * GFM + Tables Block Grammar
 */

block.tables =3D merge({}, block.gfm, {
  nptable: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| =
:]*)\n((?:.*\|.*(?:\n|$))*)\n*/,
  table: /^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/
});

/**
 * Block Lexer
 */

function Lexer(options) {
  this.tokens =3D [];
  this.tokens.links =3D {};
  this.options =3D options || marked.defaults;
  this.rules =3D block.normal;

  if (this.options.gfm) {
    if (this.options.tables) {
      this.rules =3D block.tables;
    } else {
      this.rules =3D block.gfm;
    }
  }
}

/**
 * Expose Block Rules
 */

Lexer.rules =3D block;

/**
 * Static Lex Method
 */

Lexer.lex =3D function(src, options) {
  var lexer =3D new Lexer(options);
  return lexer.lex(src);
};

/**
 * Preprocessing
 */

Lexer.prototype.lex =3D function(src) {
  src =3D src
    .replace(/\r\n|\r/g, '\n')
    .replace(/\t/g, '    ')
    .replace(/\u00a0/g, ' ')
    .replace(/\u2424/g, '\n');

  return this.token(src, true);
};

/**
 * Lexing
 */

Lexer.prototype.token =3D function(src, top) {
  var src =3D src.replace(/^ +$/gm, '')
    , next
    , loose
    , cap
    , bull
    , b
    , item
    , space
    , i
    , l;

  while (src) {
    // newline
    if (cap =3D this.rules.newline.exec(src)) {
      src =3D src.substring(cap[0].length);
      if (cap[0].length > 1) {
        this.tokens.push({
          type: 'space'
        });
      }
    }

    // code
    if (cap =3D this.rules.code.exec(src)) {
      src =3D src.substring(cap[0].length);
      cap =3D cap[0].replace(/^ {4}/gm, '');
      this.tokens.push({
        type: 'code',
        text: !this.options.pedantic
          ? cap.replace(/\n+$/, '')
          : cap
      });
      continue;
    }

    // fences (gfm)
    if (cap =3D this.rules.fences.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'code',
        lang: cap[2],
        text: cap[3]
      });
      continue;
    }

    // heading
    if (cap =3D this.rules.heading.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[1].length,
        text: cap[2]
      });
      continue;
    }

    // table no leading pipe (gfm)
    if (top && (cap =3D this.rules.nptable.exec(src))) {
      src =3D src.substring(cap[0].length);

      item =3D {
        type: 'table',
        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3].replace(/\n$/, '').split('\n')
      };

      for (i =3D 0; i < item.align.length; i++) {
        if (/^ *-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'right';
        } else if (/^ *:-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'center';
        } else if (/^ *:-+ *$/.test(item.align[i])) {
          item.align[i] =3D 'left';
        } else {
          item.align[i] =3D null;
        }
      }

      for (i =3D 0; i < item.cells.length; i++) {
        item.cells[i] =3D item.cells[i].split(/ *\| */);
      }

      this.tokens.push(item);

      continue;
    }

    // lheading
    if (cap =3D this.rules.lheading.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[2] =3D=3D=3D '=3D' ? 1 : 2,
        text: cap[1]
      });
      continue;
    }

    // hr
    if (cap =3D this.rules.hr.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'hr'
      });
      continue;
    }

    // blockquote
    if (cap =3D this.rules.blockquote.exec(src)) {
      src =3D src.substring(cap[0].length);

      this.tokens.push({
        type: 'blockquote_start'
      });

      cap =3D cap[0].replace(/^ *> ?/gm, '');

      // Pass `top` to keep the current
      // "toplevel" state. This is exactly
      // how markdown.pl works.
      this.token(cap, top);

      this.tokens.push({
        type: 'blockquote_end'
      });

      continue;
    }

    // list
    if (cap =3D this.rules.list.exec(src)) {
      src =3D src.substring(cap[0].length);
      bull =3D cap[2];

      this.tokens.push({
        type: 'list_start',
        ordered: bull.length > 1
      });

      // Get each top-level item.
      cap =3D cap[0].match(this.rules.item);

      next =3D false;
      l =3D cap.length;
      i =3D 0;

      for (; i < l; i++) {
        item =3D cap[i];

        // Remove the list item's bullet
        // so it is seen as the next token.
        space =3D item.length;
        item =3D item.replace(/^ *([*+-]|\d+\.) +/, '');

        // Outdent whatever the
        // list item contains. Hacky.
        if (~item.indexOf('\n ')) {
          space -=3D item.length;
          item =3D !this.options.pedantic
            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')
            : item.replace(/^ {1,4}/gm, '');
        }

        // Determine whether the next list item belongs here.
        // Backpedal if it does not belong in this list.
        if (this.options.smartLists && i !=3D=3D l - 1) {
          b =3D block.bullet.exec(cap[i + 1])[0];
          if (bull !=3D=3D b && !(bull.length > 1 && b.length > 1)) {
            src =3D cap.slice(i + 1).join('\n') + src;
            i =3D l - 1;
          }
        }

        // Determine whether item is loose or not.
        // Use: /(^|\n)(?! )[^\n]+\n\n(?!\s*$)/
        // for discount behavior.
        loose =3D next || /\n\n(?!\s*$)/.test(item);
        if (i !=3D=3D l - 1) {
          next =3D item.charAt(item.length - 1) =3D=3D=3D '\n';
          if (!loose) loose =3D next;
        }

        this.tokens.push({
          type: loose
            ? 'loose_item_start'
            : 'list_item_start'
        });

        // Recurse.
        this.token(item, false);

        this.tokens.push({
          type: 'list_item_end'
        });
      }

      this.tokens.push({
        type: 'list_end'
      });

      continue;
    }

    // html
    if (cap =3D this.rules.html.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: this.options.sanitize
          ? 'paragraph'
          : 'html',
        pre: cap[1] =3D=3D=3D 'pre' || cap[1] =3D=3D=3D 'script' || =
cap[1] =3D=3D=3D 'style',
        text: cap[0]
      });
      continue;
    }

    // def
    if (top && (cap =3D this.rules.def.exec(src))) {
      src =3D src.substring(cap[0].length);
      this.tokens.links[cap[1].toLowerCase()] =3D {
        href: cap[2],
        title: cap[3]
      };
      continue;
    }

    // table (gfm)
    if (top && (cap =3D this.rules.table.exec(src))) {
      src =3D src.substring(cap[0].length);

      item =3D {
        type: 'table',
        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3].replace(/(?: *\| *)?\n$/, '').split('\n')
      };

      for (i =3D 0; i < item.align.length; i++) {
        if (/^ *-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'right';
        } else if (/^ *:-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'center';
        } else if (/^ *:-+ *$/.test(item.align[i])) {
          item.align[i] =3D 'left';
        } else {
          item.align[i] =3D null;
        }
      }

      for (i =3D 0; i < item.cells.length; i++) {
        item.cells[i] =3D item.cells[i]
          .replace(/^ *\| *| *\| *$/g, '')
          .split(/ *\| */);
      }

      this.tokens.push(item);

      continue;
    }

    // top-level paragraph
    if (top && (cap =3D this.rules.paragraph.exec(src))) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'paragraph',
        text: cap[1].charAt(cap[1].length - 1) =3D=3D=3D '\n'
          ? cap[1].slice(0, -1)
          : cap[1]
      });
      continue;
    }

    // text
    if (cap =3D this.rules.text.exec(src)) {
      // Top-level should never reach here.
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'text',
        text: cap[0]
      });
      continue;
    }

    if (src) {
      throw new
        Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return this.tokens;
};

/**
 * Inline-Level Grammar
 */

var inline =3D {
  escape: /^\\([\\`*{}\[\]()#+\-.!_>])/,
  autolink: /^<([^ >]+(@|:\/)[^ >]+)>/,
  url: noop,
  tag: /^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,
  link: /^!?\[(inside)\]\(href\)/,
  reflink: /^!?\[(inside)\]\s*\[([^\]]*)\]/,
  nolink: /^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,
  strong: /^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,
  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
  code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,
  br: /^ {2,}\n(?!\s*$)/,
  del: noop,
  text: /^[\s\S]+?(?=3D[\\<!\[_*`]| {2,}\n|$)/
};

inline._inside =3D /(?:\[[^\]]*\]|[^\[\]]|\](?=3D[^\[]*\]))*/;
inline._href =3D /\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;

inline.link =3D replace(inline.link)
  ('inside', inline._inside)
  ('href', inline._href)
  ();

inline.reflink =3D replace(inline.reflink)
  ('inside', inline._inside)
  ();

/**
 * Normal Inline Grammar
 */

inline.normal =3D merge({}, inline);

/**
 * Pedantic Inline Grammar
 */

inline.pedantic =3D merge({}, inline.normal, {
  strong: =
/^__(?=3D\S)([\s\S]*?\S)__(?!_)|^\*\*(?=3D\S)([\s\S]*?\S)\*\*(?!\*)/,
  em: /^_(?=3D\S)([\s\S]*?\S)_(?!_)|^\*(?=3D\S)([\s\S]*?\S)\*(?!\*)/
});

/**
 * GFM Inline Grammar
 */

inline.gfm =3D merge({}, inline.normal, {
  escape: replace(inline.escape)('])', '~|])')(),
  url: /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,
  del: /^~~(?=3D\S)([\s\S]*?\S)~~/,
  text: replace(inline.text)
    (']|', '~]|')
    ('|', '|https?://|')
    ()
});

/**
 * GFM + Line Breaks Inline Grammar
 */

inline.breaks =3D merge({}, inline.gfm, {
  br: replace(inline.br)('{2,}', '*')(),
  text: replace(inline.gfm.text)('{2,}', '*')()
});

/**
 * Inline Lexer & Compiler
 */

function InlineLexer(links, options) {
  this.options =3D options || marked.defaults;
  this.links =3D links;
  this.rules =3D inline.normal;

  if (!this.links) {
    throw new
      Error('Tokens array requires a `links` property.');
  }

  if (this.options.gfm) {
    if (this.options.breaks) {
      this.rules =3D inline.breaks;
    } else {
      this.rules =3D inline.gfm;
    }
  } else if (this.options.pedantic) {
    this.rules =3D inline.pedantic;
  }
}

/**
 * Expose Inline Rules
 */

InlineLexer.rules =3D inline;

/**
 * Static Lexing/Compiling Method
 */

InlineLexer.output =3D function(src, links, options) {
  var inline =3D new InlineLexer(links, options);
  return inline.output(src);
};

/**
 * Lexing/Compiling
 */

InlineLexer.prototype.output =3D function(src) {
  var out =3D ''
    , link
    , text
    , href
    , cap;

  while (src) {
    // escape
    if (cap =3D this.rules.escape.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D cap[1];
      continue;
    }

    // autolink
    if (cap =3D this.rules.autolink.exec(src)) {
      src =3D src.substring(cap[0].length);
      if (cap[2] =3D=3D=3D '@') {
        text =3D cap[1].charAt(6) =3D=3D=3D ':'
          ? this.mangle(cap[1].substring(7))
          : this.mangle(cap[1]);
        href =3D this.mangle('mailto:') + text;
      } else {
        text =3D escape(cap[1]);
        href =3D text;
      }
      out +=3D '<a href=3D"'
        + href
        + '">'
        + text
        + '</a>';
      continue;
    }

    // url (gfm)
    if (cap =3D this.rules.url.exec(src)) {
      src =3D src.substring(cap[0].length);
      text =3D escape(cap[1]);
      href =3D text;
      out +=3D '<a href=3D"'
        + href
        + '">'
        + text
        + '</a>';
      continue;
    }

    // tag
    if (cap =3D this.rules.tag.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D this.options.sanitize
        ? escape(cap[0])
        : cap[0];
      continue;
    }

    // link
    if (cap =3D this.rules.link.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D this.outputLink(cap, {
        href: cap[2],
        title: cap[3]
      });
      continue;
    }

    // reflink, nolink
    if ((cap =3D this.rules.reflink.exec(src))
        || (cap =3D this.rules.nolink.exec(src))) {
      src =3D src.substring(cap[0].length);
      link =3D (cap[2] || cap[1]).replace(/\s+/g, ' ');
      link =3D this.links[link.toLowerCase()];
      if (!link || !link.href) {
        out +=3D cap[0].charAt(0);
        src =3D cap[0].substring(1) + src;
        continue;
      }
      out +=3D this.outputLink(cap, link);
      continue;
    }

    // strong
    if (cap =3D this.rules.strong.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<strong>'
        + this.output(cap[2] || cap[1])
        + '</strong>';
      continue;
    }

    // em
    if (cap =3D this.rules.em.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<em>'
        + this.output(cap[2] || cap[1])
        + '</em>';
      continue;
    }

    // code
    if (cap =3D this.rules.code.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<code>'
        + escape(cap[2], true)
        + '</code>';
      continue;
    }

    // br
    if (cap =3D this.rules.br.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<br>';
      continue;
    }

    // del (gfm)
    if (cap =3D this.rules.del.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<del>'
        + this.output(cap[1])
        + '</del>';
      continue;
    }

    // text
    if (cap =3D this.rules.text.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D escape(this.smartypants(cap[0]));
      continue;
    }

    if (src) {
      throw new
        Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return out;
};

/**
 * Compile Link
 */

InlineLexer.prototype.outputLink =3D function(cap, link) {
  if (cap[0].charAt(0) !=3D=3D '!') {
    return '<a href=3D"'
      + escape(link.href)
      + '"'
      + (link.title
      ? ' title=3D"'
      + escape(link.title)
      + '"'
      : '')
      + '>'
      + this.output(cap[1])
      + '</a>';
  } else {
    return '<img src=3D"'
      + escape(link.href)
      + '" alt=3D"'
      + escape(cap[1])
      + '"'
      + (link.title
      ? ' title=3D"'
      + escape(link.title)
      + '"'
      : '')
      + '>';
  }
};

/**
 * Smartypants Transformations
 */

InlineLexer.prototype.smartypants =3D function(text) {
  if (!this.options.smartypants) return text;
  return text
    // em-dashes
    .replace(/--/g, '\u2014')
    // opening singles
    .replace(/(^|[-\u2014/(\[{"\s])'/g, '$1\u2018')
    // closing singles & apostrophes
    .replace(/'/g, '\u2019')
    // opening doubles
    .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1\u201c')
    // closing doubles
    .replace(/"/g, '\u201d')
    // ellipses
    .replace(/\.{3}/g, '\u2026');
};

/**
 * Mangle Links
 */

InlineLexer.prototype.mangle =3D function(text) {
  var out =3D ''
    , l =3D text.length
    , i =3D 0
    , ch;

  for (; i < l; i++) {
    ch =3D text.charCodeAt(i);
    if (Math.random() > 0.5) {
      ch =3D 'x' + ch.toString(16);
    }
    out +=3D '&#' + ch + ';';
  }

  return out;
};

/**
 * Parsing & Compiling
 */

function Parser(options) {
  this.tokens =3D [];
  this.token =3D null;
  this.options =3D options || marked.defaults;
}

/**
 * Static Parse Method
 */

Parser.parse =3D function(src, options) {
  var parser =3D new Parser(options);
  return parser.parse(src);
};

/**
 * Parse Loop
 */

Parser.prototype.parse =3D function(src) {
  this.inline =3D new InlineLexer(src.links, this.options);
  this.tokens =3D src.reverse();

  var out =3D '';
  while (this.next()) {
    out +=3D this.tok();
  }

  return out;
};

/**
 * Next Token
 */

Parser.prototype.next =3D function() {
  return this.token =3D this.tokens.pop();
};

/**
 * Preview Next Token
 */

Parser.prototype.peek =3D function() {
  return this.tokens[this.tokens.length - 1] || 0;
};

/**
 * Parse Text Tokens
 */

Parser.prototype.parseText =3D function() {
  var body =3D this.token.text;

  while (this.peek().type =3D=3D=3D 'text') {
    body +=3D '\n' + this.next().text;
  }

  return this.inline.output(body);
};

/**
 * Parse Current Token
 */

Parser.prototype.tok =3D function() {
  switch (this.token.type) {
    case 'space': {
      return '';
    }
    case 'hr': {
      return '<hr>\n';
    }
    case 'heading': {
      return '<h'
        + this.token.depth
        + ' id=3D"'
        + this.token.text.toLowerCase().replace(/[^\w]+/g, '-')
        + '">'
        + this.inline.output(this.token.text)
        + '</h'
        + this.token.depth
        + '>\n';
    }
    case 'code': {
      if (this.options.highlight) {
        var code =3D this.options.highlight(this.token.text, =
this.token.lang);
        if (code !=3D null && code !=3D=3D this.token.text) {
          this.token.escaped =3D true;
          this.token.text =3D code;
        }
      }

      if (!this.token.escaped) {
        this.token.text =3D escape(this.token.text, true);
      }

      return '<pre><code'
        + (this.token.lang
        ? ' class=3D"'
        + this.options.langPrefix
        + this.token.lang
        + '"'
        : '')
        + '>'
        + this.token.text
        + '</code></pre>\n';
    }
    case 'table': {
      var body =3D ''
        , heading
        , i
        , row
        , cell
        , j;

      // header
      body +=3D '<thead>\n<tr>\n';
      for (i =3D 0; i < this.token.header.length; i++) {
        heading =3D this.inline.output(this.token.header[i]);
        body +=3D '<th';
        if (this.token.align[i]) {
          body +=3D ' style=3D"text-align:' + this.token.align[i] + '"';
        }
        body +=3D '>' + heading + '</th>\n';
      }
      body +=3D '</tr>\n</thead>\n';

      // body
      body +=3D '<tbody>\n'
      for (i =3D 0; i < this.token.cells.length; i++) {
        row =3D this.token.cells[i];
        body +=3D '<tr>\n';
        for (j =3D 0; j < row.length; j++) {
          cell =3D this.inline.output(row[j]);
          body +=3D '<td';
          if (this.token.align[j]) {
            body +=3D ' style=3D"text-align:' + this.token.align[j] + =
'"';
          }
          body +=3D '>' + cell + '</td>\n';
        }
        body +=3D '</tr>\n';
      }
      body +=3D '</tbody>\n';

      return '<table>\n'
        + body
        + '</table>\n';
    }
    case 'blockquote_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'blockquote_end') {
        body +=3D this.tok();
      }

      return '<blockquote>\n'
        + body
        + '</blockquote>\n';
    }
    case 'list_start': {
      var type =3D this.token.ordered ? 'ol' : 'ul'
        , body =3D '';

      while (this.next().type !=3D=3D 'list_end') {
        body +=3D this.tok();
      }

      return '<'
        + type
        + '>\n'
        + body
        + '</'
        + type
        + '>\n';
    }
    case 'list_item_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'list_item_end') {
        body +=3D this.token.type =3D=3D=3D 'text'
          ? this.parseText()
          : this.tok();
      }

      return '<li>'
        + body
        + '</li>\n';
    }
    case 'loose_item_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'list_item_end') {
        body +=3D this.tok();
      }

      return '<li>'
        + body
        + '</li>\n';
    }
    case 'html': {
      return !this.token.pre && !this.options.pedantic
        ? this.inline.output(this.token.text)
        : this.token.text;
    }
    case 'paragraph': {
      return '<p>'
        + this.inline.output(this.token.text)
        + '</p>\n';
    }
    case 'text': {
      return '<p>'
        + this.parseText()
        + '</p>\n';
    }
  }
};

/**
 * Helpers
 */

function escape(html, encode) {
  return html
    .replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;');
}

function replace(regex, opt) {
  regex =3D regex.source;
  opt =3D opt || '';
  return function self(name, val) {
    if (!name) return new RegExp(regex, opt);
    val =3D val.source || val;
    val =3D val.replace(/(^|[^\[])\^/g, '$1');
    regex =3D regex.replace(name, val);
    return self;
  };
}

function noop() {}
noop.exec =3D noop;

function merge(obj) {
  var i =3D 1
    , target
    , key;

  for (; i < arguments.length; i++) {
    target =3D arguments[i];
    for (key in target) {
      if (Object.prototype.hasOwnProperty.call(target, key)) {
        obj[key] =3D target[key];
      }
    }
  }

  return obj;
}

/**
 * Marked
 */

function marked(src, opt, callback) {
  if (callback || typeof opt =3D=3D=3D 'function') {
    if (!callback) {
      callback =3D opt;
      opt =3D null;
    }

    opt =3D merge({}, marked.defaults, opt || {});

    var highlight =3D opt.highlight
      , tokens
      , pending
      , i =3D 0;

    try {
      tokens =3D Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending =3D tokens.length;

    var done =3D function() {
      var out, err;

      try {
        out =3D Parser.parse(tokens, opt);
      } catch (e) {
        err =3D e;
      }

      opt.highlight =3D highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !=3D=3D 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code =3D=3D null || code =3D=3D=3D token.text) {
            return --pending || done();
          }
          token.text =3D code;
          token.escaped =3D true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt =3D merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message +=3D '\nPlease report this to =
https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
}

/**
 * Options
 */

marked.options =3D
marked.setOptions =3D function(opt) {
  merge(marked.defaults, opt);
  return marked;
};

marked.defaults =3D {
  gfm: true,
  tables: true,
  breaks: false,
  pedantic: false,
  sanitize: false,
  smartLists: false,
  silent: false,
  highlight: null,
  langPrefix: 'lang-',
  smartypants: false
};

/**
 * Expose
 */

marked.Parser =3D Parser;
marked.parser =3D Parser.parse;

marked.Lexer =3D Lexer;
marked.lexer =3D Lexer.lex;

marked.InlineLexer =3D InlineLexer;
marked.inlineLexer =3D InlineLexer.output;

marked.parse =3D marked;

if (typeof exports =3D=3D=3D 'object') {
  module.exports =3D marked;
} else if (typeof define =3D=3D=3D 'function' && define.amd) {
  define(function() { return marked; });
} else {
  this.marked =3D marked;
}

}).call(function() {
  return this || (typeof window !=3D=3D 'undefined' ? window : global);
}());

------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/showdown.js

(function(global) {
// CodeMirror version 3.15
//
// CodeMirror is the only global var we claim
    var CodeMirror =3D (function() {
        "use strict";

        // BROWSER SNIFFING

        // Crude, but necessary to handle a number of =
hard-to-feature-detect
        // bugs and behavior differences.
        var gecko =3D /gecko\/\d/i.test(navigator.userAgent);
        var ie =3D /MSIE \d/.test(navigator.userAgent);
        var ie_lt8 =3D ie && (document.documentMode =3D=3D null || =
document.documentMode < 8);
        var ie_lt9 =3D ie && (document.documentMode =3D=3D null || =
document.documentMode < 9);
        var webkit =3D /WebKit\//.test(navigator.userAgent);
        var qtwebkit =3D webkit && =
/Qt\/\d+\.\d+/.test(navigator.userAgent);
        var chrome =3D /Chrome\//.test(navigator.userAgent);
        var opera =3D /Opera\//.test(navigator.userAgent);
        var safari =3D /Apple Computer/.test(navigator.vendor);
        var khtml =3D /KHTML\//.test(navigator.userAgent);
        var mac_geLion =3D /Mac OS X =
1\d\D([7-9]|\d\d)\D/.test(navigator.userAgent);
        var mac_geMountainLion =3D /Mac OS X =
1\d\D([8-9]|\d\d)\D/.test(navigator.userAgent);
        var phantom =3D /PhantomJS/.test(navigator.userAgent);

        var ios =3D /AppleWebKit/.test(navigator.userAgent) && =
/Mobile\/\w+/.test(navigator.userAgent);
        // This is woefully incomplete. Suggestions for alternative =
methods welcome.
        var mobile =3D ios || /Android|webOS|BlackBerry|Opera Mini|Opera =
Mobi|IEMobile/i.test(navigator.userAgent);
        var mac =3D ios || /Mac/.test(navigator.platform);
        var windows =3D /windows/i.test(navigator.platform);

        var opera_version =3D opera && =
navigator.userAgent.match(/Version\/(\d*\.\d*)/);
        if (opera_version) opera_version =3D Number(opera_version[1]);
        if (opera_version && opera_version >=3D 15) { opera =3D false; =
webkit =3D true; }
        // Some browsers use the wrong event properties to signal =
cmd/ctrl on OS X
        var flipCtrlCmd =3D mac && (qtwebkit || opera && (opera_version =
=3D=3D null || opera_version < 12.11));
        var captureMiddleClick =3D gecko || (ie && !ie_lt9);

        // Optimize some code when these features are not used
        var sawReadOnlySpans =3D false, sawCollapsedSpans =3D false;

        // CONSTRUCTOR

        function CodeMirror(place, options) {
            if (!(this instanceof CodeMirror)) return new =
CodeMirror(place, options);

            this.options =3D options =3D options || {};
            // Determine effective options based on given values and =
defaults.
            for (var opt in defaults) if (!options.hasOwnProperty(opt) =
&& defaults.hasOwnProperty(opt))
                options[opt] =3D defaults[opt];
            setGuttersForLineNumbers(options);

            var docStart =3D typeof options.value =3D=3D "string" ? 0 : =
options.value.first;
            var display =3D this.display =3D makeDisplay(place, =
docStart);
            display.wrapper.CodeMirror =3D this;
            updateGutters(this);
            if (options.autofocus && !mobile) focusInput(this);

            this.state =3D {keyMaps: [],
                overlays: [],
                modeGen: 0,
                overwrite: false, focused: false,
                suppressEdits: false, pasteIncoming: false,
                draggingText: false,
                highlight: new Delayed()};

            themeChanged(this);
            if (options.lineWrapping)
                this.display.wrapper.className +=3D " CodeMirror-wrap";

            var doc =3D options.value;
            if (typeof doc =3D=3D "string") doc =3D new =
Doc(options.value, options.mode);
            operation(this, attachDoc)(this, doc);

            // Override magic textarea content restore that IE sometimes =
does
            // on our hidden textarea on reload
            if (ie) setTimeout(bind(resetInput, this, true), 20);

            registerEventHandlers(this);
            // IE throws unspecified error in certain cases, when
            // trying to access activeElement before onload
            var hasFocus; try { hasFocus =3D (document.activeElement =
=3D=3D display.input); } catch(e) { }
            if (hasFocus || (options.autofocus && !mobile)) =
setTimeout(bind(onFocus, this), 20);
            else onBlur(this);

            operation(this, function() {
                for (var opt in optionHandlers)
                    if (optionHandlers.propertyIsEnumerable(opt))
                        optionHandlers[opt](this, options[opt], Init);
                for (var i =3D 0; i < initHooks.length; ++i) =
initHooks[i](this);
            })();
        }

        // DISPLAY CONSTRUCTOR

        function makeDisplay(place, docStart) {
            var d =3D {};

            var input =3D d.input =3D elt("textarea", null, null, =
"position: absolute; padding: 0; width: 1px; height: 1em; outline: none; =
font-size: 4px;");
            if (webkit) input.style.width =3D "1000px";
            else input.setAttribute("wrap", "off");
            // if border: 0; -- iOS fails to open keyboard (issue #1287)
            if (ios) input.style.border =3D "1px solid black";
            input.setAttribute("autocorrect", "off"); =
input.setAttribute("autocapitalize", "off"); =
input.setAttribute("spellcheck", "false");

            // Wraps and hides input textarea
            d.inputDiv =3D elt("div", [input], null, "overflow: hidden; =
position: relative; width: 3px; height: 0px;");
            // The actual fake scrollbars.
            d.scrollbarH =3D elt("div", [elt("div", null, null, "height: =
1px")], "CodeMirror-hscrollbar");
            d.scrollbarV =3D elt("div", [elt("div", null, null, "width: =
1px")], "CodeMirror-vscrollbar");
            d.scrollbarFiller =3D elt("div", null, =
"CodeMirror-scrollbar-filler");
            d.gutterFiller =3D elt("div", null, =
"CodeMirror-gutter-filler");
            // DIVs containing the selection and the actual code
            d.lineDiv =3D elt("div", null, "CodeMirror-code");
            d.selectionDiv =3D elt("div", null, null, "position: =
relative; z-index: 1");
            // Blinky cursor, and element used to ensure cursor fits at =
the end of a line
            d.cursor =3D elt("div", "\u00a0", "CodeMirror-cursor");
            // Secondary cursor, shown when on a 'jump' in =
bi-directional text
            d.otherCursor =3D elt("div", "\u00a0", "CodeMirror-cursor =
CodeMirror-secondarycursor");
            // Used to measure text size
            d.measure =3D elt("div", null, "CodeMirror-measure");
            // Wraps everything that needs to exist inside the =
vertically-padded coordinate system
            d.lineSpace =3D elt("div", [d.measure, d.selectionDiv, =
d.lineDiv, d.cursor, d.otherCursor],
                null, "position: relative; outline: none");
            // Moved around its parent to cover visible view
            d.mover =3D elt("div", [elt("div", [d.lineSpace], =
"CodeMirror-lines")], null, "position: relative");
            // Set to the height of the text, causes scrolling
            d.sizer =3D elt("div", [d.mover], "CodeMirror-sizer");
            // D is needed because behavior of elts with overflow: auto =
and padding is inconsistent across browsers
            d.heightForcer =3D elt("div", null, null, "position: =
absolute; height: " + scrollerCutOff + "px; width: 1px;");
            // Will contain the gutters, if any
            d.gutters =3D elt("div", null, "CodeMirror-gutters");
            d.lineGutter =3D null;
            // Provides scrolling
            d.scroller =3D elt("div", [d.sizer, d.heightForcer, =
d.gutters], "CodeMirror-scroll");
            d.scroller.setAttribute("tabIndex", "-1");
            // The element in which the editor lives.
            d.wrapper =3D elt("div", [d.inputDiv, d.scrollbarH, =
d.scrollbarV,
                d.scrollbarFiller, d.gutterFiller, d.scroller], =
"CodeMirror");
            // Work around IE7 z-index bug
            if (ie_lt8) { d.gutters.style.zIndex =3D -1; =
d.scroller.style.paddingRight =3D 0; }
            if (place.appendChild) place.appendChild(d.wrapper); else =
place(d.wrapper);

            // Needed to hide big blue blinking cursor on Mobile Safari
            if (ios) input.style.width =3D "0px";
            if (!webkit) d.scroller.draggable =3D true;
            // Needed to handle Tab key in KHTML
            if (khtml) { d.inputDiv.style.height =3D "1px"; =
d.inputDiv.style.position =3D "absolute"; }
            // Need to set a minimum width to see the scrollbar on IE7 =
(but must not set it on IE8).
            else if (ie_lt8) d.scrollbarH.style.minWidth =3D =
d.scrollbarV.style.minWidth =3D "18px";

            // Current visible range (may be bigger than the view =
window).
            d.viewOffset =3D d.lastSizeC =3D 0;
            d.showingFrom =3D d.showingTo =3D docStart;

            // Used to only resize the line number gutter when necessary =
(when
            // the amount of lines crosses a boundary that makes its =
width change)
            d.lineNumWidth =3D d.lineNumInnerWidth =3D d.lineNumChars =
=3D null;
            // See readInput and resetInput
            d.prevInput =3D "";
            // Set to true when a non-horizontal-scrolling widget is =
added. As
            // an optimization, widget aligning is skipped when d is =
false.
            d.alignWidgets =3D false;
            // Flag that indicates whether we currently expect input to =
appear
            // (after some event like 'keypress' or 'input') and are =
polling
            // intensively.
            d.pollingFast =3D false;
            // Self-resetting timeout for the poller
            d.poll =3D new Delayed();

            d.cachedCharWidth =3D d.cachedTextHeight =3D null;
            d.measureLineCache =3D [];
            d.measureLineCachePos =3D 0;

            // Tracks when resetInput has punted to just putting a short
            // string instead of the (large) selection.
            d.inaccurateSelection =3D false;

            // Tracks the maximum line length so that the horizontal =
scrollbar
            // can be kept static when scrolling.
            d.maxLine =3D null;
            d.maxLineLength =3D 0;
            d.maxLineChanged =3D false;

            // Used for measuring wheel scrolling granularity
            d.wheelDX =3D d.wheelDY =3D d.wheelStartX =3D d.wheelStartY =
=3D null;

            return d;
        }

        // STATE UPDATES

        // Used to get the editor into a consistent state again when =
options change.

        function loadMode(cm) {
            cm.doc.mode =3D CodeMirror.getMode(cm.options, =
cm.doc.modeOption);
            cm.doc.iter(function(line) {
                if (line.stateAfter) line.stateAfter =3D null;
                if (line.styles) line.styles =3D null;
            });
            cm.doc.frontier =3D cm.doc.first;
            startWorker(cm, 100);
            cm.state.modeGen++;
            if (cm.curOp) regChange(cm);
        }

        function wrappingChanged(cm) {
            if (cm.options.lineWrapping) {
                cm.display.wrapper.className +=3D " CodeMirror-wrap";
                cm.display.sizer.style.minWidth =3D "";
            } else {
                cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(" CodeMirror-wrap", "");
                computeMaxLength(cm);
            }
            estimateLineHeights(cm);
            regChange(cm);
            clearCaches(cm);
            setTimeout(function(){updateScrollbars(cm);}, 100);
        }

        function estimateHeight(cm) {
            var th =3D textHeight(cm.display), wrapping =3D =
cm.options.lineWrapping;
            var perLine =3D wrapping && Math.max(5, =
cm.display.scroller.clientWidth / charWidth(cm.display) - 3);
            return function(line) {
                if (lineIsHidden(cm.doc, line))
                    return 0;
                else if (wrapping)
                    return (Math.ceil(line.text.length / perLine) || 1) =
* th;
                else
                    return th;
            };
        }

        function estimateLineHeights(cm) {
            var doc =3D cm.doc, est =3D estimateHeight(cm);
            doc.iter(function(line) {
                var estHeight =3D est(line);
                if (estHeight !=3D line.height) updateLineHeight(line, =
estHeight);
            });
        }

        function keyMapChanged(cm) {
            var map =3D keyMap[cm.options.keyMap], style =3D map.style;
            cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(/\s*cm-keymap-\S+/g, "") +
                (style ? " cm-keymap-" + style : "");
            cm.state.disableInput =3D map.disableInput;
        }

        function themeChanged(cm) {
            cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(/\s*cm-s-\S+/g, "") +
                cm.options.theme.replace(/(^|\s)\s*/g, " cm-s-");
            clearCaches(cm);
        }

        function guttersChanged(cm) {
            updateGutters(cm);
            regChange(cm);
            setTimeout(function(){alignHorizontally(cm);}, 20);
        }

        function updateGutters(cm) {
            var gutters =3D cm.display.gutters, specs =3D =
cm.options.gutters;
            removeChildren(gutters);
            for (var i =3D 0; i < specs.length; ++i) {
                var gutterClass =3D specs[i];
                var gElt =3D gutters.appendChild(elt("div", null, =
"CodeMirror-gutter " + gutterClass));
                if (gutterClass =3D=3D "CodeMirror-linenumbers") {
                    cm.display.lineGutter =3D gElt;
                    gElt.style.width =3D (cm.display.lineNumWidth || 1) =
+ "px";
                }
            }
            gutters.style.display =3D i ? "" : "none";
        }

        function lineLength(doc, line) {
            if (line.height =3D=3D 0) return 0;
            var len =3D line.text.length, merged, cur =3D line;
            while (merged =3D collapsedSpanAtStart(cur)) {
                var found =3D merged.find();
                cur =3D getLine(doc, found.from.line);
                len +=3D found.from.ch - found.to.ch;
            }
            cur =3D line;
            while (merged =3D collapsedSpanAtEnd(cur)) {
                var found =3D merged.find();
                len -=3D cur.text.length - found.from.ch;
                cur =3D getLine(doc, found.to.line);
                len +=3D cur.text.length - found.to.ch;
            }
            return len;
        }

        function computeMaxLength(cm) {
            var d =3D cm.display, doc =3D cm.doc;
            d.maxLine =3D getLine(doc, doc.first);
            d.maxLineLength =3D lineLength(doc, d.maxLine);
            d.maxLineChanged =3D true;
            doc.iter(function(line) {
                var len =3D lineLength(doc, line);
                if (len > d.maxLineLength) {
                    d.maxLineLength =3D len;
                    d.maxLine =3D line;
                }
            });
        }

        // Make sure the gutters options contains the element
        // "CodeMirror-linenumbers" when the lineNumbers option is true.
        function setGuttersForLineNumbers(options) {
            var found =3D false;
            for (var i =3D 0; i < options.gutters.length; ++i) {
                if (options.gutters[i] =3D=3D "CodeMirror-linenumbers") =
{
                    if (options.lineNumbers) found =3D true;
                    else options.gutters.splice(i--, 1);
                }
            }
            if (!found && options.lineNumbers)
                options.gutters.push("CodeMirror-linenumbers");
        }

        // SCROLLBARS

        // Re-synchronize the fake scrollbars with the actual size of =
the
        // content. Optionally force a scrollTop.
        function updateScrollbars(cm) {
            var d =3D cm.display, docHeight =3D cm.doc.height;
            var totalHeight =3D docHeight + paddingVert(d);
            d.sizer.style.minHeight =3D d.heightForcer.style.top =3D =
totalHeight + "px";
            d.gutters.style.height =3D Math.max(totalHeight, =
d.scroller.clientHeight - scrollerCutOff) + "px";
            var scrollHeight =3D Math.max(totalHeight, =
d.scroller.scrollHeight);
            var needsH =3D d.scroller.scrollWidth > =
(d.scroller.clientWidth + 1);
            var needsV =3D scrollHeight > (d.scroller.clientHeight + 1);
            if (needsV) {
                d.scrollbarV.style.display =3D "block";
                d.scrollbarV.style.bottom =3D needsH ? =
scrollbarWidth(d.measure) + "px" : "0";
                d.scrollbarV.firstChild.style.height =3D
                    (scrollHeight - d.scroller.clientHeight + =
d.scrollbarV.clientHeight) + "px";
            } else d.scrollbarV.style.display =3D "";
            if (needsH) {
                d.scrollbarH.style.display =3D "block";
                d.scrollbarH.style.right =3D needsV ? =
scrollbarWidth(d.measure) + "px" : "0";
                d.scrollbarH.firstChild.style.width =3D
                    (d.scroller.scrollWidth - d.scroller.clientWidth + =
d.scrollbarH.clientWidth) + "px";
            } else d.scrollbarH.style.display =3D "";
            if (needsH && needsV) {
                d.scrollbarFiller.style.display =3D "block";
                d.scrollbarFiller.style.height =3D =
d.scrollbarFiller.style.width =3D scrollbarWidth(d.measure) + "px";
            } else d.scrollbarFiller.style.display =3D "";
            if (needsH && cm.options.coverGutterNextToScrollbar && =
cm.options.fixedGutter) {
                d.gutterFiller.style.display =3D "block";
                d.gutterFiller.style.height =3D =
scrollbarWidth(d.measure) + "px";
                d.gutterFiller.style.width =3D d.gutters.offsetWidth + =
"px";
            } else d.gutterFiller.style.display =3D "";

            if (mac_geLion && scrollbarWidth(d.measure) =3D=3D=3D 0)
                d.scrollbarV.style.minWidth =3D =
d.scrollbarH.style.minHeight =3D mac_geMountainLion ? "18px" : "12px";
        }

        function visibleLines(display, doc, viewPort) {
            var top =3D display.scroller.scrollTop, height =3D =
display.wrapper.clientHeight;
            if (typeof viewPort =3D=3D "number") top =3D viewPort;
            else if (viewPort) {top =3D viewPort.top; height =3D =
viewPort.bottom - viewPort.top;}
            top =3D Math.floor(top - paddingTop(display));
            var bottom =3D Math.ceil(top + height);
            return {from: lineAtHeight(doc, top), to: lineAtHeight(doc, =
bottom)};
        }

        // LINE NUMBERS

        function alignHorizontally(cm) {
            var display =3D cm.display;
            if (!display.alignWidgets && (!display.gutters.firstChild || =
!cm.options.fixedGutter)) return;
            var comp =3D compensateForHScroll(display) - =
display.scroller.scrollLeft + cm.doc.scrollLeft;
            var gutterW =3D display.gutters.offsetWidth, l =3D comp + =
"px";
            for (var n =3D display.lineDiv.firstChild; n; n =3D =
n.nextSibling) if (n.alignable) {
                for (var i =3D 0, a =3D n.alignable; i < a.length; ++i) =
a[i].style.left =3D l;
            }
            if (cm.options.fixedGutter)
                display.gutters.style.left =3D (comp + gutterW) + "px";
        }

        function maybeUpdateLineNumberWidth(cm) {
            if (!cm.options.lineNumbers) return false;
            var doc =3D cm.doc, last =3D lineNumberFor(cm.options, =
doc.first + doc.size - 1), display =3D cm.display;
            if (last.length !=3D display.lineNumChars) {
                var test =3D display.measure.appendChild(elt("div", =
[elt("div", last)],
                    "CodeMirror-linenumber CodeMirror-gutter-elt"));
                var innerW =3D test.firstChild.offsetWidth, padding =3D =
test.offsetWidth - innerW;
                display.lineGutter.style.width =3D "";
                display.lineNumInnerWidth =3D Math.max(innerW, =
display.lineGutter.offsetWidth - padding);
                display.lineNumWidth =3D display.lineNumInnerWidth + =
padding;
                display.lineNumChars =3D display.lineNumInnerWidth ? =
last.length : -1;
                display.lineGutter.style.width =3D display.lineNumWidth =
+ "px";
                return true;
            }
            return false;
        }

        function lineNumberFor(options, i) {
            return String(options.lineNumberFormatter(i + =
options.firstLineNumber));
        }
        function compensateForHScroll(display) {
            return getRect(display.scroller).left - =
getRect(display.sizer).left;
        }

        // DISPLAY DRAWING

        function updateDisplay(cm, changes, viewPort, forced) {
            var oldFrom =3D cm.display.showingFrom, oldTo =3D =
cm.display.showingTo, updated;
            var visible =3D visibleLines(cm.display, cm.doc, viewPort);
            for (;;) {
                if (!updateDisplayInner(cm, changes, visible, forced)) =
break;
                forced =3D false;
                updated =3D true;
                updateSelection(cm);
                updateScrollbars(cm);

                // Clip forced viewport to actual scrollable area
                if (viewPort)
                    viewPort =3D =
Math.min(cm.display.scroller.scrollHeight - =
cm.display.scroller.clientHeight,
                            typeof viewPort =3D=3D "number" ? viewPort : =
viewPort.top);
                visible =3D visibleLines(cm.display, cm.doc, viewPort);
                if (visible.from >=3D cm.display.showingFrom && =
visible.to <=3D cm.display.showingTo)
                    break;
                changes =3D [];
            }

            if (updated) {
                signalLater(cm, "update", cm);
                if (cm.display.showingFrom !=3D oldFrom || =
cm.display.showingTo !=3D oldTo)
                    signalLater(cm, "viewportChange", cm, =
cm.display.showingFrom, cm.display.showingTo);
            }
            return updated;
        }

        // Uses a set of changes plus the current scroll position to
        // determine which DOM updates have to be made, and makes the
        // updates.
        function updateDisplayInner(cm, changes, visible, forced) {
            var display =3D cm.display, doc =3D cm.doc;
            if (!display.wrapper.clientWidth) {
                display.showingFrom =3D display.showingTo =3D doc.first;
                display.viewOffset =3D 0;
                return;
            }

            // Bail out if the visible area is already rendered and =
nothing changed.
            if (!forced && changes.length =3D=3D 0 &&
                visible.from > display.showingFrom && visible.to < =
display.showingTo)
                return;

            if (maybeUpdateLineNumberWidth(cm))
                changes =3D [{from: doc.first, to: doc.first + =
doc.size}];
            var gutterW =3D display.sizer.style.marginLeft =3D =
display.gutters.offsetWidth + "px";
            display.scrollbarH.style.left =3D cm.options.fixedGutter ? =
gutterW : "0";

            // Used to determine which lines need their line numbers =
updated
            var positionsChangedFrom =3D Infinity;
            if (cm.options.lineNumbers)
                for (var i =3D 0; i < changes.length; ++i)
                    if (changes[i].diff) { positionsChangedFrom =3D =
changes[i].from; break; }

            var end =3D doc.first + doc.size;
            var from =3D Math.max(visible.from - =
cm.options.viewportMargin, doc.first);
            var to =3D Math.min(end, visible.to + =
cm.options.viewportMargin);
            if (display.showingFrom < from && from - display.showingFrom =
< 20) from =3D Math.max(doc.first, display.showingFrom);
            if (display.showingTo > to && display.showingTo - to < 20) =
to =3D Math.min(end, display.showingTo);
            if (sawCollapsedSpans) {
                from =3D lineNo(visualLine(doc, getLine(doc, from)));
                while (to < end && lineIsHidden(doc, getLine(doc, to))) =
++to;
            }

            // Create a range of theoretically intact lines, and punch =
holes
            // in that using the change info.
            var intact =3D [{from: Math.max(display.showingFrom, =
doc.first),
                to: Math.min(display.showingTo, end)}];
            if (intact[0].from >=3D intact[0].to) intact =3D [];
            else intact =3D computeIntact(intact, changes);
            // When merged lines are present, we might have to reduce =
the
            // intact ranges because changes in continued fragments of =
the
            // intact lines do require the lines to be redrawn.
            if (sawCollapsedSpans)
                for (var i =3D 0; i < intact.length; ++i) {
                    var range =3D intact[i], merged;
                    while (merged =3D collapsedSpanAtEnd(getLine(doc, =
range.to - 1))) {
                        var newTo =3D merged.find().from.line;
                        if (newTo > range.from) range.to =3D newTo;
                        else { intact.splice(i--, 1); break; }
                    }
                }

            // Clip off the parts that won't be visible
            var intactLines =3D 0;
            for (var i =3D 0; i < intact.length; ++i) {
                var range =3D intact[i];
                if (range.from < from) range.from =3D from;
                if (range.to > to) range.to =3D to;
                if (range.from >=3D range.to) intact.splice(i--, 1);
                else intactLines +=3D range.to - range.from;
            }
            if (!forced && intactLines =3D=3D to - from && from =3D=3D =
display.showingFrom && to =3D=3D display.showingTo) {
                updateViewOffset(cm);
                return;
            }
            intact.sort(function(a, b) {return a.from - b.from;});

            // Avoid crashing on IE's "unspecified error" when in =
iframes
            try {
                var focused =3D document.activeElement;
            } catch(e) {}
            if (intactLines < (to - from) * .7) =
display.lineDiv.style.display =3D "none";
            patchDisplay(cm, from, to, intact, positionsChangedFrom);
            display.lineDiv.style.display =3D "";
            if (focused && document.activeElement !=3D focused && =
focused.offsetHeight) focused.focus();

            var different =3D from !=3D display.showingFrom || to !=3D =
display.showingTo ||
                display.lastSizeC !=3D display.wrapper.clientHeight;
            // This is just a bogus formula that detects when the editor =
is
            // resized or the font size changes.
            if (different) {
                display.lastSizeC =3D display.wrapper.clientHeight;
                startWorker(cm, 400);
            }
            display.showingFrom =3D from; display.showingTo =3D to;

            updateHeightsInViewport(cm);
            updateViewOffset(cm);

            return true;
        }

        function updateHeightsInViewport(cm) {
            var display =3D cm.display;
            var prevBottom =3D display.lineDiv.offsetTop;
            for (var node =3D display.lineDiv.firstChild, height; node; =
node =3D node.nextSibling) if (node.lineObj) {
                if (ie_lt8) {
                    var bot =3D node.offsetTop + node.offsetHeight;
                    height =3D bot - prevBottom;
                    prevBottom =3D bot;
                } else {
                    var box =3D getRect(node);
                    height =3D box.bottom - box.top;
                }
                var diff =3D node.lineObj.height - height;
                if (height < 2) height =3D textHeight(display);
                if (diff > .001 || diff < -.001) {
                    updateLineHeight(node.lineObj, height);
                    var widgets =3D node.lineObj.widgets;
                    if (widgets) for (var i =3D 0; i < widgets.length; =
++i)
                        widgets[i].height =3D =
widgets[i].node.offsetHeight;
                }
            }
        }

        function updateViewOffset(cm) {
            var off =3D cm.display.viewOffset =3D heightAtLine(cm, =
getLine(cm.doc, cm.display.showingFrom));
            // Position the mover div to align with the current virtual =
scroll position
            cm.display.mover.style.top =3D off + "px";
        }

        function computeIntact(intact, changes) {
            for (var i =3D 0, l =3D changes.length || 0; i < l; ++i) {
                var change =3D changes[i], intact2 =3D [], diff =3D =
change.diff || 0;
                for (var j =3D 0, l2 =3D intact.length; j < l2; ++j) {
                    var range =3D intact[j];
                    if (change.to <=3D range.from && change.diff) {
                        intact2.push({from: range.from + diff, to: =
range.to + diff});
                    } else if (change.to <=3D range.from || change.from =
>=3D range.to) {
                        intact2.push(range);
                    } else {
                        if (change.from > range.from)
                            intact2.push({from: range.from, to: =
change.from});
                        if (change.to < range.to)
                            intact2.push({from: change.to + diff, to: =
range.to + diff});
                    }
                }
                intact =3D intact2;
            }
            return intact;
        }

        function getDimensions(cm) {
            var d =3D cm.display, left =3D {}, width =3D {};
            for (var n =3D d.gutters.firstChild, i =3D 0; n; n =3D =
n.nextSibling, ++i) {
                left[cm.options.gutters[i]] =3D n.offsetLeft;
                width[cm.options.gutters[i]] =3D n.offsetWidth;
            }
            return {fixedPos: compensateForHScroll(d),
                gutterTotalWidth: d.gutters.offsetWidth,
                gutterLeft: left,
                gutterWidth: width,
                wrapperWidth: d.wrapper.clientWidth};
        }

        function patchDisplay(cm, from, to, intact, updateNumbersFrom) {
            var dims =3D getDimensions(cm);
            var display =3D cm.display, lineNumbers =3D =
cm.options.lineNumbers;
            if (!intact.length && (!webkit || =
!cm.display.currentWheelTarget))
                removeChildren(display.lineDiv);
            var container =3D display.lineDiv, cur =3D =
container.firstChild;

            function rm(node) {
                var next =3D node.nextSibling;
                if (webkit && mac && cm.display.currentWheelTarget =
=3D=3D node) {
                    node.style.display =3D "none";
                    node.lineObj =3D null;
                } else {
                    node.parentNode.removeChild(node);
                }
                return next;
            }

            var nextIntact =3D intact.shift(), lineN =3D from;
            cm.doc.iter(from, to, function(line) {
                if (nextIntact && nextIntact.to =3D=3D lineN) nextIntact =
=3D intact.shift();
                if (lineIsHidden(cm.doc, line)) {
                    if (line.height !=3D 0) updateLineHeight(line, 0);
                    if (line.widgets && cur.previousSibling) for (var i =
=3D 0; i < line.widgets.length; ++i) {
                        var w =3D line.widgets[i];
                        if (w.showIfHidden) {
                            var prev =3D cur.previousSibling;
                            if (/pre/i.test(prev.nodeName)) {
                                var wrap =3D elt("div", null, null, =
"position: relative");
                                prev.parentNode.replaceChild(wrap, =
prev);
                                wrap.appendChild(prev);
                                prev =3D wrap;
                            }
                            var wnode =3D prev.appendChild(elt("div", =
[w.node], "CodeMirror-linewidget"));
                            if (!w.handleMouseEvents) wnode.ignoreEvents =
=3D true;
                            positionLineWidget(w, wnode, prev, dims);
                        }
                    }
                } else if (nextIntact && nextIntact.from <=3D lineN && =
nextIntact.to > lineN) {
                    // This line is intact. Skip to the actual node. =
Update its
                    // line number if needed.
                    while (cur.lineObj !=3D line) cur =3D rm(cur);
                    if (lineNumbers && updateNumbersFrom <=3D lineN && =
cur.lineNumber)
                        setTextContent(cur.lineNumber, =
lineNumberFor(cm.options, lineN));
                    cur =3D cur.nextSibling;
                } else {
                    // For lines with widgets, make an attempt to find =
and reuse
                    // the existing element, so that widgets aren't =
needlessly
                    // removed and re-inserted into the dom
                    if (line.widgets) for (var j =3D 0, search =3D cur, =
reuse; search && j < 20; ++j, search =3D search.nextSibling)
                        if (search.lineObj =3D=3D line && =
/div/i.test(search.nodeName)) { reuse =3D search; break; }
                    // This line needs to be generated.
                    var lineNode =3D buildLineElement(cm, line, lineN, =
dims, reuse);
                    if (lineNode !=3D reuse) {
                        container.insertBefore(lineNode, cur);
                    } else {
                        while (cur !=3D reuse) cur =3D rm(cur);
                        cur =3D cur.nextSibling;
                    }

                    lineNode.lineObj =3D line;
                }
                ++lineN;
            });
            while (cur) cur =3D rm(cur);
        }

        function buildLineElement(cm, line, lineNo, dims, reuse) {
            var lineElement =3D lineContent(cm, line);
            var markers =3D line.gutterMarkers, display =3D cm.display, =
wrap;

            if (!cm.options.lineNumbers && !markers && !line.bgClass && =
!line.wrapClass && !line.widgets)
                return lineElement;

            // Lines with gutter elements, widgets or a background class =
need
            // to be wrapped again, and have the extra elements added to =
the
            // wrapper div

            if (reuse) {
                reuse.alignable =3D null;
                var isOk =3D true, widgetsSeen =3D 0, insertBefore =3D =
null;
                for (var n =3D reuse.firstChild, next; n; n =3D next) {
                    next =3D n.nextSibling;
                    if (!/\bCodeMirror-linewidget\b/.test(n.className)) =
{
                        reuse.removeChild(n);
                    } else {
                        for (var i =3D 0; i < line.widgets.length; ++i) =
{
                            var widget =3D line.widgets[i];
                            if (widget.node =3D=3D n.firstChild) {
                                if (!widget.above && !insertBefore) =
insertBefore =3D n;
                                positionLineWidget(widget, n, reuse, =
dims);
                                ++widgetsSeen;
                                break;
                            }
                        }
                        if (i =3D=3D line.widgets.length) { isOk =3D =
false; break; }
                    }
                }
                reuse.insertBefore(lineElement, insertBefore);
                if (isOk && widgetsSeen =3D=3D line.widgets.length) {
                    wrap =3D reuse;
                    reuse.className =3D line.wrapClass || "";
                }
            }
            if (!wrap) {
                wrap =3D elt("div", null, line.wrapClass, "position: =
relative");
                wrap.appendChild(lineElement);
            }
            // Kludge to make sure the styled element lies behind the =
selection (by z-index)
            if (line.bgClass)
                wrap.insertBefore(elt("div", null, line.bgClass + " =
CodeMirror-linebackground"), wrap.firstChild);
            if (cm.options.lineNumbers || markers) {
                var gutterWrap =3D wrap.insertBefore(elt("div", null, =
null, "position: absolute; left: " +
                        (cm.options.fixedGutter ? dims.fixedPos : =
-dims.gutterTotalWidth) + "px"),
                    wrap.firstChild);
                if (cm.options.fixedGutter) (wrap.alignable || =
(wrap.alignable =3D [])).push(gutterWrap);
                if (cm.options.lineNumbers && (!markers || =
!markers["CodeMirror-linenumbers"]))
                    wrap.lineNumber =3D gutterWrap.appendChild(
                        elt("div", lineNumberFor(cm.options, lineNo),
                            "CodeMirror-linenumber =
CodeMirror-gutter-elt",
                                "left: " + =
dims.gutterLeft["CodeMirror-linenumbers"] + "px; width: "
                                + display.lineNumInnerWidth + "px"));
                if (markers)
                    for (var k =3D 0; k < cm.options.gutters.length; =
++k) {
                        var id =3D cm.options.gutters[k], found =3D =
markers.hasOwnProperty(id) && markers[id];
                        if (found)
                            gutterWrap.appendChild(elt("div", [found], =
"CodeMirror-gutter-elt", "left: " +
                                dims.gutterLeft[id] + "px; width: " + =
dims.gutterWidth[id] + "px"));
                    }
            }
            if (ie_lt8) wrap.style.zIndex =3D 2;
            if (line.widgets && wrap !=3D reuse) for (var i =3D 0, ws =
=3D line.widgets; i < ws.length; ++i) {
                var widget =3D ws[i], node =3D elt("div", [widget.node], =
"CodeMirror-linewidget");
                if (!widget.handleMouseEvents) node.ignoreEvents =3D =
true;
                positionLineWidget(widget, node, wrap, dims);
                if (widget.above)
                    wrap.insertBefore(node, cm.options.lineNumbers && =
line.height !=3D 0 ? gutterWrap : lineElement);
                else
                    wrap.appendChild(node);
                signalLater(widget, "redraw");
            }
            return wrap;
        }

        function positionLineWidget(widget, node, wrap, dims) {
            if (widget.noHScroll) {
                (wrap.alignable || (wrap.alignable =3D [])).push(node);
                var width =3D dims.wrapperWidth;
                node.style.left =3D dims.fixedPos + "px";
                if (!widget.coverGutter) {
                    width -=3D dims.gutterTotalWidth;
                    node.style.paddingLeft =3D dims.gutterTotalWidth + =
"px";
                }
                node.style.width =3D width + "px";
            }
            if (widget.coverGutter) {
                node.style.zIndex =3D 5;
                node.style.position =3D "relative";
                if (!widget.noHScroll) node.style.marginLeft =3D =
-dims.gutterTotalWidth + "px";
            }
        }

        // SELECTION / CURSOR

        function updateSelection(cm) {
            var display =3D cm.display;
            var collapsed =3D posEq(cm.doc.sel.from, cm.doc.sel.to);
            if (collapsed || cm.options.showCursorWhenSelecting)
                updateSelectionCursor(cm);
            else
                display.cursor.style.display =3D =
display.otherCursor.style.display =3D "none";
            if (!collapsed)
                updateSelectionRange(cm);
            else
                display.selectionDiv.style.display =3D "none";

            // Move the hidden textarea near the cursor to prevent =
scrolling artifacts
            if (cm.options.moveInputWithCursor) {
                var headPos =3D cursorCoords(cm, cm.doc.sel.head, =
"div");
                var wrapOff =3D getRect(display.wrapper), lineOff =3D =
getRect(display.lineDiv);
                display.inputDiv.style.top =3D Math.max(0, =
Math.min(display.wrapper.clientHeight - 10,
                        headPos.top + lineOff.top - wrapOff.top)) + =
"px";
                display.inputDiv.style.left =3D Math.max(0, =
Math.min(display.wrapper.clientWidth - 10,
                        headPos.left + lineOff.left - wrapOff.left)) + =
"px";
            }
        }

        // No selection, plain cursor
        function updateSelectionCursor(cm) {
            var display =3D cm.display, pos =3D cursorCoords(cm, =
cm.doc.sel.head, "div");
            display.cursor.style.left =3D pos.left + "px";
            display.cursor.style.top =3D pos.top + "px";
            display.cursor.style.height =3D Math.max(0, pos.bottom - =
pos.top) * cm.options.cursorHeight + "px";
            display.cursor.style.display =3D "";

            if (pos.other) {
                display.otherCursor.style.display =3D "";
                display.otherCursor.style.left =3D pos.other.left + =
"px";
                display.otherCursor.style.top =3D pos.other.top + "px";
                display.otherCursor.style.height =3D (pos.other.bottom - =
pos.other.top) * .85 + "px";
            } else { display.otherCursor.style.display =3D "none"; }
        }

        // Highlight selection
        function updateSelectionRange(cm) {
            var display =3D cm.display, doc =3D cm.doc, sel =3D =
cm.doc.sel;
            var fragment =3D document.createDocumentFragment();
            var clientWidth =3D display.lineSpace.offsetWidth, pl =3D =
paddingLeft(cm.display);

            function add(left, top, width, bottom) {
                if (top < 0) top =3D 0;
                fragment.appendChild(elt("div", null, =
"CodeMirror-selected", "position: absolute; left: " + left +
                    "px; top: " + top + "px; width: " + (width =3D=3D =
null ? clientWidth - left : width) +
                    "px; height: " + (bottom - top) + "px"));
            }

            function drawForLine(line, fromArg, toArg) {
                var lineObj =3D getLine(doc, line);
                var lineLen =3D lineObj.text.length;
                var start, end;
                function coords(ch, bias) {
                    return charCoords(cm, Pos(line, ch), "div", lineObj, =
bias);
                }

                iterateBidiSections(getOrder(lineObj), fromArg || 0, =
toArg =3D=3D null ? lineLen : toArg, function(from, to, dir) {
                    var leftPos =3D coords(from, "left"), rightPos, =
left, right;
                    if (from =3D=3D to) {
                        rightPos =3D leftPos;
                        left =3D right =3D leftPos.left;
                    } else {
                        rightPos =3D coords(to - 1, "right");
                        if (dir =3D=3D "rtl") { var tmp =3D leftPos; =
leftPos =3D rightPos; rightPos =3D tmp; }
                        left =3D leftPos.left;
                        right =3D rightPos.right;
                    }
                    if (fromArg =3D=3D null && from =3D=3D 0) left =3D =
pl;
                    if (rightPos.top - leftPos.top > 3) { // Different =
lines, draw top part
                        add(left, leftPos.top, null, leftPos.bottom);
                        left =3D pl;
                        if (leftPos.bottom < rightPos.top) add(left, =
leftPos.bottom, null, rightPos.top);
                    }
                    if (toArg =3D=3D null && to =3D=3D lineLen) right =
=3D clientWidth;
                    if (!start || leftPos.top < start.top || leftPos.top =
=3D=3D start.top && leftPos.left < start.left)
                        start =3D leftPos;
                    if (!end || rightPos.bottom > end.bottom || =
rightPos.bottom =3D=3D end.bottom && rightPos.right > end.right)
                        end =3D rightPos;
                    if (left < pl + 1) left =3D pl;
                    add(left, rightPos.top, right - left, =
rightPos.bottom);
                });
                return {start: start, end: end};
            }

            if (sel.from.line =3D=3D sel.to.line) {
                drawForLine(sel.from.line, sel.from.ch, sel.to.ch);
            } else {
                var fromLine =3D getLine(doc, sel.from.line), toLine =3D =
getLine(doc, sel.to.line);
                var singleVLine =3D visualLine(doc, fromLine) =3D=3D =
visualLine(doc, toLine);
                var leftEnd =3D drawForLine(sel.from.line, sel.from.ch, =
singleVLine ? fromLine.text.length : null).end;
                var rightStart =3D drawForLine(sel.to.line, singleVLine =
? 0 : null, sel.to.ch).start;
                if (singleVLine) {
                    if (leftEnd.top < rightStart.top - 2) {
                        add(leftEnd.right, leftEnd.top, null, =
leftEnd.bottom);
                        add(pl, rightStart.top, rightStart.left, =
rightStart.bottom);
                    } else {
                        add(leftEnd.right, leftEnd.top, rightStart.left =
- leftEnd.right, leftEnd.bottom);
                    }
                }
                if (leftEnd.bottom < rightStart.top)
                    add(pl, leftEnd.bottom, null, rightStart.top);
            }

            removeChildrenAndAdd(display.selectionDiv, fragment);
            display.selectionDiv.style.display =3D "";
        }

        // Cursor-blinking
        function restartBlink(cm) {
            if (!cm.state.focused) return;
            var display =3D cm.display;
            clearInterval(display.blinker);
            var on =3D true;
            display.cursor.style.visibility =3D =
display.otherCursor.style.visibility =3D "";
            display.blinker =3D setInterval(function() {
                display.cursor.style.visibility =3D =
display.otherCursor.style.visibility =3D (on =3D !on) ? "" : "hidden";
            }, cm.options.cursorBlinkRate);
        }

        // HIGHLIGHT WORKER

        function startWorker(cm, time) {
            if (cm.doc.mode.startState && cm.doc.frontier < =
cm.display.showingTo)
                cm.state.highlight.set(time, bind(highlightWorker, cm));
        }

        function highlightWorker(cm) {
            var doc =3D cm.doc;
            if (doc.frontier < doc.first) doc.frontier =3D doc.first;
            if (doc.frontier >=3D cm.display.showingTo) return;
            var end =3D +new Date + cm.options.workTime;
            var state =3D copyState(doc.mode, getStateBefore(cm, =
doc.frontier));
            var changed =3D [], prevChange;
            doc.iter(doc.frontier, Math.min(doc.first + doc.size, =
cm.display.showingTo + 500), function(line) {
                if (doc.frontier >=3D cm.display.showingFrom) { // =
Visible
                    var oldStyles =3D line.styles;
                    line.styles =3D highlightLine(cm, line, state);
                    var ischange =3D !oldStyles || oldStyles.length !=3D =
line.styles.length;
                    for (var i =3D 0; !ischange && i < oldStyles.length; =
++i) ischange =3D oldStyles[i] !=3D line.styles[i];
                    if (ischange) {
                        if (prevChange && prevChange.end =3D=3D =
doc.frontier) prevChange.end++;
                        else changed.push(prevChange =3D {start: =
doc.frontier, end: doc.frontier + 1});
                    }
                    line.stateAfter =3D copyState(doc.mode, state);
                } else {
                    processLine(cm, line, state);
                    line.stateAfter =3D doc.frontier % 5 =3D=3D 0 ? =
copyState(doc.mode, state) : null;
                }
                ++doc.frontier;
                if (+new Date > end) {
                    startWorker(cm, cm.options.workDelay);
                    return true;
                }
            });
            if (changed.length)
                operation(cm, function() {
                    for (var i =3D 0; i < changed.length; ++i)
                        regChange(this, changed[i].start, =
changed[i].end);
                })();
        }

        // Finds the line to start with when starting a parse. Tries to
        // find a line with a stateAfter, so that it can start with a
        // valid state. If that fails, it returns the line with the
        // smallest indentation, which tends to need the least context =
to
        // parse correctly.
        function findStartLine(cm, n, precise) {
            var minindent, minline, doc =3D cm.doc;
            for (var search =3D n, lim =3D n - 100; search > lim; =
--search) {
                if (search <=3D doc.first) return doc.first;
                var line =3D getLine(doc, search - 1);
                if (line.stateAfter && (!precise || search <=3D =
doc.frontier)) return search;
                var indented =3D countColumn(line.text, null, =
cm.options.tabSize);
                if (minline =3D=3D null || minindent > indented) {
                    minline =3D search - 1;
                    minindent =3D indented;
                }
            }
            return minline;
        }

        function getStateBefore(cm, n, precise) {
            var doc =3D cm.doc, display =3D cm.display;
            if (!doc.mode.startState) return true;
            var pos =3D findStartLine(cm, n, precise), state =3D pos > =
doc.first && getLine(doc, pos-1).stateAfter;
            if (!state) state =3D startState(doc.mode);
            else state =3D copyState(doc.mode, state);
            doc.iter(pos, n, function(line) {
                processLine(cm, line, state);
                var save =3D pos =3D=3D n - 1 || pos % 5 =3D=3D 0 || pos =
>=3D display.showingFrom && pos < display.showingTo;
                line.stateAfter =3D save ? copyState(doc.mode, state) : =
null;
                ++pos;
            });
            return state;
        }

        // POSITION MEASUREMENT

        function paddingTop(display) {return =
display.lineSpace.offsetTop;}
        function paddingVert(display) {return display.mover.offsetHeight =
- display.lineSpace.offsetHeight;}
        function paddingLeft(display) {
            var e =3D removeChildrenAndAdd(display.measure, elt("pre", =
null, null, "text-align: left")).appendChild(elt("span", "x"));
            return e.offsetLeft;
        }

        function measureChar(cm, line, ch, data, bias) {
            var dir =3D -1;
            data =3D data || measureLine(cm, line);

            for (var pos =3D ch;; pos +=3D dir) {
                var r =3D data[pos];
                if (r) break;
                if (dir < 0 && pos =3D=3D 0) dir =3D 1;
            }
            bias =3D pos > ch ? "left" : pos < ch ? "right" : bias;
            if (bias =3D=3D "left" && r.leftSide) r =3D r.leftSide;
            else if (bias =3D=3D "right" && r.rightSide) r =3D =
r.rightSide;
            return {left: pos < ch ? r.right : r.left,
                right: pos > ch ? r.left : r.right,
                top: r.top,
                bottom: r.bottom};
        }

        function findCachedMeasurement(cm, line) {
            var cache =3D cm.display.measureLineCache;
            for (var i =3D 0; i < cache.length; ++i) {
                var memo =3D cache[i];
                if (memo.text =3D=3D line.text && memo.markedSpans =
=3D=3D line.markedSpans &&
                    cm.display.scroller.clientWidth =3D=3D memo.width &&
                    memo.classes =3D=3D line.textClass + "|" + =
line.bgClass + "|" + line.wrapClass)
                    return memo;
            }
        }

        function clearCachedMeasurement(cm, line) {
            var exists =3D findCachedMeasurement(cm, line);
            if (exists) exists.text =3D exists.measure =3D =
exists.markedSpans =3D null;
        }

        function measureLine(cm, line) {
            // First look in the cache
            var cached =3D findCachedMeasurement(cm, line);
            if (cached) return cached.measure;

            // Failing that, recompute and store result in cache
            var measure =3D measureLineInner(cm, line);
            var cache =3D cm.display.measureLineCache;
            var memo =3D {text: line.text, width: =
cm.display.scroller.clientWidth,
                markedSpans: line.markedSpans, measure: measure,
                classes: line.textClass + "|" + line.bgClass + "|" + =
line.wrapClass};
            if (cache.length =3D=3D 16) =
cache[++cm.display.measureLineCachePos % 16] =3D memo;
            else cache.push(memo);
            return measure;
        }

        function measureLineInner(cm, line) {
            var display =3D cm.display, measure =3D =
emptyArray(line.text.length);
            var pre =3D lineContent(cm, line, measure, true);

            // IE does not cache element positions of inline elements =
between
            // calls to getBoundingClientRect. This makes the loop =
below,
            // which gathers the positions of all the characters on the =
line,
            // do an amount of layout work quadratic to the number of
            // characters. When line wrapping is off, we try to improve =
things
            // by first subdividing the line into a bunch of inline =
blocks, so
            // that IE can reuse most of the layout information from =
caches
            // for those blocks. This does interfere with line wrapping, =
so it
            // doesn't work when wrapping is on, but in that case the
            // situation is slightly better, since IE does cache =
line-wrapping
            // information and only recomputes per-line.
            if (ie && !ie_lt8 && !cm.options.lineWrapping && =
pre.childNodes.length > 100) {
                var fragment =3D document.createDocumentFragment();
                var chunk =3D 10, n =3D pre.childNodes.length;
                for (var i =3D 0, chunks =3D Math.ceil(n / chunk); i < =
chunks; ++i) {
                    var wrap =3D elt("div", null, null, "display: =
inline-block");
                    for (var j =3D 0; j < chunk && n; ++j) {
                        wrap.appendChild(pre.firstChild);
                        --n;
                    }
                    fragment.appendChild(wrap);
                }
                pre.appendChild(fragment);
            }

            removeChildrenAndAdd(display.measure, pre);

            var outer =3D getRect(display.lineDiv);
            var vranges =3D [], data =3D emptyArray(line.text.length), =
maxBot =3D pre.offsetHeight;
            // Work around an IE7/8 bug where it will sometimes have =
randomly
            // replaced our pre with a clone at this point.
            if (ie_lt9 && display.measure.first !=3D pre)
                removeChildrenAndAdd(display.measure, pre);

            function measureRect(rect) {
                var top =3D rect.top - outer.top, bot =3D rect.bottom - =
outer.top;
                if (bot > maxBot) bot =3D maxBot;
                if (top < 0) top =3D 0;
                for (var i =3D vranges.length - 2; i >=3D 0; i -=3D 2) {
                    var rtop =3D vranges[i], rbot =3D vranges[i+1];
                    if (rtop > bot || rbot < top) continue;
                    if (rtop <=3D top && rbot >=3D bot ||
                        top <=3D rtop && bot >=3D rbot ||
                        Math.min(bot, rbot) - Math.max(top, rtop) >=3D =
(bot - top) >> 1) {
                        vranges[i] =3D Math.min(top, rtop);
                        vranges[i+1] =3D Math.max(bot, rbot);
                        break;
                    }
                }
                if (i < 0) { i =3D vranges.length; vranges.push(top, =
bot); }
                return {left: rect.left - outer.left,
                    right: rect.right - outer.left,
                    top: i, bottom: null};
            }
            function finishRect(rect) {
                rect.bottom =3D vranges[rect.top+1];
                rect.top =3D vranges[rect.top];
            }

            for (var i =3D 0, cur; i < measure.length; ++i) if (cur =3D =
measure[i]) {
                var node =3D cur, rect =3D null;
                // A widget might wrap, needs special care
                if (/\bCodeMirror-widget\b/.test(cur.className) && =
cur.getClientRects) {
                    if (cur.firstChild.nodeType =3D=3D 1) node =3D =
cur.firstChild;
                    var rects =3D node.getClientRects();
                    if (rects.length > 1) {
                        rect =3D data[i] =3D measureRect(rects[0]);
                        rect.rightSide =3D =
measureRect(rects[rects.length - 1]);
                    }
                }
                if (!rect) rect =3D data[i] =3D =
measureRect(getRect(node));
                if (cur.measureRight) rect.right =3D =
getRect(cur.measureRight).left;
                if (cur.leftSide) rect.leftSide =3D =
measureRect(getRect(cur.leftSide));
            }
            for (var i =3D 0, cur; i < data.length; ++i) if (cur =3D =
data[i]) {
                finishRect(cur);
                if (cur.leftSide) finishRect(cur.leftSide);
                if (cur.rightSide) finishRect(cur.rightSide);
            }
            return data;
        }

        function measureLineWidth(cm, line) {
            var hasBadSpan =3D false;
            if (line.markedSpans) for (var i =3D 0; i < =
line.markedSpans; ++i) {
                var sp =3D line.markedSpans[i];
                if (sp.collapsed && (sp.to =3D=3D null || sp.to =3D=3D =
line.text.length)) hasBadSpan =3D true;
            }
            var cached =3D !hasBadSpan && findCachedMeasurement(cm, =
line);
            if (cached) return measureChar(cm, line, line.text.length, =
cached.measure, "right").right;

            var pre =3D lineContent(cm, line, null, true);
            var end =3D =
pre.appendChild(zeroWidthElement(cm.display.measure));
            removeChildrenAndAdd(cm.display.measure, pre);
            return getRect(end).right - =
getRect(cm.display.lineDiv).left;
        }

        function clearCaches(cm) {
            cm.display.measureLineCache.length =3D =
cm.display.measureLineCachePos =3D 0;
            cm.display.cachedCharWidth =3D cm.display.cachedTextHeight =
=3D null;
            if (!cm.options.lineWrapping) cm.display.maxLineChanged =3D =
true;
            cm.display.lineNumChars =3D null;
        }

        function pageScrollX() { return window.pageXOffset || =
(document.documentElement || document.body).scrollLeft; }
        function pageScrollY() { return window.pageYOffset || =
(document.documentElement || document.body).scrollTop; }

        // Context is one of "line", "div" (display.lineDiv), =
"local"/null (editor), or "page"
        function intoCoordSystem(cm, lineObj, rect, context) {
            if (lineObj.widgets) for (var i =3D 0; i < =
lineObj.widgets.length; ++i) if (lineObj.widgets[i].above) {
                var size =3D widgetHeight(lineObj.widgets[i]);
                rect.top +=3D size; rect.bottom +=3D size;
            }
            if (context =3D=3D "line") return rect;
            if (!context) context =3D "local";
            var yOff =3D heightAtLine(cm, lineObj);
            if (context =3D=3D "local") yOff +=3D =
paddingTop(cm.display);
            else yOff -=3D cm.display.viewOffset;
            if (context =3D=3D "page" || context =3D=3D "window") {
                var lOff =3D getRect(cm.display.lineSpace);
                yOff +=3D lOff.top + (context =3D=3D "window" ? 0 : =
pageScrollY());
                var xOff =3D lOff.left + (context =3D=3D "window" ? 0 : =
pageScrollX());
                rect.left +=3D xOff; rect.right +=3D xOff;
            }
            rect.top +=3D yOff; rect.bottom +=3D yOff;
            return rect;
        }

        // Context may be "window", "page", "div", or "local"/null
        // Result is in "div" coords
        function fromCoordSystem(cm, coords, context) {
            if (context =3D=3D "div") return coords;
            var left =3D coords.left, top =3D coords.top;
            // First move into "page" coordinate system
            if (context =3D=3D "page") {
                left -=3D pageScrollX();
                top -=3D pageScrollY();
            } else if (context =3D=3D "local" || !context) {
                var localBox =3D getRect(cm.display.sizer);
                left +=3D localBox.left;
                top +=3D localBox.top;
            }

            var lineSpaceBox =3D getRect(cm.display.lineSpace);
            return {left: left - lineSpaceBox.left, top: top - =
lineSpaceBox.top};
        }

        function charCoords(cm, pos, context, lineObj, bias) {
            if (!lineObj) lineObj =3D getLine(cm.doc, pos.line);
            return intoCoordSystem(cm, lineObj, measureChar(cm, lineObj, =
pos.ch, null, bias), context);
        }

        function cursorCoords(cm, pos, context, lineObj, measurement) {
            lineObj =3D lineObj || getLine(cm.doc, pos.line);
            if (!measurement) measurement =3D measureLine(cm, lineObj);
            function get(ch, right) {
                var m =3D measureChar(cm, lineObj, ch, measurement, =
right ? "right" : "left");
                if (right) m.left =3D m.right; else m.right =3D m.left;
                return intoCoordSystem(cm, lineObj, m, context);
            }
            function getBidi(ch, partPos) {
                var part =3D order[partPos], right =3D part.level % 2;
                if (ch =3D=3D bidiLeft(part) && partPos && part.level < =
order[partPos - 1].level) {
                    part =3D order[--partPos];
                    ch =3D bidiRight(part) - (part.level % 2 ? 0 : 1);
                    right =3D true;
                } else if (ch =3D=3D bidiRight(part) && partPos < =
order.length - 1 && part.level < order[partPos + 1].level) {
                    part =3D order[++partPos];
                    ch =3D bidiLeft(part) - part.level % 2;
                    right =3D false;
                }
                if (right && ch =3D=3D part.to && ch > part.from) return =
get(ch - 1);
                return get(ch, right);
            }
            var order =3D getOrder(lineObj), ch =3D pos.ch;
            if (!order) return get(ch);
            var partPos =3D getBidiPartAt(order, ch);
            var val =3D getBidi(ch, partPos);
            if (bidiOther !=3D null) val.other =3D getBidi(ch, =
bidiOther);
            return val;
        }

        function PosWithInfo(line, ch, outside, xRel) {
            var pos =3D new Pos(line, ch);
            pos.xRel =3D xRel;
            if (outside) pos.outside =3D true;
            return pos;
        }

        // Coords must be lineSpace-local
        function coordsChar(cm, x, y) {
            var doc =3D cm.doc;
            y +=3D cm.display.viewOffset;
            if (y < 0) return PosWithInfo(doc.first, 0, true, -1);
            var lineNo =3D lineAtHeight(doc, y), last =3D doc.first + =
doc.size - 1;
            if (lineNo > last)
                return PosWithInfo(doc.first + doc.size - 1, =
getLine(doc, last).text.length, true, 1);
            if (x < 0) x =3D 0;

            for (;;) {
                var lineObj =3D getLine(doc, lineNo);
                var found =3D coordsCharInner(cm, lineObj, lineNo, x, =
y);
                var merged =3D collapsedSpanAtEnd(lineObj);
                var mergedPos =3D merged && merged.find();
                if (merged && (found.ch > mergedPos.from.ch || found.ch =
=3D=3D mergedPos.from.ch && found.xRel > 0))
                    lineNo =3D mergedPos.to.line;
                else
                    return found;
            }
        }

        function coordsCharInner(cm, lineObj, lineNo, x, y) {
            var innerOff =3D y - heightAtLine(cm, lineObj);
            var wrongLine =3D false, adjust =3D 2 * =
cm.display.wrapper.clientWidth;
            var measurement =3D measureLine(cm, lineObj);

            function getX(ch) {
                var sp =3D cursorCoords(cm, Pos(lineNo, ch), "line",
                    lineObj, measurement);
                wrongLine =3D true;
                if (innerOff > sp.bottom) return sp.left - adjust;
                else if (innerOff < sp.top) return sp.left + adjust;
                else wrongLine =3D false;
                return sp.left;
            }

            var bidi =3D getOrder(lineObj), dist =3D =
lineObj.text.length;
            var from =3D lineLeft(lineObj), to =3D lineRight(lineObj);
            var fromX =3D getX(from), fromOutside =3D wrongLine, toX =3D =
getX(to), toOutside =3D wrongLine;

            if (x > toX) return PosWithInfo(lineNo, to, toOutside, 1);
            // Do a binary search between these bounds.
            for (;;) {
                if (bidi ? to =3D=3D from || to =3D=3D =
moveVisually(lineObj, from, 1) : to - from <=3D 1) {
                    var ch =3D x < fromX || x - fromX <=3D toX - x ? =
from : to;
                    var xDiff =3D x - (ch =3D=3D from ? fromX : toX);
                    while =
(isExtendingChar.test(lineObj.text.charAt(ch))) ++ch;
                    var pos =3D PosWithInfo(lineNo, ch, ch =3D=3D from ? =
fromOutside : toOutside,
                            xDiff < 0 ? -1 : xDiff ? 1 : 0);
                    return pos;
                }
                var step =3D Math.ceil(dist / 2), middle =3D from + =
step;
                if (bidi) {
                    middle =3D from;
                    for (var i =3D 0; i < step; ++i) middle =3D =
moveVisually(lineObj, middle, 1);
                }
                var middleX =3D getX(middle);
                if (middleX > x) {to =3D middle; toX =3D middleX; if =
(toOutside =3D wrongLine) toX +=3D 1000; dist =3D step;}
                else {from =3D middle; fromX =3D middleX; fromOutside =
=3D wrongLine; dist -=3D step;}
            }
        }

        var measureText;
        function textHeight(display) {
            if (display.cachedTextHeight !=3D null) return =
display.cachedTextHeight;
            if (measureText =3D=3D null) {
                measureText =3D elt("pre");
                // Measure a bunch of lines, for browsers that compute
                // fractional heights.
                for (var i =3D 0; i < 49; ++i) {
                    =
measureText.appendChild(document.createTextNode("x"));
                    measureText.appendChild(elt("br"));
                }
                measureText.appendChild(document.createTextNode("x"));
            }
            removeChildrenAndAdd(display.measure, measureText);
            var height =3D measureText.offsetHeight / 50;
            if (height > 3) display.cachedTextHeight =3D height;
            removeChildren(display.measure);
            return height || 1;
        }

        function charWidth(display) {
            if (display.cachedCharWidth !=3D null) return =
display.cachedCharWidth;
            var anchor =3D elt("span", "x");
            var pre =3D elt("pre", [anchor]);
            removeChildrenAndAdd(display.measure, pre);
            var width =3D anchor.offsetWidth;
            if (width > 2) display.cachedCharWidth =3D width;
            return width || 10;
        }

        // OPERATIONS

        // Operations are used to wrap changes in such a way that each
        // change won't have to update the cursor and display (which =
would
        // be awkward, slow, and error-prone), but instead updates are
        // batched and then all combined and executed at once.

        var nextOpId =3D 0;
        function startOperation(cm) {
            cm.curOp =3D {
                // An array of ranges of lines that have to be updated. =
See
                // updateDisplay.
                changes: [],
                forceUpdate: false,
                updateInput: null,
                userSelChange: null,
                textChanged: null,
                selectionChanged: false,
                cursorActivity: false,
                updateMaxLine: false,
                updateScrollPos: false,
                id: ++nextOpId
            };
            if (!delayedCallbackDepth++) delayedCallbacks =3D [];
        }

        function endOperation(cm) {
            var op =3D cm.curOp, doc =3D cm.doc, display =3D cm.display;
            cm.curOp =3D null;

            if (op.updateMaxLine) computeMaxLength(cm);
            if (display.maxLineChanged && !cm.options.lineWrapping && =
display.maxLine) {
                var width =3D measureLineWidth(cm, display.maxLine);
                display.sizer.style.minWidth =3D Math.max(0, width + 3 + =
scrollerCutOff) + "px";
                display.maxLineChanged =3D false;
                var maxScrollLeft =3D Math.max(0, =
display.sizer.offsetLeft + display.sizer.offsetWidth - =
display.scroller.clientWidth);
                if (maxScrollLeft < doc.scrollLeft && =
!op.updateScrollPos)
                    setScrollLeft(cm, =
Math.min(display.scroller.scrollLeft, maxScrollLeft), true);
            }
            var newScrollPos, updated;
            if (op.updateScrollPos) {
                newScrollPos =3D op.updateScrollPos;
            } else if (op.selectionChanged && =
display.scroller.clientHeight) { // don't rescroll if not visible
                var coords =3D cursorCoords(cm, doc.sel.head);
                newScrollPos =3D calculateScrollPos(cm, coords.left, =
coords.top, coords.left, coords.bottom);
            }
            if (op.changes.length || op.forceUpdate || newScrollPos && =
newScrollPos.scrollTop !=3D null) {
                updated =3D updateDisplay(cm, op.changes, newScrollPos =
&& newScrollPos.scrollTop, op.forceUpdate);
                if (cm.display.scroller.offsetHeight) cm.doc.scrollTop =
=3D cm.display.scroller.scrollTop;
            }
            if (!updated && op.selectionChanged) updateSelection(cm);
            if (op.updateScrollPos) {
                display.scroller.scrollTop =3D =
display.scrollbarV.scrollTop =3D doc.scrollTop =3D =
newScrollPos.scrollTop;
                display.scroller.scrollLeft =3D =
display.scrollbarH.scrollLeft =3D doc.scrollLeft =3D =
newScrollPos.scrollLeft;
                alignHorizontally(cm);
                if (op.scrollToPos)
                    scrollPosIntoView(cm, clipPos(cm.doc, =
op.scrollToPos), op.scrollToPosMargin);
            } else if (newScrollPos) {
                scrollCursorIntoView(cm);
            }
            if (op.selectionChanged) restartBlink(cm);

            if (cm.state.focused && op.updateInput)
                resetInput(cm, op.userSelChange);

            var hidden =3D op.maybeHiddenMarkers, unhidden =3D =
op.maybeUnhiddenMarkers;
            if (hidden) for (var i =3D 0; i < hidden.length; ++i)
                if (!hidden[i].lines.length) signal(hidden[i], "hide");
            if (unhidden) for (var i =3D 0; i < unhidden.length; ++i)
                if (unhidden[i].lines.length) signal(unhidden[i], =
"unhide");

            var delayed;
            if (!--delayedCallbackDepth) {
                delayed =3D delayedCallbacks;
                delayedCallbacks =3D null;
            }
            if (op.textChanged)
                signal(cm, "change", cm, op.textChanged);
            if (op.cursorActivity) signal(cm, "cursorActivity", cm);
            if (delayed) for (var i =3D 0; i < delayed.length; ++i) =
delayed[i]();
        }

        // Wraps a function in an operation. Returns the wrapped =
function.
        function operation(cm1, f) {
            return function() {
                var cm =3D cm1 || this, withOp =3D !cm.curOp;
                if (withOp) startOperation(cm);
                try { var result =3D f.apply(cm, arguments); }
                finally { if (withOp) endOperation(cm); }
                return result;
            };
        }
        function docOperation(f) {
            return function() {
                var withOp =3D this.cm && !this.cm.curOp, result;
                if (withOp) startOperation(this.cm);
                try { result =3D f.apply(this, arguments); }
                finally { if (withOp) endOperation(this.cm); }
                return result;
            };
        }
        function runInOp(cm, f) {
            var withOp =3D !cm.curOp, result;
            if (withOp) startOperation(cm);
            try { result =3D f(); }
            finally { if (withOp) endOperation(cm); }
            return result;
        }

        function regChange(cm, from, to, lendiff) {
            if (from =3D=3D null) from =3D cm.doc.first;
            if (to =3D=3D null) to =3D cm.doc.first + cm.doc.size;
            cm.curOp.changes.push({from: from, to: to, diff: lendiff});
        }

        // INPUT HANDLING

        function slowPoll(cm) {
            if (cm.display.pollingFast) return;
            cm.display.poll.set(cm.options.pollInterval, function() {
                readInput(cm);
                if (cm.state.focused) slowPoll(cm);
            });
        }

        function fastPoll(cm) {
            var missed =3D false;
            cm.display.pollingFast =3D true;
            function p() {
                var changed =3D readInput(cm);
                if (!changed && !missed) {missed =3D true; =
cm.display.poll.set(60, p);}
                else {cm.display.pollingFast =3D false; slowPoll(cm);}
            }
            cm.display.poll.set(20, p);
        }

        // prevInput is a hack to work with IME. If we reset the =
textarea
        // on every change, that breaks IME. So we look for changes
        // compared to the previous content instead. (Modern browsers =
have
        // events that indicate IME taking place, but these are not =
widely
        // supported or compatible enough yet to rely on.)
        function readInput(cm) {
            var input =3D cm.display.input, prevInput =3D =
cm.display.prevInput, doc =3D cm.doc, sel =3D doc.sel;
            if (!cm.state.focused || hasSelection(input) || =
isReadOnly(cm) || cm.state.disableInput) return false;
            var text =3D input.value;
            if (text =3D=3D prevInput && posEq(sel.from, sel.to)) return =
false;
            if (ie && !ie_lt9 && cm.display.inputHasSelection =3D=3D=3D =
text) {
                resetInput(cm, true);
                return false;
            }

            var withOp =3D !cm.curOp;
            if (withOp) startOperation(cm);
            sel.shift =3D false;
            var same =3D 0, l =3D Math.min(prevInput.length, =
text.length);
            while (same < l && prevInput.charCodeAt(same) =3D=3D =
text.charCodeAt(same)) ++same;
            var from =3D sel.from, to =3D sel.to;
            if (same < prevInput.length)
                from =3D Pos(from.line, from.ch - (prevInput.length - =
same));
            else if (cm.state.overwrite && posEq(from, to) && =
!cm.state.pasteIncoming)
                to =3D Pos(to.line, Math.min(getLine(doc, =
to.line).text.length, to.ch + (text.length - same)));

            var updateInput =3D cm.curOp.updateInput;
            var changeEvent =3D {from: from, to: to, text: =
splitLines(text.slice(same)),
                origin: cm.state.pasteIncoming ? "paste" : "+input"};
            makeChange(cm.doc, changeEvent, "end");
            cm.curOp.updateInput =3D updateInput;
            signalLater(cm, "inputRead", cm, changeEvent);

            if (text.length > 1000 || text.indexOf("\n") > -1) =
input.value =3D cm.display.prevInput =3D "";
            else cm.display.prevInput =3D text;
            if (withOp) endOperation(cm);
            cm.state.pasteIncoming =3D false;
            return true;
        }

        function resetInput(cm, user) {
            var minimal, selected, doc =3D cm.doc;
            if (!posEq(doc.sel.from, doc.sel.to)) {
                cm.display.prevInput =3D "";
                minimal =3D hasCopyEvent &&
                    (doc.sel.to.line - doc.sel.from.line > 100 || =
(selected =3D cm.getSelection()).length > 1000);
                var content =3D minimal ? "-" : selected || =
cm.getSelection();
                cm.display.input.value =3D content;
                if (cm.state.focused) selectInput(cm.display.input);
                if (ie && !ie_lt9) cm.display.inputHasSelection =3D =
content;
            } else if (user) {
                cm.display.prevInput =3D cm.display.input.value =3D "";
                if (ie && !ie_lt9) cm.display.inputHasSelection =3D =
null;
            }
            cm.display.inaccurateSelection =3D minimal;
        }

        function focusInput(cm) {
            if (cm.options.readOnly !=3D "nocursor" && (!mobile || =
document.activeElement !=3D cm.display.input))
                try {cm.display.input.focus();} catch(e) {}
        }

        function isReadOnly(cm) {
            return cm.options.readOnly || cm.doc.cantEdit;
        }

        // EVENT HANDLERS

        function registerEventHandlers(cm) {
            var d =3D cm.display;
            on(d.scroller, "mousedown", operation(cm, onMouseDown));
            if (ie)
                on(d.scroller, "dblclick", operation(cm, function(e) {
                    if (signalDOMEvent(cm, e)) return;
                    var pos =3D posFromMouse(cm, e);
                    if (!pos || clickInGutter(cm, e) || =
eventInWidget(cm.display, e)) return;
                    e_preventDefault(e);
                    var word =3D findWordAt(getLine(cm.doc, =
pos.line).text, pos);
                    extendSelection(cm.doc, word.from, word.to);
                }));
            else
                on(d.scroller, "dblclick", function(e) { =
signalDOMEvent(cm, e) || e_preventDefault(e); });
            on(d.lineSpace, "selectstart", function(e) {
                if (!eventInWidget(d, e)) e_preventDefault(e);
            });
            // Gecko browsers fire contextmenu *after* opening the menu, =
at
            // which point we can't mess with it anymore. Context menu =
is
            // handled in onMouseDown for Gecko.
            if (!captureMiddleClick) on(d.scroller, "contextmenu", =
function(e) {onContextMenu(cm, e);});

            on(d.scroller, "scroll", function() {
                if (d.scroller.clientHeight) {
                    setScrollTop(cm, d.scroller.scrollTop);
                    setScrollLeft(cm, d.scroller.scrollLeft, true);
                    signal(cm, "scroll", cm);
                }
            });
            on(d.scrollbarV, "scroll", function() {
                if (d.scroller.clientHeight) setScrollTop(cm, =
d.scrollbarV.scrollTop);
            });
            on(d.scrollbarH, "scroll", function() {
                if (d.scroller.clientHeight) setScrollLeft(cm, =
d.scrollbarH.scrollLeft);
            });

            on(d.scroller, "mousewheel", function(e){onScrollWheel(cm, =
e);});
            on(d.scroller, "DOMMouseScroll", =
function(e){onScrollWheel(cm, e);});

            function reFocus() { if (cm.state.focused) =
setTimeout(bind(focusInput, cm), 0); }
            on(d.scrollbarH, "mousedown", reFocus);
            on(d.scrollbarV, "mousedown", reFocus);
            // Prevent wrapper from ever scrolling
            on(d.wrapper, "scroll", function() { d.wrapper.scrollTop =3D =
d.wrapper.scrollLeft =3D 0; });

            var resizeTimer;
            function onResize() {
                if (resizeTimer =3D=3D null) resizeTimer =3D =
setTimeout(function() {
                    resizeTimer =3D null;
                    // Might be a text scaling operation, clear size =
caches.
                    d.cachedCharWidth =3D d.cachedTextHeight =3D =
knownScrollbarWidth =3D null;
                    clearCaches(cm);
                    runInOp(cm, bind(regChange, cm));
                }, 100);
            }
            on(window, "resize", onResize);
            // Above handler holds on to the editor and its data =
structures.
            // Here we poll to unregister it when the editor is no =
longer in
            // the document, so that it can be garbage-collected.
            function unregister() {
                for (var p =3D d.wrapper.parentNode; p && p !=3D =
document.body; p =3D p.parentNode) {}
                if (p) setTimeout(unregister, 5000);
                else off(window, "resize", onResize);
            }
            setTimeout(unregister, 5000);

            on(d.input, "keyup", operation(cm, function(e) {
                if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
                if (e.keyCode =3D=3D 16) cm.doc.sel.shift =3D false;
            }));
            on(d.input, "input", bind(fastPoll, cm));
            on(d.input, "keydown", operation(cm, onKeyDown));
            on(d.input, "keypress", operation(cm, onKeyPress));
            on(d.input, "focus", bind(onFocus, cm));
            on(d.input, "blur", bind(onBlur, cm));

            function drag_(e) {
                if (signalDOMEvent(cm, e) || cm.options.onDragEvent && =
cm.options.onDragEvent(cm, addStop(e))) return;
                e_stop(e);
            }
            if (cm.options.dragDrop) {
                on(d.scroller, "dragstart", function(e){onDragStart(cm, =
e);});
                on(d.scroller, "dragenter", drag_);
                on(d.scroller, "dragover", drag_);
                on(d.scroller, "drop", operation(cm, onDrop));
            }
            on(d.scroller, "paste", function(e){
                if (eventInWidget(d, e)) return;
                focusInput(cm);
                fastPoll(cm);
            });
            on(d.input, "paste", function() {
                cm.state.pasteIncoming =3D true;
                fastPoll(cm);
            });

            function prepareCopy() {
                if (d.inaccurateSelection) {
                    d.prevInput =3D "";
                    d.inaccurateSelection =3D false;
                    d.input.value =3D cm.getSelection();
                    selectInput(d.input);
                }
            }
            on(d.input, "cut", prepareCopy);
            on(d.input, "copy", prepareCopy);

            // Needed to handle Tab key in KHTML
            if (khtml) on(d.sizer, "mouseup", function() {
                if (document.activeElement =3D=3D d.input) =
d.input.blur();
                focusInput(cm);
            });
        }

        function eventInWidget(display, e) {
            for (var n =3D e_target(e); n !=3D display.wrapper; n =3D =
n.parentNode) {
                if (!n || n.ignoreEvents || n.parentNode =3D=3D =
display.sizer && n !=3D display.mover) return true;
            }
        }

        function posFromMouse(cm, e, liberal) {
            var display =3D cm.display;
            if (!liberal) {
                var target =3D e_target(e);
                if (target =3D=3D display.scrollbarH || target =3D=3D =
display.scrollbarH.firstChild ||
                    target =3D=3D display.scrollbarV || target =3D=3D =
display.scrollbarV.firstChild ||
                    target =3D=3D display.scrollbarFiller || target =
=3D=3D display.gutterFiller) return null;
            }
            var x, y, space =3D getRect(display.lineSpace);
            // Fails unpredictably on IE[67] when mouse is dragged =
around quickly.
            try { x =3D e.clientX; y =3D e.clientY; } catch (e) { return =
null; }
            return coordsChar(cm, x - space.left, y - space.top);
        }

        var lastClick, lastDoubleClick;
        function onMouseDown(e) {
            if (signalDOMEvent(this, e)) return;
            var cm =3D this, display =3D cm.display, doc =3D cm.doc, sel =
=3D doc.sel;
            sel.shift =3D e.shiftKey;

            if (eventInWidget(display, e)) {
                if (!webkit) {
                    display.scroller.draggable =3D false;
                    setTimeout(function(){display.scroller.draggable =3D =
true;}, 100);
                }
                return;
            }
            if (clickInGutter(cm, e)) return;
            var start =3D posFromMouse(cm, e);

            switch (e_button(e)) {
                case 3:
                    if (captureMiddleClick) onContextMenu.call(cm, cm, =
e);
                    return;
                case 2:
                    if (start) extendSelection(cm.doc, start);
                    setTimeout(bind(focusInput, cm), 20);
                    e_preventDefault(e);
                    return;
            }
            // For button 1, if it was clicked inside the editor
            // (posFromMouse returning non-null), we have to adjust the
            // selection.
            if (!start) {if (e_target(e) =3D=3D display.scroller) =
e_preventDefault(e); return;}

            if (!cm.state.focused) onFocus(cm);

            var now =3D +new Date, type =3D "single";
            if (lastDoubleClick && lastDoubleClick.time > now - 400 && =
posEq(lastDoubleClick.pos, start)) {
                type =3D "triple";
                e_preventDefault(e);
                setTimeout(bind(focusInput, cm), 20);
                selectLine(cm, start.line);
            } else if (lastClick && lastClick.time > now - 400 && =
posEq(lastClick.pos, start)) {
                type =3D "double";
                lastDoubleClick =3D {time: now, pos: start};
                e_preventDefault(e);
                var word =3D findWordAt(getLine(doc, start.line).text, =
start);
                extendSelection(cm.doc, word.from, word.to);
            } else { lastClick =3D {time: now, pos: start}; }

            var last =3D start;
            if (cm.options.dragDrop && dragAndDrop && !isReadOnly(cm) && =
!posEq(sel.from, sel.to) &&
                !posLess(start, sel.from) && !posLess(sel.to, start) && =
type =3D=3D "single") {
                var dragEnd =3D operation(cm, function(e2) {
                    if (webkit) display.scroller.draggable =3D false;
                    cm.state.draggingText =3D false;
                    off(document, "mouseup", dragEnd);
                    off(display.scroller, "drop", dragEnd);
                    if (Math.abs(e.clientX - e2.clientX) + =
Math.abs(e.clientY - e2.clientY) < 10) {
                        e_preventDefault(e2);
                        extendSelection(cm.doc, start);
                        focusInput(cm);
                    }
                });
                // Let the drag handler handle this.
                if (webkit) display.scroller.draggable =3D true;
                cm.state.draggingText =3D dragEnd;
                // IE's approach to draggable
                if (display.scroller.dragDrop) =
display.scroller.dragDrop();
                on(document, "mouseup", dragEnd);
                on(display.scroller, "drop", dragEnd);
                return;
            }
            e_preventDefault(e);
            if (type =3D=3D "single") extendSelection(cm.doc, =
clipPos(doc, start));

            var startstart =3D sel.from, startend =3D sel.to, lastPos =
=3D start;

            function doSelect(cur) {
                if (posEq(lastPos, cur)) return;
                lastPos =3D cur;

                if (type =3D=3D "single") {
                    extendSelection(cm.doc, clipPos(doc, start), cur);
                    return;
                }

                startstart =3D clipPos(doc, startstart);
                startend =3D clipPos(doc, startend);
                if (type =3D=3D "double") {
                    var word =3D findWordAt(getLine(doc, cur.line).text, =
cur);
                    if (posLess(cur, startstart)) =
extendSelection(cm.doc, word.from, startend);
                    else extendSelection(cm.doc, startstart, word.to);
                } else if (type =3D=3D "triple") {
                    if (posLess(cur, startstart)) =
extendSelection(cm.doc, startend, clipPos(doc, Pos(cur.line, 0)));
                    else extendSelection(cm.doc, startstart, =
clipPos(doc, Pos(cur.line + 1, 0)));
                }
            }

            var editorSize =3D getRect(display.wrapper);
            // Used to ensure timeout re-tries don't fire when another =
extend
            // happened in the meantime (clearTimeout isn't reliable -- =
at
            // least on Chrome, the timeouts still happen even when =
cleared,
            // if the clear happens after their scheduled firing time).
            var counter =3D 0;

            function extend(e) {
                var curCount =3D ++counter;
                var cur =3D posFromMouse(cm, e, true);
                if (!cur) return;
                if (!posEq(cur, last)) {
                    if (!cm.state.focused) onFocus(cm);
                    last =3D cur;
                    doSelect(cur);
                    var visible =3D visibleLines(display, doc);
                    if (cur.line >=3D visible.to || cur.line < =
visible.from)
                        setTimeout(operation(cm, function(){if (counter =
=3D=3D curCount) extend(e);}), 150);
                } else {
                    var outside =3D e.clientY < editorSize.top ? -20 : =
e.clientY > editorSize.bottom ? 20 : 0;
                    if (outside) setTimeout(operation(cm, function() {
                        if (counter !=3D curCount) return;
                        display.scroller.scrollTop +=3D outside;
                        extend(e);
                    }), 50);
                }
            }

            function done(e) {
                counter =3D Infinity;
                e_preventDefault(e);
                focusInput(cm);
                off(document, "mousemove", move);
                off(document, "mouseup", up);
            }

            var move =3D operation(cm, function(e) {
                if (!ie && !e_button(e)) done(e);
                else extend(e);
            });
            var up =3D operation(cm, done);
            on(document, "mousemove", move);
            on(document, "mouseup", up);
        }

        function clickInGutter(cm, e) {
            var display =3D cm.display;
            try { var mX =3D e.clientX, mY =3D e.clientY; }
            catch(e) { return false; }

            if (mX >=3D Math.floor(getRect(display.gutters).right)) =
return false;
            e_preventDefault(e);
            if (!hasHandler(cm, "gutterClick")) return true;

            var lineBox =3D getRect(display.lineDiv);
            if (mY > lineBox.bottom) return true;
            mY -=3D lineBox.top - display.viewOffset;

            for (var i =3D 0; i < cm.options.gutters.length; ++i) {
                var g =3D display.gutters.childNodes[i];
                if (g && getRect(g).right >=3D mX) {
                    var line =3D lineAtHeight(cm.doc, mY);
                    var gutter =3D cm.options.gutters[i];
                    signalLater(cm, "gutterClick", cm, line, gutter, e);
                    break;
                }
            }
            return true;
        }

        // Kludge to work around strange IE behavior where it'll =
sometimes
        // re-fire a series of drag-related events right after the drop =
(#1551)
        var lastDrop =3D 0;

        function onDrop(e) {
            var cm =3D this;
            if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e) || =
(cm.options.onDragEvent && cm.options.onDragEvent(cm, addStop(e))))
                return;
            e_preventDefault(e);
            if (ie) lastDrop =3D +new Date;
            var pos =3D posFromMouse(cm, e, true), files =3D =
e.dataTransfer.files;
            if (!pos || isReadOnly(cm)) return;
            if (files && files.length && window.FileReader && =
window.File) {
                var n =3D files.length, text =3D Array(n), read =3D 0;
                var loadFile =3D function(file, i) {
                    var reader =3D new FileReader;
                    reader.onload =3D function() {
                        text[i] =3D reader.result;
                        if (++read =3D=3D n) {
                            pos =3D clipPos(cm.doc, pos);
                            makeChange(cm.doc, {from: pos, to: pos, =
text: splitLines(text.join("\n")), origin: "paste"}, "around");
                        }
                    };
                    reader.readAsText(file);
                };
                for (var i =3D 0; i < n; ++i) loadFile(files[i], i);
            } else {
                // Don't do a replace if the drop happened inside of the =
selected text.
                if (cm.state.draggingText && !(posLess(pos, =
cm.doc.sel.from) || posLess(cm.doc.sel.to, pos))) {
                    cm.state.draggingText(e);
                    // Ensure the editor is re-focused
                    setTimeout(bind(focusInput, cm), 20);
                    return;
                }
                try {
                    var text =3D e.dataTransfer.getData("Text");
                    if (text) {
                        var curFrom =3D cm.doc.sel.from, curTo =3D =
cm.doc.sel.to;
                        setSelection(cm.doc, pos, pos);
                        if (cm.state.draggingText) replaceRange(cm.doc, =
"", curFrom, curTo, "paste");
                        cm.replaceSelection(text, null, "paste");
                        focusInput(cm);
                        onFocus(cm);
                    }
                }
                catch(e){}
            }
        }

        function onDragStart(cm, e) {
            if (ie && (!cm.state.draggingText || +new Date - lastDrop < =
100)) { e_stop(e); return; }
            if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e)) =
return;

            var txt =3D cm.getSelection();
            e.dataTransfer.setData("Text", txt);

            // Use dummy image instead of default browsers image.
            // Recent Safari (~6.0.2) have a tendency to segfault when =
this happens, so we don't do it there.
            if (e.dataTransfer.setDragImage && !safari) {
                var img =3D elt("img", null, null, "position: fixed; =
left: 0; top: 0;");
                if (opera) {
                    img.width =3D img.height =3D 1;
                    cm.display.wrapper.appendChild(img);
                    // Force a relayout, or Opera won't use our image =
for some obscure reason
                    img._top =3D img.offsetTop;
                }
                e.dataTransfer.setDragImage(img, 0, 0);
                if (opera) img.parentNode.removeChild(img);
            }
        }

        function setScrollTop(cm, val) {
            if (Math.abs(cm.doc.scrollTop - val) < 2) return;
            cm.doc.scrollTop =3D val;
            if (!gecko) updateDisplay(cm, [], val);
            if (cm.display.scroller.scrollTop !=3D val) =
cm.display.scroller.scrollTop =3D val;
            if (cm.display.scrollbarV.scrollTop !=3D val) =
cm.display.scrollbarV.scrollTop =3D val;
            if (gecko) updateDisplay(cm, []);
            startWorker(cm, 100);
        }
        function setScrollLeft(cm, val, isScroller) {
            if (isScroller ? val =3D=3D cm.doc.scrollLeft : =
Math.abs(cm.doc.scrollLeft - val) < 2) return;
            val =3D Math.min(val, cm.display.scroller.scrollWidth - =
cm.display.scroller.clientWidth);
            cm.doc.scrollLeft =3D val;
            alignHorizontally(cm);
            if (cm.display.scroller.scrollLeft !=3D val) =
cm.display.scroller.scrollLeft =3D val;
            if (cm.display.scrollbarH.scrollLeft !=3D val) =
cm.display.scrollbarH.scrollLeft =3D val;
        }

        // Since the delta values reported on mouse wheel events are
        // unstandardized between browsers and even browser versions, =
and
        // generally horribly unpredictable, this code starts by =
measuring
        // the scroll effect that the first few mouse wheel events have,
        // and, from that, detects the way it can convert deltas to =
pixel
        // offsets afterwards.
        //
        // The reason we want to know the amount a wheel event will =
scroll
        // is that it gives us a chance to update the display before the
        // actual scrolling happens, reducing flickering.

        var wheelSamples =3D 0, wheelPixelsPerUnit =3D null;
        // Fill in a browser-detected starting value on browsers where =
we
        // know one. These don't have to be accurate -- the result of =
them
        // being wrong would just be a slight flicker on the first wheel
        // scroll (if it is large enough).
        if (ie) wheelPixelsPerUnit =3D -.53;
        else if (gecko) wheelPixelsPerUnit =3D 15;
        else if (chrome) wheelPixelsPerUnit =3D -.7;
        else if (safari) wheelPixelsPerUnit =3D -1/3;

        function onScrollWheel(cm, e) {
            var dx =3D e.wheelDeltaX, dy =3D e.wheelDeltaY;
            if (dx =3D=3D null && e.detail && e.axis =3D=3D =
e.HORIZONTAL_AXIS) dx =3D e.detail;
            if (dy =3D=3D null && e.detail && e.axis =3D=3D =
e.VERTICAL_AXIS) dy =3D e.detail;
            else if (dy =3D=3D null) dy =3D e.wheelDelta;

            var display =3D cm.display, scroll =3D display.scroller;
            // Quit if there's nothing to scroll here
            if (!(dx && scroll.scrollWidth > scroll.clientWidth ||
                dy && scroll.scrollHeight > scroll.clientHeight)) =
return;

            // Webkit browsers on OS X abort momentum scrolls when the =
target
            // of the scroll event is removed from the scrollable =
element.
            // This hack (see related code in patchDisplay) makes sure =
the
            // element is kept around.
            if (dy && mac && webkit) {
                for (var cur =3D e.target; cur !=3D scroll; cur =3D =
cur.parentNode) {
                    if (cur.lineObj) {
                        cm.display.currentWheelTarget =3D cur;
                        break;
                    }
                }
            }

            // On some browsers, horizontal scrolling will cause redraws =
to
            // happen before the gutter has been realigned, causing it =
to
            // wriggle around in a most unseemly way. When we have an
            // estimated pixels/delta value, we just handle horizontal
            // scrolling entirely here. It'll be slightly off from =
native, but
            // better than glitching out.
            if (dx && !gecko && !opera && wheelPixelsPerUnit !=3D null) =
{
                if (dy)
                    setScrollTop(cm, Math.max(0, =
Math.min(scroll.scrollTop + dy * wheelPixelsPerUnit, scroll.scrollHeight =
- scroll.clientHeight)));
                setScrollLeft(cm, Math.max(0, Math.min(scroll.scrollLeft =
+ dx * wheelPixelsPerUnit, scroll.scrollWidth - scroll.clientWidth)));
                e_preventDefault(e);
                display.wheelStartX =3D null; // Abort measurement, if =
in progress
                return;
            }

            if (dy && wheelPixelsPerUnit !=3D null) {
                var pixels =3D dy * wheelPixelsPerUnit;
                var top =3D cm.doc.scrollTop, bot =3D top + =
display.wrapper.clientHeight;
                if (pixels < 0) top =3D Math.max(0, top + pixels - 50);
                else bot =3D Math.min(cm.doc.height, bot + pixels + 50);
                updateDisplay(cm, [], {top: top, bottom: bot});
            }

            if (wheelSamples < 20) {
                if (display.wheelStartX =3D=3D null) {
                    display.wheelStartX =3D scroll.scrollLeft; =
display.wheelStartY =3D scroll.scrollTop;
                    display.wheelDX =3D dx; display.wheelDY =3D dy;
                    setTimeout(function() {
                        if (display.wheelStartX =3D=3D null) return;
                        var movedX =3D scroll.scrollLeft - =
display.wheelStartX;
                        var movedY =3D scroll.scrollTop - =
display.wheelStartY;
                        var sample =3D (movedY && display.wheelDY && =
movedY / display.wheelDY) ||
                            (movedX && display.wheelDX && movedX / =
display.wheelDX);
                        display.wheelStartX =3D display.wheelStartY =3D =
null;
                        if (!sample) return;
                        wheelPixelsPerUnit =3D (wheelPixelsPerUnit * =
wheelSamples + sample) / (wheelSamples + 1);
                        ++wheelSamples;
                    }, 200);
                } else {
                    display.wheelDX +=3D dx; display.wheelDY +=3D dy;
                }
            }
        }

        function doHandleBinding(cm, bound, dropShift) {
            if (typeof bound =3D=3D "string") {
                bound =3D commands[bound];
                if (!bound) return false;
            }
            // Ensure previous input has been read, so that the handler =
sees a
            // consistent view of the document
            if (cm.display.pollingFast && readInput(cm)) =
cm.display.pollingFast =3D false;
            var doc =3D cm.doc, prevShift =3D doc.sel.shift, done =3D =
false;
            try {
                if (isReadOnly(cm)) cm.state.suppressEdits =3D true;
                if (dropShift) doc.sel.shift =3D false;
                done =3D bound(cm) !=3D Pass;
            } finally {
                doc.sel.shift =3D prevShift;
                cm.state.suppressEdits =3D false;
            }
            return done;
        }

        function allKeyMaps(cm) {
            var maps =3D cm.state.keyMaps.slice(0);
            if (cm.options.extraKeys) maps.push(cm.options.extraKeys);
            maps.push(cm.options.keyMap);
            return maps;
        }

        var maybeTransition;
        function handleKeyBinding(cm, e) {
            // Handle auto keymap transitions
            var startMap =3D getKeyMap(cm.options.keyMap), next =3D =
startMap.auto;
            clearTimeout(maybeTransition);
            if (next && !isModifierKey(e)) maybeTransition =3D =
setTimeout(function() {
                if (getKeyMap(cm.options.keyMap) =3D=3D startMap) {
                    cm.options.keyMap =3D (next.call ? next.call(null, =
cm) : next);
                    keyMapChanged(cm);
                }
            }, 50);

            var name =3D keyName(e, true), handled =3D false;
            if (!name) return false;
            var keymaps =3D allKeyMaps(cm);

            if (e.shiftKey) {
                // First try to resolve full name (including 'Shift-'). =
Failing
                // that, see if there is a cursor-motion command =
(starting with
                // 'go') bound to the keyname without 'Shift-'.
                handled =3D lookupKey("Shift-" + name, keymaps, =
function(b) {return doHandleBinding(cm, b, true);})
                    || lookupKey(name, keymaps, function(b) {
                        if (typeof b =3D=3D "string" ? =
/^go[A-Z]/.test(b) : b.motion)
                            return doHandleBinding(cm, b);
                    });
            } else {
                handled =3D lookupKey(name, keymaps, function(b) { =
return doHandleBinding(cm, b); });
            }

            if (handled) {
                e_preventDefault(e);
                restartBlink(cm);
                if (ie_lt9) { e.oldKeyCode =3D e.keyCode; e.keyCode =3D =
0; }
                signalLater(cm, "keyHandled", cm, name, e);
            }
            return handled;
        }

        function handleCharBinding(cm, e, ch) {
            var handled =3D lookupKey("'" + ch + "'", allKeyMaps(cm),
                function(b) { return doHandleBinding(cm, b, true); });
            if (handled) {
                e_preventDefault(e);
                restartBlink(cm);
                signalLater(cm, "keyHandled", cm, "'" + ch + "'", e);
            }
            return handled;
        }

        var lastStoppedKey =3D null;
        function onKeyDown(e) {
            var cm =3D this;
            if (!cm.state.focused) onFocus(cm);
            if (ie && e.keyCode =3D=3D 27) { e.returnValue =3D false; }
            if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
            var code =3D e.keyCode;
            // IE does strange things with escape.
            cm.doc.sel.shift =3D code =3D=3D 16 || e.shiftKey;
            // First give onKeyEvent option a chance to handle this.
            var handled =3D handleKeyBinding(cm, e);
            if (opera) {
                lastStoppedKey =3D handled ? code : null;
                // Opera has no cut event... we try to at least catch =
the key combo
                if (!handled && code =3D=3D 88 && !hasCopyEvent && (mac =
? e.metaKey : e.ctrlKey))
                    cm.replaceSelection("");
            }
        }

        function onKeyPress(e) {
            var cm =3D this;
            if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
            var keyCode =3D e.keyCode, charCode =3D e.charCode;
            if (opera && keyCode =3D=3D lastStoppedKey) {lastStoppedKey =
=3D null; e_preventDefault(e); return;}
            if (((opera && (!e.which || e.which < 10)) || khtml) && =
handleKeyBinding(cm, e)) return;
            var ch =3D String.fromCharCode(charCode =3D=3D null ? =
keyCode : charCode);
            if (this.options.electricChars && =
this.doc.mode.electricChars &&
                this.options.smartIndent && !isReadOnly(this) &&
                this.doc.mode.electricChars.indexOf(ch) > -1)
                setTimeout(operation(cm, function() {indentLine(cm, =
cm.doc.sel.to.line, "smart");}), 75);
            if (handleCharBinding(cm, e, ch)) return;
            if (ie && !ie_lt9) cm.display.inputHasSelection =3D null;
            fastPoll(cm);
        }

        function onFocus(cm) {
            if (cm.options.readOnly =3D=3D "nocursor") return;
            if (!cm.state.focused) {
                signal(cm, "focus", cm);
                cm.state.focused =3D true;
                if =
(cm.display.wrapper.className.search(/\bCodeMirror-focused\b/) =3D=3D =
-1)
                    cm.display.wrapper.className +=3D " =
CodeMirror-focused";
                resetInput(cm, true);
            }
            slowPoll(cm);
            restartBlink(cm);
        }
        function onBlur(cm) {
            if (cm.state.focused) {
                signal(cm, "blur", cm);
                cm.state.focused =3D false;
                cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(" CodeMirror-focused", "");
            }
            clearInterval(cm.display.blinker);
            setTimeout(function() {if (!cm.state.focused) =
cm.doc.sel.shift =3D false;}, 150);
        }

        var detectingSelectAll;
        function onContextMenu(cm, e) {
            if (signalDOMEvent(cm, e, "contextmenu")) return;
            var display =3D cm.display, sel =3D cm.doc.sel;
            if (eventInWidget(display, e)) return;

            var pos =3D posFromMouse(cm, e), scrollPos =3D =
display.scroller.scrollTop;
            if (!pos || opera) return; // Opera is difficult.
            if (posEq(sel.from, sel.to) || posLess(pos, sel.from) || =
!posLess(pos, sel.to))
                operation(cm, setSelection)(cm.doc, pos, pos);

            var oldCSS =3D display.input.style.cssText;
            display.inputDiv.style.position =3D "absolute";
            display.input.style.cssText =3D "position: fixed; width: =
30px; height: 30px; top: " + (e.clientY - 5) +
                "px; left: " + (e.clientX - 5) + "px; z-index: 1000; =
background: white; outline: none;" +
                "border-width: 0; outline: none; overflow: hidden; =
opacity: .05; -ms-opacity: .05; filter: alpha(opacity=3D5);";
            focusInput(cm);
            resetInput(cm, true);
            // Adds "Select all" to context menu in FF
            if (posEq(sel.from, sel.to)) display.input.value =3D =
display.prevInput =3D " ";

            function prepareSelectAllHack() {
                if (display.input.selectionStart !=3D null) {
                    var extval =3D display.input.value =3D " " + =
(posEq(sel.from, sel.to) ? "" : display.input.value);
                    display.prevInput =3D " ";
                    display.input.selectionStart =3D 1; =
display.input.selectionEnd =3D extval.length;
                }
            }
            function rehide() {
                display.inputDiv.style.position =3D "relative";
                display.input.style.cssText =3D oldCSS;
                if (ie_lt9) display.scrollbarV.scrollTop =3D =
display.scroller.scrollTop =3D scrollPos;
                slowPoll(cm);

                // Try to detect the user choosing select-all
                if (display.input.selectionStart !=3D null) {
                    if (!ie || ie_lt9) prepareSelectAllHack();
                    clearTimeout(detectingSelectAll);
                    var i =3D 0, poll =3D function(){
                        if (display.prevInput =3D=3D " " && =
display.input.selectionStart =3D=3D 0)
                            operation(cm, commands.selectAll)(cm);
                        else if (i++ < 10) detectingSelectAll =3D =
setTimeout(poll, 500);
                        else resetInput(cm);
                    };
                    detectingSelectAll =3D setTimeout(poll, 200);
                }
            }

            if (ie && !ie_lt9) prepareSelectAllHack();
            if (captureMiddleClick) {
                e_stop(e);
                var mouseup =3D function() {
                    off(window, "mouseup", mouseup);
                    setTimeout(rehide, 20);
                };
                on(window, "mouseup", mouseup);
            } else {
                setTimeout(rehide, 50);
            }
        }

        // UPDATING

        var changeEnd =3D CodeMirror.changeEnd =3D function(change) {
            if (!change.text) return change.to;
            return Pos(change.from.line + change.text.length - 1,
                    lst(change.text).length + (change.text.length =3D=3D =
1 ? change.from.ch : 0));
        };

        // Make sure a position will be valid after the given change.
        function clipPostChange(doc, change, pos) {
            if (!posLess(change.from, pos)) return clipPos(doc, pos);
            var diff =3D (change.text.length - 1) - (change.to.line - =
change.from.line);
            if (pos.line > change.to.line + diff) {
                var preLine =3D pos.line - diff, lastLine =3D doc.first =
+ doc.size - 1;
                if (preLine > lastLine) return Pos(lastLine, =
getLine(doc, lastLine).text.length);
                return clipToLen(pos, getLine(doc, =
preLine).text.length);
            }
            if (pos.line =3D=3D change.to.line + diff)
                return clipToLen(pos, lst(change.text).length + =
(change.text.length =3D=3D 1 ? change.from.ch : 0) +
                    getLine(doc, change.to.line).text.length - =
change.to.ch);
            var inside =3D pos.line - change.from.line;
            return clipToLen(pos, change.text[inside].length + (inside ? =
0 : change.from.ch));
        }

        // Hint can be null|"end"|"start"|"around"|{anchor,head}
        function computeSelAfterChange(doc, change, hint) {
            if (hint && typeof hint =3D=3D "object") // Assumed to be =
{anchor, head} object
                return {anchor: clipPostChange(doc, change, =
hint.anchor),
                    head: clipPostChange(doc, change, hint.head)};

            if (hint =3D=3D "start") return {anchor: change.from, head: =
change.from};

            var end =3D changeEnd(change);
            if (hint =3D=3D "around") return {anchor: change.from, head: =
end};
            if (hint =3D=3D "end") return {anchor: end, head: end};

            // hint is null, leave the selection alone as much as =
possible
            var adjustPos =3D function(pos) {
                if (posLess(pos, change.from)) return pos;
                if (!posLess(change.to, pos)) return end;

                var line =3D pos.line + change.text.length - =
(change.to.line - change.from.line) - 1, ch =3D pos.ch;
                if (pos.line =3D=3D change.to.line) ch +=3D end.ch - =
change.to.ch;
                return Pos(line, ch);
            };
            return {anchor: adjustPos(doc.sel.anchor), head: =
adjustPos(doc.sel.head)};
        }

        function filterChange(doc, change, update) {
            var obj =3D {
                canceled: false,
                from: change.from,
                to: change.to,
                text: change.text,
                origin: change.origin,
                cancel: function() { this.canceled =3D true; }
            };
            if (update) obj.update =3D function(from, to, text, origin) =
{
                if (from) this.from =3D clipPos(doc, from);
                if (to) this.to =3D clipPos(doc, to);
                if (text) this.text =3D text;
                if (origin !=3D=3D undefined) this.origin =3D origin;
            };
            signal(doc, "beforeChange", doc, obj);
            if (doc.cm) signal(doc.cm, "beforeChange", doc.cm, obj);

            if (obj.canceled) return null;
            return {from: obj.from, to: obj.to, text: obj.text, origin: =
obj.origin};
        }

        // Replace the range from from to to by the strings in =
replacement.
        // change is a {from, to, text [, origin]} object
        function makeChange(doc, change, selUpdate, ignoreReadOnly) {
            if (doc.cm) {
                if (!doc.cm.curOp) return operation(doc.cm, =
makeChange)(doc, change, selUpdate, ignoreReadOnly);
                if (doc.cm.state.suppressEdits) return;
            }

            if (hasHandler(doc, "beforeChange") || doc.cm && =
hasHandler(doc.cm, "beforeChange")) {
                change =3D filterChange(doc, change, true);
                if (!change) return;
            }

            // Possibly split or suppress the update based on the =
presence
            // of read-only spans in its range.
            var split =3D sawReadOnlySpans && !ignoreReadOnly && =
removeReadOnlyRanges(doc, change.from, change.to);
            if (split) {
                for (var i =3D split.length - 1; i >=3D 1; --i)
                    makeChangeNoReadonly(doc, {from: split[i].from, to: =
split[i].to, text: [""]});
                if (split.length)
                    makeChangeNoReadonly(doc, {from: split[0].from, to: =
split[0].to, text: change.text}, selUpdate);
            } else {
                makeChangeNoReadonly(doc, change, selUpdate);
            }
        }

        function makeChangeNoReadonly(doc, change, selUpdate) {
            var selAfter =3D computeSelAfterChange(doc, change, =
selUpdate);
            addToHistory(doc, change, selAfter, doc.cm ? doc.cm.curOp.id =
: NaN);

            makeChangeSingleDoc(doc, change, selAfter, =
stretchSpansOverChange(doc, change));
            var rebased =3D [];

            linkedDocs(doc, function(doc, sharedHist) {
                if (!sharedHist && indexOf(rebased, doc.history) =3D=3D =
-1) {
                    rebaseHist(doc.history, change);
                    rebased.push(doc.history);
                }
                makeChangeSingleDoc(doc, change, null, =
stretchSpansOverChange(doc, change));
            });
        }

        function makeChangeFromHistory(doc, type) {
            if (doc.cm && doc.cm.state.suppressEdits) return;

            var hist =3D doc.history;
            var event =3D (type =3D=3D "undo" ? hist.done : =
hist.undone).pop();
            if (!event) return;

            var anti =3D {changes: [], anchorBefore: event.anchorAfter, =
headBefore: event.headAfter,
                anchorAfter: event.anchorBefore, headAfter: =
event.headBefore,
                generation: hist.generation};
            (type =3D=3D "undo" ? hist.undone : hist.done).push(anti);
            hist.generation =3D event.generation || =
++hist.maxGeneration;

            var filter =3D hasHandler(doc, "beforeChange") || doc.cm && =
hasHandler(doc.cm, "beforeChange");

            for (var i =3D event.changes.length - 1; i >=3D 0; --i) {
                var change =3D event.changes[i];
                change.origin =3D type;
                if (filter && !filterChange(doc, change, false)) {
                    (type =3D=3D "undo" ? hist.done : =
hist.undone).length =3D 0;
                    return;
                }

                anti.changes.push(historyChangeFromChange(doc, change));

                var after =3D i ? computeSelAfterChange(doc, change, =
null)
                    : {anchor: event.anchorBefore, head: =
event.headBefore};
                makeChangeSingleDoc(doc, change, after, =
mergeOldSpans(doc, change));
                var rebased =3D [];

                linkedDocs(doc, function(doc, sharedHist) {
                    if (!sharedHist && indexOf(rebased, doc.history) =
=3D=3D -1) {
                        rebaseHist(doc.history, change);
                        rebased.push(doc.history);
                    }
                    makeChangeSingleDoc(doc, change, null, =
mergeOldSpans(doc, change));
                });
            }
        }

        function shiftDoc(doc, distance) {
            function shiftPos(pos) {return Pos(pos.line + distance, =
pos.ch);}
            doc.first +=3D distance;
            if (doc.cm) regChange(doc.cm, doc.first, doc.first, =
distance);
            doc.sel.head =3D shiftPos(doc.sel.head); doc.sel.anchor =3D =
shiftPos(doc.sel.anchor);
            doc.sel.from =3D shiftPos(doc.sel.from); doc.sel.to =3D =
shiftPos(doc.sel.to);
        }

        function makeChangeSingleDoc(doc, change, selAfter, spans) {
            if (doc.cm && !doc.cm.curOp)
                return operation(doc.cm, makeChangeSingleDoc)(doc, =
change, selAfter, spans);

            if (change.to.line < doc.first) {
                shiftDoc(doc, change.text.length - 1 - (change.to.line - =
change.from.line));
                return;
            }
            if (change.from.line > doc.lastLine()) return;

            // Clip the change to the size of this doc
            if (change.from.line < doc.first) {
                var shift =3D change.text.length - 1 - (doc.first - =
change.from.line);
                shiftDoc(doc, shift);
                change =3D {from: Pos(doc.first, 0), to: =
Pos(change.to.line + shift, change.to.ch),
                    text: [lst(change.text)], origin: change.origin};
            }
            var last =3D doc.lastLine();
            if (change.to.line > last) {
                change =3D {from: change.from, to: Pos(last, =
getLine(doc, last).text.length),
                    text: [change.text[0]], origin: change.origin};
            }

            change.removed =3D getBetween(doc, change.from, change.to);

            if (!selAfter) selAfter =3D computeSelAfterChange(doc, =
change, null);
            if (doc.cm) makeChangeSingleDocInEditor(doc.cm, change, =
spans, selAfter);
            else updateDoc(doc, change, spans, selAfter);
        }

        function makeChangeSingleDocInEditor(cm, change, spans, =
selAfter) {
            var doc =3D cm.doc, display =3D cm.display, from =3D =
change.from, to =3D change.to;

            var recomputeMaxLength =3D false, checkWidthStart =3D =
from.line;
            if (!cm.options.lineWrapping) {
                checkWidthStart =3D lineNo(visualLine(doc, getLine(doc, =
from.line)));
                doc.iter(checkWidthStart, to.line + 1, function(line) {
                    if (line =3D=3D display.maxLine) {
                        recomputeMaxLength =3D true;
                        return true;
                    }
                });
            }

            if (!posLess(doc.sel.head, change.from) && =
!posLess(change.to, doc.sel.head))
                cm.curOp.cursorActivity =3D true;

            updateDoc(doc, change, spans, selAfter, estimateHeight(cm));

            if (!cm.options.lineWrapping) {
                doc.iter(checkWidthStart, from.line + =
change.text.length, function(line) {
                    var len =3D lineLength(doc, line);
                    if (len > display.maxLineLength) {
                        display.maxLine =3D line;
                        display.maxLineLength =3D len;
                        display.maxLineChanged =3D true;
                        recomputeMaxLength =3D false;
                    }
                });
                if (recomputeMaxLength) cm.curOp.updateMaxLine =3D true;
            }

            // Adjust frontier, schedule worker
            doc.frontier =3D Math.min(doc.frontier, from.line);
            startWorker(cm, 400);

            var lendiff =3D change.text.length - (to.line - from.line) - =
1;
            // Remember that these lines changed, for updating the =
display
            regChange(cm, from.line, to.line + 1, lendiff);

            if (hasHandler(cm, "change")) {
                var changeObj =3D {from: from, to: to,
                    text: change.text,
                    removed: change.removed,
                    origin: change.origin};
                if (cm.curOp.textChanged) {
                    for (var cur =3D cm.curOp.textChanged; cur.next; cur =
=3D cur.next) {}
                    cur.next =3D changeObj;
                } else cm.curOp.textChanged =3D changeObj;
            }
        }

        function replaceRange(doc, code, from, to, origin) {
            if (!to) to =3D from;
            if (posLess(to, from)) { var tmp =3D to; to =3D from; from =
=3D tmp; }
            if (typeof code =3D=3D "string") code =3D splitLines(code);
            makeChange(doc, {from: from, to: to, text: code, origin: =
origin}, null);
        }

        // POSITION OBJECT

        function Pos(line, ch) {
            if (!(this instanceof Pos)) return new Pos(line, ch);
            this.line =3D line; this.ch =3D ch;
        }
        CodeMirror.Pos =3D Pos;

        function posEq(a, b) {return a.line =3D=3D b.line && a.ch =3D=3D =
b.ch;}
        function posLess(a, b) {return a.line < b.line || (a.line =3D=3D =
b.line && a.ch < b.ch);}
        function copyPos(x) {return Pos(x.line, x.ch);}

        // SELECTION

        function clipLine(doc, n) {return Math.max(doc.first, =
Math.min(n, doc.first + doc.size - 1));}
        function clipPos(doc, pos) {
            if (pos.line < doc.first) return Pos(doc.first, 0);
            var last =3D doc.first + doc.size - 1;
            if (pos.line > last) return Pos(last, getLine(doc, =
last).text.length);
            return clipToLen(pos, getLine(doc, pos.line).text.length);
        }
        function clipToLen(pos, linelen) {
            var ch =3D pos.ch;
            if (ch =3D=3D null || ch > linelen) return Pos(pos.line, =
linelen);
            else if (ch < 0) return Pos(pos.line, 0);
            else return pos;
        }
        function isLine(doc, l) {return l >=3D doc.first && l < =
doc.first + doc.size;}

        // If shift is held, this will move the selection anchor. =
Otherwise,
        // it'll set the whole selection.
        function extendSelection(doc, pos, other, bias) {
            if (doc.sel.shift || doc.sel.extend) {
                var anchor =3D doc.sel.anchor;
                if (other) {
                    var posBefore =3D posLess(pos, anchor);
                    if (posBefore !=3D posLess(other, anchor)) {
                        anchor =3D pos;
                        pos =3D other;
                    } else if (posBefore !=3D posLess(pos, other)) {
                        pos =3D other;
                    }
                }
                setSelection(doc, anchor, pos, bias);
            } else {
                setSelection(doc, pos, other || pos, bias);
            }
            if (doc.cm) doc.cm.curOp.userSelChange =3D true;
        }

        function filterSelectionChange(doc, anchor, head) {
            var obj =3D {anchor: anchor, head: head};
            signal(doc, "beforeSelectionChange", doc, obj);
            if (doc.cm) signal(doc.cm, "beforeSelectionChange", doc.cm, =
obj);
            obj.anchor =3D clipPos(doc, obj.anchor); obj.head =3D =
clipPos(doc, obj.head);
            return obj;
        }

        // Update the selection. Last two args are only used by
        // updateDoc, since they have to be expressed in the line
        // numbers before the update.
        function setSelection(doc, anchor, head, bias, checkAtomic) {
            if (!checkAtomic && hasHandler(doc, "beforeSelectionChange") =
|| doc.cm && hasHandler(doc.cm, "beforeSelectionChange")) {
                var filtered =3D filterSelectionChange(doc, anchor, =
head);
                head =3D filtered.head;
                anchor =3D filtered.anchor;
            }

            var sel =3D doc.sel;
            sel.goalColumn =3D null;
            // Skip over atomic spans.
            if (checkAtomic || !posEq(anchor, sel.anchor))
                anchor =3D skipAtomic(doc, anchor, bias, checkAtomic =
!=3D "push");
            if (checkAtomic || !posEq(head, sel.head))
                head =3D skipAtomic(doc, head, bias, checkAtomic !=3D =
"push");

            if (posEq(sel.anchor, anchor) && posEq(sel.head, head)) =
return;

            sel.anchor =3D anchor; sel.head =3D head;
            var inv =3D posLess(head, anchor);
            sel.from =3D inv ? head : anchor;
            sel.to =3D inv ? anchor : head;

            if (doc.cm)
                doc.cm.curOp.updateInput =3D =
doc.cm.curOp.selectionChanged =3D
                    doc.cm.curOp.cursorActivity =3D true;

            signalLater(doc, "cursorActivity", doc);
        }

        function reCheckSelection(cm) {
            setSelection(cm.doc, cm.doc.sel.from, cm.doc.sel.to, null, =
"push");
        }

        function skipAtomic(doc, pos, bias, mayClear) {
            var flipped =3D false, curPos =3D pos;
            var dir =3D bias || 1;
            doc.cantEdit =3D false;
            search: for (;;) {
                var line =3D getLine(doc, curPos.line);
                if (line.markedSpans) {
                    for (var i =3D 0; i < line.markedSpans.length; ++i) =
{
                        var sp =3D line.markedSpans[i], m =3D sp.marker;
                        if ((sp.from =3D=3D null || (m.inclusiveLeft ? =
sp.from <=3D curPos.ch : sp.from < curPos.ch)) &&
                            (sp.to =3D=3D null || (m.inclusiveRight ? =
sp.to >=3D curPos.ch : sp.to > curPos.ch))) {
                            if (mayClear) {
                                signal(m, "beforeCursorEnter");
                                if (m.explicitlyCleared) {
                                    if (!line.markedSpans) break;
                                    else {--i; continue;}
                                }
                            }
                            if (!m.atomic) continue;
                            var newPos =3D m.find()[dir < 0 ? "from" : =
"to"];
                            if (posEq(newPos, curPos)) {
                                newPos.ch +=3D dir;
                                if (newPos.ch < 0) {
                                    if (newPos.line > doc.first) newPos =
=3D clipPos(doc, Pos(newPos.line - 1));
                                    else newPos =3D null;
                                } else if (newPos.ch > line.text.length) =
{
                                    if (newPos.line < doc.first + =
doc.size - 1) newPos =3D Pos(newPos.line + 1, 0);
                                    else newPos =3D null;
                                }
                                if (!newPos) {
                                    if (flipped) {
                                        // Driven in a corner -- no =
valid cursor position found at all
                                        // -- try again *with* clearing, =
if we didn't already
                                        if (!mayClear) return =
skipAtomic(doc, pos, bias, true);
                                        // Otherwise, turn off editing =
until further notice, and return the start of the doc
                                        doc.cantEdit =3D true;
                                        return Pos(doc.first, 0);
                                    }
                                    flipped =3D true; newPos =3D pos; =
dir =3D -dir;
                                }
                            }
                            curPos =3D newPos;
                            continue search;
                        }
                    }
                }
                return curPos;
            }
        }

        // SCROLLING

        function scrollCursorIntoView(cm) {
            var coords =3D scrollPosIntoView(cm, cm.doc.sel.head, =
cm.options.cursorScrollMargin);
            if (!cm.state.focused) return;
            var display =3D cm.display, box =3D getRect(display.sizer), =
doScroll =3D null;
            if (coords.top + box.top < 0) doScroll =3D true;
            else if (coords.bottom + box.top > (window.innerHeight || =
document.documentElement.clientHeight)) doScroll =3D false;
            if (doScroll !=3D null && !phantom) {
                var hidden =3D display.cursor.style.display =3D=3D =
"none";
                if (hidden) {
                    display.cursor.style.display =3D "";
                    display.cursor.style.left =3D coords.left + "px";
                    display.cursor.style.top =3D (coords.top - =
display.viewOffset) + "px";
                }
                display.cursor.scrollIntoView(doScroll);
                if (hidden) display.cursor.style.display =3D "none";
            }
        }

        function scrollPosIntoView(cm, pos, margin) {
            if (margin =3D=3D null) margin =3D 0;
            for (;;) {
                var changed =3D false, coords =3D cursorCoords(cm, pos);
                var scrollPos =3D calculateScrollPos(cm, coords.left, =
coords.top - margin, coords.left, coords.bottom + margin);
                var startTop =3D cm.doc.scrollTop, startLeft =3D =
cm.doc.scrollLeft;
                if (scrollPos.scrollTop !=3D null) {
                    setScrollTop(cm, scrollPos.scrollTop);
                    if (Math.abs(cm.doc.scrollTop - startTop) > 1) =
changed =3D true;
                }
                if (scrollPos.scrollLeft !=3D null) {
                    setScrollLeft(cm, scrollPos.scrollLeft);
                    if (Math.abs(cm.doc.scrollLeft - startLeft) > 1) =
changed =3D true;
                }
                if (!changed) return coords;
            }
        }

        function scrollIntoView(cm, x1, y1, x2, y2) {
            var scrollPos =3D calculateScrollPos(cm, x1, y1, x2, y2);
            if (scrollPos.scrollTop !=3D null) setScrollTop(cm, =
scrollPos.scrollTop);
            if (scrollPos.scrollLeft !=3D null) setScrollLeft(cm, =
scrollPos.scrollLeft);
        }

        function calculateScrollPos(cm, x1, y1, x2, y2) {
            var display =3D cm.display, snapMargin =3D =
textHeight(cm.display);
            if (y1 < 0) y1 =3D 0;
            var screen =3D display.scroller.clientHeight - =
scrollerCutOff, screentop =3D display.scroller.scrollTop, result =3D {};
            var docBottom =3D cm.doc.height + paddingVert(display);
            var atTop =3D y1 < snapMargin, atBottom =3D y2 > docBottom - =
snapMargin;
            if (y1 < screentop) {
                result.scrollTop =3D atTop ? 0 : y1;
            } else if (y2 > screentop + screen) {
                var newTop =3D Math.min(y1, (atBottom ? docBottom : y2) =
- screen);
                if (newTop !=3D screentop) result.scrollTop =3D newTop;
            }

            var screenw =3D display.scroller.clientWidth - =
scrollerCutOff, screenleft =3D display.scroller.scrollLeft;
            x1 +=3D display.gutters.offsetWidth; x2 +=3D =
display.gutters.offsetWidth;
            var gutterw =3D display.gutters.offsetWidth;
            var atLeft =3D x1 < gutterw + 10;
            if (x1 < screenleft + gutterw || atLeft) {
                if (atLeft) x1 =3D 0;
                result.scrollLeft =3D Math.max(0, x1 - 10 - gutterw);
            } else if (x2 > screenw + screenleft - 3) {
                result.scrollLeft =3D x2 + 10 - screenw;
            }
            return result;
        }

        function updateScrollPos(cm, left, top) {
            cm.curOp.updateScrollPos =3D {scrollLeft: left =3D=3D null ? =
cm.doc.scrollLeft : left,
                scrollTop: top =3D=3D null ? cm.doc.scrollTop : top};
        }

        function addToScrollPos(cm, left, top) {
            var pos =3D cm.curOp.updateScrollPos || =
(cm.curOp.updateScrollPos =3D {scrollLeft: cm.doc.scrollLeft, scrollTop: =
cm.doc.scrollTop});
            var scroll =3D cm.display.scroller;
            pos.scrollTop =3D Math.max(0, Math.min(scroll.scrollHeight - =
scroll.clientHeight, pos.scrollTop + top));
            pos.scrollLeft =3D Math.max(0, Math.min(scroll.scrollWidth - =
scroll.clientWidth, pos.scrollLeft + left));
        }

        // API UTILITIES

        function indentLine(cm, n, how, aggressive) {
            var doc =3D cm.doc;
            if (how =3D=3D null) how =3D "add";
            if (how =3D=3D "smart") {
                if (!cm.doc.mode.indent) how =3D "prev";
                else var state =3D getStateBefore(cm, n);
            }

            var tabSize =3D cm.options.tabSize;
            var line =3D getLine(doc, n), curSpace =3D =
countColumn(line.text, null, tabSize);
            var curSpaceString =3D line.text.match(/^\s*/)[0], =
indentation;
            if (how =3D=3D "smart") {
                indentation =3D cm.doc.mode.indent(state, =
line.text.slice(curSpaceString.length), line.text);
                if (indentation =3D=3D Pass) {
                    if (!aggressive) return;
                    how =3D "prev";
                }
            }
            if (how =3D=3D "prev") {
                if (n > doc.first) indentation =3D =
countColumn(getLine(doc, n-1).text, null, tabSize);
                else indentation =3D 0;
            } else if (how =3D=3D "add") {
                indentation =3D curSpace + cm.options.indentUnit;
            } else if (how =3D=3D "subtract") {
                indentation =3D curSpace - cm.options.indentUnit;
            } else if (typeof how =3D=3D "number") {
                indentation =3D curSpace + how;
            }
            indentation =3D Math.max(0, indentation);

            var indentString =3D "", pos =3D 0;
            if (cm.options.indentWithTabs)
                for (var i =3D Math.floor(indentation / tabSize); i; =
--i) {pos +=3D tabSize; indentString +=3D "\t";}
            if (pos < indentation) indentString +=3D =
spaceStr(indentation - pos);

            if (indentString !=3D curSpaceString)
                replaceRange(cm.doc, indentString, Pos(n, 0), Pos(n, =
curSpaceString.length), "+input");
            line.stateAfter =3D null;
        }

        function changeLine(cm, handle, op) {
            var no =3D handle, line =3D handle, doc =3D cm.doc;
            if (typeof handle =3D=3D "number") line =3D getLine(doc, =
clipLine(doc, handle));
            else no =3D lineNo(handle);
            if (no =3D=3D null) return null;
            if (op(line, no)) regChange(cm, no, no + 1);
            else return null;
            return line;
        }

        function findPosH(doc, pos, dir, unit, visually) {
            var line =3D pos.line, ch =3D pos.ch, origDir =3D dir;
            var lineObj =3D getLine(doc, line);
            var possible =3D true;
            function findNextLine() {
                var l =3D line + dir;
                if (l < doc.first || l >=3D doc.first + doc.size) return =
(possible =3D false);
                line =3D l;
                return lineObj =3D getLine(doc, l);
            }
            function moveOnce(boundToLine) {
                var next =3D (visually ? moveVisually : =
moveLogically)(lineObj, ch, dir, true);
                if (next =3D=3D null) {
                    if (!boundToLine && findNextLine()) {
                        if (visually) ch =3D (dir < 0 ? lineRight : =
lineLeft)(lineObj);
                        else ch =3D dir < 0 ? lineObj.text.length : 0;
                    } else return (possible =3D false);
                } else ch =3D next;
                return true;
            }

            if (unit =3D=3D "char") moveOnce();
            else if (unit =3D=3D "column") moveOnce(true);
            else if (unit =3D=3D "word" || unit =3D=3D "group") {
                var sawType =3D null, group =3D unit =3D=3D "group";
                for (var first =3D true;; first =3D false) {
                    if (dir < 0 && !moveOnce(!first)) break;
                    var cur =3D lineObj.text.charAt(ch) || "\n";
                    var type =3D isWordChar(cur) ? "w"
                        : !group ? null
                        : /\s/.test(cur) ? null
                        : "p";
                    if (sawType && sawType !=3D type) {
                        if (dir < 0) {dir =3D 1; moveOnce();}
                        break;
                    }
                    if (type) sawType =3D type;
                    if (dir > 0 && !moveOnce(!first)) break;
                }
            }
            var result =3D skipAtomic(doc, Pos(line, ch), origDir, =
true);
            if (!possible) result.hitSide =3D true;
            return result;
        }

        function findPosV(cm, pos, dir, unit) {
            var doc =3D cm.doc, x =3D pos.left, y;
            if (unit =3D=3D "page") {
                var pageSize =3D =
Math.min(cm.display.wrapper.clientHeight, window.innerHeight || =
document.documentElement.clientHeight);
                y =3D pos.top + dir * (pageSize - (dir < 0 ? 1.5 : .5) * =
textHeight(cm.display));
            } else if (unit =3D=3D "line") {
                y =3D dir > 0 ? pos.bottom + 3 : pos.top - 3;
            }
            for (;;) {
                var target =3D coordsChar(cm, x, y);
                if (!target.outside) break;
                if (dir < 0 ? y <=3D 0 : y >=3D doc.height) { =
target.hitSide =3D true; break; }
                y +=3D dir * 5;
            }
            return target;
        }

        function findWordAt(line, pos) {
            var start =3D pos.ch, end =3D pos.ch;
            if (line) {
                if ((pos.xRel < 0 || end =3D=3D line.length) && start) =
--start; else ++end;
                var startChar =3D line.charAt(start);
                var check =3D isWordChar(startChar) ? isWordChar
                    : /\s/.test(startChar) ? function(ch) {return =
/\s/.test(ch);}
                    : function(ch) {return !/\s/.test(ch) && =
!isWordChar(ch);};
                while (start > 0 && check(line.charAt(start - 1))) =
--start;
                while (end < line.length && check(line.charAt(end))) =
++end;
            }
            return {from: Pos(pos.line, start), to: Pos(pos.line, end)};
        }

        function selectLine(cm, line) {
            extendSelection(cm.doc, Pos(line, 0), clipPos(cm.doc, =
Pos(line + 1, 0)));
        }

        // PROTOTYPE

        // The publicly visible API. Note that operation(null, f) means
        // 'wrap f in an operation, performed on its `this` parameter'

        CodeMirror.prototype =3D {
            constructor: CodeMirror,
            focus: function(){window.focus(); focusInput(this); =
onFocus(this); fastPoll(this);},

            setOption: function(option, value) {
                var options =3D this.options, old =3D options[option];
                if (options[option] =3D=3D value && option !=3D "mode") =
return;
                options[option] =3D value;
                if (optionHandlers.hasOwnProperty(option))
                    operation(this, optionHandlers[option])(this, value, =
old);
            },

            getOption: function(option) {return this.options[option];},
            getDoc: function() {return this.doc;},

            addKeyMap: function(map, bottom) {
                this.state.keyMaps[bottom ? "push" : "unshift"](map);
            },
            removeKeyMap: function(map) {
                var maps =3D this.state.keyMaps;
                for (var i =3D 0; i < maps.length; ++i)
                    if (maps[i] =3D=3D map || (typeof maps[i] !=3D =
"string" && maps[i].name =3D=3D map)) {
                        maps.splice(i, 1);
                        return true;
                    }
            },

            addOverlay: operation(null, function(spec, options) {
                var mode =3D spec.token ? spec : =
CodeMirror.getMode(this.options, spec);
                if (mode.startState) throw new Error("Overlays may not =
be stateful.");
                this.state.overlays.push({mode: mode, modeSpec: spec, =
opaque: options && options.opaque});
                this.state.modeGen++;
                regChange(this);
            }),
            removeOverlay: operation(null, function(spec) {
                var overlays =3D this.state.overlays;
                for (var i =3D 0; i < overlays.length; ++i) {
                    var cur =3D overlays[i].modeSpec;
                    if (cur =3D=3D spec || typeof spec =3D=3D "string" =
&& cur.name =3D=3D spec) {
                        overlays.splice(i, 1);
                        this.state.modeGen++;
                        regChange(this);
                        return;
                    }
                }
            }),

            indentLine: operation(null, function(n, dir, aggressive) {
                if (typeof dir !=3D "string" && typeof dir !=3D =
"number") {
                    if (dir =3D=3D null) dir =3D =
this.options.smartIndent ? "smart" : "prev";
                    else dir =3D dir ? "add" : "subtract";
                }
                if (isLine(this.doc, n)) indentLine(this, n, dir, =
aggressive);
            }),
            indentSelection: operation(null, function(how) {
                var sel =3D this.doc.sel;
                if (posEq(sel.from, sel.to)) return indentLine(this, =
sel.from.line, how);
                var e =3D sel.to.line - (sel.to.ch ? 0 : 1);
                for (var i =3D sel.from.line; i <=3D e; ++i) =
indentLine(this, i, how);
            }),

            // Fetch the parser token for a given character. Useful for =
hacks
            // that want to inspect the mode state (say, for =
completion).
            getTokenAt: function(pos, precise) {
                var doc =3D this.doc;
                pos =3D clipPos(doc, pos);
                var state =3D getStateBefore(this, pos.line, precise), =
mode =3D this.doc.mode;
                var line =3D getLine(doc, pos.line);
                var stream =3D new StringStream(line.text, =
this.options.tabSize);
                while (stream.pos < pos.ch && !stream.eol()) {
                    stream.start =3D stream.pos;
                    var style =3D mode.token(stream, state);
                }
                return {start: stream.start,
                    end: stream.pos,
                    string: stream.current(),
                    className: style || null, // Deprecated, use 'type' =
instead
                    type: style || null,
                    state: state};
            },

            getTokenTypeAt: function(pos) {
                pos =3D clipPos(this.doc, pos);
                var styles =3D getLineStyles(this, getLine(this.doc, =
pos.line));
                var before =3D 0, after =3D (styles.length - 1) / 2, ch =
=3D pos.ch;
                if (ch =3D=3D 0) return styles[2];
                for (;;) {
                    var mid =3D (before + after) >> 1;
                    if ((mid ? styles[mid * 2 - 1] : 0) >=3D ch) after =
=3D mid;
                    else if (styles[mid * 2 + 1] < ch) before =3D mid + =
1;
                    else return styles[mid * 2 + 2];
                }
            },

            getModeAt: function(pos) {
                var mode =3D this.doc.mode;
                if (!mode.innerMode) return mode;
                return CodeMirror.innerMode(mode, =
this.getTokenAt(pos).state).mode;
            },

            getHelper: function(pos, type) {
                if (!helpers.hasOwnProperty(type)) return;
                var help =3D helpers[type], mode =3D =
this.getModeAt(pos);
                return mode[type] && help[mode[type]] ||
                    mode.helperType && help[mode.helperType] ||
                    help[mode.name];
            },

            getStateAfter: function(line, precise) {
                var doc =3D this.doc;
                line =3D clipLine(doc, line =3D=3D null ? doc.first + =
doc.size - 1: line);
                return getStateBefore(this, line + 1, precise);
            },

            cursorCoords: function(start, mode) {
                var pos, sel =3D this.doc.sel;
                if (start =3D=3D null) pos =3D sel.head;
                else if (typeof start =3D=3D "object") pos =3D =
clipPos(this.doc, start);
                else pos =3D start ? sel.from : sel.to;
                return cursorCoords(this, pos, mode || "page");
            },

            charCoords: function(pos, mode) {
                return charCoords(this, clipPos(this.doc, pos), mode || =
"page");
            },

            coordsChar: function(coords, mode) {
                coords =3D fromCoordSystem(this, coords, mode || =
"page");
                return coordsChar(this, coords.left, coords.top);
            },

            lineAtHeight: function(height, mode) {
                height =3D fromCoordSystem(this, {top: height, left: 0}, =
mode || "page").top;
                return lineAtHeight(this.doc, height + =
this.display.viewOffset);
            },
            heightAtLine: function(line, mode) {
                var end =3D false, last =3D this.doc.first + =
this.doc.size - 1;
                if (line < this.doc.first) line =3D this.doc.first;
                else if (line > last) { line =3D last; end =3D true; }
                var lineObj =3D getLine(this.doc, line);
                return intoCoordSystem(this, getLine(this.doc, line), =
{top: 0, left: 0}, mode || "page").top +
                    (end ? lineObj.height : 0);
            },

            defaultTextHeight: function() { return =
textHeight(this.display); },
            defaultCharWidth: function() { return =
charWidth(this.display); },

            setGutterMarker: operation(null, function(line, gutterID, =
value) {
                return changeLine(this, line, function(line) {
                    var markers =3D line.gutterMarkers || =
(line.gutterMarkers =3D {});
                    markers[gutterID] =3D value;
                    if (!value && isEmpty(markers)) line.gutterMarkers =
=3D null;
                    return true;
                });
            }),

            clearGutter: operation(null, function(gutterID) {
                var cm =3D this, doc =3D cm.doc, i =3D doc.first;
                doc.iter(function(line) {
                    if (line.gutterMarkers && =
line.gutterMarkers[gutterID]) {
                        line.gutterMarkers[gutterID] =3D null;
                        regChange(cm, i, i + 1);
                        if (isEmpty(line.gutterMarkers)) =
line.gutterMarkers =3D null;
                    }
                    ++i;
                });
            }),

            addLineClass: operation(null, function(handle, where, cls) {
                return changeLine(this, handle, function(line) {
                    var prop =3D where =3D=3D "text" ? "textClass" : =
where =3D=3D "background" ? "bgClass" : "wrapClass";
                    if (!line[prop]) line[prop] =3D cls;
                    else if (new RegExp("(?:^|\\s)" + cls + =
"(?:$|\\s)").test(line[prop])) return false;
                    else line[prop] +=3D " " + cls;
                    return true;
                });
            }),

            removeLineClass: operation(null, function(handle, where, =
cls) {
                return changeLine(this, handle, function(line) {
                    var prop =3D where =3D=3D "text" ? "textClass" : =
where =3D=3D "background" ? "bgClass" : "wrapClass";
                    var cur =3D line[prop];
                    if (!cur) return false;
                    else if (cls =3D=3D null) line[prop] =3D null;
                    else {
                        var found =3D cur.match(new RegExp("(?:^|\\s+)" =
+ cls + "(?:$|\\s+)"));
                        if (!found) return false;
                        var end =3D found.index + found[0].length;
                        line[prop] =3D cur.slice(0, found.index) + =
(!found.index || end =3D=3D cur.length ? "" : " ") + cur.slice(end) || =
null;
                    }
                    return true;
                });
            }),

            addLineWidget: operation(null, function(handle, node, =
options) {
                return addLineWidget(this, handle, node, options);
            }),

            removeLineWidget: function(widget) { widget.clear(); },

            lineInfo: function(line) {
                if (typeof line =3D=3D "number") {
                    if (!isLine(this.doc, line)) return null;
                    var n =3D line;
                    line =3D getLine(this.doc, line);
                    if (!line) return null;
                } else {
                    var n =3D lineNo(line);
                    if (n =3D=3D null) return null;
                }
                return {line: n, handle: line, text: line.text, =
gutterMarkers: line.gutterMarkers,
                    textClass: line.textClass, bgClass: line.bgClass, =
wrapClass: line.wrapClass,
                    widgets: line.widgets};
            },

            getViewport: function() { return {from: =
this.display.showingFrom, to: this.display.showingTo};},

            addWidget: function(pos, node, scroll, vert, horiz) {
                var display =3D this.display;
                pos =3D cursorCoords(this, clipPos(this.doc, pos));
                var top =3D pos.bottom, left =3D pos.left;
                node.style.position =3D "absolute";
                display.sizer.appendChild(node);
                if (vert =3D=3D "over") {
                    top =3D pos.top;
                } else if (vert =3D=3D "above" || vert =3D=3D "near") {
                    var vspace =3D =
Math.max(display.wrapper.clientHeight, this.doc.height),
                        hspace =3D Math.max(display.sizer.clientWidth, =
display.lineSpace.clientWidth);
                    // Default to positioning above (if specified and =
possible); otherwise default to positioning below
                    if ((vert =3D=3D 'above' || pos.bottom + =
node.offsetHeight > vspace) && pos.top > node.offsetHeight)
                        top =3D pos.top - node.offsetHeight;
                    else if (pos.bottom + node.offsetHeight <=3D vspace)
                        top =3D pos.bottom;
                    if (left + node.offsetWidth > hspace)
                        left =3D hspace - node.offsetWidth;
                }
                node.style.top =3D top + "px";
                node.style.left =3D node.style.right =3D "";
                if (horiz =3D=3D "right") {
                    left =3D display.sizer.clientWidth - =
node.offsetWidth;
                    node.style.right =3D "0px";
                } else {
                    if (horiz =3D=3D "left") left =3D 0;
                    else if (horiz =3D=3D "middle") left =3D =
(display.sizer.clientWidth - node.offsetWidth) / 2;
                    node.style.left =3D left + "px";
                }
                if (scroll)
                    scrollIntoView(this, left, top, left + =
node.offsetWidth, top + node.offsetHeight);
            },

            triggerOnKeyDown: operation(null, onKeyDown),

            execCommand: function(cmd) {return commands[cmd](this);},

            findPosH: function(from, amount, unit, visually) {
                var dir =3D 1;
                if (amount < 0) { dir =3D -1; amount =3D -amount; }
                for (var i =3D 0, cur =3D clipPos(this.doc, from); i < =
amount; ++i) {
                    cur =3D findPosH(this.doc, cur, dir, unit, =
visually);
                    if (cur.hitSide) break;
                }
                return cur;
            },

            moveH: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel, pos;
                if (sel.shift || sel.extend || posEq(sel.from, sel.to))
                    pos =3D findPosH(this.doc, sel.head, dir, unit, =
this.options.rtlMoveVisually);
                else
                    pos =3D dir < 0 ? sel.from : sel.to;
                extendSelection(this.doc, pos, pos, dir);
            }),

            deleteH: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel;
                if (!posEq(sel.from, sel.to)) replaceRange(this.doc, "", =
sel.from, sel.to, "+delete");
                else replaceRange(this.doc, "", sel.from, =
findPosH(this.doc, sel.head, dir, unit, false), "+delete");
                this.curOp.userSelChange =3D true;
            }),

            findPosV: function(from, amount, unit, goalColumn) {
                var dir =3D 1, x =3D goalColumn;
                if (amount < 0) { dir =3D -1; amount =3D -amount; }
                for (var i =3D 0, cur =3D clipPos(this.doc, from); i < =
amount; ++i) {
                    var coords =3D cursorCoords(this, cur, "div");
                    if (x =3D=3D null) x =3D coords.left;
                    else coords.left =3D x;
                    cur =3D findPosV(this, coords, dir, unit);
                    if (cur.hitSide) break;
                }
                return cur;
            },

            moveV: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel;
                var pos =3D cursorCoords(this, sel.head, "div");
                if (sel.goalColumn !=3D null) pos.left =3D =
sel.goalColumn;
                var target =3D findPosV(this, pos, dir, unit);

                if (unit =3D=3D "page") addToScrollPos(this, 0, =
charCoords(this, target, "div").top - pos.top);
                extendSelection(this.doc, target, target, dir);
                sel.goalColumn =3D pos.left;
            }),

            toggleOverwrite: function(value) {
                if (value !=3D null && value =3D=3D =
this.state.overwrite) return;
                if (this.state.overwrite =3D !this.state.overwrite)
                    this.display.cursor.className +=3D " =
CodeMirror-overwrite";
                else
                    this.display.cursor.className =3D =
this.display.cursor.className.replace(" CodeMirror-overwrite", "");
            },
            hasFocus: function() { return this.state.focused; },

            scrollTo: operation(null, function(x, y) {
                updateScrollPos(this, x, y);
            }),
            getScrollInfo: function() {
                var scroller =3D this.display.scroller, co =3D =
scrollerCutOff;
                return {left: scroller.scrollLeft, top: =
scroller.scrollTop,
                    height: scroller.scrollHeight - co, width: =
scroller.scrollWidth - co,
                    clientHeight: scroller.clientHeight - co, =
clientWidth: scroller.clientWidth - co};
            },

            scrollIntoView: operation(null, function(pos, margin) {
                if (typeof pos =3D=3D "number") pos =3D Pos(pos, 0);
                if (!margin) margin =3D 0;
                var coords =3D pos;

                if (!pos || pos.line !=3D null) {
                    this.curOp.scrollToPos =3D pos ? clipPos(this.doc, =
pos) : this.doc.sel.head;
                    this.curOp.scrollToPosMargin =3D margin;
                    coords =3D cursorCoords(this, =
this.curOp.scrollToPos);
                }
                var sPos =3D calculateScrollPos(this, coords.left, =
coords.top - margin, coords.right, coords.bottom + margin);
                updateScrollPos(this, sPos.scrollLeft, sPos.scrollTop);
            }),

            setSize: operation(null, function(width, height) {
                function interpret(val) {
                    return typeof val =3D=3D "number" || =
/^\d+$/.test(String(val)) ? val + "px" : val;
                }
                if (width !=3D null) this.display.wrapper.style.width =
=3D interpret(width);
                if (height !=3D null) this.display.wrapper.style.height =
=3D interpret(height);
                if (this.options.lineWrapping)
                    this.display.measureLineCache.length =3D =
this.display.measureLineCachePos =3D 0;
                this.curOp.forceUpdate =3D true;
            }),

            operation: function(f){return runInOp(this, f);},

            refresh: operation(null, function() {
                clearCaches(this);
                updateScrollPos(this, this.doc.scrollLeft, =
this.doc.scrollTop);
                regChange(this);
            }),

            swapDoc: operation(null, function(doc) {
                var old =3D this.doc;
                old.cm =3D null;
                attachDoc(this, doc);
                clearCaches(this);
                resetInput(this, true);
                updateScrollPos(this, doc.scrollLeft, doc.scrollTop);
                return old;
            }),

            getInputField: function(){return this.display.input;},
            getWrapperElement: function(){return this.display.wrapper;},
            getScrollerElement: function(){return =
this.display.scroller;},
            getGutterElement: function(){return this.display.gutters;}
        };
        eventMixin(CodeMirror);

        // OPTION DEFAULTS

        var optionHandlers =3D CodeMirror.optionHandlers =3D {};

        // The default configuration options.
        var defaults =3D CodeMirror.defaults =3D {};

        function option(name, deflt, handle, notOnInit) {
            CodeMirror.defaults[name] =3D deflt;
            if (handle) optionHandlers[name] =3D
                notOnInit ? function(cm, val, old) {if (old !=3D Init) =
handle(cm, val, old);} : handle;
        }

        var Init =3D CodeMirror.Init =3D {toString: function(){return =
"CodeMirror.Init";}};

        // These two are, on init, called from the constructor because =
they
        // have to be initialized before the editor can start at all.
        option("value", "", function(cm, val) {
            cm.setValue(val);
        }, true);
        option("mode", null, function(cm, val) {
            cm.doc.modeOption =3D val;
            loadMode(cm);
        }, true);

        option("indentUnit", 2, loadMode, true);
        option("indentWithTabs", false);
        option("smartIndent", true);
        option("tabSize", 4, function(cm) {
            loadMode(cm);
            clearCaches(cm);
            regChange(cm);
        }, true);
        option("electricChars", true);
        option("rtlMoveVisually", !windows);

        option("theme", "default", function(cm) {
            themeChanged(cm);
            guttersChanged(cm);
        }, true);
        option("keyMap", "default", keyMapChanged);
        option("extraKeys", null);

        option("onKeyEvent", null);
        option("onDragEvent", null);

        option("lineWrapping", false, wrappingChanged, true);
        option("gutters", [], function(cm) {
            setGuttersForLineNumbers(cm.options);
            guttersChanged(cm);
        }, true);
        option("fixedGutter", true, function(cm, val) {
            cm.display.gutters.style.left =3D val ? =
compensateForHScroll(cm.display) + "px" : "0";
            cm.refresh();
        }, true);
        option("coverGutterNextToScrollbar", false, updateScrollbars, =
true);
        option("lineNumbers", false, function(cm) {
            setGuttersForLineNumbers(cm.options);
            guttersChanged(cm);
        }, true);
        option("firstLineNumber", 1, guttersChanged, true);
        option("lineNumberFormatter", function(integer) {return =
integer;}, guttersChanged, true);
        option("showCursorWhenSelecting", false, updateSelection, true);

        option("readOnly", false, function(cm, val) {
            if (val =3D=3D "nocursor") {onBlur(cm); =
cm.display.input.blur();}
            else if (!val) resetInput(cm, true);
        });
        option("dragDrop", true);

        option("cursorBlinkRate", 530);
        option("cursorScrollMargin", 0);
        option("cursorHeight", 1);
        option("workTime", 100);
        option("workDelay", 100);
        option("flattenSpans", true);
        option("pollInterval", 100);
        option("undoDepth", 40, function(cm, =
val){cm.doc.history.undoDepth =3D val;});
        option("historyEventDelay", 500);
        option("viewportMargin", 10, function(cm){cm.refresh();}, true);
        option("maxHighlightLength", 10000, function(cm){loadMode(cm); =
cm.refresh();}, true);
        option("moveInputWithCursor", true, function(cm, val) {
            if (!val) cm.display.inputDiv.style.top =3D =
cm.display.inputDiv.style.left =3D 0;
        });

        option("tabindex", null, function(cm, val) {
            cm.display.input.tabIndex =3D val || "";
        });
        option("autofocus", null);

        // MODE DEFINITION AND QUERYING

        // Known modes, by name and by MIME
        var modes =3D CodeMirror.modes =3D {}, mimeModes =3D =
CodeMirror.mimeModes =3D {};

        CodeMirror.defineMode =3D function(name, mode) {
            if (!CodeMirror.defaults.mode && name !=3D "null") =
CodeMirror.defaults.mode =3D name;
            if (arguments.length > 2) {
                mode.dependencies =3D [];
                for (var i =3D 2; i < arguments.length; ++i) =
mode.dependencies.push(arguments[i]);
            }
            modes[name] =3D mode;
        };

        CodeMirror.defineMIME =3D function(mime, spec) {
            mimeModes[mime] =3D spec;
        };

        CodeMirror.resolveMode =3D function(spec) {
            if (typeof spec =3D=3D "string" && =
mimeModes.hasOwnProperty(spec)) {
                spec =3D mimeModes[spec];
            } else if (spec && typeof spec.name =3D=3D "string" && =
mimeModes.hasOwnProperty(spec.name)) {
                var found =3D mimeModes[spec.name];
                spec =3D createObj(found, spec);
                spec.name =3D found.name;
            } else if (typeof spec =3D=3D "string" && =
/^[\w\-]+\/[\w\-]+\+xml$/.test(spec)) {
                return CodeMirror.resolveMode("application/xml");
            }
            if (typeof spec =3D=3D "string") return {name: spec};
            else return spec || {name: "null"};
        };

        CodeMirror.getMode =3D function(options, spec) {
            var spec =3D CodeMirror.resolveMode(spec);
            var mfactory =3D modes[spec.name];
            if (!mfactory) return CodeMirror.getMode(options, =
"text/plain");
            var modeObj =3D mfactory(options, spec);
            if (modeExtensions.hasOwnProperty(spec.name)) {
                var exts =3D modeExtensions[spec.name];
                for (var prop in exts) {
                    if (!exts.hasOwnProperty(prop)) continue;
                    if (modeObj.hasOwnProperty(prop)) modeObj["_" + =
prop] =3D modeObj[prop];
                    modeObj[prop] =3D exts[prop];
                }
            }
            modeObj.name =3D spec.name;

            return modeObj;
        };

        CodeMirror.defineMode("null", function() {
            return {token: function(stream) {stream.skipToEnd();}};
        });
        CodeMirror.defineMIME("text/plain", "null");

        var modeExtensions =3D CodeMirror.modeExtensions =3D {};
        CodeMirror.extendMode =3D function(mode, properties) {
            var exts =3D modeExtensions.hasOwnProperty(mode) ? =
modeExtensions[mode] : (modeExtensions[mode] =3D {});
            copyObj(properties, exts);
        };

        // EXTENSIONS

        CodeMirror.defineExtension =3D function(name, func) {
            CodeMirror.prototype[name] =3D func;
        };
        CodeMirror.defineDocExtension =3D function(name, func) {
            Doc.prototype[name] =3D func;
        };
        CodeMirror.defineOption =3D option;

        var initHooks =3D [];
        CodeMirror.defineInitHook =3D function(f) {initHooks.push(f);};

        var helpers =3D CodeMirror.helpers =3D {};
        CodeMirror.registerHelper =3D function(type, name, value) {
            if (!helpers.hasOwnProperty(type)) helpers[type] =3D =
CodeMirror[type] =3D {};
            helpers[type][name] =3D value;
        };

        // UTILITIES

        CodeMirror.isWordChar =3D isWordChar;

        // MODE STATE HANDLING

        // Utility functions for working with state. Exported because =
modes
        // sometimes need to do this.
        function copyState(mode, state) {
            if (state =3D=3D=3D true) return state;
            if (mode.copyState) return mode.copyState(state);
            var nstate =3D {};
            for (var n in state) {
                var val =3D state[n];
                if (val instanceof Array) val =3D val.concat([]);
                nstate[n] =3D val;
            }
            return nstate;
        }
        CodeMirror.copyState =3D copyState;

        function startState(mode, a1, a2) {
            return mode.startState ? mode.startState(a1, a2) : true;
        }
        CodeMirror.startState =3D startState;

        CodeMirror.innerMode =3D function(mode, state) {
            while (mode.innerMode) {
                var info =3D mode.innerMode(state);
                if (!info || info.mode =3D=3D mode) break;
                state =3D info.state;
                mode =3D info.mode;
            }
            return info || {mode: mode, state: state};
        };

        // STANDARD COMMANDS

        var commands =3D CodeMirror.commands =3D {
            selectAll: function(cm) {cm.setSelection(Pos(cm.firstLine(), =
0), Pos(cm.lastLine()));},
            killLine: function(cm) {
                var from =3D cm.getCursor(true), to =3D =
cm.getCursor(false), sel =3D !posEq(from, to);
                if (!sel && cm.getLine(from.line).length =3D=3D from.ch)
                    cm.replaceRange("", from, Pos(from.line + 1, 0), =
"+delete");
                else cm.replaceRange("", from, sel ? to : =
Pos(from.line), "+delete");
            },
            deleteLine: function(cm) {
                var l =3D cm.getCursor().line;
                cm.replaceRange("", Pos(l, 0), Pos(l), "+delete");
            },
            delLineLeft: function(cm) {
                var cur =3D cm.getCursor();
                cm.replaceRange("", Pos(cur.line, 0), cur, "+delete");
            },
            undo: function(cm) {cm.undo();},
            redo: function(cm) {cm.redo();},
            goDocStart: function(cm) =
{cm.extendSelection(Pos(cm.firstLine(), 0));},
            goDocEnd: function(cm) =
{cm.extendSelection(Pos(cm.lastLine()));},
            goLineStart: function(cm) {
                cm.extendSelection(lineStart(cm, cm.getCursor().line));
            },
            goLineStartSmart: function(cm) {
                var cur =3D cm.getCursor(), start =3D lineStart(cm, =
cur.line);
                var line =3D cm.getLineHandle(start.line);
                var order =3D getOrder(line);
                if (!order || order[0].level =3D=3D 0) {
                    var firstNonWS =3D Math.max(0, =
line.text.search(/\S/));
                    var inWS =3D cur.line =3D=3D start.line && cur.ch =
<=3D firstNonWS && cur.ch;
                    cm.extendSelection(Pos(start.line, inWS ? 0 : =
firstNonWS));
                } else cm.extendSelection(start);
            },
            goLineEnd: function(cm) {
                cm.extendSelection(lineEnd(cm, cm.getCursor().line));
            },
            goLineRight: function(cm) {
                var top =3D cm.charCoords(cm.getCursor(), "div").top + =
5;
                cm.extendSelection(cm.coordsChar({left: =
cm.display.lineDiv.offsetWidth + 100, top: top}, "div"));
            },
            goLineLeft: function(cm) {
                var top =3D cm.charCoords(cm.getCursor(), "div").top + =
5;
                cm.extendSelection(cm.coordsChar({left: 0, top: top}, =
"div"));
            },
            goLineUp: function(cm) {cm.moveV(-1, "line");},
            goLineDown: function(cm) {cm.moveV(1, "line");},
            goPageUp: function(cm) {cm.moveV(-1, "page");},
            goPageDown: function(cm) {cm.moveV(1, "page");},
            goCharLeft: function(cm) {cm.moveH(-1, "char");},
            goCharRight: function(cm) {cm.moveH(1, "char");},
            goColumnLeft: function(cm) {cm.moveH(-1, "column");},
            goColumnRight: function(cm) {cm.moveH(1, "column");},
            goWordLeft: function(cm) {cm.moveH(-1, "word");},
            goGroupRight: function(cm) {cm.moveH(1, "group");},
            goGroupLeft: function(cm) {cm.moveH(-1, "group");},
            goWordRight: function(cm) {cm.moveH(1, "word");},
            delCharBefore: function(cm) {cm.deleteH(-1, "char");},
            delCharAfter: function(cm) {cm.deleteH(1, "char");},
            delWordBefore: function(cm) {cm.deleteH(-1, "word");},
            delWordAfter: function(cm) {cm.deleteH(1, "word");},
            delGroupBefore: function(cm) {cm.deleteH(-1, "group");},
            delGroupAfter: function(cm) {cm.deleteH(1, "group");},
            indentAuto: function(cm) {cm.indentSelection("smart");},
            indentMore: function(cm) {cm.indentSelection("add");},
            indentLess: function(cm) {cm.indentSelection("subtract");},
            insertTab: function(cm) {cm.replaceSelection("\t", "end", =
"+input");},
            defaultTab: function(cm) {
                if (cm.somethingSelected()) cm.indentSelection("add");
                else cm.replaceSelection("\t", "end", "+input");
            },
            transposeChars: function(cm) {
                var cur =3D cm.getCursor(), line =3D =
cm.getLine(cur.line);
                if (cur.ch > 0 && cur.ch < line.length - 1)
                    cm.replaceRange(line.charAt(cur.ch) + =
line.charAt(cur.ch - 1),
                        Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch =
+ 1));
            },
            newlineAndIndent: function(cm) {
                operation(cm, function() {
                    cm.replaceSelection("\n", "end", "+input");
                    cm.indentLine(cm.getCursor().line, null, true);
                })();
            },
            toggleOverwrite: function(cm) {cm.toggleOverwrite();}
        };

        // STANDARD KEYMAPS

        var keyMap =3D CodeMirror.keyMap =3D {};
        keyMap.basic =3D {
            "Left": "goCharLeft", "Right": "goCharRight", "Up": =
"goLineUp", "Down": "goLineDown",
            "End": "goLineEnd", "Home": "goLineStartSmart", "PageUp": =
"goPageUp", "PageDown": "goPageDown",
            "Delete": "delCharAfter", "Backspace": "delCharBefore", =
"Tab": "defaultTab", "Shift-Tab": "indentAuto",
            "Enter": "newlineAndIndent", "Insert": "toggleOverwrite"
        };
        // Note that the save and find-related commands aren't defined =
by
        // default. Unknown commands are simply ignored.
        keyMap.pcDefault =3D {
            "Ctrl-A": "selectAll", "Ctrl-D": "deleteLine", "Ctrl-Z": =
"undo", "Shift-Ctrl-Z": "redo", "Ctrl-Y": "redo",
            "Ctrl-Home": "goDocStart", "Alt-Up": "goDocStart", =
"Ctrl-End": "goDocEnd", "Ctrl-Down": "goDocEnd",
            "Ctrl-Left": "goGroupLeft", "Ctrl-Right": "goGroupRight", =
"Alt-Left": "goLineStart", "Alt-Right": "goLineEnd",
            "Ctrl-Backspace": "delGroupBefore", "Ctrl-Delete": =
"delGroupAfter", "Ctrl-S": "save", "Ctrl-F": "find",
            "Ctrl-G": "findNext", "Shift-Ctrl-G": "findPrev", =
"Shift-Ctrl-F": "replace", "Shift-Ctrl-R": "replaceAll",
            "Ctrl-[": "indentLess", "Ctrl-]": "indentMore",
            fallthrough: "basic"
        };
        keyMap.macDefault =3D {
            "Cmd-A": "selectAll", "Cmd-D": "deleteLine", "Cmd-Z": =
"undo", "Shift-Cmd-Z": "redo", "Cmd-Y": "redo",
            "Cmd-Up": "goDocStart", "Cmd-End": "goDocEnd", "Cmd-Down": =
"goDocEnd", "Alt-Left": "goGroupLeft",
            "Alt-Right": "goGroupRight", "Cmd-Left": "goLineStart", =
"Cmd-Right": "goLineEnd", "Alt-Backspace": "delGroupBefore",
            "Ctrl-Alt-Backspace": "delGroupAfter", "Alt-Delete": =
"delGroupAfter", "Cmd-S": "save", "Cmd-F": "find",
            "Cmd-G": "findNext", "Shift-Cmd-G": "findPrev", "Cmd-Alt-F": =
"replace", "Shift-Cmd-Alt-F": "replaceAll",
            "Cmd-[": "indentLess", "Cmd-]": "indentMore", =
"Cmd-Backspace": "delLineLeft",
            fallthrough: ["basic", "emacsy"]
        };
        keyMap["default"] =3D mac ? keyMap.macDefault : =
keyMap.pcDefault;
        keyMap.emacsy =3D {
            "Ctrl-F": "goCharRight", "Ctrl-B": "goCharLeft", "Ctrl-P": =
"goLineUp", "Ctrl-N": "goLineDown",
            "Alt-F": "goWordRight", "Alt-B": "goWordLeft", "Ctrl-A": =
"goLineStart", "Ctrl-E": "goLineEnd",
            "Ctrl-V": "goPageDown", "Shift-Ctrl-V": "goPageUp", =
"Ctrl-D": "delCharAfter", "Ctrl-H": "delCharBefore",
            "Alt-D": "delWordAfter", "Alt-Backspace": "delWordBefore", =
"Ctrl-K": "killLine", "Ctrl-T": "transposeChars"
        };

        // KEYMAP DISPATCH

        function getKeyMap(val) {
            if (typeof val =3D=3D "string") return keyMap[val];
            else return val;
        }

        function lookupKey(name, maps, handle) {
            function lookup(map) {
                map =3D getKeyMap(map);
                var found =3D map[name];
                if (found =3D=3D=3D false) return "stop";
                if (found !=3D null && handle(found)) return true;
                if (map.nofallthrough) return "stop";

                var fallthrough =3D map.fallthrough;
                if (fallthrough =3D=3D null) return false;
                if (Object.prototype.toString.call(fallthrough) !=3D =
"[object Array]")
                    return lookup(fallthrough);
                for (var i =3D 0, e =3D fallthrough.length; i < e; ++i) =
{
                    var done =3D lookup(fallthrough[i]);
                    if (done) return done;
                }
                return false;
            }

            for (var i =3D 0; i < maps.length; ++i) {
                var done =3D lookup(maps[i]);
                if (done) return done !=3D "stop";
            }
        }
        function isModifierKey(event) {
            var name =3D keyNames[event.keyCode];
            return name =3D=3D "Ctrl" || name =3D=3D "Alt" || name =
=3D=3D "Shift" || name =3D=3D "Mod";
        }
        function keyName(event, noShift) {
            if (opera && event.keyCode =3D=3D 34 && event["char"]) =
return false;
            var name =3D keyNames[event.keyCode];
            if (name =3D=3D null || event.altGraphKey) return false;
            if (event.altKey) name =3D "Alt-" + name;
            if (flipCtrlCmd ? event.metaKey : event.ctrlKey) name =3D =
"Ctrl-" + name;
            if (flipCtrlCmd ? event.ctrlKey : event.metaKey) name =3D =
"Cmd-" + name;
            if (!noShift && event.shiftKey) name =3D "Shift-" + name;
            return name;
        }
        CodeMirror.lookupKey =3D lookupKey;
        CodeMirror.isModifierKey =3D isModifierKey;
        CodeMirror.keyName =3D keyName;

        // FROMTEXTAREA

        CodeMirror.fromTextArea =3D function(textarea, options) {
            if (!options) options =3D {};
            options.value =3D textarea.value;
            if (!options.tabindex && textarea.tabindex)
                options.tabindex =3D textarea.tabindex;
            if (!options.placeholder && textarea.placeholder)
                options.placeholder =3D textarea.placeholder;
            // Set autofocus to true if this textarea is focused, or if =
it has
            // autofocus and no other element is focused.
            if (options.autofocus =3D=3D null) {
                var hasFocus =3D document.body;
                // doc.activeElement occasionally throws on IE
                try { hasFocus =3D document.activeElement; } catch(e) {}
                options.autofocus =3D hasFocus =3D=3D textarea ||
                    textarea.getAttribute("autofocus") !=3D null && =
hasFocus =3D=3D document.body;
            }

            function save() {textarea.value =3D cm.getValue();}
            if (textarea.form) {
                on(textarea.form, "submit", save);
                // Deplorable hack to make the submit method do the =
right thing.
                if (!options.leaveSubmitMethodAlone) {
                    var form =3D textarea.form, realSubmit =3D =
form.submit;
                    try {
                        var wrappedSubmit =3D form.submit =3D function() =
{
                            save();
                            form.submit =3D realSubmit;
                            form.submit();
                            form.submit =3D wrappedSubmit;
                        };
                    } catch(e) {}
                }
            }

            textarea.style.display =3D "none";
            var cm =3D CodeMirror(function(node) {
                textarea.parentNode.insertBefore(node, =
textarea.nextSibling);
            }, options);
            cm.save =3D save;
            cm.getTextArea =3D function() { return textarea; };
            cm.toTextArea =3D function() {
                save();
                textarea.parentNode.removeChild(cm.getWrapperElement());
                textarea.style.display =3D "";
                if (textarea.form) {
                    off(textarea.form, "submit", save);
                    if (typeof textarea.form.submit =3D=3D "function")
                        textarea.form.submit =3D realSubmit;
                }
            };
            return cm;
        };

        // STRING STREAM

        // Fed to the mode parsers, provides helper functions to make
        // parsers more succinct.

        // The character stream used by a mode's parser.
        function StringStream(string, tabSize) {
            this.pos =3D this.start =3D 0;
            this.string =3D string;
            this.tabSize =3D tabSize || 8;
            this.lastColumnPos =3D this.lastColumnValue =3D 0;
        }

        StringStream.prototype =3D {
            eol: function() {return this.pos >=3D this.string.length;},
            sol: function() {return this.pos =3D=3D 0;},
            peek: function() {return this.string.charAt(this.pos) || =
undefined;},
            next: function() {
                if (this.pos < this.string.length)
                    return this.string.charAt(this.pos++);
            },
            eat: function(match) {
                var ch =3D this.string.charAt(this.pos);
                if (typeof match =3D=3D "string") var ok =3D ch =3D=3D =
match;
                else var ok =3D ch && (match.test ? match.test(ch) : =
match(ch));
                if (ok) {++this.pos; return ch;}
            },
            eatWhile: function(match) {
                var start =3D this.pos;
                while (this.eat(match)){}
                return this.pos > start;
            },
            eatSpace: function() {
                var start =3D this.pos;
                while (/[\s\u00a0]/.test(this.string.charAt(this.pos))) =
++this.pos;
                return this.pos > start;
            },
            skipToEnd: function() {this.pos =3D this.string.length;},
            skipTo: function(ch) {
                var found =3D this.string.indexOf(ch, this.pos);
                if (found > -1) {this.pos =3D found; return true;}
            },
            backUp: function(n) {this.pos -=3D n;},
            column: function() {
                if (this.lastColumnPos < this.start) {
                    this.lastColumnValue =3D countColumn(this.string, =
this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);
                    this.lastColumnPos =3D this.start;
                }
                return this.lastColumnValue;
            },
            indentation: function() {return countColumn(this.string, =
null, this.tabSize);},
            match: function(pattern, consume, caseInsensitive) {
                if (typeof pattern =3D=3D "string") {
                    var cased =3D function(str) {return caseInsensitive =
? str.toLowerCase() : str;};
                    var substr =3D this.string.substr(this.pos, =
pattern.length);
                    if (cased(substr) =3D=3D cased(pattern)) {
                        if (consume !=3D=3D false) this.pos +=3D =
pattern.length;
                        return true;
                    }
                } else {
                    var match =3D =
this.string.slice(this.pos).match(pattern);
                    if (match && match.index > 0) return null;
                    if (match && consume !=3D=3D false) this.pos +=3D =
match[0].length;
                    return match;
                }
            },
            current: function(){return this.string.slice(this.start, =
this.pos);}
        };
        CodeMirror.StringStream =3D StringStream;

        // TEXTMARKERS

        function TextMarker(doc, type) {
            this.lines =3D [];
            this.type =3D type;
            this.doc =3D doc;
        }
        CodeMirror.TextMarker =3D TextMarker;
        eventMixin(TextMarker);

        TextMarker.prototype.clear =3D function() {
            if (this.explicitlyCleared) return;
            var cm =3D this.doc.cm, withOp =3D cm && !cm.curOp;
            if (withOp) startOperation(cm);
            if (hasHandler(this, "clear")) {
                var found =3D this.find();
                if (found) signalLater(this, "clear", found.from, =
found.to);
            }
            var min =3D null, max =3D null;
            for (var i =3D 0; i < this.lines.length; ++i) {
                var line =3D this.lines[i];
                var span =3D getMarkedSpanFor(line.markedSpans, this);
                if (span.to !=3D null) max =3D lineNo(line);
                line.markedSpans =3D removeMarkedSpan(line.markedSpans, =
span);
                if (span.from !=3D null)
                    min =3D lineNo(line);
                else if (this.collapsed && !lineIsHidden(this.doc, line) =
&& cm)
                    updateLineHeight(line, textHeight(cm.display));
            }
            if (cm && this.collapsed && !cm.options.lineWrapping) for =
(var i =3D 0; i < this.lines.length; ++i) {
                var visual =3D visualLine(cm.doc, this.lines[i]), len =
=3D lineLength(cm.doc, visual);
                if (len > cm.display.maxLineLength) {
                    cm.display.maxLine =3D visual;
                    cm.display.maxLineLength =3D len;
                    cm.display.maxLineChanged =3D true;
                }
            }

            if (min !=3D null && cm) regChange(cm, min, max + 1);
            this.lines.length =3D 0;
            this.explicitlyCleared =3D true;
            if (this.atomic && this.doc.cantEdit) {
                this.doc.cantEdit =3D false;
                if (cm) reCheckSelection(cm);
            }
            if (withOp) endOperation(cm);
        };

        TextMarker.prototype.find =3D function() {
            var from, to;
            for (var i =3D 0; i < this.lines.length; ++i) {
                var line =3D this.lines[i];
                var span =3D getMarkedSpanFor(line.markedSpans, this);
                if (span.from !=3D null || span.to !=3D null) {
                    var found =3D lineNo(line);
                    if (span.from !=3D null) from =3D Pos(found, =
span.from);
                    if (span.to !=3D null) to =3D Pos(found, span.to);
                }
            }
            if (this.type =3D=3D "bookmark") return from;
            return from && {from: from, to: to};
        };

        TextMarker.prototype.changed =3D function() {
            var pos =3D this.find(), cm =3D this.doc.cm;
            if (!pos || !cm) return;
            var line =3D getLine(this.doc, pos.from.line);
            clearCachedMeasurement(cm, line);
            if (pos.from.line >=3D cm.display.showingFrom && =
pos.from.line < cm.display.showingTo) {
                for (var node =3D cm.display.lineDiv.firstChild; node; =
node =3D node.nextSibling) if (node.lineObj =3D=3D line) {
                    if (node.offsetHeight !=3D line.height) =
updateLineHeight(line, node.offsetHeight);
                    break;
                }
                runInOp(cm, function() {
                    cm.curOp.selectionChanged =3D cm.curOp.forceUpdate =
=3D cm.curOp.updateMaxLine =3D true;
                });
            }
        };

        TextMarker.prototype.attachLine =3D function(line) {
            if (!this.lines.length && this.doc.cm) {
                var op =3D this.doc.cm.curOp;
                if (!op.maybeHiddenMarkers || =
indexOf(op.maybeHiddenMarkers, this) =3D=3D -1)
                    (op.maybeUnhiddenMarkers || (op.maybeUnhiddenMarkers =
=3D [])).push(this);
            }
            this.lines.push(line);
        };
        TextMarker.prototype.detachLine =3D function(line) {
            this.lines.splice(indexOf(this.lines, line), 1);
            if (!this.lines.length && this.doc.cm) {
                var op =3D this.doc.cm.curOp;
                (op.maybeHiddenMarkers || (op.maybeHiddenMarkers =3D =
[])).push(this);
            }
        };

        function markText(doc, from, to, options, type) {
            if (options && options.shared) return markTextShared(doc, =
from, to, options, type);
            if (doc.cm && !doc.cm.curOp) return operation(doc.cm, =
markText)(doc, from, to, options, type);

            var marker =3D new TextMarker(doc, type);
            if (type =3D=3D "range" && !posLess(from, to)) return =
marker;
            if (options) copyObj(options, marker);
            if (marker.replacedWith) {
                marker.collapsed =3D true;
                marker.replacedWith =3D elt("span", =
[marker.replacedWith], "CodeMirror-widget");
                if (!options.handleMouseEvents) =
marker.replacedWith.ignoreEvents =3D true;
            }
            if (marker.collapsed) sawCollapsedSpans =3D true;

            if (marker.addToHistory)
                addToHistory(doc, {from: from, to: to, origin: =
"markText"},
                    {head: doc.sel.head, anchor: doc.sel.anchor}, NaN);

            var curLine =3D from.line, size =3D 0, collapsedAtStart, =
collapsedAtEnd, cm =3D doc.cm, updateMaxLine;
            doc.iter(curLine, to.line + 1, function(line) {
                if (cm && marker.collapsed && !cm.options.lineWrapping =
&& visualLine(doc, line) =3D=3D cm.display.maxLine)
                    updateMaxLine =3D true;
                var span =3D {from: null, to: null, marker: marker};
                size +=3D line.text.length;
                if (curLine =3D=3D from.line) {span.from =3D from.ch; =
size -=3D from.ch;}
                if (curLine =3D=3D to.line) {span.to =3D to.ch; size =
-=3D line.text.length - to.ch;}
                if (marker.collapsed) {
                    if (curLine =3D=3D to.line) collapsedAtEnd =3D =
collapsedSpanAt(line, to.ch);
                    if (curLine =3D=3D from.line) collapsedAtStart =3D =
collapsedSpanAt(line, from.ch);
                    else updateLineHeight(line, 0);
                }
                addMarkedSpan(line, span);
                ++curLine;
            });
            if (marker.collapsed) doc.iter(from.line, to.line + 1, =
function(line) {
                if (lineIsHidden(doc, line)) updateLineHeight(line, 0);
            });

            if (marker.clearOnEnter) on(marker, "beforeCursorEnter", =
function() { marker.clear(); });

            if (marker.readOnly) {
                sawReadOnlySpans =3D true;
                if (doc.history.done.length || =
doc.history.undone.length)
                    doc.clearHistory();
            }
            if (marker.collapsed) {
                if (collapsedAtStart !=3D collapsedAtEnd)
                    throw new Error("Inserting collapsed marker =
overlapping an existing one");
                marker.size =3D size;
                marker.atomic =3D true;
            }
            if (cm) {
                if (updateMaxLine) cm.curOp.updateMaxLine =3D true;
                if (marker.className || marker.title || =
marker.startStyle || marker.endStyle || marker.collapsed)
                    regChange(cm, from.line, to.line + 1);
                if (marker.atomic) reCheckSelection(cm);
            }
            return marker;
        }

        // SHARED TEXTMARKERS

        function SharedTextMarker(markers, primary) {
            this.markers =3D markers;
            this.primary =3D primary;
            for (var i =3D 0, me =3D this; i < markers.length; ++i) {
                markers[i].parent =3D this;
                on(markers[i], "clear", function(){me.clear();});
            }
        }
        CodeMirror.SharedTextMarker =3D SharedTextMarker;
        eventMixin(SharedTextMarker);

        SharedTextMarker.prototype.clear =3D function() {
            if (this.explicitlyCleared) return;
            this.explicitlyCleared =3D true;
            for (var i =3D 0; i < this.markers.length; ++i)
                this.markers[i].clear();
            signalLater(this, "clear");
        };
        SharedTextMarker.prototype.find =3D function() {
            return this.primary.find();
        };

        function markTextShared(doc, from, to, options, type) {
            options =3D copyObj(options);
            options.shared =3D false;
            var markers =3D [markText(doc, from, to, options, type)], =
primary =3D markers[0];
            var widget =3D options.replacedWith;
            linkedDocs(doc, function(doc) {
                if (widget) options.replacedWith =3D =
widget.cloneNode(true);
                markers.push(markText(doc, clipPos(doc, from), =
clipPos(doc, to), options, type));
                for (var i =3D 0; i < doc.linked.length; ++i)
                    if (doc.linked[i].isParent) return;
                primary =3D lst(markers);
            });
            return new SharedTextMarker(markers, primary);
        }

        // TEXTMARKER SPANS

        function getMarkedSpanFor(spans, marker) {
            if (spans) for (var i =3D 0; i < spans.length; ++i) {
                var span =3D spans[i];
                if (span.marker =3D=3D marker) return span;
            }
        }
        function removeMarkedSpan(spans, span) {
            for (var r, i =3D 0; i < spans.length; ++i)
                if (spans[i] !=3D span) (r || (r =3D =
[])).push(spans[i]);
            return r;
        }
        function addMarkedSpan(line, span) {
            line.markedSpans =3D line.markedSpans ? =
line.markedSpans.concat([span]) : [span];
            span.marker.attachLine(line);
        }

        function markedSpansBefore(old, startCh, isInsert) {
            if (old) for (var i =3D 0, nw; i < old.length; ++i) {
                var span =3D old[i], marker =3D span.marker;
                var startsBefore =3D span.from =3D=3D null || =
(marker.inclusiveLeft ? span.from <=3D startCh : span.from < startCh);
                if (startsBefore || marker.type =3D=3D "bookmark" && =
span.from =3D=3D startCh && (!isInsert || !span.marker.insertLeft)) {
                    var endsAfter =3D span.to =3D=3D null || =
(marker.inclusiveRight ? span.to >=3D startCh : span.to > startCh);
                    (nw || (nw =3D [])).push({from: span.from,
                        to: endsAfter ? null : span.to,
                        marker: marker});
                }
            }
            return nw;
        }

        function markedSpansAfter(old, endCh, isInsert) {
            if (old) for (var i =3D 0, nw; i < old.length; ++i) {
                var span =3D old[i], marker =3D span.marker;
                var endsAfter =3D span.to =3D=3D null || =
(marker.inclusiveRight ? span.to >=3D endCh : span.to > endCh);
                if (endsAfter || marker.type =3D=3D "bookmark" && =
span.from =3D=3D endCh && (!isInsert || span.marker.insertLeft)) {
                    var startsBefore =3D span.from =3D=3D null || =
(marker.inclusiveLeft ? span.from <=3D endCh : span.from < endCh);
                    (nw || (nw =3D [])).push({from: startsBefore ? null =
: span.from - endCh,
                        to: span.to =3D=3D null ? null : span.to - =
endCh,
                        marker: marker});
                }
            }
            return nw;
        }

        function stretchSpansOverChange(doc, change) {
            var oldFirst =3D isLine(doc, change.from.line) && =
getLine(doc, change.from.line).markedSpans;
            var oldLast =3D isLine(doc, change.to.line) && getLine(doc, =
change.to.line).markedSpans;
            if (!oldFirst && !oldLast) return null;

            var startCh =3D change.from.ch, endCh =3D change.to.ch, =
isInsert =3D posEq(change.from, change.to);
            // Get the spans that 'stick out' on both sides
            var first =3D markedSpansBefore(oldFirst, startCh, =
isInsert);
            var last =3D markedSpansAfter(oldLast, endCh, isInsert);

            // Next, merge those two ends
            var sameLine =3D change.text.length =3D=3D 1, offset =3D =
lst(change.text).length + (sameLine ? startCh : 0);
            if (first) {
                // Fix up .to properties of first
                for (var i =3D 0; i < first.length; ++i) {
                    var span =3D first[i];
                    if (span.to =3D=3D null) {
                        var found =3D getMarkedSpanFor(last, =
span.marker);
                        if (!found) span.to =3D startCh;
                        else if (sameLine) span.to =3D found.to =3D=3D =
null ? null : found.to + offset;
                    }
                }
            }
            if (last) {
                // Fix up .from in last (or move them into first in case =
of sameLine)
                for (var i =3D 0; i < last.length; ++i) {
                    var span =3D last[i];
                    if (span.to !=3D null) span.to +=3D offset;
                    if (span.from =3D=3D null) {
                        var found =3D getMarkedSpanFor(first, =
span.marker);
                        if (!found) {
                            span.from =3D offset;
                            if (sameLine) (first || (first =3D =
[])).push(span);
                        }
                    } else {
                        span.from +=3D offset;
                        if (sameLine) (first || (first =3D =
[])).push(span);
                    }
                }
            }
            if (sameLine && first) {
                // Make sure we didn't create any zero-length spans
                for (var i =3D 0; i < first.length; ++i)
                    if (first[i].from !=3D null && first[i].from =3D=3D =
first[i].to && first[i].marker.type !=3D "bookmark")
                        first.splice(i--, 1);
                if (!first.length) first =3D null;
            }

            var newMarkers =3D [first];
            if (!sameLine) {
                // Fill gap with whole-line-spans
                var gap =3D change.text.length - 2, gapMarkers;
                if (gap > 0 && first)
                    for (var i =3D 0; i < first.length; ++i)
                        if (first[i].to =3D=3D null)
                            (gapMarkers || (gapMarkers =3D =
[])).push({from: null, to: null, marker: first[i].marker});
                for (var i =3D 0; i < gap; ++i)
                    newMarkers.push(gapMarkers);
                newMarkers.push(last);
            }
            return newMarkers;
        }

        function mergeOldSpans(doc, change) {
            var old =3D getOldSpans(doc, change);
            var stretched =3D stretchSpansOverChange(doc, change);
            if (!old) return stretched;
            if (!stretched) return old;

            for (var i =3D 0; i < old.length; ++i) {
                var oldCur =3D old[i], stretchCur =3D stretched[i];
                if (oldCur && stretchCur) {
                    spans: for (var j =3D 0; j < stretchCur.length; ++j) =
{
                        var span =3D stretchCur[j];
                        for (var k =3D 0; k < oldCur.length; ++k)
                            if (oldCur[k].marker =3D=3D span.marker) =
continue spans;
                        oldCur.push(span);
                    }
                } else if (stretchCur) {
                    old[i] =3D stretchCur;
                }
            }
            return old;
        }

        function removeReadOnlyRanges(doc, from, to) {
            var markers =3D null;
            doc.iter(from.line, to.line + 1, function(line) {
                if (line.markedSpans) for (var i =3D 0; i < =
line.markedSpans.length; ++i) {
                    var mark =3D line.markedSpans[i].marker;
                    if (mark.readOnly && (!markers || indexOf(markers, =
mark) =3D=3D -1))
                        (markers || (markers =3D [])).push(mark);
                }
            });
            if (!markers) return null;
            var parts =3D [{from: from, to: to}];
            for (var i =3D 0; i < markers.length; ++i) {
                var mk =3D markers[i], m =3D mk.find();
                for (var j =3D 0; j < parts.length; ++j) {
                    var p =3D parts[j];
                    if (posLess(p.to, m.from) || posLess(m.to, p.from)) =
continue;
                    var newParts =3D [j, 1];
                    if (posLess(p.from, m.from) || !mk.inclusiveLeft && =
posEq(p.from, m.from))
                        newParts.push({from: p.from, to: m.from});
                    if (posLess(m.to, p.to) || !mk.inclusiveRight && =
posEq(p.to, m.to))
                        newParts.push({from: m.to, to: p.to});
                    parts.splice.apply(parts, newParts);
                    j +=3D newParts.length - 1;
                }
            }
            return parts;
        }

        function collapsedSpanAt(line, ch) {
            var sps =3D sawCollapsedSpans && line.markedSpans, found;
            if (sps) for (var sp, i =3D 0; i < sps.length; ++i) {
                sp =3D sps[i];
                if (!sp.marker.collapsed) continue;
                if ((sp.from =3D=3D null || sp.from < ch) &&
                    (sp.to =3D=3D null || sp.to > ch) &&
                    (!found || found.width < sp.marker.width))
                    found =3D sp.marker;
            }
            return found;
        }
        function collapsedSpanAtStart(line) { return =
collapsedSpanAt(line, -1); }
        function collapsedSpanAtEnd(line) { return collapsedSpanAt(line, =
line.text.length + 1); }

        function visualLine(doc, line) {
            var merged;
            while (merged =3D collapsedSpanAtStart(line))
                line =3D getLine(doc, merged.find().from.line);
            return line;
        }

        function lineIsHidden(doc, line) {
            var sps =3D sawCollapsedSpans && line.markedSpans;
            if (sps) for (var sp, i =3D 0; i < sps.length; ++i) {
                sp =3D sps[i];
                if (!sp.marker.collapsed) continue;
                if (sp.from =3D=3D null) return true;
                if (sp.marker.replacedWith) continue;
                if (sp.from =3D=3D 0 && sp.marker.inclusiveLeft && =
lineIsHiddenInner(doc, line, sp))
                    return true;
            }
        }
        function lineIsHiddenInner(doc, line, span) {
            if (span.to =3D=3D null) {
                var end =3D span.marker.find().to, endLine =3D =
getLine(doc, end.line);
                return lineIsHiddenInner(doc, endLine, =
getMarkedSpanFor(endLine.markedSpans, span.marker));
            }
            if (span.marker.inclusiveRight && span.to =3D=3D =
line.text.length)
                return true;
            for (var sp, i =3D 0; i < line.markedSpans.length; ++i) {
                sp =3D line.markedSpans[i];
                if (sp.marker.collapsed && !sp.marker.replacedWith && =
sp.from =3D=3D span.to &&
                    (sp.marker.inclusiveLeft || =
span.marker.inclusiveRight) &&
                    lineIsHiddenInner(doc, line, sp)) return true;
            }
        }

        function detachMarkedSpans(line) {
            var spans =3D line.markedSpans;
            if (!spans) return;
            for (var i =3D 0; i < spans.length; ++i)
                spans[i].marker.detachLine(line);
            line.markedSpans =3D null;
        }

        function attachMarkedSpans(line, spans) {
            if (!spans) return;
            for (var i =3D 0; i < spans.length; ++i)
                spans[i].marker.attachLine(line);
            line.markedSpans =3D spans;
        }

        // LINE WIDGETS

        var LineWidget =3D CodeMirror.LineWidget =3D function(cm, node, =
options) {
            if (options) for (var opt in options) if =
(options.hasOwnProperty(opt))
                this[opt] =3D options[opt];
            this.cm =3D cm;
            this.node =3D node;
        };
        eventMixin(LineWidget);
        function widgetOperation(f) {
            return function() {
                var withOp =3D !this.cm.curOp;
                if (withOp) startOperation(this.cm);
                try {var result =3D f.apply(this, arguments);}
                finally {if (withOp) endOperation(this.cm);}
                return result;
            };
        }
        LineWidget.prototype.clear =3D widgetOperation(function() {
            var ws =3D this.line.widgets, no =3D lineNo(this.line);
            if (no =3D=3D null || !ws) return;
            for (var i =3D 0; i < ws.length; ++i) if (ws[i] =3D=3D this) =
ws.splice(i--, 1);
            if (!ws.length) this.line.widgets =3D null;
            var aboveVisible =3D heightAtLine(this.cm, this.line) < =
this.cm.doc.scrollTop;
            updateLineHeight(this.line, Math.max(0, this.line.height - =
widgetHeight(this)));
            if (aboveVisible) addToScrollPos(this.cm, 0, -this.height);
            regChange(this.cm, no, no + 1);
        });
        LineWidget.prototype.changed =3D widgetOperation(function() {
            var oldH =3D this.height;
            this.height =3D null;
            var diff =3D widgetHeight(this) - oldH;
            if (!diff) return;
            updateLineHeight(this.line, this.line.height + diff);
            var no =3D lineNo(this.line);
            regChange(this.cm, no, no + 1);
        });

        function widgetHeight(widget) {
            if (widget.height !=3D null) return widget.height;
            if (!widget.node.parentNode || =
widget.node.parentNode.nodeType !=3D 1)
                removeChildrenAndAdd(widget.cm.display.measure, =
elt("div", [widget.node], null, "position: relative"));
            return widget.height =3D widget.node.offsetHeight;
        }

        function addLineWidget(cm, handle, node, options) {
            var widget =3D new LineWidget(cm, node, options);
            if (widget.noHScroll) cm.display.alignWidgets =3D true;
            changeLine(cm, handle, function(line) {
                var widgets =3D line.widgets || (line.widgets =3D []);
                if (widget.insertAt =3D=3D null) widgets.push(widget);
                else widgets.splice(Math.min(widgets.length - 1, =
Math.max(0, widget.insertAt)), 0, widget);
                widget.line =3D line;
                if (!lineIsHidden(cm.doc, line) || widget.showIfHidden) =
{
                    var aboveVisible =3D heightAtLine(cm, line) < =
cm.doc.scrollTop;
                    updateLineHeight(line, line.height + =
widgetHeight(widget));
                    if (aboveVisible) addToScrollPos(cm, 0, =
widget.height);
                }
                return true;
            });
            return widget;
        }

        // LINE DATA STRUCTURE

        // Line objects. These hold state related to a line, including
        // highlighting info (the styles array).
        var Line =3D CodeMirror.Line =3D function(text, markedSpans, =
estimateHeight) {
            this.text =3D text;
            attachMarkedSpans(this, markedSpans);
            this.height =3D estimateHeight ? estimateHeight(this) : 1;
        };
        eventMixin(Line);

        function updateLine(line, text, markedSpans, estimateHeight) {
            line.text =3D text;
            if (line.stateAfter) line.stateAfter =3D null;
            if (line.styles) line.styles =3D null;
            if (line.order !=3D null) line.order =3D null;
            detachMarkedSpans(line);
            attachMarkedSpans(line, markedSpans);
            var estHeight =3D estimateHeight ? estimateHeight(line) : 1;
            if (estHeight !=3D line.height) updateLineHeight(line, =
estHeight);
        }

        function cleanUpLine(line) {
            line.parent =3D null;
            detachMarkedSpans(line);
        }

        // Run the given mode's parser over a line, update the styles
        // array, which contains alternating fragments of text and CSS
        // classes.
        function runMode(cm, text, mode, state, f) {
            var flattenSpans =3D mode.flattenSpans;
            if (flattenSpans =3D=3D null) flattenSpans =3D =
cm.options.flattenSpans;
            var curStart =3D 0, curStyle =3D null;
            var stream =3D new StringStream(text, cm.options.tabSize), =
style;
            if (text =3D=3D "" && mode.blankLine) mode.blankLine(state);
            while (!stream.eol()) {
                if (stream.pos > cm.options.maxHighlightLength) {
                    flattenSpans =3D false;
                    // Webkit seems to refuse to render text nodes =
longer than 57444 characters
                    stream.pos =3D Math.min(text.length, stream.start + =
50000);
                    style =3D null;
                } else {
                    style =3D mode.token(stream, state);
                }
                if (!flattenSpans || curStyle !=3D style) {
                    if (curStart < stream.start) f(stream.start, =
curStyle);
                    curStart =3D stream.start; curStyle =3D style;
                }
                stream.start =3D stream.pos;
            }
            if (curStart < stream.pos) f(stream.pos, curStyle);
        }

        function highlightLine(cm, line, state) {
            // A styles array always starts with a number identifying =
the
            // mode/overlays that it is based on (for easy =
invalidation).
            var st =3D [cm.state.modeGen];
            // Compute the base array of styles
            runMode(cm, line.text, cm.doc.mode, state, function(end, =
style) {st.push(end, style);});

            // Run overlays, adjust style array.
            for (var o =3D 0; o < cm.state.overlays.length; ++o) {
                var overlay =3D cm.state.overlays[o], i =3D 1, at =3D 0;
                runMode(cm, line.text, overlay.mode, true, function(end, =
style) {
                    var start =3D i;
                    // Ensure there's a token end at the current =
position, and that i points at it
                    while (at < end) {
                        var i_end =3D st[i];
                        if (i_end > end)
                            st.splice(i, 1, end, st[i+1], i_end);
                        i +=3D 2;
                        at =3D Math.min(end, i_end);
                    }
                    if (!style) return;
                    if (overlay.opaque) {
                        st.splice(start, i - start, end, style);
                        i =3D start + 2;
                    } else {
                        for (; start < i; start +=3D 2) {
                            var cur =3D st[start+1];
                            st[start+1] =3D cur ? cur + " " + style : =
style;
                        }
                    }
                });
            }

            return st;
        }

        function getLineStyles(cm, line) {
            if (!line.styles || line.styles[0] !=3D cm.state.modeGen)
                line.styles =3D highlightLine(cm, line, line.stateAfter =
=3D getStateBefore(cm, lineNo(line)));
            return line.styles;
        }

        // Lightweight form of highlight -- proceed over this line and
        // update state, but don't save a style array.
        function processLine(cm, line, state) {
            var mode =3D cm.doc.mode;
            var stream =3D new StringStream(line.text, =
cm.options.tabSize);
            if (line.text =3D=3D "" && mode.blankLine) =
mode.blankLine(state);
            while (!stream.eol() && stream.pos <=3D =
cm.options.maxHighlightLength) {
                mode.token(stream, state);
                stream.start =3D stream.pos;
            }
        }

        var styleToClassCache =3D {};
        function styleToClass(style) {
            if (!style) return null;
            return styleToClassCache[style] ||
                (styleToClassCache[style] =3D "cm-" + style.replace(/ =
+/g, " cm-"));
        }

        function lineContent(cm, realLine, measure, copyWidgets) {
            var merged, line =3D realLine, empty =3D true;
            while (merged =3D collapsedSpanAtStart(line))
                line =3D getLine(cm.doc, merged.find().from.line);

            var builder =3D {pre: elt("pre"), col: 0, pos: 0,
                measure: null, measuredSomething: false, cm: cm,
                copyWidgets: copyWidgets};
            if (line.textClass) builder.pre.className =3D =
line.textClass;

            do {
                if (line.text) empty =3D false;
                builder.measure =3D line =3D=3D realLine && measure;
                builder.pos =3D 0;
                builder.addToken =3D builder.measure ? buildTokenMeasure =
: buildToken;
                if ((ie || webkit) && cm.getOption("lineWrapping"))
                    builder.addToken =3D =
buildTokenSplitSpaces(builder.addToken);
                var next =3D insertLineContent(line, builder, =
getLineStyles(cm, line));
                if (measure && line =3D=3D realLine && =
!builder.measuredSomething) {
                    measure[0] =3D =
builder.pre.appendChild(zeroWidthElement(cm.display.measure));
                    builder.measuredSomething =3D true;
                }
                if (next) line =3D getLine(cm.doc, next.to.line);
            } while (next);

            if (measure && !builder.measuredSomething && !measure[0])
                measure[0] =3D builder.pre.appendChild(empty ? =
elt("span", "\u00a0") : zeroWidthElement(cm.display.measure));
            if (!builder.pre.firstChild && !lineIsHidden(cm.doc, =
realLine))
                =
builder.pre.appendChild(document.createTextNode("\u00a0"));

            var order;
            // Work around problem with the reported dimensions of =
single-char
            // direction spans on IE (issue #1129). See also the comment =
in
            // cursorCoords.
            if (measure && ie && (order =3D getOrder(line))) {
                var l =3D order.length - 1;
                if (order[l].from =3D=3D order[l].to) --l;
                var last =3D order[l], prev =3D order[l - 1];
                if (last.from + 1 =3D=3D last.to && prev && last.level < =
prev.level) {
                    var span =3D measure[builder.pos - 1];
                    if (span) =
span.parentNode.insertBefore(span.measureRight =3D =
zeroWidthElement(cm.display.measure),
                        span.nextSibling);
                }
            }

            signal(cm, "renderLine", cm, realLine, builder.pre);
            return builder.pre;
        }

        var tokenSpecialChars =3D =
/[\t\u0000-\u0019\u00ad\u200b\u2028\u2029\uFEFF]/g;
        function buildToken(builder, text, style, startStyle, endStyle, =
title) {
            if (!text) return;
            if (!tokenSpecialChars.test(text)) {
                builder.col +=3D text.length;
                var content =3D document.createTextNode(text);
            } else {
                var content =3D document.createDocumentFragment(), pos =
=3D 0;
                while (true) {
                    tokenSpecialChars.lastIndex =3D pos;
                    var m =3D tokenSpecialChars.exec(text);
                    var skipped =3D m ? m.index - pos : text.length - =
pos;
                    if (skipped) {
                        =
content.appendChild(document.createTextNode(text.slice(pos, pos + =
skipped)));
                        builder.col +=3D skipped;
                    }
                    if (!m) break;
                    pos +=3D skipped + 1;
                    if (m[0] =3D=3D "\t") {
                        var tabSize =3D builder.cm.options.tabSize, =
tabWidth =3D tabSize - builder.col % tabSize;
                        content.appendChild(elt("span", =
spaceStr(tabWidth), "cm-tab"));
                        builder.col +=3D tabWidth;
                    } else {
                        var token =3D elt("span", "\u2022", =
"cm-invalidchar");
                        token.title =3D "\\u" + =
m[0].charCodeAt(0).toString(16);
                        content.appendChild(token);
                        builder.col +=3D 1;
                    }
                }
            }
            if (style || startStyle || endStyle || builder.measure) {
                var fullStyle =3D style || "";
                if (startStyle) fullStyle +=3D startStyle;
                if (endStyle) fullStyle +=3D endStyle;
                var token =3D elt("span", [content], fullStyle);
                if (title) token.title =3D title;
                return builder.pre.appendChild(token);
            }
            builder.pre.appendChild(content);
        }

        function buildTokenMeasure(builder, text, style, startStyle, =
endStyle) {
            var wrapping =3D builder.cm.options.lineWrapping;
            for (var i =3D 0; i < text.length; ++i) {
                var ch =3D text.charAt(i), start =3D i =3D=3D 0;
                if (ch >=3D "\ud800" && ch < "\udbff" && i < text.length =
- 1) {
                    ch =3D text.slice(i, i + 2);
                    ++i;
                } else if (i && wrapping && spanAffectsWrapping(text, =
i)) {
                    builder.pre.appendChild(elt("wbr"));
                }
                var old =3D builder.measure[builder.pos];
                var span =3D builder.measure[builder.pos] =3D
                    buildToken(builder, ch, style,
                            start && startStyle, i =3D=3D text.length - =
1 && endStyle);
                if (old) span.leftSide =3D old.leftSide || old;
                // In IE single-space nodes wrap differently than spaces
                // embedded in larger text nodes, except when set to
                // white-space: normal (issue #1268).
                if (ie && wrapping && ch =3D=3D " " && i && =
!/\s/.test(text.charAt(i - 1)) &&
                    i < text.length - 1 && !/\s/.test(text.charAt(i + =
1)))
                    span.style.whiteSpace =3D "normal";
                builder.pos +=3D ch.length;
            }
            if (text.length) builder.measuredSomething =3D true;
        }

        function buildTokenSplitSpaces(inner) {
            function split(old) {
                var out =3D " ";
                for (var i =3D 0; i < old.length - 2; ++i) out +=3D i % =
2 ? " " : "\u00a0";
                out +=3D " ";
                return out;
            }
            return function(builder, text, style, startStyle, endStyle, =
title) {
                return inner(builder, text.replace(/ {3,}/, split), =
style, startStyle, endStyle, title);
            };
        }

        function buildCollapsedSpan(builder, size, marker, ignoreWidget) =
{
            var widget =3D !ignoreWidget && marker.replacedWith;
            if (widget) {
                if (builder.copyWidgets) widget =3D =
widget.cloneNode(true);
                builder.pre.appendChild(widget);
                if (builder.measure) {
                    if (size) {
                        builder.measure[builder.pos] =3D widget;
                    } else {
                        var elt =3D builder.measure[builder.pos] =3D =
zeroWidthElement(builder.cm.display.measure);
                        if (marker.type !=3D "bookmark" || =
marker.insertLeft)
                            builder.pre.insertBefore(elt, widget);
                        else
                            builder.pre.appendChild(elt);
                    }
                    builder.measuredSomething =3D true;
                }
            }
            builder.pos +=3D size;
        }

        // Outputs a number of spans to make up a line, taking =
highlighting
        // and marked text into account.
        function insertLineContent(line, builder, styles) {
            var spans =3D line.markedSpans, allText =3D line.text, at =
=3D 0;
            if (!spans) {
                for (var i =3D 1; i < styles.length; i+=3D2)
                    builder.addToken(builder, allText.slice(at, at =3D =
styles[i]), styleToClass(styles[i+1]));
                return;
            }

            var len =3D allText.length, pos =3D 0, i =3D 1, text =3D "", =
style;
            var nextChange =3D 0, spanStyle, spanEndStyle, =
spanStartStyle, title, collapsed;
            for (;;) {
                if (nextChange =3D=3D pos) { // Update current marker =
set
                    spanStyle =3D spanEndStyle =3D spanStartStyle =3D =
title =3D "";
                    collapsed =3D null; nextChange =3D Infinity;
                    var foundBookmark =3D null;
                    for (var j =3D 0; j < spans.length; ++j) {
                        var sp =3D spans[j], m =3D sp.marker;
                        if (sp.from <=3D pos && (sp.to =3D=3D null || =
sp.to > pos)) {
                            if (sp.to !=3D null && nextChange > sp.to) { =
nextChange =3D sp.to; spanEndStyle =3D ""; }
                            if (m.className) spanStyle +=3D " " + =
m.className;
                            if (m.startStyle && sp.from =3D=3D pos) =
spanStartStyle +=3D " " + m.startStyle;
                            if (m.endStyle && sp.to =3D=3D nextChange) =
spanEndStyle +=3D " " + m.endStyle;
                            if (m.title && !title) title =3D m.title;
                            if (m.collapsed && (!collapsed || =
collapsed.marker.size < m.size))
                                collapsed =3D sp;
                        } else if (sp.from > pos && nextChange > =
sp.from) {
                            nextChange =3D sp.from;
                        }
                        if (m.type =3D=3D "bookmark" && sp.from =3D=3D =
pos && m.replacedWith) foundBookmark =3D m;
                    }
                    if (collapsed && (collapsed.from || 0) =3D=3D pos) {
                        buildCollapsedSpan(builder, (collapsed.to =3D=3D =
null ? len : collapsed.to) - pos,
                            collapsed.marker, collapsed.from =3D=3D =
null);
                        if (collapsed.to =3D=3D null) return =
collapsed.marker.find();
                    }
                    if (foundBookmark && !collapsed) =
buildCollapsedSpan(builder, 0, foundBookmark);
                }
                if (pos >=3D len) break;

                var upto =3D Math.min(len, nextChange);
                while (true) {
                    if (text) {
                        var end =3D pos + text.length;
                        if (!collapsed) {
                            var tokenText =3D end > upto ? text.slice(0, =
upto - pos) : text;
                            builder.addToken(builder, tokenText, style ? =
style + spanStyle : spanStyle,
                                spanStartStyle, pos + tokenText.length =
=3D=3D nextChange ? spanEndStyle : "", title);
                        }
                        if (end >=3D upto) {text =3D text.slice(upto - =
pos); pos =3D upto; break;}
                        pos =3D end;
                        spanStartStyle =3D "";
                    }
                    text =3D allText.slice(at, at =3D styles[i++]);
                    style =3D styleToClass(styles[i++]);
                }
            }
        }

        // DOCUMENT DATA STRUCTURE

        function updateDoc(doc, change, markedSpans, selAfter, =
estimateHeight) {
            function spansFor(n) {return markedSpans ? markedSpans[n] : =
null;}
            function update(line, text, spans) {
                updateLine(line, text, spans, estimateHeight);
                signalLater(line, "change", line, change);
            }

            var from =3D change.from, to =3D change.to, text =3D =
change.text;
            var firstLine =3D getLine(doc, from.line), lastLine =3D =
getLine(doc, to.line);
            var lastText =3D lst(text), lastSpans =3D =
spansFor(text.length - 1), nlines =3D to.line - from.line;

            // First adjust the line structure
            if (from.ch =3D=3D 0 && to.ch =3D=3D 0 && lastText =3D=3D =
"") {
                // This is a whole-line replace. Treated specially to =
make
                // sure line objects move the way they are supposed to.
                for (var i =3D 0, e =3D text.length - 1, added =3D []; i =
< e; ++i)
                    added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                update(lastLine, lastLine.text, lastSpans);
                if (nlines) doc.remove(from.line, nlines);
                if (added.length) doc.insert(from.line, added);
            } else if (firstLine =3D=3D lastLine) {
                if (text.length =3D=3D 1) {
                    update(firstLine, firstLine.text.slice(0, from.ch) + =
lastText + firstLine.text.slice(to.ch), lastSpans);
                } else {
                    for (var added =3D [], i =3D 1, e =3D text.length - =
1; i < e; ++i)
                        added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                    added.push(new Line(lastText + =
firstLine.text.slice(to.ch), lastSpans, estimateHeight));
                    update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0], spansFor(0));
                    doc.insert(from.line + 1, added);
                }
            } else if (text.length =3D=3D 1) {
                update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0] + lastLine.text.slice(to.ch), spansFor(0));
                doc.remove(from.line + 1, nlines);
            } else {
                update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0], spansFor(0));
                update(lastLine, lastText + lastLine.text.slice(to.ch), =
lastSpans);
                for (var i =3D 1, e =3D text.length - 1, added =3D []; i =
< e; ++i)
                    added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                if (nlines > 1) doc.remove(from.line + 1, nlines - 1);
                doc.insert(from.line + 1, added);
            }

            signalLater(doc, "change", doc, change);
            setSelection(doc, selAfter.anchor, selAfter.head, null, =
true);
        }

        function LeafChunk(lines) {
            this.lines =3D lines;
            this.parent =3D null;
            for (var i =3D 0, e =3D lines.length, height =3D 0; i < e; =
++i) {
                lines[i].parent =3D this;
                height +=3D lines[i].height;
            }
            this.height =3D height;
        }

        LeafChunk.prototype =3D {
            chunkSize: function() { return this.lines.length; },
            removeInner: function(at, n) {
                for (var i =3D at, e =3D at + n; i < e; ++i) {
                    var line =3D this.lines[i];
                    this.height -=3D line.height;
                    cleanUpLine(line);
                    signalLater(line, "delete");
                }
                this.lines.splice(at, n);
            },
            collapse: function(lines) {
                lines.splice.apply(lines, [lines.length, =
0].concat(this.lines));
            },
            insertInner: function(at, lines, height) {
                this.height +=3D height;
                this.lines =3D this.lines.slice(0, =
at).concat(lines).concat(this.lines.slice(at));
                for (var i =3D 0, e =3D lines.length; i < e; ++i) =
lines[i].parent =3D this;
            },
            iterN: function(at, n, op) {
                for (var e =3D at + n; at < e; ++at)
                    if (op(this.lines[at])) return true;
            }
        };

        function BranchChunk(children) {
            this.children =3D children;
            var size =3D 0, height =3D 0;
            for (var i =3D 0, e =3D children.length; i < e; ++i) {
                var ch =3D children[i];
                size +=3D ch.chunkSize(); height +=3D ch.height;
                ch.parent =3D this;
            }
            this.size =3D size;
            this.height =3D height;
            this.parent =3D null;
        }

        BranchChunk.prototype =3D {
            chunkSize: function() { return this.size; },
            removeInner: function(at, n) {
                this.size -=3D n;
                for (var i =3D 0; i < this.children.length; ++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at < sz) {
                        var rm =3D Math.min(n, sz - at), oldHeight =3D =
child.height;
                        child.removeInner(at, rm);
                        this.height -=3D oldHeight - child.height;
                        if (sz =3D=3D rm) { this.children.splice(i--, =
1); child.parent =3D null; }
                        if ((n -=3D rm) =3D=3D 0) break;
                        at =3D 0;
                    } else at -=3D sz;
                }
                if (this.size - n < 25) {
                    var lines =3D [];
                    this.collapse(lines);
                    this.children =3D [new LeafChunk(lines)];
                    this.children[0].parent =3D this;
                }
            },
            collapse: function(lines) {
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) this.children[i].collapse(lines);
            },
            insertInner: function(at, lines, height) {
                this.size +=3D lines.length;
                this.height +=3D height;
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at <=3D sz) {
                        child.insertInner(at, lines, height);
                        if (child.lines && child.lines.length > 50) {
                            while (child.lines.length > 50) {
                                var spilled =3D =
child.lines.splice(child.lines.length - 25, 25);
                                var newleaf =3D new LeafChunk(spilled);
                                child.height -=3D newleaf.height;
                                this.children.splice(i + 1, 0, newleaf);
                                newleaf.parent =3D this;
                            }
                            this.maybeSpill();
                        }
                        break;
                    }
                    at -=3D sz;
                }
            },
            maybeSpill: function() {
                if (this.children.length <=3D 10) return;
                var me =3D this;
                do {
                    var spilled =3D =
me.children.splice(me.children.length - 5, 5);
                    var sibling =3D new BranchChunk(spilled);
                    if (!me.parent) { // Become the parent node
                        var copy =3D new BranchChunk(me.children);
                        copy.parent =3D me;
                        me.children =3D [copy, sibling];
                        me =3D copy;
                    } else {
                        me.size -=3D sibling.size;
                        me.height -=3D sibling.height;
                        var myIndex =3D indexOf(me.parent.children, me);
                        me.parent.children.splice(myIndex + 1, 0, =
sibling);
                    }
                    sibling.parent =3D me.parent;
                } while (me.children.length > 10);
                me.parent.maybeSpill();
            },
            iterN: function(at, n, op) {
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at < sz) {
                        var used =3D Math.min(n, sz - at);
                        if (child.iterN(at, used, op)) return true;
                        if ((n -=3D used) =3D=3D 0) break;
                        at =3D 0;
                    } else at -=3D sz;
                }
            }
        };

        var nextDocId =3D 0;
        var Doc =3D CodeMirror.Doc =3D function(text, mode, firstLine) {
            if (!(this instanceof Doc)) return new Doc(text, mode, =
firstLine);
            if (firstLine =3D=3D null) firstLine =3D 0;

            BranchChunk.call(this, [new LeafChunk([new Line("", =
null)])]);
            this.first =3D firstLine;
            this.scrollTop =3D this.scrollLeft =3D 0;
            this.cantEdit =3D false;
            this.history =3D makeHistory();
            this.cleanGeneration =3D 1;
            this.frontier =3D firstLine;
            var start =3D Pos(firstLine, 0);
            this.sel =3D {from: start, to: start, head: start, anchor: =
start, shift: false, extend: false, goalColumn: null};
            this.id =3D ++nextDocId;
            this.modeOption =3D mode;

            if (typeof text =3D=3D "string") text =3D splitLines(text);
            updateDoc(this, {from: start, to: start, text: text}, null, =
{head: start, anchor: start});
        };

        Doc.prototype =3D createObj(BranchChunk.prototype, {
            constructor: Doc,
            iter: function(from, to, op) {
                if (op) this.iterN(from - this.first, to - from, op);
                else this.iterN(this.first, this.first + this.size, =
from);
            },

            insert: function(at, lines) {
                var height =3D 0;
                for (var i =3D 0, e =3D lines.length; i < e; ++i) height =
+=3D lines[i].height;
                this.insertInner(at - this.first, lines, height);
            },
            remove: function(at, n) { this.removeInner(at - this.first, =
n); },

            getValue: function(lineSep) {
                var lines =3D getLines(this, this.first, this.first + =
this.size);
                if (lineSep =3D=3D=3D false) return lines;
                return lines.join(lineSep || "\n");
            },
            setValue: function(code) {
                var top =3D Pos(this.first, 0), last =3D this.first + =
this.size - 1;
                makeChange(this, {from: top, to: Pos(last, getLine(this, =
last).text.length),
                        text: splitLines(code), origin: "setValue"},
                    {head: top, anchor: top}, true);
            },
            replaceRange: function(code, from, to, origin) {
                from =3D clipPos(this, from);
                to =3D to ? clipPos(this, to) : from;
                replaceRange(this, code, from, to, origin);
            },
            getRange: function(from, to, lineSep) {
                var lines =3D getBetween(this, clipPos(this, from), =
clipPos(this, to));
                if (lineSep =3D=3D=3D false) return lines;
                return lines.join(lineSep || "\n");
            },

            getLine: function(line) {var l =3D this.getLineHandle(line); =
return l && l.text;},
            setLine: function(line, text) {
                if (isLine(this, line))
                    replaceRange(this, text, Pos(line, 0), clipPos(this, =
Pos(line)));
            },
            removeLine: function(line) {
                if (line) replaceRange(this, "", clipPos(this, Pos(line =
- 1)), clipPos(this, Pos(line)));
                else replaceRange(this, "", Pos(0, 0), clipPos(this, =
Pos(1, 0)));
            },

            getLineHandle: function(line) {if (isLine(this, line)) =
return getLine(this, line);},
            getLineNumber: function(line) {return lineNo(line);},

            getLineHandleVisualStart: function(line) {
                if (typeof line =3D=3D "number") line =3D getLine(this, =
line);
                return visualLine(this, line);
            },

            lineCount: function() {return this.size;},
            firstLine: function() {return this.first;},
            lastLine: function() {return this.first + this.size - 1;},

            clipPos: function(pos) {return clipPos(this, pos);},

            getCursor: function(start) {
                var sel =3D this.sel, pos;
                if (start =3D=3D null || start =3D=3D "head") pos =3D =
sel.head;
                else if (start =3D=3D "anchor") pos =3D sel.anchor;
                else if (start =3D=3D "end" || start =3D=3D=3D false) =
pos =3D sel.to;
                else pos =3D sel.from;
                return copyPos(pos);
            },
            somethingSelected: function() {return !posEq(this.sel.head, =
this.sel.anchor);},

            setCursor: docOperation(function(line, ch, extend) {
                var pos =3D clipPos(this, typeof line =3D=3D "number" ? =
Pos(line, ch || 0) : line);
                if (extend) extendSelection(this, pos);
                else setSelection(this, pos, pos);
            }),
            setSelection: docOperation(function(anchor, head) {
                setSelection(this, clipPos(this, anchor), clipPos(this, =
head || anchor));
            }),
            extendSelection: docOperation(function(from, to) {
                extendSelection(this, clipPos(this, from), to && =
clipPos(this, to));
            }),

            getSelection: function(lineSep) {return =
this.getRange(this.sel.from, this.sel.to, lineSep);},
            replaceSelection: function(code, collapse, origin) {
                makeChange(this, {from: this.sel.from, to: this.sel.to, =
text: splitLines(code), origin: origin}, collapse || "around");
            },
            undo: docOperation(function() {makeChangeFromHistory(this, =
"undo");}),
            redo: docOperation(function() {makeChangeFromHistory(this, =
"redo");}),

            setExtending: function(val) {this.sel.extend =3D val;},

            historySize: function() {
                var hist =3D this.history;
                return {undo: hist.done.length, redo: =
hist.undone.length};
            },
            clearHistory: function() {this.history =3D =
makeHistory(this.history.maxGeneration);},

            markClean: function() {
                this.cleanGeneration =3D this.changeGeneration();
            },
            changeGeneration: function() {
                this.history.lastOp =3D this.history.lastOrigin =3D =
null;
                return this.history.generation;
            },
            isClean: function (gen) {
                return this.history.generation =3D=3D (gen || =
this.cleanGeneration);
            },

            getHistory: function() {
                return {done: copyHistoryArray(this.history.done),
                    undone: copyHistoryArray(this.history.undone)};
            },
            setHistory: function(histData) {
                var hist =3D this.history =3D =
makeHistory(this.history.maxGeneration);
                hist.done =3D histData.done.slice(0);
                hist.undone =3D histData.undone.slice(0);
            },

            markText: function(from, to, options) {
                return markText(this, clipPos(this, from), clipPos(this, =
to), options, "range");
            },
            setBookmark: function(pos, options) {
                var realOpts =3D {replacedWith: options && =
(options.nodeType =3D=3D null ? options.widget : options),
                    insertLeft: options && options.insertLeft};
                pos =3D clipPos(this, pos);
                return markText(this, pos, pos, realOpts, "bookmark");
            },
            findMarksAt: function(pos) {
                pos =3D clipPos(this, pos);
                var markers =3D [], spans =3D getLine(this, =
pos.line).markedSpans;
                if (spans) for (var i =3D 0; i < spans.length; ++i) {
                    var span =3D spans[i];
                    if ((span.from =3D=3D null || span.from <=3D pos.ch) =
&&
                        (span.to =3D=3D null || span.to >=3D pos.ch))
                        markers.push(span.marker.parent || span.marker);
                }
                return markers;
            },
            getAllMarks: function() {
                var markers =3D [];
                this.iter(function(line) {
                    var sps =3D line.markedSpans;
                    if (sps) for (var i =3D 0; i < sps.length; ++i)
                        if (sps[i].from !=3D null) =
markers.push(sps[i].marker);
                });
                return markers;
            },

            posFromIndex: function(off) {
                var ch, lineNo =3D this.first;
                this.iter(function(line) {
                    var sz =3D line.text.length + 1;
                    if (sz > off) { ch =3D off; return true; }
                    off -=3D sz;
                    ++lineNo;
                });
                return clipPos(this, Pos(lineNo, ch));
            },
            indexFromPos: function (coords) {
                coords =3D clipPos(this, coords);
                var index =3D coords.ch;
                if (coords.line < this.first || coords.ch < 0) return 0;
                this.iter(this.first, coords.line, function (line) {
                    index +=3D line.text.length + 1;
                });
                return index;
            },

            copy: function(copyHistory) {
                var doc =3D new Doc(getLines(this, this.first, =
this.first + this.size), this.modeOption, this.first);
                doc.scrollTop =3D this.scrollTop; doc.scrollLeft =3D =
this.scrollLeft;
                doc.sel =3D {from: this.sel.from, to: this.sel.to, head: =
this.sel.head, anchor: this.sel.anchor,
                    shift: this.sel.shift, extend: false, goalColumn: =
this.sel.goalColumn};
                if (copyHistory) {
                    doc.history.undoDepth =3D this.history.undoDepth;
                    doc.setHistory(this.getHistory());
                }
                return doc;
            },

            linkedDoc: function(options) {
                if (!options) options =3D {};
                var from =3D this.first, to =3D this.first + this.size;
                if (options.from !=3D null && options.from > from) from =
=3D options.from;
                if (options.to !=3D null && options.to < to) to =3D =
options.to;
                var copy =3D new Doc(getLines(this, from, to), =
options.mode || this.modeOption, from);
                if (options.sharedHist) copy.history =3D this.history;
                (this.linked || (this.linked =3D [])).push({doc: copy, =
sharedHist: options.sharedHist});
                copy.linked =3D [{doc: this, isParent: true, sharedHist: =
options.sharedHist}];
                return copy;
            },
            unlinkDoc: function(other) {
                if (other instanceof CodeMirror) other =3D other.doc;
                if (this.linked) for (var i =3D 0; i < =
this.linked.length; ++i) {
                    var link =3D this.linked[i];
                    if (link.doc !=3D other) continue;
                    this.linked.splice(i, 1);
                    other.unlinkDoc(this);
                    break;
                }
                // If the histories were shared, split them again
                if (other.history =3D=3D this.history) {
                    var splitIds =3D [other.id];
                    linkedDocs(other, function(doc) =
{splitIds.push(doc.id);}, true);
                    other.history =3D makeHistory();
                    other.history.done =3D =
copyHistoryArray(this.history.done, splitIds);
                    other.history.undone =3D =
copyHistoryArray(this.history.undone, splitIds);
                }
            },
            iterLinkedDocs: function(f) {linkedDocs(this, f);},

            getMode: function() {return this.mode;},
            getEditor: function() {return this.cm;}
        });

        Doc.prototype.eachLine =3D Doc.prototype.iter;

        // The Doc methods that should be available on CodeMirror =
instances
        var dontDelegate =3D "iter insert remove copy getEditor".split(" =
");
        for (var prop in Doc.prototype) if =
(Doc.prototype.hasOwnProperty(prop) && indexOf(dontDelegate, prop) < 0)
            CodeMirror.prototype[prop] =3D (function(method) {
                return function() {return method.apply(this.doc, =
arguments);};
            })(Doc.prototype[prop]);

        eventMixin(Doc);

        function linkedDocs(doc, f, sharedHistOnly) {
            function propagate(doc, skip, sharedHist) {
                if (doc.linked) for (var i =3D 0; i < doc.linked.length; =
++i) {
                    var rel =3D doc.linked[i];
                    if (rel.doc =3D=3D skip) continue;
                    var shared =3D sharedHist && rel.sharedHist;
                    if (sharedHistOnly && !shared) continue;
                    f(rel.doc, shared);
                    propagate(rel.doc, doc, shared);
                }
            }
            propagate(doc, null, true);
        }

        function attachDoc(cm, doc) {
            if (doc.cm) throw new Error("This document is already in =
use.");
            cm.doc =3D doc;
            doc.cm =3D cm;
            estimateLineHeights(cm);
            loadMode(cm);
            if (!cm.options.lineWrapping) computeMaxLength(cm);
            cm.options.mode =3D doc.modeOption;
            regChange(cm);
        }

        // LINE UTILITIES

        function getLine(chunk, n) {
            n -=3D chunk.first;
            while (!chunk.lines) {
                for (var i =3D 0;; ++i) {
                    var child =3D chunk.children[i], sz =3D =
child.chunkSize();
                    if (n < sz) { chunk =3D child; break; }
                    n -=3D sz;
                }
            }
            return chunk.lines[n];
        }

        function getBetween(doc, start, end) {
            var out =3D [], n =3D start.line;
            doc.iter(start.line, end.line + 1, function(line) {
                var text =3D line.text;
                if (n =3D=3D end.line) text =3D text.slice(0, end.ch);
                if (n =3D=3D start.line) text =3D text.slice(start.ch);
                out.push(text);
                ++n;
            });
            return out;
        }
        function getLines(doc, from, to) {
            var out =3D [];
            doc.iter(from, to, function(line) { out.push(line.text); });
            return out;
        }

        function updateLineHeight(line, height) {
            var diff =3D height - line.height;
            for (var n =3D line; n; n =3D n.parent) n.height +=3D diff;
        }

        function lineNo(line) {
            if (line.parent =3D=3D null) return null;
            var cur =3D line.parent, no =3D indexOf(cur.lines, line);
            for (var chunk =3D cur.parent; chunk; cur =3D chunk, chunk =
=3D chunk.parent) {
                for (var i =3D 0;; ++i) {
                    if (chunk.children[i] =3D=3D cur) break;
                    no +=3D chunk.children[i].chunkSize();
                }
            }
            return no + cur.first;
        }

        function lineAtHeight(chunk, h) {
            var n =3D chunk.first;
            outer: do {
                for (var i =3D 0, e =3D chunk.children.length; i < e; =
++i) {
                    var child =3D chunk.children[i], ch =3D =
child.height;
                    if (h < ch) { chunk =3D child; continue outer; }
                    h -=3D ch;
                    n +=3D child.chunkSize();
                }
                return n;
            } while (!chunk.lines);
            for (var i =3D 0, e =3D chunk.lines.length; i < e; ++i) {
                var line =3D chunk.lines[i], lh =3D line.height;
                if (h < lh) break;
                h -=3D lh;
            }
            return n + i;
        }

        function heightAtLine(cm, lineObj) {
            lineObj =3D visualLine(cm.doc, lineObj);

            var h =3D 0, chunk =3D lineObj.parent;
            for (var i =3D 0; i < chunk.lines.length; ++i) {
                var line =3D chunk.lines[i];
                if (line =3D=3D lineObj) break;
                else h +=3D line.height;
            }
            for (var p =3D chunk.parent; p; chunk =3D p, p =3D =
chunk.parent) {
                for (var i =3D 0; i < p.children.length; ++i) {
                    var cur =3D p.children[i];
                    if (cur =3D=3D chunk) break;
                    else h +=3D cur.height;
                }
            }
            return h;
        }

        function getOrder(line) {
            var order =3D line.order;
            if (order =3D=3D null) order =3D line.order =3D =
bidiOrdering(line.text);
            return order;
        }

        // HISTORY

        function makeHistory(startGen) {
            return {
                // Arrays of history events. Doing something adds an =
event to
                // done and clears undo. Undoing moves events from done =
to
                // undone, redoing moves them in the other direction.
                done: [], undone: [], undoDepth: Infinity,
                // Used to track when changes can be merged into a =
single undo
                // event
                lastTime: 0, lastOp: null, lastOrigin: null,
                // Used by the isClean() method
                generation: startGen || 1, maxGeneration: startGen || 1
            };
        }

        function attachLocalSpans(doc, change, from, to) {
            var existing =3D change["spans_" + doc.id], n =3D 0;
            doc.iter(Math.max(doc.first, from), Math.min(doc.first + =
doc.size, to), function(line) {
                if (line.markedSpans)
                    (existing || (existing =3D change["spans_" + doc.id] =
=3D {}))[n] =3D line.markedSpans;
                ++n;
            });
        }

        function historyChangeFromChange(doc, change) {
            var from =3D { line: change.from.line, ch: change.from.ch };
            var histChange =3D {from: from, to: changeEnd(change), text: =
getBetween(doc, change.from, change.to)};
            attachLocalSpans(doc, histChange, change.from.line, =
change.to.line + 1);
            linkedDocs(doc, function(doc) {attachLocalSpans(doc, =
histChange, change.from.line, change.to.line + 1);}, true);
            return histChange;
        }

        function addToHistory(doc, change, selAfter, opId) {
            var hist =3D doc.history;
            hist.undone.length =3D 0;
            var time =3D +new Date, cur =3D lst(hist.done);

            if (cur &&
                (hist.lastOp =3D=3D opId ||
                    hist.lastOrigin =3D=3D change.origin && =
change.origin &&
                    ((change.origin.charAt(0) =3D=3D "+" && doc.cm && =
hist.lastTime > time - doc.cm.options.historyEventDelay) ||
                        change.origin.charAt(0) =3D=3D "*"))) {
                // Merge this change into the last event
                var last =3D lst(cur.changes);
                if (posEq(change.from, change.to) && posEq(change.from, =
last.to)) {
                    // Optimized case for simple insertion -- don't want =
to add
                    // new changesets for every character typed
                    last.to =3D changeEnd(change);
                } else {
                    // Add new sub-event
                    cur.changes.push(historyChangeFromChange(doc, =
change));
                }
                cur.anchorAfter =3D selAfter.anchor; cur.headAfter =3D =
selAfter.head;
            } else {
                // Can not be merged, start a new event.
                cur =3D {changes: [historyChangeFromChange(doc, =
change)],
                    generation: hist.generation,
                    anchorBefore: doc.sel.anchor, headBefore: =
doc.sel.head,
                    anchorAfter: selAfter.anchor, headAfter: =
selAfter.head};
                hist.done.push(cur);
                hist.generation =3D ++hist.maxGeneration;
                while (hist.done.length > hist.undoDepth)
                    hist.done.shift();
            }
            hist.lastTime =3D time;
            hist.lastOp =3D opId;
            hist.lastOrigin =3D change.origin;
        }

        function removeClearedSpans(spans) {
            if (!spans) return null;
            for (var i =3D 0, out; i < spans.length; ++i) {
                if (spans[i].marker.explicitlyCleared) { if (!out) out =
=3D spans.slice(0, i); }
                else if (out) out.push(spans[i]);
            }
            return !out ? spans : out.length ? out : null;
        }

        function getOldSpans(doc, change) {
            var found =3D change["spans_" + doc.id];
            if (!found) return null;
            for (var i =3D 0, nw =3D []; i < change.text.length; ++i)
                nw.push(removeClearedSpans(found[i]));
            return nw;
        }

        // Used both to provide a JSON-safe object in .getHistory, and, =
when
        // detaching a document, to split the history in two
        function copyHistoryArray(events, newGroup) {
            for (var i =3D 0, copy =3D []; i < events.length; ++i) {
                var event =3D events[i], changes =3D event.changes, =
newChanges =3D [];
                copy.push({changes: newChanges, anchorBefore: =
event.anchorBefore, headBefore: event.headBefore,
                    anchorAfter: event.anchorAfter, headAfter: =
event.headAfter});
                for (var j =3D 0; j < changes.length; ++j) {
                    var change =3D changes[j], m;
                    newChanges.push({from: change.from, to: change.to, =
text: change.text});
                    if (newGroup) for (var prop in change) if (m =3D =
prop.match(/^spans_(\d+)$/)) {
                        if (indexOf(newGroup, Number(m[1])) > -1) {
                            lst(newChanges)[prop] =3D change[prop];
                            delete change[prop];
                        }
                    }
                }
            }
            return copy;
        }

        // Rebasing/resetting history to deal with externally-sourced =
changes

        function rebaseHistSel(pos, from, to, diff) {
            if (to < pos.line) {
                pos.line +=3D diff;
            } else if (from < pos.line) {
                pos.line =3D from;
                pos.ch =3D 0;
            }
        }

        // Tries to rebase an array of history events given a change in =
the
        // document. If the change touches the same lines as the event, =
the
        // event, and everything 'behind' it, is discarded. If the =
change is
        // before the event, the event's positions are updated. Uses a
        // copy-on-write scheme for the positions, to avoid having to
        // reallocate them all on every rebase, but also avoid problems =
with
        // shared position objects being unsafely updated.
        function rebaseHistArray(array, from, to, diff) {
            for (var i =3D 0; i < array.length; ++i) {
                var sub =3D array[i], ok =3D true;
                for (var j =3D 0; j < sub.changes.length; ++j) {
                    var cur =3D sub.changes[j];
                    if (!sub.copied) { cur.from =3D copyPos(cur.from); =
cur.to =3D copyPos(cur.to); }
                    if (to < cur.from.line) {
                        cur.from.line +=3D diff;
                        cur.to.line +=3D diff;
                    } else if (from <=3D cur.to.line) {
                        ok =3D false;
                        break;
                    }
                }
                if (!sub.copied) {
                    sub.anchorBefore =3D copyPos(sub.anchorBefore); =
sub.headBefore =3D copyPos(sub.headBefore);
                    sub.anchorAfter =3D copyPos(sub.anchorAfter); =
sub.readAfter =3D copyPos(sub.headAfter);
                    sub.copied =3D true;
                }
                if (!ok) {
                    array.splice(0, i + 1);
                    i =3D 0;
                } else {
                    rebaseHistSel(sub.anchorBefore); =
rebaseHistSel(sub.headBefore);
                    rebaseHistSel(sub.anchorAfter); =
rebaseHistSel(sub.headAfter);
                }
            }
        }

        function rebaseHist(hist, change) {
            var from =3D change.from.line, to =3D change.to.line, diff =
=3D change.text.length - (to - from) - 1;
            rebaseHistArray(hist.done, from, to, diff);
            rebaseHistArray(hist.undone, from, to, diff);
        }

        // EVENT OPERATORS

        function stopMethod() {e_stop(this);}
        // Ensure an event has a stop method.
        function addStop(event) {
            if (!event.stop) event.stop =3D stopMethod;
            return event;
        }

        function e_preventDefault(e) {
            if (e.preventDefault) e.preventDefault();
            else e.returnValue =3D false;
        }
        function e_stopPropagation(e) {
            if (e.stopPropagation) e.stopPropagation();
            else e.cancelBubble =3D true;
        }
        function e_defaultPrevented(e) {
            return e.defaultPrevented !=3D null ? e.defaultPrevented : =
e.returnValue =3D=3D false;
        }
        function e_stop(e) {e_preventDefault(e); e_stopPropagation(e);}
        CodeMirror.e_stop =3D e_stop;
        CodeMirror.e_preventDefault =3D e_preventDefault;
        CodeMirror.e_stopPropagation =3D e_stopPropagation;

        function e_target(e) {return e.target || e.srcElement;}
        function e_button(e) {
            var b =3D e.which;
            if (b =3D=3D null) {
                if (e.button & 1) b =3D 1;
                else if (e.button & 2) b =3D 3;
                else if (e.button & 4) b =3D 2;
            }
            if (mac && e.ctrlKey && b =3D=3D 1) b =3D 3;
            return b;
        }

        // EVENT HANDLING

        function on(emitter, type, f) {
            if (emitter.addEventListener)
                emitter.addEventListener(type, f, false);
            else if (emitter.attachEvent)
                emitter.attachEvent("on" + type, f);
            else {
                var map =3D emitter._handlers || (emitter._handlers =3D =
{});
                var arr =3D map[type] || (map[type] =3D []);
                arr.push(f);
            }
        }

        function off(emitter, type, f) {
            if (emitter.removeEventListener)
                emitter.removeEventListener(type, f, false);
            else if (emitter.detachEvent)
                emitter.detachEvent("on" + type, f);
            else {
                var arr =3D emitter._handlers && =
emitter._handlers[type];
                if (!arr) return;
                for (var i =3D 0; i < arr.length; ++i)
                    if (arr[i] =3D=3D f) { arr.splice(i, 1); break; }
            }
        }

        function signal(emitter, type /*, values...*/) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            if (!arr) return;
            var args =3D Array.prototype.slice.call(arguments, 2);
            for (var i =3D 0; i < arr.length; ++i) arr[i].apply(null, =
args);
        }

        var delayedCallbacks, delayedCallbackDepth =3D 0;
        function signalLater(emitter, type /*, values...*/) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            if (!arr) return;
            var args =3D Array.prototype.slice.call(arguments, 2);
            if (!delayedCallbacks) {
                ++delayedCallbackDepth;
                delayedCallbacks =3D [];
                setTimeout(fireDelayed, 0);
            }
            function bnd(f) {return function(){f.apply(null, args);};};
            for (var i =3D 0; i < arr.length; ++i)
                delayedCallbacks.push(bnd(arr[i]));
        }

        function signalDOMEvent(cm, e, override) {
            signal(cm, override || e.type, cm, e);
            return e_defaultPrevented(e) || e.codemirrorIgnore;
        }

        function fireDelayed() {
            --delayedCallbackDepth;
            var delayed =3D delayedCallbacks;
            delayedCallbacks =3D null;
            for (var i =3D 0; i < delayed.length; ++i) delayed[i]();
        }

        function hasHandler(emitter, type) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            return arr && arr.length > 0;
        }

        CodeMirror.on =3D on; CodeMirror.off =3D off; CodeMirror.signal =
=3D signal;

        function eventMixin(ctor) {
            ctor.prototype.on =3D function(type, f) {on(this, type, =
f);};
            ctor.prototype.off =3D function(type, f) {off(this, type, =
f);};
        }

        // MISC UTILITIES

        // Number of pixels added to scroller and sizer to hide =
scrollbar
        var scrollerCutOff =3D 30;

        // Returned or thrown by various protocols to signal 'I'm not
        // handling this'.
        var Pass =3D CodeMirror.Pass =3D {toString: function(){return =
"CodeMirror.Pass";}};

        function Delayed() {this.id =3D null;}
        Delayed.prototype =3D {set: function(ms, f) =
{clearTimeout(this.id); this.id =3D setTimeout(f, ms);}};

        // Counts the column offset in a string, taking tabs into =
account.
        // Used mostly to find indentation.
        function countColumn(string, end, tabSize, startIndex, =
startValue) {
            if (end =3D=3D null) {
                end =3D string.search(/[^\s\u00a0]/);
                if (end =3D=3D -1) end =3D string.length;
            }
            for (var i =3D startIndex || 0, n =3D startValue || 0; i < =
end; ++i) {
                if (string.charAt(i) =3D=3D "\t") n +=3D tabSize - (n % =
tabSize);
                else ++n;
            }
            return n;
        }
        CodeMirror.countColumn =3D countColumn;

        var spaceStrs =3D [""];
        function spaceStr(n) {
            while (spaceStrs.length <=3D n)
                spaceStrs.push(lst(spaceStrs) + " ");
            return spaceStrs[n];
        }

        function lst(arr) { return arr[arr.length-1]; }

        function selectInput(node) {
            if (ios) { // Mobile Safari apparently has a bug where =
select() is broken.
                node.selectionStart =3D 0;
                node.selectionEnd =3D node.value.length;
            } else {
                // Suppress mysterious IE10 errors
                try { node.select(); }
                catch(_e) {}
            }
        }

        function indexOf(collection, elt) {
            if (collection.indexOf) return collection.indexOf(elt);
            for (var i =3D 0, e =3D collection.length; i < e; ++i)
                if (collection[i] =3D=3D elt) return i;
            return -1;
        }

        function createObj(base, props) {
            function Obj() {}
            Obj.prototype =3D base;
            var inst =3D new Obj();
            if (props) copyObj(props, inst);
            return inst;
        }

        function copyObj(obj, target) {
            if (!target) target =3D {};
            for (var prop in obj) if (obj.hasOwnProperty(prop)) =
target[prop] =3D obj[prop];
            return target;
        }

        function emptyArray(size) {
            for (var a =3D [], i =3D 0; i < size; ++i) =
a.push(undefined);
            return a;
        }

        function bind(f) {
            var args =3D Array.prototype.slice.call(arguments, 1);
            return function(){return f.apply(null, args);};
        }

        var nonASCIISingleCaseWordChar =3D =
/[\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
        function isWordChar(ch) {
            return /\w/.test(ch) || ch > "\x80" &&
                (ch.toUpperCase() !=3D ch.toLowerCase() || =
nonASCIISingleCaseWordChar.test(ch));
        }

        function isEmpty(obj) {
            for (var n in obj) if (obj.hasOwnProperty(n) && obj[n]) =
return false;
            return true;
        }

        var isExtendingChar =3D =
/[\u0300-\u036F\u0483-\u0487\u0488-\u0489\u0591-\u05BD\u05BF\u05C1-\u05C2=
\u05C4-\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u=
06E4\u06E7-\u06E8\u06EA-\u06ED\uA66F\uA670-\uA672\uA674-\uA67D\uA69F\udc0=
0-\udfff]/;

        // DOM UTILITIES

        function elt(tag, content, className, style) {
            var e =3D document.createElement(tag);
            if (className) e.className =3D className;
            if (style) e.style.cssText =3D style;
            if (typeof content =3D=3D "string") setTextContent(e, =
content);
            else if (content) for (var i =3D 0; i < content.length; ++i) =
e.appendChild(content[i]);
            return e;
        }

        function removeChildren(e) {
            for (var count =3D e.childNodes.length; count > 0; --count)
                e.removeChild(e.firstChild);
            return e;
        }

        function removeChildrenAndAdd(parent, e) {
            return removeChildren(parent).appendChild(e);
        }

        function setTextContent(e, str) {
            if (ie_lt9) {
                e.innerHTML =3D "";
                e.appendChild(document.createTextNode(str));
            } else e.textContent =3D str;
        }

        function getRect(node) {
            return node.getBoundingClientRect();
        }
        CodeMirror.replaceGetRect =3D function(f) { getRect =3D f; };

        // FEATURE DETECTION

        // Detect drag-and-drop
        var dragAndDrop =3D function() {
            // There is *some* kind of drag-and-drop support in IE6-8, =
but I
            // couldn't get it to work yet.
            if (ie_lt9) return false;
            var div =3D elt('div');
            return "draggable" in div || "dragDrop" in div;
        }();

        // For a reason I have yet to figure out, some browsers disallow
        // word wrapping between certain characters *only* if a new =
inline
        // element is started between them. This makes it hard to =
reliably
        // measure the position of things, since that requires inserting =
an
        // extra span. This terribly fragile set of tests matches the
        // character combinations that suffer from this phenomenon on =
the
        // various browsers.
        function spanAffectsWrapping() { return false; }
        if (gecko) // Only for "$'"
            spanAffectsWrapping =3D function(str, i) {
                return str.charCodeAt(i - 1) =3D=3D 36 && =
str.charCodeAt(i) =3D=3D 39;
            };
        else if (safari && =
!/Version\/([6-9]|\d\d)\b/.test(navigator.userAgent))
            spanAffectsWrapping =3D function(str, i) {
                return /\-[^ \-?]|\?[^ =
!\'\"\),.\-\/:;\?\]\}]/.test(str.slice(i - 1, i + 1));
            };
        else if (webkit && =
!/Chrome\/(?:29|[3-9]\d|\d\d\d)\./.test(navigator.userAgent))
            spanAffectsWrapping =3D function(str, i) {
                if (i > 1 && str.charCodeAt(i - 1) =3D=3D 45) {
                    if (/\w/.test(str.charAt(i - 2)) && =
/[^\-?\.]/.test(str.charAt(i))) return true;
                    if (i > 2 && /[\d\.,]/.test(str.charAt(i - 2)) && =
/[\d\.,]/.test(str.charAt(i))) return false;
                }
                return =
/[~!#%&*)=3D+}\]|\"\.>,:;][({[<]|-[^\-?\.\u2010-\u201f\u2026]|\?[\w~`@#$%=
\^&*(_=3D+{[|><]|=E2=80=A6[\w~`@#$%\^&*(_=3D+{[><]/.test(str.slice(i - =
1, i + 1));
            };

        var knownScrollbarWidth;
        function scrollbarWidth(measure) {
            if (knownScrollbarWidth !=3D null) return =
knownScrollbarWidth;
            var test =3D elt("div", null, null, "width: 50px; height: =
50px; overflow-x: scroll");
            removeChildrenAndAdd(measure, test);
            if (test.offsetWidth)
                knownScrollbarWidth =3D test.offsetHeight - =
test.clientHeight;
            return knownScrollbarWidth || 0;
        }

        var zwspSupported;
        function zeroWidthElement(measure) {
            if (zwspSupported =3D=3D null) {
                var test =3D elt("span", "\u200b");
                removeChildrenAndAdd(measure, elt("span", [test, =
document.createTextNode("x")]));
                if (measure.firstChild.offsetHeight !=3D 0)
                    zwspSupported =3D test.offsetWidth <=3D 1 && =
test.offsetHeight > 2 && !ie_lt8;
            }
            if (zwspSupported) return elt("span", "\u200b");
            else return elt("span", "\u00a0", null, "display: =
inline-block; width: 1px; margin-right: -1px");
        }

        // See if "".split is the broken IE version, if so, provide an
        // alternative way to split lines.
        var splitLines =3D "\n\nb".split(/\n/).length !=3D 3 ? =
function(string) {
            var pos =3D 0, result =3D [], l =3D string.length;
            while (pos <=3D l) {
                var nl =3D string.indexOf("\n", pos);
                if (nl =3D=3D -1) nl =3D string.length;
                var line =3D string.slice(pos, string.charAt(nl - 1) =
=3D=3D "\r" ? nl - 1 : nl);
                var rt =3D line.indexOf("\r");
                if (rt !=3D -1) {
                    result.push(line.slice(0, rt));
                    pos +=3D rt + 1;
                } else {
                    result.push(line);
                    pos =3D nl + 1;
                }
            }
            return result;
        } : function(string){return string.split(/\r\n?|\n/);};
        CodeMirror.splitLines =3D splitLines;

        var hasSelection =3D window.getSelection ? function(te) {
            try { return te.selectionStart !=3D te.selectionEnd; }
            catch(e) { return false; }
        } : function(te) {
            try {var range =3D =
te.ownerDocument.selection.createRange();}
            catch(e) {}
            if (!range || range.parentElement() !=3D te) return false;
            return range.compareEndPoints("StartToEnd", range) !=3D 0;
        };

        var hasCopyEvent =3D (function() {
            var e =3D elt("div");
            if ("oncopy" in e) return true;
            e.setAttribute("oncopy", "return;");
            return typeof e.oncopy =3D=3D 'function';
        })();

        // KEY NAMING

        var keyNames =3D {3: "Enter", 8: "Backspace", 9: "Tab", 13: =
"Enter", 16: "Shift", 17: "Ctrl", 18: "Alt",
            19: "Pause", 20: "CapsLock", 27: "Esc", 32: "Space", 33: =
"PageUp", 34: "PageDown", 35: "End",
            36: "Home", 37: "Left", 38: "Up", 39: "Right", 40: "Down", =
44: "PrintScrn", 45: "Insert",
            46: "Delete", 59: ";", 91: "Mod", 92: "Mod", 93: "Mod", 109: =
"-", 107: "=3D", 127: "Delete",
            186: ";", 187: "=3D", 188: ",", 189: "-", 190: ".", 191: =
"/", 192: "`", 219: "[", 220: "\\",
            221: "]", 222: "'", 63276: "PageUp", 63277: "PageDown", =
63275: "End", 63273: "Home",
            63234: "Left", 63232: "Up", 63235: "Right", 63233: "Down", =
63302: "Insert", 63272: "Delete"};
        CodeMirror.keyNames =3D keyNames;
        (function() {
            // Number keys
            for (var i =3D 0; i < 10; i++) keyNames[i + 48] =3D =
String(i);
            // Alphabetic keys
            for (var i =3D 65; i <=3D 90; i++) keyNames[i] =3D =
String.fromCharCode(i);
            // Function keys
            for (var i =3D 1; i <=3D 12; i++) keyNames[i + 111] =3D =
keyNames[i + 63235] =3D "F" + i;
        })();

        // BIDI HELPERS

        function iterateBidiSections(order, from, to, f) {
            if (!order) return f(from, to, "ltr");
            var found =3D false;
            for (var i =3D 0; i < order.length; ++i) {
                var part =3D order[i];
                if (part.from < to && part.to > from || from =3D=3D to =
&& part.to =3D=3D from) {
                    f(Math.max(part.from, from), Math.min(part.to, to), =
part.level =3D=3D 1 ? "rtl" : "ltr");
                    found =3D true;
                }
            }
            if (!found) f(from, to, "ltr");
        }

        function bidiLeft(part) { return part.level % 2 ? part.to : =
part.from; }
        function bidiRight(part) { return part.level % 2 ? part.from : =
part.to; }

        function lineLeft(line) { var order =3D getOrder(line); return =
order ? bidiLeft(order[0]) : 0; }
        function lineRight(line) {
            var order =3D getOrder(line);
            if (!order) return line.text.length;
            return bidiRight(lst(order));
        }

        function lineStart(cm, lineN) {
            var line =3D getLine(cm.doc, lineN);
            var visual =3D visualLine(cm.doc, line);
            if (visual !=3D line) lineN =3D lineNo(visual);
            var order =3D getOrder(visual);
            var ch =3D !order ? 0 : order[0].level % 2 ? =
lineRight(visual) : lineLeft(visual);
            return Pos(lineN, ch);
        }
        function lineEnd(cm, lineN) {
            var merged, line;
            while (merged =3D collapsedSpanAtEnd(line =3D =
getLine(cm.doc, lineN)))
                lineN =3D merged.find().to.line;
            var order =3D getOrder(line);
            var ch =3D !order ? line.text.length : order[0].level % 2 ? =
lineLeft(line) : lineRight(line);
            return Pos(lineN, ch);
        }

        function compareBidiLevel(order, a, b) {
            var linedir =3D order[0].level;
            if (a =3D=3D linedir) return true;
            if (b =3D=3D linedir) return false;
            return a < b;
        }
        var bidiOther;
        function getBidiPartAt(order, pos) {
            for (var i =3D 0, found; i < order.length; ++i) {
                var cur =3D order[i];
                if (cur.from < pos && cur.to > pos) { bidiOther =3D =
null; return i; }
                if (cur.from =3D=3D pos || cur.to =3D=3D pos) {
                    if (found =3D=3D null) {
                        found =3D i;
                    } else if (compareBidiLevel(order, cur.level, =
order[found].level)) {
                        bidiOther =3D found;
                        return i;
                    } else {
                        bidiOther =3D i;
                        return found;
                    }
                }
            }
            bidiOther =3D null;
            return found;
        }

        function moveInLine(line, pos, dir, byUnit) {
            if (!byUnit) return pos + dir;
            do pos +=3D dir;
            while (pos > 0 && =
isExtendingChar.test(line.text.charAt(pos)));
            return pos;
        }

        // This is somewhat involved. It is needed in order to move
        // 'visually' through bi-directional text -- i.e., pressing left
        // should make the cursor go left, even when in RTL text. The
        // tricky part is the 'jumps', where RTL and LTR text touch each
        // other. This often requires the cursor offset to move more =
than
        // one unit, in order to visually move one unit.
        function moveVisually(line, start, dir, byUnit) {
            var bidi =3D getOrder(line);
            if (!bidi) return moveLogically(line, start, dir, byUnit);
            var pos =3D getBidiPartAt(bidi, start), part =3D bidi[pos];
            var target =3D moveInLine(line, start, part.level % 2 ? -dir =
: dir, byUnit);

            for (;;) {
                if (target > part.from && target < part.to) return =
target;
                if (target =3D=3D part.from || target =3D=3D part.to) {
                    if (getBidiPartAt(bidi, target) =3D=3D pos) return =
target;
                    part =3D bidi[pos +=3D dir];
                    return (dir > 0) =3D=3D part.level % 2 ? part.to : =
part.from;
                } else {
                    part =3D bidi[pos +=3D dir];
                    if (!part) return null;
                    if ((dir > 0) =3D=3D part.level % 2)
                        target =3D moveInLine(line, part.to, -1, =
byUnit);
                    else
                        target =3D moveInLine(line, part.from, 1, =
byUnit);
                }
            }
        }

        function moveLogically(line, start, dir, byUnit) {
            var target =3D start + dir;
            if (byUnit) while (target > 0 && =
isExtendingChar.test(line.text.charAt(target))) target +=3D dir;
            return target < 0 || target > line.text.length ? null : =
target;
        }

        // Bidirectional ordering algorithm
        // See http://unicode.org/reports/tr9/tr9-13.html for the =
algorithm
        // that this (partially) implements.

        // One-char codes used for character types:
        // L (L):   Left-to-Right
        // R (R):   Right-to-Left
        // r (AL):  Right-to-Left Arabic
        // 1 (EN):  European Number
        // + (ES):  European Number Separator
        // % (ET):  European Number Terminator
        // n (AN):  Arabic Number
        // , (CS):  Common Number Separator
        // m (NSM): Non-Spacing Mark
        // b (BN):  Boundary Neutral
        // s (B):   Paragraph Separator
        // t (S):   Segment Separator
        // w (WS):  Whitespace
        // N (ON):  Other Neutrals

        // Returns null if characters are ordered as they appear
        // (left-to-right), or an array of sections ({from, to, level}
        // objects) in the order in which they occur visually.
        var bidiOrdering =3D (function() {
            // Character types for codepoints 0 to 0xff
            var lowTypes =3D =
"bbbbbbbbbtstwsbbbbbbbbbbbbbbssstwNN%%%NNNNNN,N,N1111111111NNNNNNNLLLLLLL=
LLLLLLLLLLLLLLLLLLLNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNbbbbbbsbbbbbbbbbbb=
bbbbbbbbbbbbbbb,N%%%%NNNNLNNNNN%%11NLNNN1LNNNNNLLLLLLLLLLLLLLLLLLLLLLLNLL=
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLL";
            // Character types for codepoints 0x600 to 0x6ff
            var arabicTypes =3D =
"rrrrrrrrrrrr,rNNmmmmmmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr=
rrrmmmmmmmmmmmmmmrrrrrrrnnnnnnnnnn%nnrrrmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr=
rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrmmmm=
mmmmmmmmmmmmmmmNmmmmrrrrrrrrrrrrrrrrrr";
            function charType(code) {
                if (code <=3D 0xff) return lowTypes.charAt(code);
                else if (0x590 <=3D code && code <=3D 0x5f4) return "R";
                else if (0x600 <=3D code && code <=3D 0x6ff) return =
arabicTypes.charAt(code - 0x600);
                else if (0x700 <=3D code && code <=3D 0x8ac) return "r";
                else return "L";
            }

            var bidiRE =3D /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
            var isNeutral =3D /[stwN]/, isStrong =3D /[LRr]/, =
countsAsLeft =3D /[Lb1n]/, countsAsNum =3D /[1n]/;
            // Browsers seem to always treat the boundaries of block =
elements as being L.
            var outerType =3D "L";

            return function(str) {
                if (!bidiRE.test(str)) return false;
                var len =3D str.length, types =3D [];
                for (var i =3D 0, type; i < len; ++i)
                    types.push(type =3D charType(str.charCodeAt(i)));

                // W1. Examine each non-spacing mark (NSM) in the level =
run, and
                // change the type of the NSM to the type of the =
previous
                // character. If the NSM is at the start of the level =
run, it will
                // get the type of sor.
                for (var i =3D 0, prev =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "m") types[i] =3D prev;
                    else prev =3D type;
                }

                // W2. Search backwards from each instance of a European =
number
                // until the first strong type (R, L, AL, or sor) is =
found. If an
                // AL is found, change the type of the European number =
to Arabic
                // number.
                // W3. Change all ALs to R.
                for (var i =3D 0, cur =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "1" && cur =3D=3D "r") types[i] =3D =
"n";
                    else if (isStrong.test(type)) { cur =3D type; if =
(type =3D=3D "r") types[i] =3D "R"; }
                }

                // W4. A single European separator between two European =
numbers
                // changes to a European number. A single common =
separator between
                // two numbers of the same type changes to that type.
                for (var i =3D 1, prev =3D types[0]; i < len - 1; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "+" && prev =3D=3D "1" && types[i+1] =
=3D=3D "1") types[i] =3D "1";
                    else if (type =3D=3D "," && prev =3D=3D types[i+1] =
&&
                        (prev =3D=3D "1" || prev =3D=3D "n")) types[i] =
=3D prev;
                    prev =3D type;
                }

                // W5. A sequence of European terminators adjacent to =
European
                // numbers changes to all European numbers.
                // W6. Otherwise, separators and terminators change to =
Other
                // Neutral.
                for (var i =3D 0; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D ",") types[i] =3D "N";
                    else if (type =3D=3D "%") {
                        for (var end =3D i + 1; end < len && types[end] =
=3D=3D "%"; ++end) {}
                        var replace =3D (i && types[i-1] =3D=3D "!") || =
(end < len - 1 && types[end] =3D=3D "1") ? "1" : "N";
                        for (var j =3D i; j < end; ++j) types[j] =3D =
replace;
                        i =3D end - 1;
                    }
                }

                // W7. Search backwards from each instance of a European =
number
                // until the first strong type (R, L, or sor) is found. =
If an L is
                // found, then change the type of the European number to =
L.
                for (var i =3D 0, cur =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (cur =3D=3D "L" && type =3D=3D "1") types[i] =3D =
"L";
                    else if (isStrong.test(type)) cur =3D type;
                }

                // N1. A sequence of neutrals takes the direction of the
                // surrounding strong text if the text on both sides has =
the same
                // direction. European and Arabic numbers act as if they =
were R in
                // terms of their influence on neutrals. =
Start-of-level-run (sor)
                // and end-of-level-run (eor) are used at level run =
boundaries.
                // N2. Any remaining neutrals take the embedding =
direction.
                for (var i =3D 0; i < len; ++i) {
                    if (isNeutral.test(types[i])) {
                        for (var end =3D i + 1; end < len && =
isNeutral.test(types[end]); ++end) {}
                        var before =3D (i ? types[i-1] : outerType) =
=3D=3D "L";
                        var after =3D (end < len - 1 ? types[end] : =
outerType) =3D=3D "L";
                        var replace =3D before || after ? "L" : "R";
                        for (var j =3D i; j < end; ++j) types[j] =3D =
replace;
                        i =3D end - 1;
                    }
                }

                // Here we depart from the documented algorithm, in =
order to avoid
                // building up an actual levels array. Since there are =
only three
                // levels (0, 1, 2) in an implementation that doesn't =
take
                // explicit embedding into account, we can build up the =
order on
                // the fly, without following the level-based algorithm.
                var order =3D [], m;
                for (var i =3D 0; i < len;) {
                    if (countsAsLeft.test(types[i])) {
                        var start =3D i;
                        for (++i; i < len && =
countsAsLeft.test(types[i]); ++i) {}
                        order.push({from: start, to: i, level: 0});
                    } else {
                        var pos =3D i, at =3D order.length;
                        for (++i; i < len && types[i] !=3D "L"; ++i) {}
                        for (var j =3D pos; j < i;) {
                            if (countsAsNum.test(types[j])) {
                                if (pos < j) order.splice(at, 0, {from: =
pos, to: j, level: 1});
                                var nstart =3D j;
                                for (++j; j < i && =
countsAsNum.test(types[j]); ++j) {}
                                order.splice(at, 0, {from: nstart, to: =
j, level: 2});
                                pos =3D j;
                            } else ++j;
                        }
                        if (pos < i) order.splice(at, 0, {from: pos, to: =
i, level: 1});
                    }
                }
                if (order[0].level =3D=3D 1 && (m =3D =
str.match(/^\s+/))) {
                    order[0].from =3D m[0].length;
                    order.unshift({from: 0, to: m[0].length, level: 0});
                }
                if (lst(order).level =3D=3D 1 && (m =3D =
str.match(/\s+$/))) {
                    lst(order).to -=3D m[0].length;
                    order.push({from: len - m[0].length, to: len, level: =
0});
                }
                if (order[0].level !=3D lst(order).level)
                    order.push({from: len, to: len, level: =
order[0].level});

                return order;
            };
        })();

        // THE END

        CodeMirror.version =3D "3.15.0";

        return CodeMirror;
    })();

    var listRE =3D /^(\s*)([*+-]|(\d+)\.)([\w+(\s+\w+)]|[\s*])/,
        emptyListRE =3D /^(\s*)([*+-]|(\d+)\.)(\s*)$/,
        unorderedBullets =3D '*+-';

    var inListState =3D function(cm, pos){
        return cm.getStateAfter(pos.line).list || null;
    };

    var inListOrNot =3D function(cm){
        var pos =3D cm.getCursor();
        return inListState(cm, pos);
    };

    CodeMirror.commands.shiftTabAndIndentContinueMarkdownList =3D =
function(cm){
        var inList =3D inListOrNot(cm);

        if(inList !=3D=3D null){
            cm.execCommand('insertTab');
            return;
        }

        cm.execCommand('indentLess');
    };

    CodeMirror.commands.tabAndIndentContinueMarkdownList =3D =
function(cm){
        var inList =3D inListOrNot(cm);

        if(inList !=3D=3D null){
            cm.execCommand('insertTab');
            return;
        }

        cm.execCommand('indentMore');
    };

    CodeMirror.commands.newlineAndIndentContinueMarkdownList =3D =
function(cm){
        var pos, tok, match, emptyMatch, inList;

        pos =3D cm.getCursor();
        tok =3D cm.getTokenAt(pos);
        emptyMatch =3D cm.getLine(pos.line).match(emptyListRE);
        inList =3D inListState(cm, pos);

        if (!inList && emptyMatch){
            cm.replaceRange("", {line: pos.line , ch:tok.start}, =
{line:pos.line , ch:tok.end});
            cm.execCommand('delLineLeft');
            cm.execCommand('newlineAndIndent');
            return;
        }

        if (!inList || !(match =3D cm.getLine(pos.line).match(listRE))) =
{
            cm.execCommand('newlineAndIndent');
            return;
        }

        var indent =3D match[1], after =3D " ";
        var bullet =3D unorderedBullets.indexOf(match[2]) >=3D 0
            ? match[2]
            : (parseInt(match[3], 10) + 1) + '.';

        cm.replaceSelection('\n' + indent + bullet + after, 'end');
    };

    CodeMirror.defineMode("xml", function(config, parserConfig) {
        var indentUnit =3D config.indentUnit;
        var multilineTagIndentFactor =3D =
parserConfig.multilineTagIndentFactor || 1;
        var multilineTagIndentPastTag =3D =
parserConfig.multilineTagIndentPastTag || true;

        var Kludges =3D parserConfig.htmlMode ? {
            autoSelfClosers: {'area': true, 'base': true, 'br': true, =
'col': true, 'command': true,
                'embed': true, 'frame': true, 'hr': true, 'img': true, =
'input': true,
                'keygen': true, 'link': true, 'meta': true, 'param': =
true, 'source': true,
                'track': true, 'wbr': true},
            implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, =
'option': true, 'p': true,
                'rp': true, 'rt': true, 'tbody': true, 'td': true, =
'tfoot': true,
                'th': true, 'tr': true},
            contextGrabbers: {
                'dd': {'dd': true, 'dt': true},
                'dt': {'dd': true, 'dt': true},
                'li': {'li': true},
                'option': {'option': true, 'optgroup': true},
                'optgroup': {'optgroup': true},
                'p': {'address': true, 'article': true, 'aside': true, =
'blockquote': true, 'dir': true,
                    'div': true, 'dl': true, 'fieldset': true, 'footer': =
true, 'form': true,
                    'h1': true, 'h2': true, 'h3': true, 'h4': true, =
'h5': true, 'h6': true,
                    'header': true, 'hgroup': true, 'hr': true, 'menu': =
true, 'nav': true, 'ol': true,
                    'p': true, 'pre': true, 'section': true, 'table': =
true, 'ul': true},
                'rp': {'rp': true, 'rt': true},
                'rt': {'rp': true, 'rt': true},
                'tbody': {'tbody': true, 'tfoot': true},
                'td': {'td': true, 'th': true},
                'tfoot': {'tbody': true},
                'th': {'td': true, 'th': true},
                'thead': {'tbody': true, 'tfoot': true},
                'tr': {'tr': true}
            },
            doNotIndent: {"pre": true},
            allowUnquoted: true,
            allowMissing: true
        } : {
            autoSelfClosers: {},
            implicitlyClosed: {},
            contextGrabbers: {},
            doNotIndent: {},
            allowUnquoted: false,
            allowMissing: false
        };
        var alignCDATA =3D parserConfig.alignCDATA;

        // Return variables for tokenizers
        var tagName, type;

        function inText(stream, state) {
            function chain(parser) {
                state.tokenize =3D parser;
                return parser(stream, state);
            }

            var ch =3D stream.next();
            if (ch =3D=3D "<") {
                if (stream.eat("!")) {
                    if (stream.eat("[")) {
                        if (stream.match("CDATA[")) return =
chain(inBlock("atom", "]]>"));
                        else return null;
                    } else if (stream.match("--")) {
                        return chain(inBlock("comment", "-->"));
                    } else if (stream.match("DOCTYPE", true, true)) {
                        stream.eatWhile(/[\w\._\-]/);
                        return chain(doctype(1));
                    } else {
                        return null;
                    }
                } else if (stream.eat("?")) {
                    stream.eatWhile(/[\w\._\-]/);
                    state.tokenize =3D inBlock("meta", "?>");
                    return "meta";
                } else {
                    var isClose =3D stream.eat("/");
                    tagName =3D "";
                    var c;
                    while ((c =3D =
stream.eat(/[^\s\u00a0=3D<>\"\'\/?]/))) tagName +=3D c;
                    if (!tagName) return "error";
                    type =3D isClose ? "closeTag" : "openTag";
                    state.tokenize =3D inTag;
                    return "tag";
                }
            } else if (ch =3D=3D "&") {
                var ok;
                if (stream.eat("#")) {
                    if (stream.eat("x")) {
                        ok =3D stream.eatWhile(/[a-fA-F\d]/) && =
stream.eat(";");
                    } else {
                        ok =3D stream.eatWhile(/[\d]/) && =
stream.eat(";");
                    }
                } else {
                    ok =3D stream.eatWhile(/[\w\.\-:]/) && =
stream.eat(";");
                }
                return ok ? "atom" : "error";
            } else {
                stream.eatWhile(/[^&<]/);
                return null;
            }
        }

        function inTag(stream, state) {
            var ch =3D stream.next();
            if (ch =3D=3D ">" || (ch =3D=3D "/" && stream.eat(">"))) {
                state.tokenize =3D inText;
                type =3D ch =3D=3D ">" ? "endTag" : "selfcloseTag";
                return "tag";
            } else if (ch =3D=3D "=3D") {
                type =3D "equals";
                return null;
            } else if (ch =3D=3D "<") {
                return "error";
            } else if (/[\'\"]/.test(ch)) {
                state.tokenize =3D inAttribute(ch);
                state.stringStartCol =3D stream.column();
                return state.tokenize(stream, state);
            } else {
                stream.eatWhile(/[^\s\u00a0=3D<>\"\']/);
                return "word";
            }
        }

        function inAttribute(quote) {
            var closure =3D function(stream, state) {
                while (!stream.eol()) {
                    if (stream.next() =3D=3D quote) {
                        state.tokenize =3D inTag;
                        break;
                    }
                }
                return "string";
            };
            closure.isInAttribute =3D true;
            return closure;
        }

        function inBlock(style, terminator) {
            return function(stream, state) {
                while (!stream.eol()) {
                    if (stream.match(terminator)) {
                        state.tokenize =3D inText;
                        break;
                    }
                    stream.next();
                }
                return style;
            };
        }
        function doctype(depth) {
            return function(stream, state) {
                var ch;
                while ((ch =3D stream.next()) !=3D null) {
                    if (ch =3D=3D "<") {
                        state.tokenize =3D doctype(depth + 1);
                        return state.tokenize(stream, state);
                    } else if (ch =3D=3D ">") {
                        if (depth =3D=3D 1) {
                            state.tokenize =3D inText;
                            break;
                        } else {
                            state.tokenize =3D doctype(depth - 1);
                            return state.tokenize(stream, state);
                        }
                    }
                }
                return "meta";
            };
        }

        var curState, curStream, setStyle;
        function pass() {
            for (var i =3D arguments.length - 1; i >=3D 0; i--) =
curState.cc.push(arguments[i]);
        }
        function cont() {
            pass.apply(null, arguments);
            return true;
        }

        function pushContext(tagName, startOfLine) {
            var noIndent =3D Kludges.doNotIndent.hasOwnProperty(tagName) =
|| (curState.context && curState.context.noIndent);
            curState.context =3D {
                prev: curState.context,
                tagName: tagName,
                indent: curState.indented,
                startOfLine: startOfLine,
                noIndent: noIndent
            };
        }
        function popContext() {
            if (curState.context) curState.context =3D =
curState.context.prev;
        }

        function element(type) {
            if (type =3D=3D "openTag") {
                curState.tagName =3D tagName;
                curState.tagStart =3D curStream.column();
                return cont(attributes, endtag(curState.startOfLine));
            } else if (type =3D=3D "closeTag") {
                var err =3D false;
                if (curState.context) {
                    if (curState.context.tagName !=3D tagName) {
                        if =
(Kludges.implicitlyClosed.hasOwnProperty(curState.context.tagName.toLower=
Case())) {
                            popContext();
                        }
                        err =3D !curState.context || =
curState.context.tagName !=3D tagName;
                    }
                } else {
                    err =3D true;
                }
                if (err) setStyle =3D "error";
                return cont(endclosetag(err));
            }
            return cont();
        }
        function endtag(startOfLine) {
            return function(type) {
                var tagName =3D curState.tagName;
                curState.tagName =3D curState.tagStart =3D null;
                if (type =3D=3D "selfcloseTag" ||
                    (type =3D=3D "endTag" && =
Kludges.autoSelfClosers.hasOwnProperty(tagName.toLowerCase()))) {
                    maybePopContext(tagName.toLowerCase());
                    return cont();
                }
                if (type =3D=3D "endTag") {
                    maybePopContext(tagName.toLowerCase());
                    pushContext(tagName, startOfLine);
                    return cont();
                }
                return cont();
            };
        }
        function endclosetag(err) {
            return function(type) {
                if (err) setStyle =3D "error";
                if (type =3D=3D "endTag") { popContext(); return cont(); =
}
                setStyle =3D "error";
                return cont(arguments.callee);
            };
        }
        function maybePopContext(nextTagName) {
            var parentTagName;
            while (true) {
                if (!curState.context) {
                    return;
                }
                parentTagName =3D =
curState.context.tagName.toLowerCase();
                if =
(!Kludges.contextGrabbers.hasOwnProperty(parentTagName) ||
                    =
!Kludges.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {
                    return;
                }
                popContext();
            }
        }

        function attributes(type) {
            if (type =3D=3D "word") {setStyle =3D "attribute"; return =
cont(attribute, attributes);}
            if (type =3D=3D "endTag" || type =3D=3D "selfcloseTag") =
return pass();
            setStyle =3D "error";
            return cont(attributes);
        }
        function attribute(type) {
            if (type =3D=3D "equals") return cont(attvalue, attributes);
            if (!Kludges.allowMissing) setStyle =3D "error";
            else if (type =3D=3D "word") setStyle =3D "attribute";
            return (type =3D=3D "endTag" || type =3D=3D "selfcloseTag") =
? pass() : cont();
        }
        function attvalue(type) {
            if (type =3D=3D "string") return cont(attvaluemaybe);
            if (type =3D=3D "word" && Kludges.allowUnquoted) {setStyle =
=3D "string"; return cont();}
            setStyle =3D "error";
            return (type =3D=3D "endTag" || type =3D=3D "selfCloseTag") =
? pass() : cont();
        }
        function attvaluemaybe(type) {
            if (type =3D=3D "string") return cont(attvaluemaybe);
            else return pass();
        }

        return {
            startState: function() {
                return {tokenize: inText, cc: [], indented: 0, =
startOfLine: true, tagName: null, tagStart: null, context: null};
            },

            token: function(stream, state) {
                if (!state.tagName && stream.sol()) {
                    state.startOfLine =3D true;
                    state.indented =3D stream.indentation();
                }
                if (stream.eatSpace()) return null;

                setStyle =3D type =3D tagName =3D null;
                var style =3D state.tokenize(stream, state);
                state.type =3D type;
                if ((style || type) && style !=3D "comment") {
                    curState =3D state; curStream =3D stream;
                    while (true) {
                        var comb =3D state.cc.pop() || element;
                        if (comb(type || style)) break;
                    }
                }
                state.startOfLine =3D false;
                return setStyle || style;
            },

            indent: function(state, textAfter, fullLine) {
                var context =3D state.context;
                // Indent multi-line strings (e.g. css).
                if (state.tokenize.isInAttribute) {
                    return state.stringStartCol + 1;
                }
                if ((state.tokenize !=3D inTag && state.tokenize !=3D =
inText) ||
                    context && context.noIndent)
                    return fullLine ? fullLine.match(/^(\s*)/)[0].length =
: 0;
                // Indent the starts of attribute names.
                if (state.tagName) {
                    if (multilineTagIndentPastTag)
                        return state.tagStart + state.tagName.length + =
2;
                    else
                        return state.tagStart + indentUnit * =
multilineTagIndentFactor;
                }
                if (alignCDATA && /<!\[CDATA\[/.test(textAfter)) return =
0;
                if (context && /^<\//.test(textAfter))
                    context =3D context.prev;
                while (context && !context.startOfLine)
                    context =3D context.prev;
                if (context) return context.indent + indentUnit;
                else return 0;
            },

            electricChars: "/",
            blockCommentStart: "<!--",
            blockCommentEnd: "-->",

            configuration: parserConfig.htmlMode ? "html" : "xml",
            helperType: parserConfig.htmlMode ? "html" : "xml"
        };
    });

    CodeMirror.defineMIME("text/xml", "xml");
    CodeMirror.defineMIME("application/xml", "xml");
    if (!CodeMirror.mimeModes.hasOwnProperty("text/html"))
        CodeMirror.defineMIME("text/html", {name: "xml", htmlMode: =
true});

    CodeMirror.defineMode("markdown", function(cmCfg, modeCfg) {

        var htmlFound =3D CodeMirror.modes.hasOwnProperty("xml");
        var htmlMode =3D CodeMirror.getMode(cmCfg, htmlFound ? {name: =
"xml", htmlMode: true} : "text/plain");
        var aliases =3D {
            html: "htmlmixed",
            js: "javascript",
            json: "application/json",
            c: "text/x-csrc",
            "c++": "text/x-c++src",
            java: "text/x-java",
            csharp: "text/x-csharp",
            "c#": "text/x-csharp",
            scala: "text/x-scala"
        };

        var getMode =3D (function () {
            var i, modes =3D {}, mimes =3D {}, mime;

            var list =3D [];
            for (var m in CodeMirror.modes)
                if (CodeMirror.modes.propertyIsEnumerable(m)) =
list.push(m);
            for (i =3D 0; i < list.length; i++) {
                modes[list[i]] =3D list[i];
            }
            var mimesList =3D [];
            for (var m in CodeMirror.mimeModes)
                if (CodeMirror.mimeModes.propertyIsEnumerable(m))
                    mimesList.push({mime: m, mode: =
CodeMirror.mimeModes[m]});
            for (i =3D 0; i < mimesList.length; i++) {
                mime =3D mimesList[i].mime;
                mimes[mime] =3D mimesList[i].mime;
            }

            for (var a in aliases) {
                if (aliases[a] in modes || aliases[a] in mimes)
                    modes[a] =3D aliases[a];
            }

            return function (lang) {
                return modes[lang] ? CodeMirror.getMode(cmCfg, =
modes[lang]) : null;
            };
        }());

        // Should underscores in words open/close em/strong?
        if (modeCfg.underscoresBreakWords =3D=3D=3D undefined)
            modeCfg.underscoresBreakWords =3D true;

        // Turn on fenced code blocks? ("```" to start/end)
        if (modeCfg.fencedCodeBlocks =3D=3D=3D undefined) =
modeCfg.fencedCodeBlocks =3D false;

        // Turn on task lists? ("- [ ] " and "- [x] ")
        if (modeCfg.taskLists =3D=3D=3D undefined) modeCfg.taskLists =3D =
false;

        var codeDepth =3D 0;

        var header   =3D 'header'
            ,   code     =3D 'comment'
            ,   quote1   =3D 'atom'
            ,   quote2   =3D 'number'
            ,   list1    =3D 'variable-2'
            ,   list2    =3D 'variable-3'
            ,   list3    =3D 'keyword'
            ,   hr       =3D 'hr'
            ,   image    =3D 'tag'
            ,   linkinline =3D 'link'
            ,   linkemail =3D 'link'
            ,   linktext =3D 'link'
            ,   linkhref =3D 'string'
            ,   em       =3D 'em'
            ,   strong   =3D 'strong'
            ,   strike   =3D 'strike';

        var hrRE =3D /^([*\-=3D_])(?:\s*\1){4,}\s*$/
            ,   ulRE =3D /^[*\-+]\s+/
            ,   olRE =3D /^[0-9]+\.\s+/
            ,   taskListRE =3D /^\[(x| )\](?=3D\s)/ // Must follow ulRE =
or olRE
            ,   headerRE =3D /^(?:\=3D{1,}|-{1,})$/
            ,   textRE =3D /^[^!\[\]*_~\\<>` "'(]+/;

        function switchInline(stream, state, f) {
            state.f =3D state.inline =3D f;
            return f(stream, state);
        }

        function switchBlock(stream, state, f) {
            state.f =3D state.block =3D f;
            return f(stream, state);
        }


        // Blocks

        function blankLine(state) {
            // Reset linkTitle state
            state.linkTitle =3D false;
            // Reset EM state
            state.em =3D false;
            // Reset STRONG state
            state.strong =3D false;
            // Reset STRIKE state
            state.strike =3D false;

            // Reset state.quote
            state.quote =3D 0;
            if (!htmlFound && state.f =3D=3D htmlBlock) {
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
            }
            // Reset state.trailingSpace
            state.trailingSpace =3D 0;
            state.trailingSpaceNewLine =3D false;
            // Mark this line as blank
            state.thisLineHasContent =3D false;
            return null;
        }

        function blockNormal(stream, state) {

            var prevLineIsList =3D (state.list !=3D=3D false);
            if (state.list !=3D=3D false && state.indentationDiff >=3D =
0) { // Continued list
                if (state.indentationDiff < 4) { // Only adjust =
indentation if *not* a code block
                    state.indentation -=3D state.indentationDiff;
                }
                state.list =3D null;
            } else if (state.list !=3D=3D false && state.indentation > =
0) {
                state.list =3D null;
                state.listDepth =3D Math.floor(state.indentation / 4);
            } else if (state.list !=3D=3D false) { // No longer a list
                state.list =3D false;
                state.listDepth =3D 0;
            }

            if (state.indentationDiff >=3D 4) {
                state.indentation -=3D 4;
                stream.skipToEnd();
                return code;
            } else if (stream.eatSpace()) {
                return null;
            } else if (stream.peek() =3D=3D=3D '#' || =
(state.prevLineHasContent && stream.match(headerRE)) ) {
                state.header =3D true;
            } else if (stream.eat('>')) {
                state.indentation++;
                state.quote =3D 1;
                stream.eatSpace();
                while (stream.eat('>')) {
                    stream.eatSpace();
                    state.quote++;
                }
            } else if (stream.peek() =3D=3D=3D '[') {
                return switchInline(stream, state, footnoteLink);
            } else if (stream.match(hrRE, true)) {
                return hr;
            } else if ((!state.prevLineHasContent || prevLineIsList) && =
(stream.match(ulRE, true) || stream.match(olRE, true))) {
                state.indentation +=3D 4;
                state.list =3D true;
                state.listDepth++;
                if (modeCfg.taskLists && stream.match(taskListRE, =
false)) {
                    state.taskList =3D true;
                }
            } else if (modeCfg.fencedCodeBlocks && =
stream.match(/^```([\w+#]*)/, true)) {
                // try switching mode
                state.localMode =3D getMode(RegExp.$1);
                if (state.localMode) state.localState =3D =
state.localMode.startState();
                switchBlock(stream, state, local);
                return code;
            }

            return switchInline(stream, state, state.inline);
        }

        function htmlBlock(stream, state) {
            var style =3D htmlMode.token(stream, state.htmlState);
            if (htmlFound && style =3D=3D=3D 'tag' && =
state.htmlState.type !=3D=3D 'openTag' && !state.htmlState.context) {
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
            }
            if (state.md_inside && stream.current().indexOf(">")!=3D-1) =
{
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
                state.htmlState.context =3D undefined;
            }
            return style;
        }

        function local(stream, state) {
            if (stream.sol() && stream.match(/^```/, true)) {
                state.localMode =3D state.localState =3D null;
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
                return code;
            } else if (state.localMode) {
                return state.localMode.token(stream, state.localState);
            } else {
                stream.skipToEnd();
                return code;
            }
        }

        // Inline
        function getType(state) {
            var styles =3D [];

            if (state.taskOpen) { return "meta"; }
            if (state.taskClosed) { return "property"; }

            if (state.strong) { styles.push(strong); }
            if (state.strike) { styles.push(strike); }
            if (state.em) { styles.push(em); }

            if (state.linkText) { styles.push(linktext); }

            if (state.code) { styles.push(code); }

            if (state.header) { styles.push(header); }
            if (state.quote) { styles.push(state.quote % 2 ? quote1 : =
quote2); }
            if (state.list !=3D=3D false) {
                var listMod =3D (state.listDepth - 1) % 3;
                if (!listMod) {
                    styles.push(list1);
                } else if (listMod =3D=3D=3D 1) {
                    styles.push(list2);
                } else {
                    styles.push(list3);
                }
            }

            if (state.trailingSpaceNewLine) {
                styles.push("trailing-space-new-line");
            } else if (state.trailingSpace) {
                styles.push("trailing-space-" + (state.trailingSpace % 2 =
? "a" : "b"));
            }

            return styles.length ? styles.join(' ') : null;
        }

        function handleText(stream, state) {
            if (stream.match(textRE, true)) {
                return getType(state);
            }
            return undefined;
        }

        function inlineNormal(stream, state) {
            var style =3D state.text(stream, state);
            if (typeof style !=3D=3D 'undefined')
                return style;

            if (state.list) { // List marker (*, +, -, 1., etc)
                state.list =3D null;
                return getType(state);
            }

            if (state.taskList) {
                var taskOpen =3D stream.match(taskListRE, true)[1] =
!=3D=3D "x";
                if (taskOpen) state.taskOpen =3D true;
                else state.taskClosed =3D true;
                state.taskList =3D false;
                return getType(state);
            }

            state.taskOpen =3D false;
            state.taskClosed =3D false;

            var ch =3D stream.next();

            if (ch =3D=3D=3D '\\') {
                stream.next();
                return getType(state);
            }

            // Matches link titles present on next line
            if (state.linkTitle) {
                state.linkTitle =3D false;
                var matchCh =3D ch;
                if (ch =3D=3D=3D '(') {
                    matchCh =3D ')';
                }
                matchCh =3D =
(matchCh+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
                var regex =3D '^\\s*(?:[^' + matchCh + =
'\\\\]+|\\\\\\\\|\\\\.)' + matchCh;
                if (stream.match(new RegExp(regex), true)) {
                    return linkhref;
                }
            }

            // If this block is changed, it may need to be updated in =
GFM mode
            if (ch =3D=3D=3D '`') {
                var t =3D getType(state);
                var before =3D stream.pos;
                stream.eatWhile('`');
                var difference =3D 1 + stream.pos - before;
                if (!state.code) {
                    codeDepth =3D difference;
                    state.code =3D true;
                    return getType(state);
                } else {
                    if (difference =3D=3D=3D codeDepth) { // Must be =
exact
                        state.code =3D false;
                        return t;
                    }
                    return getType(state);
                }
            } else if (state.code) {
                return getType(state);
            }

            if (ch =3D=3D=3D '!' && stream.match(/\[[^\]]*\] =
?(?:\(|\[)/, false)) {
                stream.match(/\[[^\]]*\]/);
                state.inline =3D state.f =3D linkHref;
                return image;
            }

            if (ch =3D=3D=3D '[' && stream.match(/.*\](\(| ?\[)/, =
false)) {
                state.linkText =3D true;
                return getType(state);
            }

            if (ch =3D=3D=3D ']' && state.linkText) {
                var type =3D getType(state);
                state.linkText =3D false;
                state.inline =3D state.f =3D linkHref;
                return type;
            }

            if (ch =3D=3D=3D '<' && =
stream.match(/^(https?|ftps?):\/\/(?:[^\\>]|\\.)+>/, false)) {
                return switchInline(stream, state, =
inlineElement(linkinline, '>'));
            }

            if (ch =3D=3D=3D '<' && stream.match(/^[^> =
\\]+@(?:[^\\>]|\\.)+>/, false)) {
                return switchInline(stream, state, =
inlineElement(linkemail, '>'));
            }

            if (ch =3D=3D=3D '<' && stream.match(/^\w/, false)) {
                if (stream.string.indexOf(">")!=3D-1) {
                    var atts =3D =
stream.string.substring(1,stream.string.indexOf(">"));
                    if =
(/markdown\s*=3D\s*('|"){0,1}1('|"){0,1}/.test(atts)) {
                        state.md_inside =3D true;
                    }
                }
                stream.backUp(1);
                return switchBlock(stream, state, htmlBlock);
            }

            if (ch =3D=3D=3D '<' && stream.match(/^\/\w*?>/)) {
                state.md_inside =3D false;
                return "tag";
            }

            var ignoreUnderscore =3D false;
            if (!modeCfg.underscoresBreakWords) {
                if (ch =3D=3D=3D '_' && stream.peek() !=3D=3D '_' && =
stream.match(/(\w)/, false)) {
                    var prevPos =3D stream.pos - 2;
                    if (prevPos >=3D 0) {
                        var prevCh =3D stream.string.charAt(prevPos);
                        if (prevCh !=3D=3D '_' && prevCh.match(/(\w)/, =
false)) {
                            ignoreUnderscore =3D true;
                        }
                    }
                }
            }
            var t =3D getType(state);
            if (ch =3D=3D=3D '*' || (ch =3D=3D=3D '_' && =
!ignoreUnderscore)) {
                if (state.strong =3D=3D=3D ch && stream.eat(ch) && =
stream.peek(ch)) { // Remove STRONG
                    state.strong =3D false;
                    return t;
                } else if (!state.strong && stream.eat(ch) && =
stream.peek(ch)) { // Add STRONG
                    state.strong =3D ch;
                    return getType(state);
                } else if (state.em =3D=3D=3D ch) { // Remove EM
                    state.em =3D false;
                    return t;
                } else if (!state.em) { // Add EM
                    state.em =3D ch;
                    return getType(state);
                }
            } else if (ch =3D=3D=3D '~'){
                if (state.strike =3D=3D=3D ch && stream.eat(ch)) { // =
Remove SRTIKE
                    state.strike =3D false;
                    return t;
                } else if (!state.strike && stream.eat(ch)) { // Add =
STRIKE
                    state.strike =3D ch;
                    return getType(state);
                }
            } else if (ch =3D=3D=3D ' ') {
                if (stream.eat('*') || stream.eat('_')) { // Probably =
surrounded by spaces
                    if (stream.peek() =3D=3D=3D ' ') { // Surrounded by =
spaces, ignore
                        return getType(state);
                    } else { // Not surrounded by spaces, back up =
pointer
                        stream.backUp(1);
                    }
                }
            }

            if (ch =3D=3D=3D ' ') {
                if (stream.match(/ +$/, false)) {
                    state.trailingSpace++;
                } else if (state.trailingSpace) {
                    state.trailingSpaceNewLine =3D true;
                }
            }

            return getType(state);
        }

        function linkHref(stream, state) {
            // Check if space, and return NULL if so (to avoid marking =
the space)
            if(stream.eatSpace()){
                return null;
            }
            var ch =3D stream.next();
            if (ch =3D=3D=3D '(' || ch =3D=3D=3D '[') {
                return switchInline(stream, state, =
inlineElement(linkhref, ch =3D=3D=3D '(' ? ')' : ']'));
            }
            return 'error';
        }

        function footnoteLink(stream, state) {
            if (stream.match(/^[^\]]*\]:/, true)) {
                state.f =3D footnoteUrl;
                return linktext;
            }
            return switchInline(stream, state, inlineNormal);
        }

        function footnoteUrl(stream, state) {
            // Check if space, and return NULL if so (to avoid marking =
the space)
            if(stream.eatSpace()){
                return null;
            }
            // Match URL
            stream.match(/^[^\s]+/, true);
            // Check for link title
            if (stream.peek() =3D=3D=3D undefined) { // End of line, set =
flag to check next line
                state.linkTitle =3D true;
            } else { // More content on line, check if link title
                =
stream.match(/^(?:\s+(?:"(?:[^"\\]|\\\\|\\.)+"|'(?:[^'\\]|\\\\|\\.)+'|\((=
?:[^)\\]|\\\\|\\.)+\)))?/, true);
            }
            state.f =3D state.inline =3D inlineNormal;
            return linkhref;
        }

        var savedInlineRE =3D [];
        function inlineRE(endChar) {
            if (!savedInlineRE[endChar]) {
                // Escape endChar for RegExp (taken from =
http://stackoverflow.com/a/494122/526741)
                endChar =3D =
(endChar+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
                // Match any non-endChar, escaped character, as well as =
the closing
                // endChar.
                savedInlineRE[endChar] =3D new =
RegExp('^(?:[^\\\\]|\\\\.)*?(' + endChar + ')');
            }
            return savedInlineRE[endChar];
        }

        function inlineElement(type, endChar, next) {
            next =3D next || inlineNormal;
            return function(stream, state) {
                stream.match(inlineRE(endChar));
                state.inline =3D state.f =3D next;
                return type;
            };
        }

        return {
            startState: function() {
                return {
                    f: blockNormal,

                    prevLineHasContent: false,
                    thisLineHasContent: false,

                    block: blockNormal,
                    htmlState: CodeMirror.startState(htmlMode),
                    indentation: 0,

                    inline: inlineNormal,
                    text: handleText,

                    linkText: false,
                    linkTitle: false,
                    em: false,
                    strong: false,
                    strike: false,
                    header: false,
                    taskList: false,
                    list: false,
                    listDepth: 0,
                    quote: 0,
                    trailingSpace: 0,
                    trailingSpaceNewLine: false
                };
            },

            copyState: function(s) {
                return {
                    f: s.f,

                    prevLineHasContent: s.prevLineHasContent,
                    thisLineHasContent: s.thisLineHasContent,

                    block: s.block,
                    htmlState: CodeMirror.copyState(htmlMode, =
s.htmlState),
                    indentation: s.indentation,

                    localMode: s.localMode,
                    localState: s.localMode ? =
CodeMirror.copyState(s.localMode, s.localState) : null,

                    inline: s.inline,
                    text: s.text,
                    linkTitle: s.linkTitle,
                    em: s.em,
                    strong: s.strong,
                    strike: s.strike,
                    header: s.header,
                    taskList: s.taskList,
                    list: s.list,
                    listDepth: s.listDepth,
                    quote: s.quote,
                    trailingSpace: s.trailingSpace,
                    trailingSpaceNewLine: s.trailingSpaceNewLine,
                    md_inside: s.md_inside
                };
            },

            token: function(stream, state) {
                if (stream.sol()) {
                    if (stream.match(/^\s*$/, true)) {
                        state.prevLineHasContent =3D false;
                        return blankLine(state);
                    } else {
                        state.prevLineHasContent =3D =
state.thisLineHasContent;
                        state.thisLineHasContent =3D true;
                    }

                    // Reset state.header
                    state.header =3D false;

                    // Reset state.taskList
                    state.taskList =3D false;

                    // Reset state.code
                    state.code =3D false;

                    // Reset state.trailingSpace
                    state.trailingSpace =3D 0;
                    state.trailingSpaceNewLine =3D false;

                    state.f =3D state.block;
                    var indentation =3D stream.match(/^\s*/, =
true)[0].replace(/\t/g, '    ').length;
                    var difference =3D Math.floor((indentation - =
state.indentation) / 4) * 4;
                    if (difference > 4) difference =3D 4;
                    var adjustedIndentation =3D state.indentation + =
difference;
                    state.indentationDiff =3D adjustedIndentation - =
state.indentation;
                    state.indentation =3D adjustedIndentation;
                    if (indentation > 0) return null;
                }
                return state.f(stream, state);
            },

            blankLine: blankLine,

            getType: getType
        };

    }, "xml");

    CodeMirror.defineMIME("text/x-markdown", "markdown");


    var isMac =3D /Mac/.test(navigator.platform);

    var shortcuts =3D {
        'Cmd-Alt-1': toggleHeadline,
        'Cmd-Alt-2': toggleHeading,
        'Cmd-B': toggleBold,
        'Cmd-I': toggleItalic,
        'Cmd-K': drawLink,
        'Cmd-Alt-I': drawImage,
        "Cmd-'": toggleBlockquote,
        "Cmd-,": drawCode,
        'Cmd-Alt-L': toggleOrderedList,
        'Cmd-L': toggleUnOrderedList,
        'Cmd-Z': undo,
        'Cmd-Shift-Z': redo
    };


    /**
     * Fix shortcut. Mac use Command, others use Ctrl.
     */
    function fixShortcut(name) {
        if (isMac) {
            name =3D name.replace('Ctrl', 'Cmd');
        } else {
            name =3D name.replace('Cmd', 'Ctrl');
        }
        return name;
    }


    /**
     * Create icon element for toolbar.
     */
    function createIcon(name, options) {
        options =3D options || {};
        var el =3D document.createElement('a');

        var shortcut =3D options.shortcut || shortcuts[name];
        if (shortcut) {
            shortcut =3D fixShortcut(shortcut);
            el.title =3D shortcut;
            el.title =3D el.title.replace('Cmd', '=E2=8C=98');
            if (isMac) {
                el.title =3D el.title.replace('Alt', '=E2=8C=A5');
            }
        }

        el.className =3D options.className || 'icon-' + name;
        return el;
    }

    function createSep() {
        var el =3D document.createElement('i');
        el.className =3D 'separator';
        el.innerHTML =3D '|';
        return el;
    }


    /**
     * The state of CodeMirror at the given position.
     */
    function getState(cm, pos) {
        pos =3D pos || cm.getCursor('start');
        var stat =3D cm.getTokenAt(pos);
        if (!stat.type) return {};

        var types =3D stat.type.split(' ');

        var ret =3D {}, data, text;
        for (var i =3D 0; i < types.length; i++) {
            data =3D types[i];
            if (data =3D=3D=3D 'strong') {
                ret.bold =3D true;
            } else if (data =3D=3D=3D 'variable-2') {
                text =3D cm.getLine(pos.line);
                if (/^\s*\d+\.\s/.test(text)) {
                    ret['list-ol'] =3D true;
                } else {
                    ret['list-ul'] =3D true;
                }
            } else if (data =3D=3D=3D 'atom') {
                ret.quote =3D true;
            } else if (data =3D=3D=3D 'em') {
                ret.italic =3D true;
            } else if (data =3D=3D=3D 'header') {
                text =3D cm.getLine(pos.line);
                if (/^\s*\##\s/.test(text)) {
                    ret['heading'] =3D true;
                }else {
                    ret['headline'] =3D true;
                }
            }
        }
        return ret;
    }


    /**
     * Toggle full screen of the editor.
     */
    function toggleFullScreen(editor) {
        var el =3D editor.codemirror.getWrapperElement();

        // =
https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode
        var doc =3D document;
        var isFull =3D doc.fullScreen || doc.mozFullScreen || =
doc.webkitFullScreen;
        var request =3D function() {
            if (el.requestFullScreen) {
                el.requestFullScreen();
            } else if (el.mozRequestFullScreen) {
                el.mozRequestFullScreen();
            } else if (el.webkitRequestFullScreen) {
                =
el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
            }
        };
        var cancel =3D function() {
            if (doc.cancelFullScreen) {
                doc.cancelFullScreen();
            } else if (doc.mozCancelFullScreen) {
                doc.mozCancelFullScreen();
            } else if (doc.webkitCancelFullScreen) {
                doc.webkitCancelFullScreen();
            }
        };
        if (!isFull) {
            request();
        } else if (cancel) {
            cancel();
        }
    }

    /**
     * Action for toggling heading.
     */
    function toggleHeadline(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'headline');
    }

    function toggleHeading(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'heading');
    }


    /**
     * Action for toggling bold.
     */
    function toggleBold(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);

        var text;
        var start =3D '**';
        var end =3D '**';

        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (stat.bold) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);

            start =3D start.replace(/^(.*)?(\*|\_){2}(\S+.*)?$/, =
'$1$3');
            end =3D end.replace(/^(.*\S+)?(\*|\_){2}(\s+.*)?$/, '$1$3');
            startPoint.ch -=3D 2;
            endPoint.ch -=3D 2;
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D 2;
            endPoint.ch +=3D 2;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    /**
     * Action for toggling italic.
     */
    function toggleItalic(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);

        var text;
        var start =3D '_';
        var end =3D '_';

        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (stat.italic) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);

            start =3D start.replace(/^(._)?(\*|\_)(\S+._)?$/, '$1$3');
            end =3D end.replace(/^(._\S+)?(\*|\_)(\s+._)?$/, '$1$3');
            startPoint.ch -=3D 1;
            endPoint.ch -=3D 1;
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D 1;
            endPoint.ch +=3D 1;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    /**
     * Action for toggling blockquote.
     */
    function toggleBlockquote(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'quote');
    }

    function drawCode(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        _replaceSelection(cm, stat.code, '\n\n```\n ', =
'=E5=9C=A8=E8=BF=99=E9=87=8C=E4=B9=A6=E5=86=99=E4=BB=A3=E7=A0=81=E7=89=87=
  \n```\n\n');
    }


    /**
     * Action for toggling ul.
     */
    function toggleUnOrderedList(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'list-ul');
    }


    /**
     * Action for toggling ol.
     */
    function toggleOrderedList(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'list-ol');
    }


    /**
     * Action for drawing a link.
     */
    function drawLink(editor) {
        $('.cm_dialog').fadeIn(300);
        $('.cm_add_link').slideDown(300);
        $('.cm_add_img').slideUp(300);
    }
    function cmDrawLink(editor, prefix_str) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        var cm_link_txt =3D $('#'+prefix_str+'cm_link_txt').val();
        var cm_link_url =3D $('#'+prefix_str+'cm_link_url').val();
        var cm_link_tit =3D $('#'+prefix_str+'cm_link_tit').val();
        if(cm_link_txt!=3D"" || cm_link_url!=3D"" || cm_link_tit!=3D""){
           _replaceSelection(cm, stat.link, '[',cm_link_txt =
+']('+cm_link_url+' "'+cm_link_tit+'")');
        }
        $('.cm_add_link').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }


    /**
     * Action for drawing an img.
     */
    function drawImage(editor) {
        $('.cm_dialog').fadeIn(300);
        $('.cm_add_link').slideUp(300);
        $('.cm_add_img').slideDown(300);
    }
    function cmDrawImage(editor, prefix_str) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        var cm_img_url =3D $('#'+prefix_str+'cm_img_url').val();
        var cm_img_alt =3D $('#'+prefix_str+'cm_img_alt').val();
        if(cm_img_url!=3D"" || cm_img_alt!=3D""){
            _replaceSelection(cm, stat.image, '![', =
cm_img_alt+']('+cm_img_url+')');
        }
        $('.cm_add_img').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }

    function cmDrawImageUp(editor, url) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        _replaceSelection(cm, stat.image, '![', =
'=E5=9B=BE=E7=89=87=E8=AF=B4=E6=98=8E]('+ url +')');
        $('.cm_add_img').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }

    window.cmDrawLink =3D cmDrawLink;
    window.cmDrawImage =3D cmDrawImage;
    window.cmDrawImageUp =3D cmDrawImageUp;

    /**
     * Undo action.
     */
    function undo(editor) {
        var cm =3D editor.codemirror;
        cm.undo();
        cm.focus();
    }


    /**
     * Redo action.
     */
    function redo(editor) {
        var cm =3D editor.codemirror;
        cm.redo();
        cm.focus();
    }

    /**
     * Preview action.
     */
    function togglePreview(editor) {
        var toolbar =3D editor.toolbar.preview;
        var parse =3D editor.constructor.markdown;
        var cm =3D editor.codemirror;
        var wrapper =3D cm.getWrapperElement();
        var preview =3D wrapper.lastChild;
        if (!/editor-preview/.test(preview.className)) {
            preview =3D document.createElement('div');
            preview.className =3D 'editor-preview';
            wrapper.appendChild(preview);
        }
        if (/editor-preview-active/.test(preview.className)) {
            preview.className =3D preview.className.replace(
                /\s*editor-preview-active\s*/g, ''
            );
            toolbar.className =3D =
toolbar.className.replace(/\s*active\s*/g, '');
        } else {
            /* When the preview button is clicked for the first time,
             * give some time for the transition from editor.css to fire =
and the view to slide from right to left,
             * instead of just appearing.
             */
            setTimeout(function() {preview.className +=3D ' =
editor-preview-active'}, 1);
            toolbar.className +=3D ' active';
        }
        var text =3D cm.getValue();
        preview.innerHTML =3D parse(text);
    }

    function _replaceSelection(cm, active, start, end) {
        var text;
        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (active) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D start.length;
            endPoint.ch +=3D start.length;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    function _toggleLine(cm, name) {
        var stat =3D getState(cm);
        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        var repl =3D {
            headline: /^(\s*)\#\s+/,
            heading: /^(\s*)\##\s+/,
            quote: /^(\s*)\>\s+/,
            'list-ul': /^(\s*)(\*|\-|\+)\s+/,
            'list-ol': /^(\s*)\d+\.\s+/
        };
        var map =3D {
            headline: '# ',
            heading: '## ',
            quote: '> ',
            'list-ul': '* ',
            'list-ol': '1. '
        };
        for (var i =3D startPoint.line; i <=3D endPoint.line; i++) {
            (function(i) {
                var text =3D cm.getLine(i);
                if (stat[name]) {
                    text =3D text.replace(repl[name], '$1');
                } else {
                    text =3D map[name] + text;
                }
                cm.setLine(i, text);
            })(i);
        }
        cm.focus();
    }


    /* The right word count in respect for CJK. */
    function wordCount(data) {
        var pattern =3D =
/[a-zA-Z0-9_\u0392-\u03c9]+|[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u304=
0-\u309f\uac00-\ud7af]+/g;
        var m =3D data.match(pattern);
        var count =3D 0;
        if( m =3D=3D=3D null ) return count;
        for (var i =3D 0; i < m.length; i++) {
            if (m[i].charCodeAt(0) >=3D 0x4E00) {
                count +=3D m[i].length;
            } else {
                count +=3D 1;
            }
        }
        return count;
    }

    var toolbar =3D [
        '|',
        {name: 'headline', action: =
toggleHeadline,title:'=E6=A0=87=E9=A2=98=E4=B8=80=EF=BC=88Ctrl+Alt+1=EF=BC=
=89'},
        {name: 'heading', action: =
toggleHeading,title:'=E6=A0=87=E9=A2=98=E4=BA=8C=EF=BC=88Ctrl+Alt+2=EF=BC=
=89'},
        {name: 'bold', action: =
toggleBold,title:'=E7=B2=97=E4=BD=93=EF=BC=88Ctrl+B=EF=BC=89'},
        {name: 'italic', action: =
toggleItalic,title:'=E6=96=9C=E4=BD=93=EF=BC=88Ctrl+I=EF=BC=89'},
        '|',

        {name: 'quote-left', action: =
toggleBlockquote,title:'=E5=BC=95=E7=94=A8=EF=BC=88Ctrl+=E2=80=99=EF=BC=89=
'},
        {name: 'code', action: =
drawCode,title:'=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81=E7=89=87=EF=BC=88Ctr=
l+,=EF=BC=89'},
        {name: 'list-ul', action: =
toggleUnOrderedList,title:'=E6=97=A0=E5=BA=8F=E5=88=97=E8=A1=A8=EF=BC=88C=
trl+L=EF=BC=89'},
        {name: 'list-ol', action: =
toggleOrderedList,title:'=E6=9C=89=E5=BA=8F=E5=88=97=E8=A1=A8=EF=BC=88Ctr=
l+Alt+L=EF=BC=89'},
        '|',

        {name: 'link', =
title:'=E6=B7=BB=E5=8A=A0=E9=93=BE=E6=8E=A5=EF=BC=88Ctrl+K=EF=BC=89'},   =
 //action: drawLink,
        {name: 'picture', =
title:'=E6=B7=BB=E5=8A=A0=E5=9B=BE=E7=89=87=EF=BC=88Ctrl+Alt+I=EF=BC=89'}=
,   //action: drawImage,
        '|',

        {name: 'reply', action: =
undo,title:'=E6=92=A4=E9=80=80=EF=BC=88Ctrl+Z=EF=BC=89'},
        {name: 'share-alt', action: =
redo,title:'=E5=89=8D=E8=BF=9B=EF=BC=88Ctrl+Shift+Z=EF=BC=89'},
        '|',
        {name: 'info', action: =
'http://ask.csdn.net/pages/markdown',title:'markdown=E8=AF=AD=E6=B3=95=E5=
=8F=82=E8=80=83'},
        {name: 'preview', action: =
togglePreview,title:'=E9=A2=84=E8=A7=88'},
        //{name: 'fullscreen', action: toggleFullScreen},
        '|'
    ];

    /**
     * Interface of Editor.
     */
    function Editor(options) {
        options =3D options || {};

        if (options.element) {
            this.element =3D options.element;
        }

        options.toolbar =3D options.toolbar || Editor.toolbar;
        // you can customize toolbar with object
        // [{name: 'bold', shortcut: 'Ctrl-B', className: 'icon-bold'}]

        if (!options.hasOwnProperty('status')) {
            options.status =3D ['lines', 'words', 'cursor'];
        }

        this.options =3D options;

        // If user has passed an element, it should auto rendered
        if (this.element) {
            this.render();
        }
    }

    /**
     * Default toolbar elements.
     */
    Editor.toolbar =3D toolbar;

    /**
     * Default markdown render.
     */
    Editor.markdown =3D function(text) {
        if (window.marked) {
            // use marked as markdown parser
            return marked(text);
        }
    };

    /**
     * Render editor to the given element.
     */
    Editor.prototype.render =3D function(el) {
        if (!el) {
            el =3D this.element || =
document.getElementsByTagName('textarea')[0];
        }

        if (this._rendered && this._rendered =3D=3D=3D el) {
            // Already rendered.
            return;
        }

        this.element =3D el;
        var options =3D this.options;

        var self =3D this;
        var keyMaps =3D {};

        for (var key in shortcuts) {
            (function(key) {
                keyMaps[fixShortcut(key)] =3D function(cm) {
                    shortcuts[key](self);
                };
            })(key);
        }

        keyMaps["Enter"] =3D "newlineAndIndentContinueMarkdownList";
        keyMaps['Tab'] =3D 'tabAndIndentContinueMarkdownList';
        keyMaps['Shift-Tab'] =3D =
'shiftTabAndIndentContinueMarkdownList';

        this.codemirror =3D CodeMirror.fromTextArea(el, {
            mode: 'markdown',
            theme: 'paper',
            tabSize: '2',
            indentWithTabs: true,
            lineNumbers: false,
            autofocus: true,
            extraKeys: keyMaps
        });

        if (options.toolbar !=3D=3D false) {
            this.createToolbar();
        }
        if (options.status !=3D=3D false) {
            this.createStatusbar();
        }

        this._rendered =3D this.element;
    };

    Editor.prototype.createToolbar =3D function(items) {
        items =3D items || this.options.toolbar;

        if (!items || items.length =3D=3D=3D 0) {
            return;
        }

        var bar =3D document.createElement('div');
        bar.className =3D 'editor-toolbar';

        var self =3D this;

        var el;
        self.toolbar =3D {};

        for (var i =3D 0; i < items.length; i++) {
            (function(item) {
                var el;
                if (item.name) {
                    el =3D createIcon(item.name, item);
                } else if (item =3D=3D=3D '|') {
                    el =3D createSep();
                } else {
                    el =3D createIcon(item);
                }

                // bind events, special for info
                if (item.action) {
                    if (typeof item.action =3D=3D=3D 'function') {
                        el.onclick =3D function(e) {
                            item.action(self);
                        };
                    } else if (typeof item.action =3D=3D=3D 'string') {
                        el.href =3D item.action;
                        el.target =3D '_blank';
                    }
                }
                if(item.title){
                    el.title =3D item.title;
                }
                self.toolbar[item.name || item] =3D el;
                bar.appendChild(el);
            })(items[i]);
        }

        var cm =3D this.codemirror;
        cm.on('cursorActivity', function() {
            var stat =3D getState(cm);

            for (var key in self.toolbar) {
                (function(key) {
                    var el =3D self.toolbar[key];
                    if (stat[key]) {
                        el.className +=3D ' active';
                    } else {
                        el.className =3D =
el.className.replace(/\s*active\s*/g, '');
                    }
                })(key);
            }
        });

        var cmWrapper =3D cm.getWrapperElement();
        cmWrapper.parentNode.insertBefore(bar, cmWrapper);
        return bar;
    };

    Editor.prototype.createStatusbar =3D function(status) {
        status =3D status || this.options.status;

        if (!status || status.length =3D=3D=3D 0) return;

        var bar =3D document.createElement('div');
        bar.className =3D 'editor-statusbar';

        var pos, cm =3D this.codemirror;
        for (var i =3D 0; i < status.length; i++) {
            (function(name) {
                var el =3D document.createElement('span');
                el.className =3D name;
                if (name =3D=3D=3D 'words') {
                    el.innerHTML =3D '0';
                    cm.on('update', function() {
                        el.innerHTML =3D wordCount(cm.getValue());
                    });
                } else if (name =3D=3D=3D 'lines') {
                    el.innerHTML =3D '0';
                    cm.on('update', function() {
                        el.innerHTML =3D cm.lineCount();
                    });
                } else if (name =3D=3D=3D 'cursor') {
                    el.innerHTML =3D '0:0';
                    cm.on('cursorActivity', function() {
                        pos =3D cm.getCursor();
                        el.innerHTML =3D pos.line + ':' + pos.ch;
                    });
                }
                bar.appendChild(el);
            })(status[i]);
        }
        var cmWrapper =3D this.codemirror.getWrapperElement();
        cmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);
        return bar;
    };

    /**
     * Get or set the text content.
     */
    Editor.prototype.value =3D function(val) {
        if (val) {
            this.codemirror.getDoc().setValue(val);
            return this;
        } else {
            return this.codemirror.getValue();
        }
    };


    /**
     * Bind static methods for exports.
     */
    Editor.toggleHeadline =3D toggleHeadline;
    Editor.toggleHeading =3D toggleHeading;
    Editor.toggleBold =3D toggleBold;
    Editor.toggleItalic =3D toggleItalic;
    Editor.toggleBlockquote =3D toggleBlockquote;
    Editor.drawCode =3D drawCode;
    Editor.toggleUnOrderedList =3D toggleUnOrderedList;
    Editor.toggleOrderedList =3D toggleOrderedList;
    Editor.drawLink =3D drawLink;
    Editor.drawImage =3D drawImage;
    Editor.undo =3D undo;
    Editor.redo =3D redo;
    Editor.togglePreview =3D togglePreview;
    Editor.toggleFullScreen =3D toggleFullScreen;

    /**
     * Bind instance methods for exports.
     */
    Editor.prototype.toggleHeadline =3D function() {
        toggleHeadline(this);
    };
    Editor.prototype.toggleHeading =3D function() {
        toggleHeading(this);
    };
    Editor.prototype.toggleBold =3D function() {
        toggleBold(this);
    };
    Editor.prototype.toggleItalic =3D function() {
        toggleItalic(this);
    };
    Editor.prototype.toggleBlockquote =3D function() {
        toggleBlockquote(this);
    };
    Editor.prototype.drawCode =3D function() {
        drawCode(this);
    };
    Editor.prototype.toggleUnOrderedList =3D function() {
        toggleUnOrderedList(this);
    };
    Editor.prototype.toggleOrderedList =3D function() {
        toggleOrderedList(this);
    };
    Editor.prototype.drawLink =3D function() {
        drawLink(this);
    };
    Editor.prototype.drawImage =3D function() {
        drawImage(this);
    };
    Editor.prototype.undo =3D function() {
        undo(this);
    };
    Editor.prototype.redo =3D function() {
        redo(this);
    };
    Editor.prototype.togglePreview =3D function() {
        togglePreview(this);
    };
    Editor.prototype.toggleFullScreen =3D function() {
        toggleFullScreen(this);
    };

    global.Editor =3D Editor;
})(this);
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: 7bit
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/prettify.js

//marked
------=_NextPart_000_0000_01D15A9A.7EA6D060
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js

var editor_change_ask_o_domain =3D "";
function editor_change_ask_o(str){
    var editor =3D $( document ).data('editor_all');
    //editor.render(document.getElementById('editor_all'));
    window.cmDrawImageUp(editor, str);

    if (editor_change_ask_o_domain !=3D "") {
        document.domain =3D editor_change_ask_o_domain;
        editor_change_ask_o_domain =3D "";
    }
}
(function(){
    $(function(){
        var prot =3D window.location.protocol;
        var afont =3D prot + =
"//ask.csdn.net/assets/ask_float_fonts_css-6b30a53970eb5c3a2a045e3df585b4=
75.css";//=E8=AF=A5=E6=A0=B7=E5=BC=8F=E6=96=87=E4=BB=B6=E5=90=8D=E7=A7=B0=
=E8=A6=81=E6=A0=B9=E6=8D=AE=E6=AF=8F=E6=AC=A1=E5=8F=91=E5=B8=83=E5=90=8E=E7=
=9A=84=E5=8A=A8=E6=80=81=E5=90=8D=E7=A7=B0=E6=9D=A5=E4=BF=AE=E6=94=B9=E3=80=
=82//font-awesome.min-58872ef19fd8eb4c71bc6667c200b0c0.css";
        $('body').append('<link rel=3D"stylesheet" type=3D"text/css" =
media=3D"screen" href=3D"' + afont + '">');

        var first_pop_str=3D"<div class=3D'pop_edit ask_first =
comm_ask_first' style=3D'display: none;'><h3>=E6=8F=90=E9=97=AE</h3><a =
href=3D'#' nodetype=3D'close' class=3D'close'>=C3=97</a>"+
            " <div class=3D'context'>"+
            " <form id=3D'form' nodetype=3D'form-popup' =
class=3D'form'>"+
            "<div class=3D'askFirst_desc'><span class=3D'afd_p'>CSDN =
=E9=97=AE=E7=AD=94=E6=98=AF=E4=B8=80=E4=B8=AA=E7=9C=9F=E8=AF=9A=E3=80=81=E8=
=AE=A4=E7=9C=9F=E3=80=81=E6=9C=89=E6=B4=BB=E5=8A=9B=E7=9A=84=E6=8A=80=E6=9C=
=AF=E7=A4=BE=E5=8C=BA=E3=80=82</span><br><span =
class=3D'afd_p'>=E6=88=91=E4=BB=AC=E5=BE=88=E6=84=BF=E6=84=8F=E5=B8=AE=E5=
=8A=A9=E6=82=A8=EF=BC=8C=E5=B8=8C=E6=9C=9B=E6=82=A8=E6=8F=90=E5=87=BA=E7=9A=
=84=E6=AF=8F=E4=B8=80=E4=B8=AA=E9=97=AE=E9=A2=98=E9=83=BD=E8=83=BD=E5=BE=97=
=E5=88=B0=E8=A7=A3=E7=AD=94=EF=BC=8C=E5=90=8C=E6=97=B6=E4=B9=9F=E5=B8=8C=E6=
=9C=9B=E6=82=A8=E7=9F=A5=E9=81=93=EF=BC=8C=E4=B8=80=E4=B8=AA=E5=A5=BD=E7=9A=
=84=E9=97=AE=E9=A2=98</span><br><span"+
            " =
class=3D'afd_p'>=E6=9B=B4=E5=AE=B9=E6=98=93=E5=BE=97=E5=88=B0=E5=A5=BD=E7=
=9A=84=E7=AD=94=E6=A1=88<span>&nbsp;&nbsp;</span><a =
href=3D'//ask.csdn.net/help?#rule12' =
target=3D'_blank'>=E6=80=8E=E6=A0=B7=E6=8F=90=E5=87=BA=E4=B8=80=E4=B8=AA=E5=
=A5=BD=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9F</a></span><br>"+
            "<span =
class=3D'afd_p'>=E6=8F=90=E9=97=AE=E6=97=B6=E5=BA=94=E9=81=B5=E5=BE=AA=E8=
=AE=A4=E7=9C=9F=E3=80=81=E7=AE=80=E6=B4=81=E3=80=81=E6=98=8E=E7=A1=AE=E3=80=
=81=E8=A7=84=E8=8C=83=E7=9A=84=E5=8E=9F=E5=88=99</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E9=A6=96=E5=85=88=E7=A1=AE=E5=AE=9A=E6=82=A8=E6=98=AF=E5=90=A6=E9=9C=80=E8=
=A6=81=E4=BD=BF=E7=94=A8=E6=82=AC=E8=B5=8F=E6=8F=90=E9=97=AE=EF=BC=9B</sp=
an><br><span class=3D'afd_p'>=E2=80=A2 =
=E9=97=AE=E9=A2=98=E4=B8=AD=E6=B2=A1=E5=BF=85=E8=A6=81=E5=87=BA=E7=8E=B0=E2=
=80=9C=E5=A4=A7=E7=A5=9E=E5=B8=AE=E5=B8=AE=E5=BF=99=E2=80=9D=E3=80=81=E2=80=
=9C=E6=95=99=E6=8E=88=E6=95=91=E6=95=91=E6=88=91=E2=80=9D=E4=B9=8B=E7=B1=BB=
=E4=B8=8E=E6=8A=80=E6=9C=AF=E9=97=AE=E9=A2=98=E6=97=A0=E5=85=B3=E7=9A=84=E4=
=BF=A1=E6=81=AF=EF=BC=8C=E5=8F=8A=E6=97=B6=E9=87=87=E7=BA=B3=E6=9C=80=E4=BD=
=B3=E7=AD=94=E6=A1=88=E5=B0=B1=E6=98=AF=E5=AF=B9=E5=9B=9E=E7=AD=94=E4=BA=BA=
=E7=9A=84=E6=9C=80=E5=A5=BD=E8=AE=A4=E5=8F=AF=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98=E8=A6=81=E6=9C=89=E6=98=8E=E7=A1=AE=E8=
=80=8C=E6=9C=89=E4=BB=B7=E5=80=BC=E7=9A=84=E4=BF=A1=E6=81=AF=EF=BC=8C=E2=80=
=9C=E6=9C=89=E4=BA=BA=E9=81=87=E5=88=B0=E8=BF=87=E8=BF=99=E7=A7=8D=E6=83=85=
=E5=86=B5=E5=90=97=EF=BC=9F=E5=B8=AE=E5=BF=99=E8=BF=9B=E6=9D=A5=E7=9C=8B=E7=
=9C=8B=E2=80=9D=E8=BF=99=E7=A7=8D=E6=A0=87=E9=A2=98=E5=8F=AA=E4=BC=9A=E9=99=
=8D=E4=BD=8E=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98=E8=A2=AB=E5=9B=9E=E7=AD=94=
=E7=9A=84=E6=A6=82=E7=8E=87=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E2=80=9C=E6=B1=82=E4=BB=A3=E7=A0=81=E2=80=9D=E7=B1=BB=E7=9A=84=E9=97=AE=E9=
=A2=98=E8=AF=B7=E6=82=A8=E6=82=AC=E8=B5=8F=E6=8F=90=E9=97=AE=EF=BC=8C=E6=88=
=91=E4=BB=AC=E4=B9=90=E4=BA=8E=E5=B0=86=E5=85=B6=E7=9C=8B=E6=88=90=E4=B8=80=
=E7=A7=8D=E4=BA=A4=E6=98=93=E3=80=82</span><br><br><span"+
            " =
class=3D'afd_p'>=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E5=B9=B6=E4=B8=8D=E6=
=AC=A2=E8=BF=8E=E8=BF=99=E7=A7=8D=E9=97=AE=E9=A2=98</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E5=92=8C=E5=B7=B2=E6=9C=89=E9=97=AE=E9=A2=98=E5=AE=8C=E5=85=A8=E9=87=8D=E5=
=A4=8D=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=8C=E4=B8=BA=E9=81=BF=E5=85=8D=E9=87=
=8D=E5=A4=8D=EF=BC=8C=E6=8F=90=E9=97=AE=E5=89=8D=E8=AF=B7=E5=85=88=E8=BF=9B=
=E8=A1=8C=E6=90=9C=E7=B4=A2=EF=BC=9B</span><br><span =
class=3D'afd_p'>=E2=80=A2 =E6=8B=9B=E8=81=98 / =
=E6=B1=82=E8=81=8C=E3=80=81=E4=BA=A4=E6=98=93 / =
=E5=90=88=E4=BD=9C=E3=80=81=E5=AF=BB=E4=BA=BA / =
=E5=BE=81=E5=8F=8B=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E6=97=A0=E6=98=8E=E7=A1=AE=E7=AD=94=E6=A1=88=E7=9A=84=E8=B0=83=E6=9F=A5=E7=
=B1=BB=E9=97=AE=E9=A2=98=E3=80=82=E5=A6=82=E8=8B=B9=E6=9E=9C=E5=92=8C=E8=B0=
=B7=E6=AD=8C=EF=BC=8C=E5=A4=A7=E5=AE=B6=E6=9B=B4=E6=AC=A3=E8=B5=8F=E8=B0=81=
=EF=BC=9F</span><br><span =
class=3D'afd_p'>=E6=83=B3=E5=AD=A6=E4=BC=9A=E6=9B=B4=E5=A5=BD=E7=9A=84=E6=
=8F=90=E9=97=AE=EF=BC=8C=E8=AF=B7=E6=9F=A5=E7=9C=8B<span>&nbsp;</span><a"=
+
            " href=3D'//ask.csdn.net/help' =
target=3D'_blank'>=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E6=8F=90=E9=97=AE=E8=
=A7=84=E8=8C=83</a></span></div>"+
            "<div =
class=3D'askFirst_se'><span>=E6=8F=90=E9=97=AE=E5=89=8D=E8=AF=B7=E6=90=9C=
=E7=B4=A2</span></div>"+
            "<div class=3D'search_div'><input id=3D'askInput' =
type=3D'text' =
placeholder=3D'=E8=BE=93=E5=85=A5=E9=97=AE=E9=A2=98=EF=BC=8C=E6=9F=A5=E7=9C=
=8B=E6=98=AF=E5=90=A6=E5=AD=98=E5=9C=A8=E7=9B=B8=E4=BC=BC=E7=9A=84=E9=97=AE=
=E9=A2=98'></div></form> </div>"+
            " <div class=3D'success'></div></div>";
        var second_pop_str=3D"<div class=3D'pop_edit ask_second =
comm_ask_second'><h3>=E6=8F=90=E9=97=AE</h3><span =
class=3D'ask_float_span'>=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98=E5=B0=86=E4=
=BC=9A=E8=A2=AB=E5=8F=91=E5=B8=83=E5=9C=A8=E2=80=9C<a =
class=3D'ask_float_channel' href=3D'//ask.csdn.net' target=3D'_blank' =
style=3D'cursor:pointer'>=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94</a>=E2=80=9D=
=E9=A2=91=E9=81=93</span><a href=3D'#' nodeType=3D'close' =
class=3D'close'>=C3=97</a><div class=3D'context'><div =
class=3D'err_div'><span class=3D'err_ico'></span>"+
            "<span =
class=3D'err_txt'>=E8=AF=A5=E9=97=AE=E9=A2=98=E5=B7=B2=E5=AD=98=E5=9C=A8=EF=
=BC=8C=E8=AF=B7=E5=8B=BF=E9=87=8D=E5=A4=8D=E6=8F=90=E9=97=AE</span></div>=
"+
            "<div class=3D'input_div'><input id=3D'askInputSecond' =
type=3D'text' style=3D'font-size:14px;' =
placeholder=3D'=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98'/></div>"+
            "<div class=3D'cm_box'><div class=3D'cm_dialog'></div> <div =
class=3D'pop_cm cm_add_link'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E5=86=85=E5=AE=B9' =
id=3D'af_cm_link_txt'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E5=9C=B0=E5=9D=80' =
id=3D'af_cm_link_url'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E6=8F=90=E7=A4=BA' =
id=3D'af_cm_link_tit'><div class=3D'text-right'><span class=3D'btn =
btn-default btn-sm' =
id=3D'add_link_btn'>=E6=8F=92=E5=85=A5=E9=93=BE=E6=8E=A5</span> </div> =
</div>"+
            "<div class=3D'pop_cm cm_add_img'><div class=3D'nav-tabs'><a =
class=3D'img_tab active' =
href=3D'#tab_upload'>=E6=9C=AC=E5=9C=B0=E4=B8=8A=E4=BC=A0</a><a =
class=3D'img_tab' =
href=3D'#tab_weburl'>=E7=BD=91=E7=BB=9C=E5=9B=BE=E7=89=87</a></div><div =
class=3D'tab_panel active' id=3D'tab_upload'><div =
class=3D'set_img'><iframe =
src=3D'http://ask.csdn.net/upload.html'></iframe></div></div><div =
class=3D'tab_panel' id=3D'tab_weburl'><input type=3D'text' =
placeholder=3D'=E5=9B=BE=E7=89=87=E5=9C=B0=E5=9D=80' =
id=3D'af_cm_img_url'><input type=3D'text' =
placeholder=3D'=E5=9B=BE=E7=89=87=E8=AF=B4=E6=98=8E' =
id=3D'af_cm_img_alt'><div class=3D'text-right'><span class=3D'btn =
btn-default btn-sm' =
id=3D'add_img_btn'>=E6=8F=92=E5=85=A5=E5=9B=BE=E7=89=87</span> =
</div></div> </div></div> "+
            "<textarea id=3D'editor_all' rows=3D'8'></textarea>"+
            "<div class=3D'div_tags clearfix'><div id=3D'divSearchTags' =
class=3D'tags_con'>"+
            "<input type=3D'text'/></div><input type=3D'hidden' =
name=3D'txtSearchTags'/></div>"+
            "<div id=3D'ask2_tagRecomm_div' class=3D'drt_tagRecomm =
tracking-ad' data-mod=3D'popu_73'><span =
class=3D'drt_tit'>=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=EF=BC=9A</span></d=
iv></div>"+
            "<div class=3D'success'><div class=3D'left_area'><input =
id=3D'chk_cb' type=3D'checkbox'/><span =
class=3D'wyxs'>=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F</span><input =
id=3D'cb_num'  class=3D'cb_num' readonly=3D'true'/>"+
            "<span class=3D'phib_rii'><span> =
=E5=B8=81</span></span></div><a href=3D'#' nodeType=3D'cancel' =
class=3D'cancel'>=E5=8F=96=E6=B6=88</a><a href=3D'#' nodeType=3D'ok' =
class=3D'ok'>=E5=8F=91=E5=B8=83</a></div></div>";

        =
//=E8=AF=A5=E5=80=BC=E6=98=AF=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8=E5=88=B0=
=E4=B8=8A=E9=9D=A2=E7=9A=84=E8=B7=9D=E7=A6=BB=EF=BC=8C=E5=A4=A7=E7=BA=A6=E5=
=9C=A8%55=E5=A4=84
        var back_top_value =
=3DMath.ceil(document.documentElement.clientHeight *0.55);
        =
//=E7=8E=B0=E5=9C=A8=E6=88=91=E4=BB=AC=E5=BC=80=E5=A7=8B=E5=8A=A0=E5=85=A5=
=E4=BA=8C=E7=BB=B4=E7=A0=81=E5=8A=9F=E8=83=BD=EF=BC=8C=E7=84=B6=E5=90=8E=E6=
=8A=8A=E6=8F=90=E9=97=AE=E6=94=B9=E4=B8=BAapp=E4=B8=8B=E8=BD=BD
        if(window.quickReplyflag) {
            =
//=E6=B3=A8=E9=87=8A=E7=9A=84=E9=83=A8=E5=88=86=E6=98=AF=E4=BB=A5=E5=89=8D=
=E6=8F=90=E9=97=AE=E7=9A=84=EF=BC=8C=E8=BF=99=E4=B8=AA=E6=97=B6=E5=80=99=E5=
=85=B6=E5=AE=9E=E5=90=8E=E7=BB=AD=E7=9A=84=E5=BE=88=E5=A4=9A=E4=B8=8E=E8=BF=
=99=E4=B8=AA=E6=8C=89=E9=92=AE=E7=9B=B8=E5=85=B3=E7=9A=84=E4=BB=A3=E7=A0=81=
=E6=B2=A1=E7=94=A8=E4=BA=86=EF=BC=8C=E5=B0=B1=E6=98=AF=E9=82=A3=E4=BA=9B=E5=
=BC=B9=E5=87=BA=E7=9A=84=E6=8F=90=E9=97=AE=E6=A1=86=EF=BC=8C=E5=85=88=E4=B8=
=8D=E5=88=A0=E9=99=A4=E5=90=A7=E3=80=82
            /* var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-ask-float-block'  =
title=3D'=E6=8F=90=E9=97=AE=E6=8C=89=E9=92=AE' =
style=3D'top:"+(back_top_value-82)+"px'></a>"+
             "<a id=3D'com-quick-reply'  =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-41)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";*/
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-160)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block' =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
                "<a id=3D'com-quick-reply'  =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-38)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";
        } else if (window.eduCallCenter) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' >" +
                "<a id=3D'com-appcode-float-block' =
href=3D'http://edu.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'display:none;top:"+(back_top_value-135)+"px; background: =
url(http://edu.csdn.net/images/weix.png) no-repeat top =
left;background-size:100% auto; '><span id=3D'appcode-close' =
style=3D''></span></a> <a id=3D'com-app-float-block'  =
title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
                "<a id=3D'com-edu-call-center'  =
title=3D'=E5=AD=A6=E9=99=A2=E5=AE=A2=E6=9C=8D' =
style=3D'top:"+(back_top_value-38)+"px' target=3D'_blank' =
href=3D'http://wpa.qq.com/msgrd?v=3D3&amp;uin=3D2355263780&amp;site=3Dqq&=
amp;menu=3Dyes'></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        } else if (window.bbsInfoflag) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-236)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block'  =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-152)+"px'></a>"+
                "<a id=3D'com-quick-reply-bbs' =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-114)+"px'></a>" +
                "<a id=3D'com-back-channel' =
title=3D'=E5=9B=9E=E5=88=B0=E9=A2=91=E9=81=93' =
style=3D'top:"+(back_top_value-76)+"px'></a>" +
                "<a id=3D'com-back-home' =
title=3D'=E5=9B=9E=E5=88=B0=E9=A6=96=E9=A1=B5' =
style=3D'top:"+(back_top_value-38)+"px'></a>" +
                "<a id=3D'com-d-top-a' =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";
        }
        =
//=E5=86=8D=E6=AC=A1=E9=87=8D=E6=96=B0=E5=8A=A0=E5=85=A5ask=E4=BE=9B=E5=95=
=86=E5=8A=A1=E9=A1=B9=E7=9B=AE=E9=82=A3=E8=BE=B9=E4=BD=BF=E7=94=A82015061=
0
        else if (window.askForBussenessFlag) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-160)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block'  =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
                 "<a id=3D'com-ask-float-block'  =
style=3D'top:"+(back_top_value-38)+"px' =
title=3D'=E6=88=91=E8=A6=81=E6=8F=90=E9=97=AE' onclick=3D'' ></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        }
        else {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block'  =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-122)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block'   =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-38)+"px'></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        }

        //=E6=90=9C=E7=B4=A2=E5=BB=BA=E8=AE=AE=E7=9A=84HTML
        var common_ask_div_sc=3D"<div id=3D\"common_ask_div_sc\" =
class=3D\"searchContainer\"><div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div><div class=3D\"sFooter\"><a =
class=3D\"sFirstNewAsk\">=E6=88=91=E6=83=B3=E6=8F=90=E4=B8=80=E4=B8=AA=E6=
=96=B0=E9=97=AE=E9=A2=98</a></div></div>"
        var =
total_ask_str=3Dfloat_ask_img+second_pop_str+common_ask_div_sc;//float_as=
k_img+first_pop_str+second_pop_str+common_ask_div_sc
        $("body").append(total_ask_str);

        =
//=E7=82=B9=E5=87=BB=E5=85=B3=E9=97=AD=E4=BA=8C=E7=BB=B4=E7=A0=81

        $("#com-appcode-float-block #appcode-close").click(function(){
            $("#com-appcode-float-block").hide('slow');
			return false;
            //$("#com-appcode-float-block").remove();

        })

        //=E5=AD=A6=E9=99=A2APP=E4=B8=8B=E8=BD=BD

        $("#com-app-float-block").click(function(){
            if (window.eduCallCenter){
                $("#com-appcode-float-block").show();
            }
        });

        $( 'body').bind( 'click', function ( evt ) {
            $target =3D $( evt.target );
            if ( $target.attr( 'id') =3D=3D 'add_img_btn' )
            {
                cmDrawImage(editor, "af_");
                return false;
            }else if( $target.attr( 'class') =3D=3D 'img_tab' ){
                =
$target.addClass('active').siblings('.img_tab').removeClass('active');
                var _target =3D $target.attr('href');
                =
$(_target).addClass('active').siblings('.tab_panel').removeClass('active'=
);
            }else if( $target.attr( 'id') =3D=3D 'add_link_btn' ) {
                cmDrawLink(editor, "af_");
                return false;
            }else if( $target.attr( 'class') =3D=3D 'cm_dialog'){
                $('.pop_cm').hide(300);
                $('.cm_dialog').hide();
                if (editor_change_ask_o_domain !=3D "") {
                    document.domain =3D editor_change_ask_o_domain;
                    editor_change_ask_o_domain =3D "";
                }
            }else if ($target.hasClass('icon-link')){     //icon-link
                var $ft =3D $target.parents()[1];
                //var $ft =3D $tb.parents()[0];
                $(".cm_dialog", $ft).fadeIn(300);
                $(".cm_add_link", $ft).slideDown(300);
                $(".cm_add_img", $ft).slideUp(300);

            }else if ($target.hasClass('icon-picture')){     //icon-link
                var $ft =3D $target.parents()[1];
                //var $ft =3D $tb.parents()[0];
                $(".cm_dialog", $ft).fadeIn(300);
                $(".cm_add_link", $ft).slideUp(300);
                $(".cm_add_img", $ft).slideDown(300);
                editor_change_ask_o_domain =3D document.domain;
                document.domain =3D "csdn.net";
            }
        } )

        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E6=9C=89=E5=BF=AB=E9=80=9F=
=E5=9B=9E=E5=A4=8D=EF=BC=8C=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8start
        $("#com-quick-reply").click(function(){
            if($("#comment_content").length>0){
                setEditorFocus();
            }
            else{
                window.location.href =3D "https://passport.csdn.net/";
            }
        });


        var d_top =3D $('#com-d-top-a');

        $(document).scroll(function(){
            var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);
            if (scrTop > 500)
            {
                d_top.show();
            } else
            {
                d_top.hide();
            }

        })
        $('#com-d-top-a').click(function ()
        {
            scrollTo(0, 0);
            this.blur();
            return false;
        });
        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E6=9C=89=E5=BF=AB=E9=80=9F=
=E5=9B=9E=E5=A4=8D=EF=BC=8C=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8end

        var coin_flag=3Dfalse;
        //var prot =3D window.location.protocol;
        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E5=90=A6=E9=A6=96=E6=AC=A1=E7=82=B9=E5=87=BB=
=E6=8F=90=E9=97=AE=E6=8C=89=E9=92=AE
        var check_accept_rules_url =3D prot + =
"//ask.csdn.net/users/check_accept_rules.js";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E6=A0=87=E9=A2=98=E5=BD=95=E5=85=A5=
=E6=A1=86=E7=9A=84=E8=87=AA=E5=8A=A8=E5=AE=8C=E6=88=90
        var ask_topic_autocomplete_url =3D prot + =
"//ask.csdn.net/questions/autocomplete.js";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E5=85=89=E6=A0=87=E7=A6=BB=E5=BC=80=
=E6=A0=87=E9=A2=98=E5=90=8E=E7=9A=84=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE
        // var ask_topic_tag_suggest_url =3D " =
http://ask.csdn.net/questions/tag_autocomplete.js";
        var ask_topic_tag_suggest_proxy =3D prot + =
"//internalapi.csdn.net/proxy.html";
        var ask_topic_tag_suggest_url =3D prot + =
"//internalapi.csdn.net/myapi/ask_topic/ask_topic_tag_suggest";//?x-acl-t=
oken=3DYz3GAP4stGOIrLaIrnDed-uThp8K";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E5=8F=91=E5=B8=83=E9=97=AE=E9=A2=98=
=E7=9A=84=E5=9C=B0=E5=9D=80
        var create_question_proxy =3D prot + =
"//ask.csdn.net/proxy.html";
        var create_question_url =3D prot + =
"//ask.csdn.net/questions/create_question.json";
        //=E9=AA=8C=E8=AF=81C=E5=B8=81
        var valid_coin=3D   prot + "//ask.csdn.net/users/get_scores.js";
        //=E9=97=AE=E9=A2=98=E9=93=BE=E6=8E=A5=E8=B7=B3=E8=BD=AC
        var ask_detail_url =3D  prot + "//ask.csdn.net/questions/";
        var ajaxProxyCaches =3D {};

        var isSubmitting =3D false;


        var editor =3D new Editor();
        $( document ).data( 'editor_all', editor );
        editor.render(document.getElementById('editor_all'));

        function ajaxProxy(proxyUrl, opts) {
            var c =3D ajaxProxyCaches[proxyUrl];
            if (c =3D=3D=3D undefined) {
                c =3D ajaxProxyCaches[proxyUrl] =3D [];
                var func =3D arguments.callee;
                $('<iframe class=3D"poxy_uc" src=3D"' + proxyUrl + '" =
style=3D"display:none">').load(function () {
                    c.contentWindow =3D this.contentWindow;
                    func(proxyUrl, opts);
                }).prependTo('body');
            } else if (c.contentWindow =3D=3D=3D undefined) {
                c.push(opts);
            } else {
                do {
                    c.contentWindow.jQuery.ajax(opts);
                } while (opts =3D c.shift());
            }
        }

        //json =3D {status:false, error:1, msg: =
'=E8=AF=B7=E5=85=88=E7=99=BB=E5=BD=95'}
        //json =3D {status:false, error:2, msg: =
'=E6=82=A8=E5=B7=B2=E8=A2=ABCSDN=E9=97=AE=E7=AD=94=E7=A6=81=E8=A8=80'}
        //json =3D {status:false, error:3, msg: =
'=E6=82=A8=E5=B7=B2=E8=A2=AB=E5=B0=81=E5=8F=B7'}
        //json =3D {status:true, error:0, msg: =
'=E6=82=A8=E5=B7=B2=E7=BB=8F=E7=99=BB=E5=BD=95'}

        =
//=E6=98=AF=E5=90=A6=E9=A6=96=E6=AC=A1=E7=82=B9=E5=87=BB=E6=8F=90=E9=97=AE=

        $("#com-ask-float-block").bind('click', function(){
            =
//$('.editor-preview.editor-preview-active').removeClass('editor-preview-=
active');
            //$('.icon-preview.active').removeClass('active');
            //document.domain=3D"csdn.net";
            //pop($("body > .ask_second"));
            //editor.codemirror.getValue =3D "";
            $(".ask_second").remove();
            $("body").append(second_pop_str);
            editor =3D new Editor();
            $( document ).data( 'editor_all', editor );
            editor.render(document.getElementById('editor_all'));


            $("#askInputSecond").focus();//
            $(".CodeMirror").removeClass("CodeMirror-focused");
            $(".comm_ask_second .CodeMirror textarea").blur();
            //$(".CodeMirror-code, .CodeMirror-measure").html("");
            $.ajax({
                type: "get",
                url: check_accept_rules_url, =
//"http://ask.csdn.net/users/check_accept_rules",//=E5=88=A4=E6=96=AD=E6=98=
=AF=E5=90=A6=E7=99=BB=E5=BD=95=EF=BC=8C
                dataType: "jsonp",
                jsonp: "callback",
                success: function(obj) {

                    if (obj.error =3D=3D 0) {
                        pop($("body > .ask_second"));

                        =
$(".CodeMirror").removeClass("CodeMirror-focused");
                    } else if (obj.error =3D=3D 1) {
                        window.location.href =3D =
"https://passport.csdn.net/";
                    } else {
                        alert(obj.msg);
                    }
                },
                error: function(err) {
                    var i =3D 0;
                }
            });

        });

        function pop($popup){
            //=E9=81=AE=E7=BD=A9
            var w =3D $( document ).width();
            var h =3D $( document ).height();
            var $marker =3D $( '<div class=3D"marker"></div>' );
            if ( $.browser && $.browser.msie) {
                w =3D w - 18;
            }

            $marker.css( {
                opacity: 0.5,
                width: w + 'px',
                height: h + 'px'
            } );

            $( 'body' ).append( $marker );
            //=E4=BD=8D=E7=BD=AE=E5=8F=8A=E5=BC=B9=E5=87=BA

            //var top =3D $( window ).height() / 2 + $( window =
).scrollTop();
            //var top =3Ddocument.documentElement.clientHeight / 2 + $( =
window ).scrollTop();

            /*$popup.css( {
             top: top + 'px',
             left:"50%"

             } );*/

            setTimeout( function () {
                $popup.show();
                $popup.css( {
                    opacity: 1
                } );
                $(".CodeMirror").removeClass("CodeMirror-focused");
            }, 200 );
            =
//=E5=88=9D=E5=A7=8B=E5=8C=96=E5=9F=BA=E6=9C=AC=E7=9A=84=E4=BA=8B=E4=BB=B6=
=E7=BB=91=E5=AE=9A=E7=AD=89
            //=E5=8F=96=E6=B6=88=E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A

            var $cancel=3D$popup.find( '[nodetype=3D"cancel"]' );
            var $close =3D $popup.find( '[nodetype=3D"close"]' );
            $cancel.add($close).unbind( 'click' );
            $cancel.add($close).bind( 'click', function () {
                $("#common_ask_div_sc").css("display","none");
                $popup.css( {
                    opacity: 0
                } );
                var $btn_sub =3D $popup.find( '[nodetype=3D"ok"]' );
                $btn_sub.css("background-color", "#be0000");
                isSubmitting =3D false;
                setTimeout( function () {
                    $popup.hide();
                }, 350 );
                $( '.marker' ).remove();
                return false;
            } );
            =
//=E6=8F=90=E4=BA=A4=E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A=EF=BC=8C=E9=9C=80=
=E8=A6=81=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E7=AC=AC=E4=BA=8C=E4=
=B8=AA=E5=BC=B9=E7=AA=97

            if($popup.hasClass("ask_first")){

                //=E7=BB=91=E5=AE=9A=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2
                AskSearch({ $inputBox: $(".comm_ask_first #askInput"),
                    $container: $("body > #common_ask_div_sc"),
                    searchUrl: ask_topic_autocomplete_url, =
//"http://192.168.6.227:9403/ask_topic/autocomplete", =
//=E6=90=9C=E7=B4=A2=E7=9A=84Url
                    isFirst: true

                })
            }

            else{
                //=E8=BF=98=E8=BF=9C=E9=87=8D=E8=AE=BE=E5=80=BC
                $(".err_div").css("display", "none");
                $(" .comm_ask_second #askInputSecond").val("");
                $(" .comm_ask_second #wmd-input").val("");
                $(" .comm_ask_second span.tag").remove();
                //$(" .comm_ask_second  #ask2_tagRecomm_div =
label").remove();
                $(" .comm_ask_second  #ask2_tagRecomm_div a").remove();
                $(".comm_ask_second #chk_cb").attr("checked",false);
                $(".comm_ask_second #cb_num").attr("readonly",true);
                $(" .comm_ask_second #cb_num").val("");
                $(" .comm_ask_second #wmd-preview").empty();
                $(" .comm_ask_second [name=3D'txtSearchTags']").val("");
                /*$(" .comm_ask_second =
#wmd-preview").css("display","none");
                 $(" .comm_ask_second =
#wmd-input").css("display","block");*/


                =
//=E7=BB=99=E6=A0=87=E7=AD=BE=E5=8A=A0=E4=B8=8Afoucs=E6=95=88=E6=9E=9C
                $(" .comm_ask_second #divSearchTags =
input").focus(function(){
                    $(" .comm_ask_second =
#divSearchTags").addClass('focus');
                }).blur(function(){
                    $(" .comm_ask_second =
#divSearchTags").removeClass('focus');
                })
                //=E6=82=AC=E8=B5=8F=E7=9A=84=E5=BC=80=E5=90=AF
                $(".comm_ask_second #chk_cb").click(function(){
                    if ($(".comm_ask_second #chk_cb")[0].checked) {
                        $(".comm_ask_second =
#cb_num").attr("readonly",false)

                    }
                    else{
                        $(".comm_ask_second =
#cb_num").attr("readonly",true);
                        $(".comm_ask_second #cb_num").val("");
                        coin_flag =3D false;
                    }
                })
                var $submit =3D $popup.find( '[nodetype=3D"ok"]' );
                $submit.unbind('click');
                $submit.bind( 'click', function () {
                    var _this =3D this;
                    if (isSubmitting) return;
                    isSubmitting =3D true;
                    $(this).css("background-color", "#999");
                    // data =3D =
_this.getBackData();=E9=9C=80=E8=A6=81=E8=87=AA=E8=A1=8C=E5=BA=8F=E5=88=97=
=E5=8C=96=E5=80=BC
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D editor.codemirror.getValue();
                    /* if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     _content =3D _content.replace(/\<p\>/g, "");
                     _content =3D _content.replace(/\<\/p\>/g, "");
                     }*/
                    var _tagList =3D $(".comm_ask_second =
[name=3D'txtSearchTags']").val();
                    var _fromType =3D =
window.location.hostname;//"read_index";

                    var _isreward =3D $(" .comm_ask_second =
#chk_cb")[0].checked;

                    var _coin =3D $(" .comm_ask_second #cb_num").val();

                    //=E9=AA=8C=E8=AF=81
                    $(".err_div").css("display", "none");
                    if (!valid($(" .comm_ask_second =
#askInputSecond"),_title,"=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98",10,50)){

                        return false;
                    }


                    if( !valid($(" .comm_ask_second =
#wmd-input"),_content,"=E9=97=AE=E9=A2=98=E6=8F=8F=E8=BF=B0",30,10000)){
                        return false;
                    };
                    if( !valid( $(" .comm_ask_second =
#divSearchTags"),_tagList.split(','),"=E9=97=AE=E9=A2=98=E6=A0=87=E7=AD=BE=
",1,5)){
                        $(" .comm_ask_second =
#divSearchTags").addClass('focus');
                        return false;
                    };

                    =
//=E9=82=A3=E4=B8=AAC=E5=B8=81=E9=82=A3=E4=B8=AA=E5=A6=82=E6=9E=9C=E5=8B=BE=
=E9=80=89=E4=BA=86=E6=89=8D=E9=AA=8C=E8=AF=81=E6=98=AF=E4=B8=8D=E6=98=AF=E6=
=95=B0=E5=AD=97,=E8=BF=98=E9=9C=80=E9=AA=8C=E8=AF=81C=E5=B8=81=E7=9A=84=E5=
=80=BC=E5=A4=9F=E4=B8=8D=E5=A4=9F
                    var _cbNum =3D $(".comm_ask_second #cb_num").val();
                    if ($(".comm_ask_second #chk_cb")[0].checked) {
                        if (!/^[1-9]\d*$/.test(_cbNum)) {
                            $(".err_div").css("display", "block");
                            =
$(".err_txt").text("=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F=E5=8F=AA=E8=83=BD=
=E5=BD=95=E5=85=A5=E6=95=B0=E5=AD=97=EF=BC=81");
                            $(".comm_ask_second #cb_num").focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;
                            return false;
                        }
                    }

                    function valid(fild,fild_value,name,minL,maxL){

                        if((fild_value && fild_value[0] =3D=3D "") || =
fild_value.length=3D=3D0){
                            mess =3D '=E8=AF=B7=E8=BE=93=E5=85=A5' + =
name;
                            $(".err_div").css("display", "block");
                            $(".err_txt").text(mess);
                            fild.focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;

                            return false;
                        }
                        =
if(fild_value.length<minL||fild_value.length>maxL){
                            mess =3D =
'=E8=AF=B7=E8=BE=93=E5=85=A5=E9=95=BF=E5=BA=A6=E4=B8=BA' =
+minL+"-"+maxL+"=E7=9A=84"+name;

                            $(".err_txt").text(mess);
                            $(".err_div").css("display", "block");
                            fild.focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;

                            return false;
                        }
                        else{
                            return true;
                        }
                    }
                    =
//=E9=AA=8C=E8=AF=81C=E5=B8=81=E4=B8=8D=E5=A4=9F=E4=B8=8D=E8=AE=B8=E6=8F=90=
=E4=BA=A4
                    if(coin_flag){
                        $(".err_div").css("display", "block");
                        $(_this).css("background-color", "#be0000");
                        isSubmitting =3D false;
                        return false;
                    }
                    var tempDomain =3D document.domain;
                    document.domain =3D 'csdn.net';
                    //_fromType =3D "";
                    =
//=E7=95=99=E6=84=8F=E8=AF=A5=E6=8E=A5=E5=8F=A3=E8=AF=B7=E6=B1=82=E7=B1=BB=
=E5=9E=8B,=E5=BC=82=E6=AD=A5=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=EF=BC=8C=
=E5=9C=A8=E8=AF=A5=E6=AC=A1=E5=8A=A0=E5=85=A5=E4=BA=86=E9=AA=8C=E8=AF=81=E7=
=9A=84=E8=83=BD=E5=8A=9B=EF=BC=8C
                    //$.ajax({
                    //	type: "get",
                    ajaxProxy(create_question_proxy, {
                        type: "post",
                        data: {
                            "question[title]": _title,
                            "question[body]": _content,
                            "question[tag_list]": _tagList,
                            "question[from_type]": _fromType,
                            "question[is_reward]": _isreward,
                            "question[coin]": _coin
                        },
                        url: create_question_url,
                        dataType: "json",
                        //dataType: "jsonp",
                        //jsonp: "callback",
                        //async: false,
                        success: function(obj) {
                            document.domain =3D tempDomain;
                            if (obj.status) {
                                =
//=E8=B7=B3=E8=BD=AC=E5=88=B0=E6=96=B0=E9=A1=B5=E9=9D=A2,=E5=85=B3=E9=97=AD=
,=E9=87=8D=E8=AE=BE=E8=BF=99=E4=B8=AA=E5=80=BC=E5=BD=93=E5=89=8D=E9=A1=B5=
=E9=9D=A2
                                =
$(".comm_ask_second").css("display","none");
                                $(_this).css("background-color", =
"#be0000");
                                isSubmitting =3D false;
                                $( '.marker' ).remove();
                                var =
href=3D"//ask.csdn.net/questions/"+obj.id;
                                window.open(href, =
"target=3D_blank,location=3D1");
                                =
alert("=E4=BD=A0=E7=9A=84=E9=97=AE=E9=A2=98=E5=B7=B2=E5=8F=91=E5=B8=83=E5=
=88=B0=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E3=80=82");
                            } else {
                                $(".err_div").css("display", "block");
                                $(".err_txt").text(obj.msg);
                                $(_this).css("background-color", =
"#be0000");
                                isSubmitting =3D false;
                            }
                        },
                        error: function(err) {
                            document.domain =3D tempDomain;
                            var i =3D 0;
                        }
                    });

                    =
//=E9=9C=80=E8=A6=81=E8=B0=83=E7=94=A8=E5=85=B3=E9=97=AD=E8=BF=99=E4=B8=AA=
=E7=AA=97=E5=8F=A3
                    return false;
                } );
                //=E7=BB=91=E5=AE=9A=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2
                AskSearch({    $inputBox: $(".comm_ask_second =
#askInputSecond"),
                    $container: $("body > #common_ask_div_sc"),
                    searchUrl: ask_topic_autocomplete_url, =
//"http://192.168.6.227:9403/ask_topic/autocomplete", =
//=E6=90=9C=E7=B4=A2=E7=9A=84Url
                    isFirst: false
                });

                $(".comm_ask_second .CodeMirror textarea").bind("focus", =
function() {
                    $(".CodeMirror").addClass("CodeMirror-focused");
                });

                =
//=E5=8A=A8=E6=80=81=E5=8E=BB=E5=90=8E=E5=8F=B0=E8=8E=B7=E5=8F=96=E6=8E=A8=
=E8=8D=90=E6=A0=87=E7=AD=BEstart
                $(".comm_ask_second #askInputSecond").bind("blur", =
function(){
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D =
editor.codemirror.getValue();//$(".comm_ask_second #wmd-input").val();
                    /* if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     } else {
                     _content =3D "";
                     }*/
                    setTimeout(function(){$("#div_sc").css("display", =
"none");},400);
                    loadRecommTags( _title, _content);
                });
                $(".comm_ask_second .CodeMirror textarea").bind("blur", =
function(){
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D =
editor.codemirror.getValue();//$(".comm_ask_second #wmd-input").val();
                    /*if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     } else {
                     _content =3D "";
                     }*/
                    loadRecommTags( _title, _content);
                });
                =
//=E5=8A=A8=E6=80=81=E5=8E=BB=E5=90=8E=E5=8F=B0=E8=8E=B7=E5=8F=96=E6=8E=A8=
=E8=8D=90=E6=A0=87=E7=AD=BEend
                =
//=E5=BC=82=E6=AD=A5=E5=90=8E=E5=8F=B0=E9=AA=8C=E8=AF=81C=E5=B8=81=E8=B6=B3=
=E5=A4=9F=EF=BC=9F
                $(".comm_ask_second #cb_num").bind("blur",function(){

                    if($(".comm_ask_second #chk_cb")[0].checked){
                        $(".err_div").css("display", "none");
                        if (!/^[0-9]\d*$/.test( $(".comm_ask_second =
#cb_num").val())) {
                            $(".err_div").css("display", "block");
                            =
$(".err_txt").text("=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F=E5=8F=AA=E8=83=BD=
=E5=BD=95=E5=85=A5=E6=95=B0=E5=AD=97=EF=BC=81");
                            $(".comm_ask_second #cb_num").focus();
                            return false;
                        }
                        $.ajax({
                            type: "get",
                            url: valid_coin,
                            dataType: "jsonp",
                            jsonp: "callback",
                            async: false,
                            success: function(obj) {
                                if (obj.error=3D=3D0) {
                                    =
//=E8=BF=99=E4=B8=AA=E7=8A=B6=E6=80=81=E4=B8=8B=E8=A1=A8=E7=A4=BA=E6=8B=BF=
=E5=88=B0=E4=BA=86C=E5=B8=81
                                    if( $(".comm_ask_second =
#cb_num").val()>obj.score){
                                        $(".err_div").css("display", =
"block");
                                        =
$(".err_txt").text("=E6=82=A8=E7=9A=84C=E5=B8=81=E4=BD=99=E9=A2=9D=E4=B8=8D=
=E8=B6=B3");
                                        =
//=E9=AA=8C=E8=AF=81=E4=B8=8D=E9=80=9A=E8=BF=87=E4=B8=8D=E8=AE=B8=E6=8F=90=
=E4=BA=A4
                                        coin_flag=3Dtrue;
                                    }
                                    else{
                                        coin_flag=3Dfalse;
                                    }
                                } else {
                                    $(".err_div").css("display", =
"block");
                                    $(".err_txt").text(obj.msg);
                                    coin_flag=3Dtrue;
                                }
                            },
                            error: function(err) {
                                // =
alert("=E5=90=8E=E5=8F=B0=E5=87=BA=E9=94=99=E4=BA=86");
                            }
                        });}

                })
                =
//=E6=8F=90=E9=97=AE=E7=9A=84=E8=87=AA=E5=8A=A8TAG,=E9=9C=80=E8=A6=81=E4=BD=
=A0=E8=87=AA=E8=A1=8C=E7=B2=98=E8=B4=B4=E9=82=A3=E4=B8=AAJS=E6=96=87=E4=BB=
=B6
                Creat_Dynamic_Tag(".comm_ask_second #divSearchTags", =
ask_topic_tag_suggest_url, ".comm_ask_second =
input[name=3D'txtSearchTags']");

            }

        }//close pop function

        function ShowSecondPop() {
            // =
askFirst.popup.closeFun();=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5

            $("body > .ask_first").find( '[nodetype=3D"close"]' =
).click();//=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5=E7=AC=AC=E4=B8=80=E4=B8=AA=


            pop($("body > .ask_second"));
        }

        //=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2=E6=8F=90=E7=A4=BA
        function AskSearch(conf) {

            $("body").click(function(e){

                var target=3D  e.target;

                if($(target).closest("#common_ask_div_sc").length<1){
                    conf.$container.css("display","none");
                }

            })

            var $inputBox =3D conf.$inputBox;
            var $container =3D conf.$container;
            var searchUrl =3D conf.searchUrl;
            var isFirst =3D conf.isFirst;  =
//=E8=B0=83=E7=94=A8=E6=90=9C=E7=B4=A2=E7=9A=84=E6=98=AF=E9=A6=96=E6=AC=A1=
=E5=BC=B9=E5=87=BA=E7=AA=97=E8=BF=98=E6=98=AF=E6=8F=90=E9=97=AE=E5=BC=B9=E5=
=87=BA=E7=AA=97
            var nowItem =3D -1;
            var userInput =3D "";
            $container.css("display", "none");
            $inputBox.css("autocomplete", "off");
            $container.css("z-index", "1100");

            //$inputBox.unbind("keyup");
            $inputBox[0].onkeyup=3Dfunction(ev) {//propertychange
                var oEvent =3D ev||event;
                if(oEvent.keyCode =3D=3D 40 || oEvent.keyCode =3D=3D 38 =
|| oEvent.keyCode =3D=3D 27 || (oEvent.keyCode >=3D 113 && =
oEvent.keyCode <=3D 123) ||
                    oEvent.keyCode =3D=3D 16 || oEvent.keyCode =3D=3D 17 =
|| oEvent.keyCode =3D=3D 18 || oEvent.keyCode =3D=3D 9 || oEvent.keyCode =
=3D=3D 20){
                    return;
                }
                $container.css("opacity", 0);
                var rect =3D this.getBoundingClientRect();
                var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);
                $container.css("left", rect.left);
                $container.css("top", rect.bottom + scrTop);//rect.top + =
rect.height
                //$container.css("top", rect.bottom);
                var inVal =3D this.value;
                if ( this.value.length > 0 ) {
                    showHint(inVal,$container,$inputBox,isFirst);
                } else {
                    $container.css("display", "none");
                }
                userInput =3D inVal;

            };
            //$inputBox.unbind("keydown");
            $inputBox[0].onkeydown=3Dfunction(ev){
                var evt =3D ev||event;
                if (evt.keyCode =3D=3D 27) {
                    $container.css("display", "none");
                    $inputBox.val(userInput);
                }
                if (evt.keyCode =3D=3D 13) {
                    $container.css("display", "none");
                }
                if (evt.keyCode =3D=3D 40) {
                    nowItem ++;
                    var suggItems =3D $(".sItem", $container);
                    var itemCnt =3D suggItems.length;
                    if ( nowItem =3D=3D=3D itemCnt) {
                        nowItem =3D -1;
                    }
                    suggItems.removeClass("sItemHover");
                    if (nowItem !=3D -1) {
                        var nowSugg =3D suggItems.eq(nowItem);
                        nowSugg.addClass("sItemHover");
                        $inputBox.val($(".sfirst", nowSugg).text());
                    } else {
                        $inputBox.val(userInput);
                    }
                }
                if (evt.keyCode =3D=3D 38) {
                    nowItem --;
                    var suggItems =3D $(".sItem", $container);
                    var itemCnt =3D suggItems.length;
                    if (nowItem =3D=3D -2) {
                        nowItem =3D itemCnt - 1;
                    }
                    suggItems.removeClass("sItemHover");
                    if (nowItem !=3D -1) {
                        var nowSugg =3D suggItems.eq(nowItem);
                        nowSugg.addClass("sItemHover");
                        $inputBox.val($(".sfirst", nowSugg).text());
                    } else {
                        $inputBox.val(userInput);
                    }
                }
            };
        }
        =
//=E4=BB=A5=E4=B8=8B=E6=96=B9=E6=B3=95=E6=98=AFAskSerch=E7=9A=84=E5=8E=9F=
=E5=9E=8B=E6=96=B9=E6=B3=95=E6=8B=86=E8=A7=A3
        function showHint(inVal,$container,$inputBox,isFirst) {
            $container.css("display", "block");
            $.ajax( {
                type: "get",
                url: ask_topic_autocomplete_url, =
//"http://192.168.6.210//mcs/problem_solving/10710/1",
                data: {query: inVal, fields:"title,id,comments"},
                dataType: 'jsonp',
                jsonp: "callback",
                async: false,
                success: function (obj) {
                    if (obj !=3D null && obj.contents) {
                        fillSuggestData($container, =
obj.contents,$inputBox,isFirst);
                    }
                },
                error: function(err){
                    var i =3D 0;
                    //alert('err');
                }
            } );
        }

        function fillSuggestData ($container, items,$inputBox,isFirst) {
            if (isFirst) {
                $container.html("<div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div><div class=3D\"sFooter\"><a =
class=3D\"sFirstNewAsk\">=E6=88=91=E6=83=B3=E6=8F=90=E4=B8=80=E4=B8=AA=E6=
=96=B0=E9=97=AE=E9=A2=98</a></div>");
            } else {
                $container.html("<div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div>");
            }
            var tpl =3D '<div class=3D"sItem clearfix"><a href=3D"{2}" =
target=3D"_blank"><span class=3D"sfirst">{0}</span><span =
class=3D"ssecond">{1}</span></a></div>';

            if (items.length > 0) {
                $container.css("opacity", 1);
                //$container.css("display", "none");
            }
            for (var i =3D 0; i < items.length; i++){
                var item =3D items[i];
                var itemHtml =3D tpl.replace(/\{0\}/, item.title)
                    .replace(/\{1\}/, item.comments + =
"=E4=B8=AA=E5=9B=9E=E7=AD=94")
                    .replace(/\{2\}/, ask_detail_url + item.id);

                if (isFirst) {
                    $(".sFooter", $container).before(itemHtml);
                } else {
                    $container.append(itemHtml);
                }
            }
            if (isFirst) {
                $("#common_ask_div_sc .sFirstNewAsk").unbind("click");
                $("#common_ask_div_sc .sFirstNewAsk").bind("click", =
function(){
                    ShowSecondPop();
                });
            }
            $(".sItem", $container).each(function(i, item) {
                    var _i =3D i;
                    var _item =3D $(item);
                    _item.bind("mouseover", function() {
                        $(".sItem", =
$container).removeClass("sItemHover");
                        $(this).addClass("sItemHover");
                        nowItem =3D _i;
                    });
                    _item.bind("click", function() {
                        //$inputBox.val($(".sfirst", $(this)).text());
                        $container.css("display","none");
                    });
                }
            );
        }
        =
//=E8=8E=B7=E5=8F=96=E5=90=8E=E5=8F=B0=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=

        function  loadRecommTags( _title, _content){
            if (_title =3D=3D "" && _content=3D=3D"") return;
            var dataStr =3D JSON.stringify({title: _title, body: =
_content, size: 4});
            //$.ajax({

            var tempDomain =3D document.domain;
            document.domain =3D 'csdn.net';
            ajaxProxy(ask_topic_tag_suggest_proxy, {
                headers: {
                    'X-acl-token': 'Yz3GAP4stGOIrLaIrnDed-uThp8K'
                },
                type: "POST",
                url: ask_topic_tag_suggest_url + "?dataType=3Djson",
                data: dataStr,//{title: _title, body: _content, size: =
4},
                contentType: "application/json",
                dataType: "json",
                //dataType: "jsonp",
                //jsonp: "callback",
                //contentType:'application/x-www-form-urlencoded; =
charset=3DUTF-8',
                success: function(obj) {
                    document.domain =3D tempDomain;
                    if (obj!=3Dnull && obj.length > 0) {
                        var $dataContainer =3D $( ".comm_ask_second =
#ask2_tagRecomm_div");
                        $dataContainer.html("<span =
class=3D\"drt_tit\">=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=EF=BC=9A</span>"=
);
                        //var tpl =3D "<label =
class=3D\"se_key\">{0}</label>";
                        var tpl =3D "<a href=3D\"#\" =
class=3D\"se_key\">{0}</a>";

                        var items =3D obj;
                        for (var i =3D 0; i < items.length; i++){
                            var item =3D items[i];
                            if (item.name =3D=3D "") continue;
                            var itemHtml =3D tpl.replace(/\{0\}/, =
item.name + "&nbsp;&nbsp;=EF=BC=8B");
                            $dataContainer.append(itemHtml);
                            if (i =3D=3D 4) {
                                break;
                            }
                        }
                        try {
                            window['trackingAd']($dataContainer);
                        } catch (ex) {}
                        $(".comm_ask_second =
.se_key").each(function(i,item){
                            var _item =3D $(item);
                            _item.bind("click", function(){
                                var cTagsObj =3D $(".comm_ask_second =
input[name=3D'txtSearchTags']");
                                var cTags =3D cTagsObj.val();
                                var tagArr =3D cTags.split(',');

                                var tagText =3D _item.text();
                                var tagName =3D tagText.substring(0, =
tagText.length - 3);

                                for (var i =3D 0; i < tagArr.length; i =
++) {
                                    if (tagArr[i] =3D=3D=3D tagName) {
                                        return;
                                    }
                                }
                                var oTagStr =3D cTags;
                                if (tagArr.length >=3D 5) {
                                    //$(".err_div").css("display", =
"block");
                                    =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                                    =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                                    return;
                                    //oTagStr =3D "";
                                    //for (var i =3D 0; i < 4; i ++) {
                                    //  oTagStr +=3D tagArr[i] + ",";
                                    //}
                                    //oTagStr =3D oTagStr.substring(0, =
oTagStr.length-1);
                                }
                                var tagCon =3D $(".comm_ask_second =
#divSearchTags");
                                var tagInput =3D tagCon.find("input");

                                var preNode =3D =
tagInput[0].previousSibling;
                                if (tagArr.length >=3D 5 && preNode) {
                                    =
tagInput[0].parentNode.removeChild(preNode);
                                }
                                tagInput.before('<span =
class=3D"tag">'+'<span>'+tagName+'</span>'+'<a =
title=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE" =
href=3D"javascript:;">'+'=C3=97'+'</a>'+'</span>');

                                var newTags =3D oTagStr =3D=3D "" ? =
tagName : oTagStr + "," + tagName;
                                cTagsObj.val(newTags);
                                return false;
                            });
                        });
                    }
                },
                error: function(err){
                    document.domain =3D tempDomain;
                    var i =3D 0;
                    =
//alert('=E5=88=9D=E5=A7=8B=E5=8C=96=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=E9=
=94=99=E8=AF=AF=EF=BC=81');
                }
            });
        }

        //=E8=87=AA=E5=8A=A8Tag
        function Creat_Dynamic_Tag(conid,dataurl,subinput)
        {
            var oTagscon=3D$(conid)[0];
            var tagInput=3D$(conid).find('input')[0];

            var iNow=3D-1;
            var oldValue=3D'';
            var tags_array =3D [];

            var oUl =3D document.createElement('ul');
            oUl.className =3D 'complete_list';
            var oBody=3Ddocument.getElementsByTagName('body')[0];
            oBody.appendChild(oUl);

            tagInput.onkeyup=3Dfunction(ev)
            {
                var oEvent=3Dev || event;

                if(oEvent.keyCode=3D=3D40 || oEvent.keyCode=3D=3D38|| =
oEvent.keyCode=3D=3D13){
                    return false;
                }

                $(this).removeAttr("style");

                if(oEvent.keyCode=3D=3D8&&tagInput.value=3D=3D''){

                    oUl.style.display =3D 'none';
                    return false;
                }

                $.ajax({
                    type: "get",
                    //url:dataurl,
                    url: "https://recommend-api.csdn.net/tag/complete?",
                    //data:{'title': tagInput.value, body: =
tagInput.value, size: 4},
                    data: {'query': tagInput.value},
                    dataType:"jsonp",
                    //jsonp: "callback",
                    success: function(jsonstr){
                        =
//=E8=8E=B7=E5=8F=96input=E8=BE=93=E5=85=A5=E6=A1=86=E7=9A=84=E7=BB=9D=E5=
=AF=B9=E4=BD=8D=E7=BD=AE
                        var tagInput_pos =3D getPos(tagInput);
                        var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);

                        =
//=E5=BC=B9=E5=87=BA=E4=B8=8B=E6=8B=89=E6=A1=86=E7=9B=B8=E5=AF=B9=E4=BA=8E=
input=E8=BE=93=E5=85=A5=E6=A1=86=E5=90=91=E4=B8=8B=E5=81=8F=E7=A7=BB=E5=80=
=BC
                        var mp =3D242;
                        iNow=3D-1;
                        oldValue=3DtagInput.value;

                        var data =3D jsonstr.suggestions;

                        if(data.length!=3D0)
                        {

                            var bb =3D $( window ).height() - =
tagInput_pos.top;
                            $(oUl).empty();
                            =
//$(oUl).css({left:tagInput_pos.left,top:tagInput_pos.top+mp+scrTop})
                            =
$(oUl).css({left:tagInput_pos.left,bottom:bb});
                            for(var i=3D0;i<data.length;i++)
                            {
                                $(oUl).append('<li>'+data[i]+'</li>');
                            }
                            $(oUl).css('display','block');
                        }

                        var aLi =3D oUl.children;

                        for(var i=3D0; i<aLi.length; i++)
                        {
                            aLi[i].index=3Di;

                            aLi[i].onmouseover=3Dfunction(){

                                tagInput.value =3D this.innerHTML;

                                for(var i=3D0; i<aLi.length; i++){
                                    aLi[i].className=3D'';
                                }
                                this.className =3D 'outborder';
                                iNow=3Dthis.index;
                            }
                        }
                    }

                });
            }

            tagInput.onblur =3D function()
            {
                if(tagInput.value=3D=3D'')
                {
                    return false;
                }
                else
                {
                    if ($(subinput).val() !=3D "") {
                        tags_array =3D $(subinput).val().split(",");
                    }
                    var re=3D/[^0-9a-zA-Z\u4e00-\u9fa5\-+#]+/;
                    var re2 =3D /\-$/;
                    var re3 =3D /^\-/;
                    var str_arr =3D tagInput.value.split(re);
                    var str =3D str_arr.join("-");

                    if(str=3D=3D'-')
                    {
                        $(tagInput).css('background-color','#fbd8db');
                        return false;
                    }

                    if(re2.test(str))
                    {
                        str =3D str.substring(0,str.length-1);
                    }

                    if(re3.test(str))
                    {
                        str =3D str.substr(1);
                    }

                    if(find_in_arr(tags_array,str))
                    {
                        $(tagInput).css('background-color','#fbd8db');
                        return false;
                    }
                    var tags_len =3D tags_array.length;
                    if (tags_len >=3D 5) {
                        //$(".err_div").css("display", "block");
                        =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                        =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                        return;
                        //tags_array.splice(tags_len - 1, 1);
                        //_remove_last_tag(conid);
                    }

                    _add_tag(conid,str);
                    tagInput.value =3D '';
                    tags_array.push(str);
                    $(subinput).val(tags_array.join(','));
                    oUl.style.display =3D 'none';
                    return false;
                }
            }

            tagInput.onkeydown=3Dfunction(ev){

                var aLi =3D oUl.children;

                var oEvent=3Dev || event;

                if(oEvent.keyCode=3D=3D13||oEvent.keyCode=3D=3D188){

                    if(tagInput.value=3D=3D'')
                    {
                        return false;
                    }
                    else
                    {
                        if ($(subinput).val() !=3D "") {
                            tags_array =3D $(subinput).val().split(",");
                        }
                        var re=3D/[^0-9a-zA-Z\u4e00-\u9fa5\-+#]+/;
                        var re2 =3D /\-$/;
                        var re3 =3D /^\-/;
                        var str_arr =3D tagInput.value.split(re);
                        var str =3D str_arr.join("-");
                        if(str=3D=3D'-')
                        {
                            =
$(tagInput).css('background-color','#fbd8db');
                            return false;
                        }

                        if(re2.test(str))
                        {
                            str =3D str.substring(0,str.length-1);
                        }

                        if(re3.test(str))
                        {
                            str =3D str.substr(1);
                        }

                        if(find_in_arr(tags_array,str))
                        {
                            =
$(tagInput).css('background-color','#fbd8db');
                            return false;
                        }
                        var tags_len =3D tags_array.length;
                        if (tags_len >=3D 5) {
                            //$(".err_div").css("display", "block");
                            =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                            =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                            return;
                            //tags_array.splice(tags_len - 1, 1);
                            //_remove_last_tag(conid);
                        }

                        _add_tag(conid,str);
                        tagInput.value =3D '';
                        oUl.style.display =3D 'none';
                        tags_array.push(str);
                        $(subinput).val(tags_array.join(','));
                        return false;
                    }
                }

                if(oEvent.keyCode=3D=3D8&&tagInput.value=3D=3D''){

                    _remove_last_tag(conid);
                    oUl.style.display =3D 'none';
                    tags_array.pop();
                    $(subinput).val(tags_array.join(','));
                }

                if(oEvent.keyCode=3D=3D40){
                    iNow++;

                    if(iNow=3D=3DaLi.length){
                        iNow=3D-1;
                    }

                    for(var i=3D0; i<aLi.length; i++){
                        aLi[i].className=3D'';
                    }
                    if(iNow!=3D-1){
                        aLi[iNow].className=3D'outborder';
                        tagInput.value=3DaLi[iNow].innerHTML;
                    }else{
                        tagInput.value=3DoldValue;
                    }
                }

                if(oEvent.keyCode=3D=3D38){
                    iNow--;
                    if(iNow=3D=3D-2){
                        iNow=3DaLi.length-1;
                    }

                    for(var i=3D0; i<aLi.length; i++){
                        aLi[i].className=3D'';
                    }
                    if(iNow!=3D-1){
                        aLi[iNow].className=3D'outborder';
                        tagInput.value=3DaLi[iNow].innerHTML;
                    }else{
                        tagInput.value=3DoldValue;
                    }
                    return false;
                }
            }

            =
//=E7=82=B9=E5=87=BB=E6=AF=8F=E4=B8=AA=E6=A0=87=E7=AD=BE=E5=90=8E=E7=9A=84=
'x'=E5=88=A0=E9=99=A4=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE

            oTagscon.onclick =3D function(e)
            {
                var e =3D e || window.event;
                var target =3D e.srcElement || e.target;

                if (target.title =
=3D=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE")
                {
                    if ($(subinput).val() !=3D "") {
                        tags_array =3D $(subinput).val().split(",");
                    }
                    var cur_str =3D =
target.parentNode.children[0].innerHTML;
                    tags_array =3D remove_in_arr(tags_array,cur_str);
                    $(subinput).val(tags_array.join(','));
                    _remove_cur_tag($(target));
                    tagInput.focus();
                    $(tagInput).css('background-color','#fbd8db');
                    $(oUl).css('display','none');
                }
            }

            tagInput.onclick=3Dfunction(ev){
                var oEvent=3Dev || event;
                oEvent.cancelBubble=3Dtrue;
            }

            document.onclick =3D function()
            {
                oUl.style.display =3D 'none';
            }

            =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=8C=87=E5=AE=9A=E7=9A=84=
=E5=85=83=E7=B4=A0,=E5=B9=B6=E4=B8=94=E5=88=A0=E9=99=A4=E8=BF=99=E4=B8=AA=
=E5=85=83=E7=B4=A0
            function remove_in_arr(arr,str)
            {
                for(var i=3D0;i<arr.length;i++)
                {
                    if(arr[i]=3D=3Dstr)
                    {
                        arr.splice(i,1);
                    }
                }
                return arr;
            }
        }


        =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=8C=87=E5=AE=9A=E7=9A=84=
=E5=85=83=E7=B4=A0,=E5=B9=B6=E4=B8=94=E5=88=A0=E9=99=A4=E8=BF=99=E4=B8=AA=
=E5=85=83=E7=B4=A0
        function remove_in_arr(arr,str)
        {
            for(var i=3D0;i<arr.length;i++)
            {
                if(arr[i]=3D=3Dstr)
                {
                    arr.splice(i,1);
                }
            }
            return arr;
        }


        =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=9C=89=E6=B2=A1=E6=9C=89=
=E7=9B=B8=E5=90=8C=E7=9A=84=E5=85=83=E7=B4=A0
        function find_in_arr(arr,str)
        {
            var find =3D false;

            for(var i=3D0;i<arr.length;i++)
            {
                if(arr[i]=3D=3Dstr)
                {
                    find =3D true;
                }
            }
            return find;
        }

        //=E5=A2=9E=E5=8A=A0=E6=A0=87=E7=AD=BE =
obj=E4=B8=BA=E5=A2=9E=E5=8A=A0=E6=A0=87=E7=AD=BE=E7=9A=84=E5=AE=B9=E5=99=A8=
=EF=BC=8Cstr=E4=B8=BA=E6=A0=87=E7=AD=BE=E4=B8=AD=E7=9A=84=E6=96=87=E5=AD=97=
=E5=86=85=E5=AE=B9=E3=80=82
        function _add_tag(obj,str)
        {
            var tagCon =3D $(obj);
            var tagInput =3D tagCon.find('input');
            tagInput.before('<span =
class=3D"tag">'+'<span>'+str+'</span>'+'<a =
title=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE" =
href=3D"javascript:;">'+'=C3=97'+'</a>'+'</span>');
        }

        =
//=E5=88=A0=E9=99=A4=E6=9C=80=E5=90=8E=E4=B8=80=E4=B8=AA=E6=A0=87=E7=AD=BE=

        function _remove_last_tag(obj)
        {
            var tagCon =3D $(obj);
            tagCon.find('.tag').last().remove();
        }

        //=E5=88=A0=E9=99=A4=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE
        function _remove_cur_tag(obj)
        {
            obj.parent().remove();
        }

        function getPos(obj)
        {
            var l=3D0;
            var t=3D0;
            while(obj)
            {
                l+=3Dobj.offsetLeft;
                t+=3Dobj.offsetTop;
                obj=3Dobj.offsetParent;
            };
            return {left:l,top:t}
        };

    });
})();

------=_NextPart_000_0000_01D15A9A.7EA6D060--
