From: =?gb2312?B?0tHTySBJbnRlcm5ldCBFeHBsb3JlciAxMSCxo7Tm?=
Subject: =?gb2312?B?V29ya3RpbGXW0LDZzfK8tsq1yrHP+8+izcbLzbf+zvG1xMq1z9YtQw==?=
	=?gb2312?B?U0ROLk5FVA==?=
Date: Wed, 4 Nov 2015 14:10:12 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_NextPart_000_0000_01D1170A.85812440"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7601.17609

这是 MIME 格式的多方邮件。

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://jbcdn2.b0.upaiyun.com/2014/12/28c8edde3d61a0411511d3b1866f0636.jpeg

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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://jbcdn2.b0.upaiyun.com/2014/12/665f644e43731ff9db3d341da5c827e1.jpeg

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
3qX6tA9Yrgp70Glvm9S/VoHrFcFPeg0t83qX6tA9Yrgp70Glvm9S/VoHrFcFPeg0t83qX6tA9Yrg
p70Glvm9S/VoHrFcFPeg0t83qX6tA9Yrgp70Glvm9S/VoHrFcFPeg0t83qX6tA9Yrgp70Glvm9S/
VoHrFcFPeg0t83qX6tA9Yrgp70Glvm9S/VoHrFcFPeg0t83qX6tA9Yrgp70Glvm9S/VoHrFcFPeg
0t83qX6tA9Yrgp70Glvm9S/VoHrFcFPeg0t83qX6tA9Yrgp70Glvm9S/VoHrFcFPeg0t83qX6tBj
1iuCfvQaW+b1L9Wg79PcNOHmka11y0poSy2yofGY3T261QwPLCQS0uY0EjIHLpyCCcQEGsjiByQf
Crj/APSn47/cQYl4fcNrs2S4OIzFfdQx4LIPJ8NHkOd4OnLR/wB2UH3MROxgnPwoPiXHOOT1P3Fi
h9VNamvbYq9kFm4mU8fsRSbttJdCPOmkfskd/qZST/loPtlNM2dgkje1zXAFrmuyCPMfAg9UBAQE
BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
BAQEBAQEBAQEELxCsmotSaKumn9JardYrlW0UkNFeY6YTOopHNwJWsJAc5vUZPXB8EHJwt4c6R4Q
8P7Tw50bSGG3WqmEMPaO3SSOzl8j3H2cj3lz3OPNznEoLF2rAduRnyyg477ZrNqiy1mnb7b4quhr
6WSnrKWZu5k0T2lr2OHiC0kH9aCN4X6GoOFugLTw9tl5r6+ls9G2lpKm6TiWcxNzsa5wA3bW4aDj
OGjJJ5oLA1wcMhBlAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEHyb1VPE3UvCifh5qWhvptmn5eItNS62uEkDXQQWuSgrhm
Z7mkQxmqFIDJluHFoLgHHIfCOJHqjOIM1gZxMpeL7m6WpL1q3NnoboLReLiykroxRyUBmpZG1uyJ
ssQpCGGZ00bw54GEEloTizx11h6paptd54s02n6ui4nS0g0TfK98EtXp0UgMUcVv7j98kka5lR3t
tSQ2XewvDWuhAfWvUQO4naj9S/oviPxi4jXu/ak1To213C8/dSjp6UUlRJTNdIyKGGKPsvSech24
ktzy6IK96mDiNx64h8S7roHiNUyRQcL4aixanrjRCIaiu8srZaWqjIziMW3u87g3A7WvLesJCD9B
x9PiQbICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
AgICAgICAgICAgICAgICAgw5od1QYMbT1546IHZtzlBiRmWEfB4lBDaK4faT0Cy5t0tZ20pvN5qL
rdH9q6R9RWTuBklc55JPRrQOjGMYxoDWtACcQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
QEBAQEBAQEBAQEBAQEBAQEH/2Q==

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://jbcdn2.b0.upaiyun.com/2014/12/38026ed22fc1a91d92b5d2ef93540f201.png

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
0BD7aMRoLDRhmjqaRZontOhouWh1aT1oS2jH0V7VweqY6FTrXNbl/ugG607rAevR1lOi56xeNr1+
9U583ZVa+kr0nWPgMAQZZozgRoaPUY3RdWMh41jjDRMSE3sm3SbPTZVN85meMeM0CzNbNscztzXv
+pi/sFC1KLa4sORnGcdyx4raystq0hphbW7dbv3MRs2mzOaardjHNt32uB0OO5F2tuxS2/W1O8ce
nj0neyMOmMPC0e1466TPqdnp2cdZy7nW+cFFxaXC5Y6rwrXU9ZabHLditxvuctyL3W96yPEo8bj1
8ZTnWe5510vFq9rrkbemdz3vFz76fDp83vO18O3nB+nH4WfKL/HHr4/fVX90/UX6OxTgCaQHLoKk
g8qCHoJ1gttDQCF2QiZDSUMDn9DdMM6wtLBL4XLDa8JfRphHjEQSRfqN3I3ijsqKuhGtHt0WA/3E
uMQsxzLFJsVeiqMUpykuKK5z3OV4LPFS411LaCQ6k9BJPkl7PsmC5OLkpykWKdOpdFITqVfSNNJ6
0nHTg9NPZMhk1MuEZnpl7v1kiWRVZb2b7Zq9nSPIKc95m+uSu51HKE9lnvfyuufdm088X90C/FPw
WzheJK+os5ioOLr4SomekvFSRml26dMye2Vb5aLl9SrQFWGfiotK3crJKtaqQtXbas/qYzXKNf1q
aWuzal/Uca1zuK6ibt96dD71cuq9bng1TjZpNI03szeXt8Bbwluut5q3brRJtnW1U7fntL/z6fDb
cdFp3LnaJdHV1U3bna8H3BPWc6vXtvegj2qfyb58+jb1I//0yxkAg7DB7SHH0PFhneHlEcmRvqNs
o7VjJGPZ46DxqPGHCc/PxMWk1eShKe2p5WmZ6bEZvjMds0yzNXPI5uSbi56bOve9edHznn0WgcXd
JY+lK8v2ls+sWK4cXTVa3bums7a5rr6+sqG0MW9TzubsZ0t6a2pbcntiR3xnfFdsd2yP2J6xveJ7
x/dJ7Js8kDqYPiR7aO7nsLzDS0dUj6wf1Tq6c0zvsUPHzY6fPGF74uKk68mbp3xPPTodfvrN50zi
LOxs9jmEc8rPpT23+Tyu8/pdiF/MuaR6afeyyeUzV1yu3Lka8rn69lrqdZzr5Tfo3ei6KXxz9pb6
rYPbNrev3QnceXM3/R6ie2rv5fzcO3qf4r7dB8uHa4+CH733OPcJ1ZOOp6JPl58Znp373M/zNy+y
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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://jbcdn2.b0.upaiyun.com/2014/12/011ecee7d295c066ae68d4396215c3d0.jpeg

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYF
BgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAE9AlgDAREA
AhEBAxEB/8QAHgABAAAHAQEBAAAAAAAAAAAAAAECAwQFBgcICQr/xABWEAABAwQBAwIDBAcDCAQH
EQABAAIDBAUGEQcSITEIEyJBUQkUMmEVI0JxgZGhFiRSChcYM0NisfAl0dLVJlNjcqPF4RkoNURF
R1RVZGWCkpeipcHT/8QAHAEBAAEFAQEAAAAAAAAAAAAAAAECAwQFBwYI/8QAQREBAAIBAgMFAwgH
BwQDAAAAAAECAwQRBRIhBjFBUWETcZEVIjKBobHB0QcjQlJi4fAUFjM0U3KSJCU10oKy8f/aAAwD
AQACEQMRAD8A+/iAgICAgICAgICAgICAggXBvkoLE3m2yXmWxsqw6qhp2TywtBJZG5xa0uOtDqLX
aB7npdrwUF42RgAGx/NBN1t+v9UEPcZ43/VBHrb9f6oAcD4QC4BBD3G63tBHqCCBkYBsn+qB7jPr
/VBEvaEEBIwjYP8AVAMrAdE+fCCPW1BJKQe5I0PxbKC1ob1baqvqLRFVg1VIIzUQOBDmteCWO7gb
adEBw2NtcN7aQAvgdoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgIBOu5REyh1j5JtJHVSlOyBvz32FEzEJczwG8Xu3ceZVmVvs8t0vLswvbpaWYiCS
oEFxlpYWgOOhqlhhazuA8Naexk2m8C0yDlfI7rwxmmQY9fKaC42SF0dPM+1TQz0zxFGXNnp5S0sk
DnP6XNc5hb0kE6cFVMTHedzZMlz2443V4nh1Kwy1+S1EkEdfMzqZTshpH1D3uGx1OLYy0DY247PY
aVPNA53nPqsybH542WnF6J4paW+uujZ3yfHPbbtbqAtiIH4JPvr39RBLegDR7qRnce5p5Fv1zfZq
e1WZrqWw3KqqJ5ZZGNknpa2SmAb8mseGdRJO27+aDofHmVR5xhNozRlE6nF1tkFUIHO6vb62Bxb1
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
ZtZbQHMsNRVXm50tVSwlxIgMgonCRjST07HUG/CSQAvYcV0eh4hqJy0ma26b+Xc59wbV8b4Pp7Yb
1i8RPTrHc6+717eqp5HVwZxuSPmc0un/AHYsCeB4qxHNl+xu447rbRz+ziPrB69/VSB0jgzjcD6D
NroP/Vipjgmlt35J+BPHNV9KuLef9zmvKPInrU9VvM3HVmyGbj3GsMsWbUF2uFns9wuNRVXCWF5c
wSTS0jGFrT8bWgN0e5J6QtlpuHaDQUvb6UzXo1uTXcV4lqsUztWsW6x9Urz0M5rxx9nHiVdbeXMA
yWwWHPb/AFFbZsvuFqc6a6TRSObLLUU7HOkpGO62+xD0ucYmmR5Dnu1qO0Gutrs8TSd4iNtvJtez
PC/7Dgva0bbzM/a9u8Z8+cM8y0LbjxbybZb4x37FBXsdI38nM2HNP5EbC0D07b2yHq6djeu6Cpsf
VAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
BAQEBAQEBA2Pqglc/Q7KJEkrnBhIPf5dtqLVm3cpieWOr5efaYXrmb1OcvT4jZeUeWcRxvFa2Wmo
7Vi/Ed2nZU1DSWvqn1dNUxioa7X6vQ6Q35bJK91wKNDpMPPeKzM/vS5x2lx8S4lkjHjtatY/d/F5
p/0UeW/I9UHqEHjxxRkg/wDWC9J8q6Lbbkx/H+Tydez/ABSs7xky/BA+lDlo9/8ASf8AUJ/DifJP
+8FEcU0UfsY/j/JH93uJ83N7TLv7g+lDlr5+p/1Cf/pRkn/eCn5V0X7mP4/yVfIHFN9/aZfg6H6c
PQ/6gspzCorsK5o5UyO82tlM+2WrPLBfLFao5JahsQramSasf96hpg8zupGAOm6ACejqWq4rxbQx
i2pSsTPjE7/g23BuB8Vrn3te20T+0+mHqr9MX+kH6Y6riW6XBtbfqOhjns11mYGF1xij7SEfsiQ9
TXAfKTXyXOskxa82r0dX0+K1MEUvtL46ObfsWv0gc+qtt0oZnRSvjlfDPBI0kOaHNIcCHDR+mlSv
voF9lPlXrO5SuM+T5nyjcJ+PbYTDq907KiWuqA3p9mnleA5jI+xe/uNkNHcnpD3jEXb04k/mgqIC
AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
AgICCDvCDG5DkVoxW1Pvd8rfu9LC5jZZSxzg3qcGt2GgnRLh3+SDGRcqYFNTy1TMkYI4Y3Pke+KR
rR0zupyNlvd3vNMYaO7ndgDsIie5rmdc1UlokxerxythkprtmsNlujKymkjmp+unnk6DG8NfHL1R
xaa5uyHjQPU0qNptPRO8Vjq3THMhs2TUL7hY673o2yuilBa5j4pGnTmPY7TmOHbbXAEbHZJ54naU
RWnfDW8y5NqMU5Rs2JVUgFDcLNXVUjYqaSad0kLo9dDY9ucOlxJAaf4KPrTsurlzJx3Z6q10lZkx
cb3b5a2zyU1PNPHXQRx+690MkTXNkd7Z6wwEuLe4BAKnf1SrP5WwIUtJXf2oYaeuooquGpbHI6Jk
Ev8AqpZHgdMLXns0yFvUQQO4IUfWjZJLyzgdNVVVvqsg/XUTpm1MYpJSWGJ8ccnYM76fNENj/wAY
FXNbT3SjbzndeOzvFY723HZblIKmSo+7seKWX2jPou9r3en2/cABPR1dQ+ijuRyzPdGzw/6nfs/r
Pzp62KC7YVeoqHHclM02WVEcRaIaymJFRFTuIDZppG7PSwuMbmyucAAEVN1o6Ko9KeQRZl6M66ry
XD677zLkHFVQ2pEsYpixlTUW98zfgnZ1Bz6d2nPDutoIQem+Fua+Oee8KpuQOMshZX0E4LJWn4Zq
WUfihmj8xSNPYtPft8xooNvDgToIIoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgIBGwgwnIOJQ57gt5wqoqXwMu1snpDNGdOjL2FoeCPmN
7/gg5w/02Xup43vWI3HK2T1VyyaivtOGiSKGCeGopquWBpY4PbFJUwyO7Hbfe2O7UF3deCqusltO
TWG02+2XKiy+mvdwp5KyepNW2Gmnp2xmZ531lso07XS3WiD32G0cU8ez4PJkN1uFUH1mTZHLeKyG
PZjp3vhghETXHu4BkDNu7bcXdgNBBJmGH5NPyPaOQsc+5TG22uro30dU5zC90z4iHh43oN9s7BBJ
7Aa8oNTx3gzJ8QuXGNvtrqKtocBss1DPXVExZNUGWmZAXMZ0HpA6A7XV3B18u4ZXOeI75kBzKktN
xjZBm9pioaueVzvcoQIZKd72a/HuKTbW7HS8E9wSgsWenitpeVqTPrflszKSkq4Z3UUrS987DQNo
54XnwWP+70Uo7dnwuP7SC/peLsrh5Efl9JWQ26SS7mprKq31cvs3ClBLWQTUj9s90R6HvMLT1AO0
fCCy404Ldgk9spauz09eMdrKuost1qbpUOmIlEzWgxucWMl6JnMdINtI6ulrdgAM/wAJ4fkOC4a+
w5FQ0kM/6Uq6rdFOZGPE8zpiT8LdOBeQfO9b+egHMuZvS9mmKZ1P6jPSVcqay5g5u7/j056LZlMY
O+idg+GKfyGzAb35PzQbn6b/AFOYbz/bKygbR1VjyuxvEOUYjdx7dZbJh520/jjJ/DI3sRrweyDp
5kaBtx1+9BEEHwUBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBA0PogaH0QNICAgaH0QND6IGh9EDQ+iBofRBTnaXM6Q3e+2kHIPUR6UrZ
y1cqTk7jzIpcQ5EskX/QOW29g6i0d/u9SzxPA7Wi1wOgTr6ILDgL1UXDIst/zCeoPHYsS5Jo4uo2
4yH7peoxv+80Mh7SNIGyzu5uj9DoO3Me0bBI7edIKgIPhAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEEkjT8kGgeoH0
5cd+ozFY8bzailhqqKT37JfbdJ7VbaqgEETQSjuw7A2N6OhvuAQHL+OvUNyJwHmlHwL6x6qD3Kx/
sYjyUxnt0N7HyhqSe1PVa1sHTX+d/NB6NZK0NAB328/VBUadjekEUBAQEBAQEBAQEEHv6G9R+SCU
SgkAnyDoIJ0BBK6QNOvyQRa4OGwgigICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
AgICAgICAgICAgICAgICAgICAgg5u+6DX+SeMME5fw6twHknGaa7Wm4R9FTR1TCQfo5p8scD3Dho
g+Cg88UOXcn+gCthxbla43LK+IHTthtGYvYZq/GGkgMgrQ0blpxsNbKB8I0NeAg9FR8l4FJbaW7x
5nazSV0cD6OpNwjEcwmcGRFridHrcQ1v+InQ2eyCrHnWPzZrNgMVYDcqa3x1lRF2HtxyPLGb/Mlr
u3+7+5Bcf2psRuD7QLvTfe499dL94b1tIaHkFu9ghrmuP0DgfBCDH27lbjW7MjltvIVjqGSxGWJ8
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
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgg46
CiR5i9bt4pqvlLAbU2+/d3WV1XcXMp677vUMnqGGkilhdo9UjKUXWZjA1znOp2ho2tnw/lxYsmTb
w2afiVaZcuPHaPHffdzeo5Qpsfv7uXcownH4b1Zsbvv/AExdrWaOrttuiqWh0f3qBs0YhkqmyPHU
xjnxljw0lZ1aZfZ8lbd+3RZ59PGScnLvt4uq+kK83DNcpz31B8hGhtcdFPDjtJAyr/u1tjo4WS3D
T3BrQPv0szXOIH+oH4R2GBxCkYJrhid47/yX+G2tqptqJjae6Hkb7RD7R2q53rarhrhe+mmwqF7o
7jcI5OiS+uadEeQ5tMD4b5k7OdpugddaZ5tm1rExXq8ixVohkZNT1zWSMeHRyNmAIcPBaR4IOjv+
SKn2M9A2JenuX0/45ynwtx9a7bNfLZG661kLTNVOqm7ZOySeQukfqQP1t3gjXYoO7RtBB7fNBHpC
CKAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICCV0jW+SP4lBFrg4bCCEhLWFwG9DwiJnZ4m9TXIt9tfL2Q36osmTU5phVUltkjsj6yK
KWKOCOnldFT6qHQF7nTfAWskjmqWvd0gxv3uixROGNrNFrbUvl35J6ePg5pkfIfHFstdRY8TvtDU
2q1XOjtPsW6q6jS2mzUklZVNfA7TYPcbDNCREx7nR10RfMSfiycWHNgzc8z8WFl1UZaexiI6+T2n
6YeKpMO9NmNYDnVsZUVs9pFVkdPVwtc19dVOdU1bXN7gj3ZpG6O+wGyVoNZf2ueZ9XodFSceCIbS
OGeIt9P+anG9Dx/0JB/2FZmWRA7hjiHWxxVjn8LJAP69KhUzVgx+wYxQC045ZKSgpg8vFNRU7YmB
x7k9LQANoL9pBGwgigICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
AgICAgICAgICAgICAgICAgIIOd0jx/RBaz3q10tZHbqm4wR1EzeqGB8zQ+QfVrSdn+CAb7aBWstx
utN78jnNZB77etxa0OcA3ezoEE/QEFBi8gzS3WXILTYHRNmkudW6B3TOwOp/1T5A5zCdlp6NbA+Y
QZKjv9mrixlBdqWdz+vobDUNeXdB07Wj30ex+h7FBUgulurnSx0ldDKYHlk4jlDjG7Xh2j8J/IqJ
jca3bobHyDRVVZf8Rp+iKrqKOJ80sFQZoWO0JGvic7oa/W+kkOHhwBU0m+P6NlF6UmfotHpuHeAu
UsovtnruNad5tUdJTtrIqvcVVSzQtl9thjdv2XAGN8Z7PAIILSsmms1EV5ZnotX02K3Xbq61NVUl
sp31lwq44omD45ZXhrW9+5JJ0Bs/NY09bbr8RtXZLLfbPTOgjnudOx1Uf7s18zQZuxd8IJ+LsCe2
+w2hEbLilq6augZVUk7JY3tDo5I3BzXA+CCOxCJYu/ZG60Xq12mK3feXXGpMcjm1sMZp2CNzvc6H
uDpBsBumBzhvetAlBfOulvpZ4aCorYmTzh3swvkaHydPnpb5dr56HZBGW8W2GsZbpbhA2okZ1xwG
Voe5vjYbvZH5hBdA7CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICCnP2YSAg47n+O5tccmyitjxCYyQ3G3y4++3U0UhrKdkVMZJnzyHcUj
ZPejETHM+CMP04yEoMXV4Bd6fNMpy2LA6wzV3LNmuFLVR0bvcdRQ0tDHNMC076GuinadfiA3pwcN
hk8ewvL7bldOLxiFRV1kPIN1udRdT0dIt07aoU5bITt/SySOP2htzdeNAbC14h4pf+gsunqsUNtv
z81yG54xcq+gfG+m++e8yCeJzh8IMUjttHcdR6gCUGZ4zw3LbVf8VrZLbNQQWfDqigyhskYBuFef
untuGu85a6Kqf7vg+/2JLnBoYKwYPmdZxVmtismPVtFNcM8qLnT0E1MaY11tfWwTSQt6ukNM0DJY
tEt0ZPi1tBufFmO1dv5EzHImYtJbbdd6i3yW6SSJsTqkR0gY9xiGnREO+HTwD23pBkOULBeLtcsb
roqV1VbaC9+9eKCNnUZYzBKxj+jX6wMe5pLNHz1eWBBy/JeNculqsXNzxurqqCDl919pbfFQOkNq
tBo6mMMeW9XmokMvt72G1HT06a4AO3YljGP4hZ2WPGLTT0NG2WWVtNSxhkbXyyPlkIA7Dqe97jr5
uKDUOWqKorOQsIrqTHKyq/Rl7dUVVVT290jYIXwSRbLwO3xObsDvrvrQ2g1/O+P83uNTmkTLfLX3
G83ihnxK4xuEYttKyKlYYzKO8ftzR1Uxb29wVPSOr4ukKt3wjIZeW3X2itk8zJ8jo6irpbxb21FM
6OKCJhraSoY4PpXgNa32Xuc0ujeRFuQyODrrPwjsgigICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICCSVvX8O0FP2Bvq6u587QRMLRoA619P3
IIiAB3d29fUfP6oIGBoAIOt+ewQBC0HTe2vGkEDAzXYAA+RrsfzQTMiEb9g77/RBNI3bdFBJ7DQT
rt+WkE0TAxxO9k+SfmgPja529DfjekEvstI0TvY33+qAKdvVsneh8wgqt8IIoCAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg/9k=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://jbcdn2.b0.upaiyun.com/2014/12/529c339f07c9819955499822cf0cb048.png

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
0BD7aMRoLDRhmjqaRZontOhouWh1aT1oS2jH0V7VweqY6FTrXNbl/ugG607rAevR1lOi56xeNr1+
9U583ZVa+kr0nWPgMAQZZozgRoaPUY3RdWMh41jjDRMSE3sm3SbPTZVN85meMeM0CzNbNscztzXv
+pi/sFC1KLa4sORnGcdyx4raystq0hphbW7dbv3MRs2mzOaardjHNt32uB0OO5F2tuxS2/W1O8ce
nj0neyMOmMPC0e1466TPqdnp2cdZy7nW+cFFxaXC5Y6rwrXU9ZabHLditxvuctyL3W96yPEo8bj1
8ZTnWe5510vFq9rrkbemdz3vFz76fDp83vO18O3nB+nH4WfKL/HHr4/fVX90/UX6OxTgCaQHLoKk
g8qCHoJ1gttDQCF2QiZDSUMDn9DdMM6wtLBL4XLDa8JfRphHjEQSRfqN3I3ijsqKuhGtHt0WA/3E
uMQsxzLFJsVeiqMUpykuKK5z3OV4LPFS411LaCQ6k9BJPkl7PsmC5OLkpykWKdOpdFITqVfSNNJ6
0nHTg9NPZMhk1MuEZnpl7v1kiWRVZb2b7Zq9nSPIKc95m+uSu51HKE9lnvfyuufdm088X90C/FPw
WzheJK+os5ioOLr4SomekvFSRml26dMye2Vb5aLl9SrQFWGfiotK3crJKtaqQtXbas/qYzXKNf1q
aWuzal/Uca1zuK6ibt96dD71cuq9bng1TjZpNI03szeXt8Bbwluut5q3brRJtnW1U7fntL/z6fDb
cdFp3LnaJdHV1U3bna8H3BPWc6vXtvegj2qfyb58+jb1I//0yxkAg7DB7SHH0PFhneHlEcmRvqNs
o7VjJGPZ46DxqPGHCc/PxMWk1eShKe2p5WmZ6bEZvjMds0yzNXPI5uSbi56bOve9edHznn0WgcXd
JY+lK8v2ls+sWK4cXTVa3bums7a5rr6+sqG0MW9TzubsZ0t6a2pbcntiR3xnfFdsd2yP2J6xveJ7
x/dJ7Js8kDqYPiR7aO7nsLzDS0dUj6wf1Tq6c0zvsUPHzY6fPGF74uKk68mbp3xPPTodfvrN50zi
LOxs9jmEc8rPpT23+Tyu8/pdiF/MuaR6afeyyeUzV1yu3Lka8rn69lrqdZzr5Tfo3ei6KXxz9pb6
rYPbNrev3QnceXM3/R6ie2rv5fzcO3qf4r7dB8uHa4+CH733OPcJ1ZOOp6JPl58Znp373M/zNy+y
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
heTRdGayPh8AAAAASUVORK5CYII=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://jbcdn2.b0.upaiyun.com/2014/12/4e44f1ac85cd60e3caa56bfd4afb675e.jpeg

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYF
BgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAFuAlgDAREA
AhEBAxEB/8QAHgABAAEEAwEBAAAAAAAAAAAAAAcBBQYIAgQJAwr/xABtEAABAwMCBAIFCAMICQwN
CgcBAgMEAAUGBxEIEiExE0EJFCJRYRUWMkJxgZGhIzNSF1NiY3J3sbUKGCQ4Q4KStME0NlZklaKj
srPR0tMlJzU5REdUZ4SkwuHwGTdFRldzdoWU1CZVdHWTl/H/xAAbAQEAAgMBAQAAAAAAAAAAAAAA
AQIDBAYFB//EADoRAQACAgEDAwMDAwIDBwUBAAABAgMRBBIhMQUTQSIyUQZhcRQjgTNCFaHwJDRD
UpGxwTVy0eHxU//aAAwDAQACEQMRAD8A9/KBQKBQKBQKBQKBQKBQKBQKBQKBQKBQKBQKBQKBQUUe
Ub02I41p4qtFtCbtFxTNMikSciuMRUm14nYba9cLrNaCinxERY6VLDfMCnxV8rYIO6htUxSb+FZm
IRhdOM7iBvUOVcdM+DacYzLanEryvLY8d9SAnm3TGt7cxXNsP1alIVvsOhrLGC3zClskQwm4cYHG
9bceazTI7JoXisB6P4whZjlNyt8hpB7eKXW0+EoD6vKd9x9HtWWvFtfxtSeRWPKceEXiQncSOHXi
6ZBjNttF5xy/KtV1j2W+fKUJ8mMxJalRpHhtlxl1mQ2tO6QR1B323ODLinFbpllpfrjcJcrGuUCg
UHFStulBBuZ8e2j8C6zcX0ost+1GutuluRZ7OGQUuQoT6CUqafuEhbUNpaVJIUjxStJ7oq8Usp1x
M9mEZfxfcYyW4IxDhIs0Fu5y0x4sq7ZXJm+AognnkJhQy2y2AOqw8oVemKs/lW2Saz3liuUcd3Ff
pJ49z1Cs2hN5EaHJmLxmxaiSod2ktstKdW3GbfacDzgQhRAKU8x6bJ71lniRMdUbU/qImW4GG5Na
81xO2ZjZHSuFdrcxNhrP1mnW0uIP4KFasxqdM8T22uoGwqElAoHagsuoGoeD6V4dP1B1Iyu32OyW
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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://cms.csdnimg.cn/article/201408/11/53e87db637d1b.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcg
SlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwK
DAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgAlgCW
AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkq
NDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqi
o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/E
AB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVG
R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A
/VKiivzl/as/at/aF0L9shPg38G00q/uLzTormzsLy2gDu/kPNL+9mdVACxscEjpgckUAfo1RX5r
f8JV/wAFIv8AoTfD/wD3+0n/AOSapa38Q/8Agot4c0XUNW1Dwn4fgsLC3kuriXzNKbZGilnbAuCT
gAnABNAH6bUd6/PT4O/to/Ezxr/wT3+J3xe1O909/GeganNa2U0dkqwqiraEbo+jH98/6elcf/wT
x/b4+LX7SH7Qn/CI+NL/AEy40b+yLm82WmnpA/mIYwvzDt8x4oA/Tqlr4q+O/wC1H8Qvihrc3hf9
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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://cms.csdnimg.cn/article/201408/11/53e87dc4b2f5c.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4QAwRXhpZgAATU0AKgAAAAgAAQExAAIAAAAOAAAAGgAAAAB3
d3cubWVpdHUuY29tAP/bAEMAAwICAwICAwMDAwQDAwQFCAUFBAQFCgcHBggMCgwMCwoLCw0OEhAN
DhEOCwsQFhARExQVFRUMDxcYFhQYEhQVFP/bAEMBAwQEBQQFCQUFCRQNCw0UFBQUFBQUFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFP/AABEIAJYAlgMBEQACEQEDEQH/
xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMA
BBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVG
R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0
tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEB
AQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2Fx
EyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZ
WmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TF
xsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP1ToAKACgAoAKAC
gAoAKACgAoAKACgAoAKACgAoAKACgAoAKAPz8/bK/bK+N/wv/am0T4TfCbQ9D1651bSIby2s760a
SeWZmn3gP5yKAEhzz6HmgDmP+F8/8FCf+iOeH/8AwGj/APk2gCK6/aC/4KC2VtNcTfB/w+kMSGR2
+yocKBkn/j89KAOz/Z1/bl+IvxV/Yw+MPxU1m30NPE3hN7ldPjtbSRLZhHbRyr5iGQlvmc9GHGKA
OA/YV/4KPfFb9o/9ovRvA/iq08OQ6Ld2l3PI2m2MsU26OFnXDNKwAyBnigDvfAf/AAUmg0H9qX4t
+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
CgAoAKAP/9k=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://articles.csdn.net/uploads/allimg/121116/28_121116100507_1.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCAGuAa4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1yiii
gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooqnqm
qWmjafLf6hN5NrDjfJtLYyQBwAT1IoAuUVyP/C0fCX/QW/8AJab/AOIo/wCFo+Ev+gt/5LTf/EUA
ddRXI/8AC0fCX/QW/wDJab/4ij/haPhL/oLf+S03/wARQB11Fcj/AMLR8Jf9Bb/yWm/+Io/4Wj4S
/wCgt/5LTf8AxFAHXUVyP/C0fCX/AEFv/Jab/wCIo/4Wj4S/6C3/AJLTf/EUAddRWPofijSfEnn/
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
zw7o3g+wsNQ1HybmHzN6eRI2MyMRyFI6EV4vRQB9Q6H4o0nxJ5/9kXf2n7Pt8z906bd2cfeA/ums
j4o/8k/1X/tj/wCjUrkfgZ/zHf8At3/9qV13xR/5J/qv/bH/ANGpQB860UUUAfRXwu/5J/pX/bb/
ANGvWvrnijSPDfkf2vd/ZvtG7y/3Tvu24z90H+8KyPhd/wAk/wBK/wC23/o165H45/8AMC/7eP8A
2nQBc8eePPDus+D7+w0/UfOuZvL2R+RIucSKTyVA6A14vRRQB9F/8LR8Jf8AQW/8lpv/AIiui0vV
LTWdPiv9Pm861mzsk2lc4JB4IB6g18pV9FfC7/kn+lf9tv8A0a9AHX0UUUAFcj/wtHwl/wBBb/yW
m/8AiK66vkagDo/HmqWms+ML++0+XzrWby9km0rnEag8EA9Qa5yiigC5pel3es6hFYafF511NnYm
4LnAJPJIHQGui/4Vf4t/6BP/AJMw/wDxdHwv/wCSg6V/22/9FPX0XQByP/C0fCX/AEFv/Jab/wCI
rxfx5qlprPjC/vtPl861m8vZJtK5xGoPBAPUGucooA9c+Bn/ADHf+3f/ANqV6jqmqWmjafLf6hN5
NrDjfJtLYyQBwAT1Iry74Gf8x3/t3/8Aaldd8Uf+Sf6r/wBsf/RqUAL/AMLR8Jf9Bb/yWm/+Ir50
oooA9o8B+PPDujeD7Cw1DUfJuYfM3p5EjYzIxHIUjoRXR/8AC0fCX/QW/wDJab/4ivnSigD2jx54
88O6z4Pv7DT9R865m8vZH5Ei5xIpPJUDoDXi9FFAH1zRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABR
RRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFF
FABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUU
AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQA
UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/Z

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://news.csdn.net/images/icon_ipad.png

iVBORw0KGgoAAAANSUhEUgAAAB0AAAAlCAYAAAC+uuLPAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEz
NDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6RDcxNTQwREJFNDRCMTFFMTkxQTZGQUU0QkRBQjE5NzMiIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6RDcxNTQwRENFNDRCMTFFMTkxQTZGQUU0QkRBQjE5NzMiPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpENzE1NDBEOUU0NEIxMUUxOTFB
NkZBRTRCREFCMTk3MyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpENzE1NDBEQUU0NEIxMUUx
OTFBNkZBRTRCREFCMTk3MyIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/PjqWTlQAAANISURBVHja7FdNSxtRFH0zkxkTk1TbYgQh
aoxoQyVtpaAIpdRQcFlXLty4y0IQgn/ArrsIlHbVXSjd+AvcNJsioWBxU01jNChNTCKpaUzMhzHT
c4cZSUdDIRG6mQs3bzLvcc+7572Bc7i1tTXWHFtbW6LH43nO87yn0WhwrLPIX1xcfAkGgwk8y9pL
k/YAcD4QCLy02+0fwuGws1gsssvLy7bROI5jkiQxh8PBVldXQ0dHR4H19fVTBVztVFhZWVmYnZ2V
e3t7ZXQpqzvrOLu6umS32y37/f7tqampOwTG08/AwIAtk8m8BbUsn88z0MpuK6rVKjs8PGSbm5uP
pqenl4ldE9G6uLj4Ym9vz3F2dqbQIoqikui4bTBZlpXjqdVqrF6vs3Q6zQqFwitMvaMzRX1x9Pz8
XOnQbDYzp9NZHhwc/IXzbRuUgLLZrLi/v+/I5XKsUqkwNOXAlIVABezIrFHa3d3NRkZGvm9sbASJ
nQ6Y5b1er6e/v/81gVJ9bIRX6KWLBioolZVEa19fXwWP23TlOwA19fT0WKhD/cW+Av1rizxfx3CC
8z75V2X9d94UktVqLdwAynj2H8IANUANUAPUADVADVADtANQeA9G6u22olQqXVdsTWJMGUn/xmKx
p3Nzc+Hd3d1rZkYQBGaxWJQkWbm0tKRoWk1NNuleLplM2uEcruprGAQqQwRnqAipe9UG2FKp1MOb
FD4J8LGxsQOI8R+0Nh6PP0skEjZiqJXCV6QhzBQ0dZGmCLQeiUS+zczMlKLRqJXcGi3UFt8ECj27
EwqF3tOmfT6fF53aiKGWZ4jNk3vD+JXwqJV6lvS/KH6amJhg0KpKx61CdQJlZAx5gG4aemqbg8Q7
DBqbnJw8gWv4iFcVqk5JFu7B/Pz8MmhaAL2S1rG+INmOoaGh0+Hh4RTo5WC8Ro+PjyXyLvruaC11
6HK5onBtb+BrPmMqyZFCRwr4cw/phnl6Mj4+/hgexAVAu942olgDnrMKo1XFHF8ul83YqKh3CSY4
FtzcnzDDO7CgEbyKEyCxxGm2QAUmm3YfeRdppfNXmdAH3WptN0KL753m6aB/I3OqLyJDJusLcmoR
SU2hg0+UzoWudE0dryj7I8AATjCdR+QFq2wAAAAASUVORK5CYII=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20150821/u=2293639569,2369491550&fm=58%20(1).jpg

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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20151019/0672f128ee77524c98e336a74d32aeb5.jpg

/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wgARCAGcAp0DASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAQFAQIGAwf/xAAZAQEAAwEBAAAAAAAAAAAAAAAA
AQIDBAX/2gAMAwEAAhADEAAAAe/jyIqDZLVsNWw1bDVsNWw1bDVsNWw1bDVsNWw1bDVsNWw1bDVs
NWw1bDVsNWw1bDVsNWw1bDVsNWw1bDVsNWw1bDVsNWw1bDVsNWw1bDVsNWw1baEsRKLKioyLQAgz
qSNMyeNtcum6zUdPfHcXwAKW6tUK2AAAAAQptFel6KXACQQCRV2kWBUA8/CYliJAGTAAAAAAAkEA
AAAHl6+MuF7vgu86OafFlReXq2FoMZg12HlvthOM5ICRjMOY6LnL3XPm5eafk9KdKq7NPn5eMk2i
+nmdjyvV8dfC+p/SVW8f3sIG/LemKxxtxFqsu7sN+RxNL2bzl1NLWJ6c5NPW/qLyJyL4gRK2yrdc
rzkev+a83fc5kQabWfvVx5rntqW5vhyczm7DPptLPlZE066sl1mmEWTTW1NpVhWxbZWMOt8669PV
xoR08+h6C/PSZp1OjpotDvNbrwpPGunRW3PdDrzcH3nB951cM+LKi8vVty/Uc5GvpUWFRl1W8Kct
TeBOhRObqlv5pDiSYhPobr3K7p+Z6fq4GGc9DAyxmDGRjOBlgZoryi0zvhnpy9tY5jWn9LPKObup
OUeNXdYIssmoIGCLW2VbrleMstcMjGNhhkeW25OGSGMjDICWBAYM51SywGdcG7zwevi0Rw3ecH3n
Rzz4sqLy9W0OZ42rVp7TOvWIrM2eSqxbCpWxNQuMw5K0j9HpSixfqXoMdDk510WYc3jpcS5rPSZO
bz0Y5yv7Pmb02WvtnejX3kU+LTcqVtrCqWkNMbNxtVT5uMlNi89r15eP01bpTwdHXU0rFmKtaCsz
ZIVyxFdiyFbizSrFmhWLMVizFYs0q3NiK/M9EwMziIO0wmHI95EOD7zg+82xnxZUXl6thaAgAAAA
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
1B4DAt7L7hEECan3cSZMEOICkKPQInnqITNoTgYvKQY06Uns08xoWXq+H+/8R+Wms5f+BqGUBC4r
cTuXaA5ZFj1gQIf8yEoSOgIgJecvtJljv/MKsy80URh1hN8b/qNweg/sbdEmxbBdt5TzMTgoR/lg
aWIkzCsebBfU5gJAav2NjormboZuhm6GboZuhm6GboZuhm6GboZuhm7GAr4aqHCwKZJm7GboZuhm
6GboZuhm6GboZuhm6GboZuhm6GboZuhm7GEAICmzB25lU3QzdDN0M3QzdDN0M3QzdDN0M3QzdDN0
M3QzdDN0M3QzdDN0M3QzdDN0M3QzdDN0M3QzdDN0M3QzdDN0M3QwihglBP8ALl7P5MePwOPlHy4g
IUyzETb2MCZrWA9oDKjadEcccccccccccfEcccccccccccccccfEcccccccccccccccccccccccc
cccccccccrh//9oADAMBAAIAAwAAABCvDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDXSv8A
/s7t/wD9/wD777773773/wB0/wD+/vuvvvvv/vPvvv8A6yukEtORMEs25SQkDXQfhRkscMNWXK6Q
0KRnEGot10RyikOJjEZF/og0pK84sOnhmcAMdWPNHPCdPME+eyimxOikeO+M834bxjrQgAw6ZUe7
Ak+eCDB6ddzLLKBGSGS0ikEMMMMMMsMMMMMNfSaLoB+ilWR00GXPhVVkbW33/wBopBDDDDDDDDDD
DDDGssMc2/T2d/47Bptu1SayV3p88opBDDDDDGlDDDDDDMmHTiXuUZQ982FgAUDVV7Vcp88opBDD
DDDSfDDDDDDY9f4fptjsz/BtzWBXDVVrV8p88opJHLDDCQjJCEMAAwmbcROADo//AIP57aS4l1Kl
fKfPKLz5DSi2Vb8B0484xD10Ew4cINv7PQeAJiK4qVfKfPKL4IhsjCwrlfnowz85IYAwwww1fTPQ
aAFAxW4FfKfPKO1oPvP4DsoW/NmwrAs4gwwww1f/AD0GgBQNWSR3ynzyikCAAdBlMIEMdNNKIMEE
MAAAVX9z0GgBQNVQw/GHzyikUssgyk1v33QANdQWIPcwxsj/APc8MiBTCdWrVzE+8orMikKe73jB
EZxxxlgADRxxCCV1dDbyySpEKGyWiMdo/muimrqfjbuKDDDhDDDDDDDDVf7vKJAFJRww2DJDUo5z
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
pLk4BIwuhkGHfXA3ITGxQ2WA1JMkSJCGVFkRAlxzfkUZJtJjbu5GkOJ0wDRIkP2PreHf4fcXU8pH
A8E2gQQl15UWQzcGohEowSwj/gSRdslRFbljV6jVjh0Bv3dfsfD7i/4FmimBPbVx64ymopogNss2
47pudhRleNhJXUx1gAAaZb4QAAAL6Fv+AAAAAAAAICwh/8QAKhABAAIBAgQGAgMBAQAAAAAAAQAR
ITFRQWFx8BCBkaGxwTDRIEDx4VD/2gAIAQEAAT8Qg2aUBqddQndP1O6fqd0/U7p+p3T9Tun6ndP1
O6fqd0/U7p+p3T9Tun6ndP1O6fqd0/U7p+p3T9Tun6ndP1O6fqd0/U7p+p3T9Tun6ndP1O6fqd0/
U7p+p3T9Tun6ndP1O6fqd0/U7p+p3T9Tun6ndP1O6fqd0/U7p+p3T9Tun6ndP1O6fqd0/U7p+p3T
9Tun6ndP1O6fqd0/U7p+p3T9Tun6ndP1O6fqd0/U7p+p3T9Tun6ndP1O6fqd0/U7p+p3T9Tun6nd
P1O6fqd0/U7p+p3T9Tun6ndP1O6fqd0/U7p+p3T9Tun6ndP1KtQN39P8ElC6/glt31lt31lt31lt
31lt31lt31lt31nMfWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3
fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3
fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3
fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWW3fWJ1
X/gzQ6ePvPwfyXSt2sgZrksNrt3qQBOSZKhNQtsjTBoXfN4ENt9IexbU1gGFo9FtQUucf1C4tV4W
LK89f/Swp71OSjd+4zhMlbXL4e4fB4VKlSopIwNQrbMduTxhXZSDoLKDhdUwoKiOGbTZDaOWilhT
yhguGjDjl4VKhrAYAAmFNeON/DhfCV67SyrpXWdBXYleHvxnC+G/8DOk4Xw3hvlfV8b/AI2Hhwi3
GmZ+bVPKVKlSokIwakNoUpukc1eK8LN+F+XhxqdMynZmumfCmrrSVONVHDXiF6fx9pWvLw4148an
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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20151019/u=2803612258,3534322391&fm=21&gp=0.jpg

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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20150810/e96db3c823bbc624f3fb55731963c33f.jpg

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
JrxzEdY/xFQ/HFBwFXPXIKLTy1aPGWZhr6XLmojhIud1Q6mvcUkeZjqUbDxA1nsJ4H8ho4lAdNdr
+2rR4yzMNx6brJ4fEg4prY8TDc9HjgVB9C7FQZQuPZCk/wAiGlyaNfTZVSDNQfRuHZbNE76XqPrp
P63DvivVo8ZZmG59Ok7HftHUpnxXPQ1aPGWZhutCk4cjvqNf6z7sdSjxlmYbuHFii0xG8o+6P/Wf
fjqUeMszDePf23lGUPkT5OpR4yzMN41u8j0Ko3fM846tHjLNw3bR31YM2itpgKrBCqeNVw/DXfE6
1nfVo8ZZuG7c/t+YMGkVtntq1Kp7vtXhVtWz+HUZxE5FF+rR4yzcN2AoM2its9t6HjkgRwM36Y58
dZmMs3Dd7R7SHpO7TUfpRPE6zMZZuE38qBtDjMRPBaR7a7MZZuE5pN4hfPMS0TwX/HkNwzGWbhO6
TaioGp3SUi5RPDpuWYyzcJ+FL5KIMZEkLSdumYyzcPYIsMFCkEPlRBjIOb87pmMs3D2KLTBVgOVc
QqnjWrcAuMcFss+1tir4UWn8td1q3TMZZuHs1RIV477V4VbKrcfvVi0wKhSDuogo/Fe6ZjLNw9xi
wwWi8QUNyzGWbh74zGWbh74zGWo3fMPfG/AjLPhxG0FH3ukpP9RLvoTyrbh71VaNQTGdBLimZbo8
woj3n1jYZZ+TM+o0fouyUR7v6NHw/c5BjeAmS1wiCojaoSotPukSvSoRVzK0W9z1m4ERC9T/ABvF
aNK2BVRj7js7RWlSbFGtFjYCe/Ub3UaCk+1tUbj2itpisZqxmrGasZqxmrGasZqxmrGasZqxmrGa
sZqxmrGasZqxmrGasZqxmrGasZqxmrGasZqxmrGasZqxmrGasZqxmrGasZqxmrGasZqxmrGasZqx
mrGasZqpi2KM9go0r9EfajDSd1d7HWAVdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8V
dM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8V
dM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VdM8VUwDt/wCKX//EACwQAAECAwUI
AwEBAQAAAAAAAAEAESExUSBAQWHwEDBQcZGh0fGBscHhYJD/2gAIAQEAAT8h/wCT5ICJN8sqSBzN
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
DpTyJ8ghf7wb8yAk4BAj5UWXKE9VJYrA6hOGC/RMQytGVoytGVoytGVoytGVoytGVoytGVoytGVo
ytGVoytGVoytGVoytGVoytGVoytGVoytGVoytGVoytGVoytGVoytGVoytGVoytGVoytGVISwPkqH
rJgBUiXJhBtnJuBd4wL0BehL0BegL0JegL0BegL0JegL0JegL0BegL0BegL0BehL0BegL0BegL0B
egL0BegL0BegL0BegL0BegL0BegL0BegL0BegL0BegL0BegL0BdupG/4o//aAAwDAQACAAMAAAAQ
sw88088888888888888888080w8w844088c0888088888888888c8888888888ccsc88888cc8c8
8sc8c888888888888888888888888888888888888888888c4888884wwwwwwwwwwwwwwwwwwwww
www0s88888888888884de999999999999999999999td4X88888cs88s884azzzzzzzzzzzzzzzz
Tzzzzzzzzzy28888888s88ccSzzzzzzzzzzzzzzzzzzzzzzzzzzzjZ8888s8s888Bwwwwwwwwwww
wwwwwwwwwwwwwwwwwwB8880c88888Swwwwwyyw46951wyyyyyyyyyyyyyyyM888M888888cwwwww
9m/F0vC2Qf6wwwwwwwwwwwwzD8880888888zwwww3vjXUX865jkfcwwwwwwwwwwwwj8c8M888848
rzzznc0AUUL7MfwNKBNRzzzzzTTTzihYckUs88888ONNZdscfYbDznbIL+9qzNNNNNNNNNNj40c0
s88888xw08BITrON8JTlOOfVCO80w04004w0as840s88888mPeEBgPUT26BHY+539IVjPPPPPPPP
PMsc8cc88888jDVLxwI7rwjyifwFcQ9s8kFDDDDDDDHss88888888dPTe+pYsc18zwPf2ftWiAV7
t90f/vvxo808088888OcYAmu4v8A3IzJyG642y0Au3BWl3PCOoGNLOPPPPPPP96QBKL052oJ+K+a
F6zD82Cb/iweEIzbPPLPPPPPPLlMgFH0rGBp9PqnAd9iiNFI/UMKCjDKHNHNHPPPHPDjhmkNMzyk
320pmiB2cZol/wA2sehSEIrzzzTzzzzzxf8A/wDyqUx27Zph9li2IP0nBG5WWYE3PdfPPNPPPPPP
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
mfRmjLaXwhItEjj/APfzyOAni3/+N//Z

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20150810/360117dac230a435a2fa89c2d478f883.jpg

/9j/4QBMRXhpZgAASUkqAAgAAAACAJucAQAGAAAAJgAAAJycAQAYAAAALAAAAAAAAABil9WLAADd
fvlbBnTzYDt15V2CU0hyQ2dAYglnAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQY
GBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/xAGiAAABBQEB
AQEBAQAAAAAAAAAAAQIDBAUGBwgJCgsQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpj
ZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfI
ycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+gEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcI
CQoLEQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SF
hoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo
6ery8/T19vf4+fr/wAARCAFKAiYDAREAAhEBAxEB/9oADAMBAAIRAxEAPwD6ooAKACgAoAKACgAo
AKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgA
oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACg
AoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAC
gAoAKACgAoAKACgAoAKACgANACZoAWgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA
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
oAKACgAoAP/Z

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20140731/ronglian1.jpg

/9j/4AAQSkZJRgABAgEASABIAAD/4RMjRXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUA
AAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAcAAAAcgEyAAIAAAAUAAAAjodp
AAQAAAABAAAApAAAANAACvyAAAAnEAAK/IAAACcQQWRvYmUgUGhvdG9zaG9wIENTMyBXaW5kb3dz
ADIwMTQ6MDc6MzEgMTA6MzU6NTAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAlqADAAQAAAAB
AAAAZAAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEeARsABQAAAAEAAAEmASgAAwAAAAEA
AgAAAgEABAAAAAEAAAEuAgIABAAAAAEAABHtAAAAAAAAAEgAAAABAAAASAAAAAH/2P/gABBKRklG
AAECAABIAEgAAP/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBEL
CgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsN
Dg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwM/8AAEQgAZACWAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYH
CAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQh
EjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXi
ZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIE
BAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKy
gwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dX
Z3eHl6e3x//aAAwDAQACEQMRAD8A7wJ0ydRrlwnTBOkpHfkUY1Trr3iupn0nO4WXkdUyrqvVqLen
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
PbMxafslmPB9MgSZO6dzTu3/AEtySMxzfTsdI27Qd06RI7pK5xHv4tH24fujbg2/Q/cf/9Xu06+b
klGvfpJOF82JJIfpRJfNaSSn6VSXzUkkl9967Pr0bv5uD98iVl6LxZJXMXyBwee/3RPzH/Ri+u/W
Lb+wB4fbK5n+qVk+31TETt7eELzhJUPiX+T/AOq/lB6n/iz/ADGTzw/9PK+x/Uuf2oY49J+6P6zF
S/xkT+1cWP8AuP3/AK715SkpPhO485MX/GD5z/dg+mdK9D7Hh7tkfpfXnZ57PV9T9J/U2rHwvV9d
/obvUh/0Odn+E/6C4tJaHMfzOb5vlPy/N/L97+o4Xw//AHXj+X5x8/y7y/537r3+ke36Pb4I/Tv2
Fst/a/rzI9L0I4j3715yksCHTbc/N8r1eTr82w+T5n6Gr/Z//Nqz+c+w/ZhP+k9OG/8AT2pL55SU
nT/JfzH7f/SLQ/xv5z+X+G//2f/tGExQaG90b3Nob3AgMy4wADhCSU0EJQAAAAAAEAAAAAAAAAAA
AAAAAAAAAAA4QklNBC8AAAAAAEqOAQEASAAAAEgAAAAAAAAAAAAAANACAABAAgAAAAAAAAAAAAAY
AwAAZAIAAAABwAMAALAEAAABAA8nAQBsbHVuAAAAAAAAAAAAADhCSU0D7QAAAAAAEABIAAAAAQAC
AEgAAAABAAI4QklNBCYAAAAAAA4AAAAAAAAAAAAAP4AAADhCSU0EDQAAAAAABAAAAHg4QklNBBkA
AAAAAAQAAAAeOEJJTQPzAAAAAAAJAAAAAAAAAAABADhCSU0ECgAAAAAAAQAAOEJJTScQAAAAAAAK
AAEAAAAAAAAAAjhCSU0D9QAAAAAASAAvZmYAAQBsZmYABgAAAAAAAQAvZmYAAQChmZoABgAAAAAA
AQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAAQAtAAAABgAAAAAAAThCSU0D+AAAAAAAcAAA////////
/////////////////////wPoAAAAAP////////////////////////////8D6AAAAAD/////////
////////////////////A+gAAAAA/////////////////////////////wPoAAA4QklNBAAAAAAA
AAIAAThCSU0EAgAAAAAABAAAAAA4QklNBDAAAAAAAAIBAThCSU0ELQAAAAAABgABAAAAAzhCSU0E
CAAAAAAAEAAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAAM/AAAABgAA
AAAAAAAAAAAAZAAAAJYAAAAFZypoB5iYAC0AMgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAA
AAAAAAAAlgAAAGQAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAA
AG51bGwAAAACAAAABmJvdW5kc09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAA
AAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAAGQAAAAAUmdodGxvbmcAAACWAAAABnNsaWNl
c1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZQAAABIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dy
b3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAADEVTbGljZU9yaWdpbgAAAA1hdXRvR2VuZXJh
dGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAAAAASW1nIAAAAAZib3VuZHNPYmpjAAAAAQAA
AAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcA
AABkAAAAAFJnaHRsb25nAAAAlgAAAAN1cmxURVhUAAAAAQAAAAAAAG51bGxURVhUAAAAAQAAAAAA
AE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAAAAAOY2VsbFRleHRJc0hUTUxib29s
AQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZW51bQAAAA9FU2xpY2VIb3J6QWxp
Z24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZVZlcnRBbGlnbgAAAAdkZWZh
dWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lAAAACXRv
cE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb25n
AAAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAE/8AAAAAAAADhCSU0E
FAAAAAAABAAAAAM4QklNBAwAAAAAEgkAAAABAAAAlgAAAGQAAAHEAACwkAAAEe0AGAAB/9j/4AAQ
SkZJRgABAgAASABIAAD/7QAMQWRvYmVfQ00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJ
CQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwB
DQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDP/AABEIAGQAlgMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAEC
BAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQAC
EQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2
F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQAC
AgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPEl
BhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2
JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/AO8CdMnUa5cJ0wTpKR35FGNU6694rqZ9JzuFl5HVMq6r
1ai3p2F/3MyB73f+F8c/9/RuvAHFxwdR9qp0/tKGBj05XUc/KyW+vdRkGqnf7msaBwyv6LUR3a+W
U5ZPbia28P3pay/wf0P/AAxajq2Rj1izL25eGfo5+NqB/wCGKR7q1rVW1XVttqcH1vEte3UELLux
qcPrWE/Fb6P2s2tyGN0Y+G7ml1f0dybpDns+rodUdr2ttLSBMHe+PaiUY5zjIwkeLhEvH5OCXzf9
V/TdhOFzlGZ1E2UuNtobkPH0myI7abBs/RoePm5jntYMi0+pb6Wga7SN/tc7b7/alSvvcdPSdfJ6
dOqmfba3GscGOb6ZEndsJ/4sw76TvZtVQ35GPVe55cH0tY+xptD3NBIPDmtb/IekyyyiJog7W66S
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
CP079hbLf2v68yPS9COI9+9ecpLAh023PzfK9Xk6/NsPk+Z+hq/2f/zas/nPsP2YT/pPThv/AE9q
S+eUlJ0/yX8x+3/0i0P8b+c/l/hv/9kAOEJJTQQhAAAAAABVAAAAAQEAAAAPAEEAZABvAGIAZQAg
AFAAaABvAHQAbwBzAGgAbwBwAAAAEwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAgAEMA
UwAzAAAAAQA4QklNBAYAAAAAAAcAAQEBAAEBAP/hD85odHRwOi8vbnMuYWRvYmUuY29tL3hhcC8x
LjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+
IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBD
b3JlIDQuMS1jMDM2IDQ2LjI3NjcyMCwgTW9uIEZlYiAxOSAyMDA3IDIyOjQwOjA4ICAgICAgICAi
PiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5
bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczpkYz0iaHR0cDov
L3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnhhcD0iaHR0cDovL25zLmFkb2JlLmNv
bS94YXAvMS4wLyIgeG1sbnM6eGFwTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8i
IHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VS
ZWYjIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8i
IHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIiB4bWxuczpleGlmPSJo
dHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiB4YXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzMgV2luZG93cyIgeGFwOkNyZWF0ZURhdGU9
IjIwMTQtMDctMzFUMTA6MzU6NTArMDg6MDAiIHhhcDpNb2RpZnlEYXRlPSIyMDE0LTA3LTMxVDEw
OjM1OjUwKzA4OjAwIiB4YXA6TWV0YWRhdGFEYXRlPSIyMDE0LTA3LTMxVDEwOjM1OjUwKzA4OjAw
IiB4YXBNTTpEb2N1bWVudElEPSJ1dWlkOjAyNkM0RkFENUExOEU0MTFCQjI1QUNDOTJDOTVGQTM0
IiB4YXBNTTpJbnN0YW5jZUlEPSJ1dWlkOjc4QjY3NDYyNUIxOEU0MTFCQjI1QUNDOTJDOTVGQTM0
IiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2
MTk2Ni0yLjEiIHBob3Rvc2hvcDpIaXN0b3J5PSIiIHRpZmY6T3JpZW50YXRpb249IjEiIHRpZmY6
WFJlc29sdXRpb249IjcyMDAwMC8xMDAwMCIgdGlmZjpZUmVzb2x1dGlvbj0iNzIwMDAwLzEwMDAw
IiB0aWZmOlJlc29sdXRpb25Vbml0PSIyIiB0aWZmOk5hdGl2ZURpZ2VzdD0iMjU2LDI1NywyNTgs
MjU5LDI2MiwyNzQsMjc3LDI4NCw1MzAsNTMxLDI4MiwyODMsMjk2LDMwMSwzMTgsMzE5LDUyOSw1
MzIsMzA2LDI3MCwyNzEsMjcyLDMwNSwzMTUsMzM0MzI7NjZFREFGMDc2NURFMEIyNDUwQjY2ODcz
RTZCMUM3QUQiIGV4aWY6UGl4ZWxYRGltZW5zaW9uPSIxNTAiIGV4aWY6UGl4ZWxZRGltZW5zaW9u
PSIxMDAiIGV4aWY6Q29sb3JTcGFjZT0iMSIgZXhpZjpOYXRpdmVEaWdlc3Q9IjM2ODY0LDQwOTYw
LDQwOTYxLDM3MTIxLDM3MTIyLDQwOTYyLDQwOTYzLDM3NTEwLDQwOTY0LDM2ODY3LDM2ODY4LDMz
NDM0LDMzNDM3LDM0ODUwLDM0ODUyLDM0ODU1LDM0ODU2LDM3Mzc3LDM3Mzc4LDM3Mzc5LDM3Mzgw
LDM3MzgxLDM3MzgyLDM3MzgzLDM3Mzg0LDM3Mzg1LDM3Mzg2LDM3Mzk2LDQxNDgzLDQxNDg0LDQx
NDg2LDQxNDg3LDQxNDg4LDQxNDkyLDQxNDkzLDQxNDk1LDQxNzI4LDQxNzI5LDQxNzMwLDQxOTg1
LDQxOTg2LDQxOTg3LDQxOTg4LDQxOTg5LDQxOTkwLDQxOTkxLDQxOTkyLDQxOTkzLDQxOTk0LDQx
OTk1LDQxOTk2LDQyMDE2LDAsMiw0LDUsNiw3LDgsOSwxMCwxMSwxMiwxMywxNCwxNSwxNiwxNywx
OCwyMCwyMiwyMywyNCwyNSwyNiwyNywyOCwzMDsxRDMxMUQzRkE1OUIwQjA4MTY3NDk4QzM2OUY3
QzVCOCI+IDx4YXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ1dWlkOkZCNkI0RkFE
NUExOEU0MTFCQjI1QUNDOTJDOTVGQTM0IiBzdFJlZjpkb2N1bWVudElEPSJ1dWlkOkZCNkI0RkFE
NUExOEU0MTFCQjI1QUNDOTJDOTVGQTM0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+
IDwveDp4bXBtZXRhPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIDw/eHBhY2tldCBlbmQ9InciPz7/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQ
AABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAA
AQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRy
WFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAA
AIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAE
MAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdo
dCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2
MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAA
AAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVog
AAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAA
AAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91
ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91
ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNl
IFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBW
aWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/n
bWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAA
AAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACB
AIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMB
GQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHh
AekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC
9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRI
BFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF
9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gfl
B/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicK
PQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZ
DPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P
7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxND
E2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoX
HRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7
G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f
6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTa
JQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUq
aCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1
MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2
rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1h
PaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpE
zkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxy
TLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U
21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114
XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm
6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CG
cOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7
BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wr
hg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaR
P5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3
nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTep
qaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5
tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TE
UcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/
0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3h
ROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY
8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////
7gAhQWRvYmUAZIAAAAABAwAQAwIDBgAAAAAAAAAAAAAAAP/bAIQADAgICAkIDAkJDBELCgsRFQ8M
DA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4Q
FA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8IA
EQgAZACWAwEiAAIRAQMRAf/EANcAAAEFAQEBAAAAAAAAAAAAAAABAgMEBQYHCAEBAQADAQEAAAAA
AAAAAAAAAAECAwQFBhAAAgIBAQgBAQkBAAAAAAAAAwQBAgUAECAREhMUFQYyMTBAIUEiMzQWByMR
AAIBAgQDAwoCBwcFAAAAAAECAxESACITBCExMkJSBRBBcbFiciMzQxQggjBRYZKislORwmOTVHQV
gaHSczQSAAIAAwQFBwkJAQAAAAAAAAECABESITEyAyBhcUJSEEFRImJyE/CBkYKSstIzg0BQobHB
okNTk7P/2gAMAwEBAhEDEQAAAO8VF15KqKR5czLzprZaWbC85GdOtSo265zFu69xUJ0KAOASk5HY
5CjEhz9mK68/RkYrVmRUjkCN7W1bIVZSkMsSAWUwbjlnSYV+yTB7LDL2foMFtZ9g5vXxNqyvkXcw
6aKRC3v8r1avAKatZjXtyWptmHoFsxStl2fCaq41g1Fx71XkcCKA4BKcchjliu1FTFsaD6x71lxl
yaNGB8sGelr9JmO5+Re5nR39hUwdW8muQm/RGqLjsVUVFAFAF5zZ5WcvSUYI5hr6vPYk6+9PGNfu
5+yt+c7vler2xMdnDVX5uMdn0kvzYJ9KHzWH0qfNQvvuX4sdng+u5PnBwfU+x0vKTZq9Mx+LPQ8L
v5/OTwPq/oY+eTZwf//aAAgBAgABBQDZGp1w2cN6J2cdnH7D8/uPHZa0VitZtXRyXrIWREtwndun
3FTWhJfH2KzS6c1qGaQXmndF8MlrE/Vj9mmvy//aAAgBAwABBQDYW17EHe9bd3XVixWas1tvXFxt
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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20140731/tengx.jpg

/9j/4AAQSkZJRgABAgEASABIAAD/4REgRXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUA
AAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAcAAAAcgEyAAIAAAAUAAAAjodp
AAQAAAABAAAApAAAANAACvyAAAAnEAAK/IAAACcQQWRvYmUgUGhvdG9zaG9wIENTMyBXaW5kb3dz
ADIwMTQ6MDc6MzEgMTA6MzE6NTUAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAlqADAAQAAAAB
AAAAZAAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEeARsABQAAAAEAAAEmASgAAwAAAAEA
AgAAAgEABAAAAAEAAAEuAgIABAAAAAEAAA/qAAAAAAAAAEgAAAABAAAASAAAAAH/2P/gABBKRklG
AAECAABIAEgAAP/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBEL
CgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsN
Dg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwM/8AAEQgAZACWAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYH
CAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQh
EjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXi
ZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIE
BAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKy
gwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dX
Z3eHl6e3x//aAAwDAQACEQMRAD8A50D3H4orQoge4/FFaFtB5uZZNCK0KLQitCcGCRXaFMNSaFMB
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
AAAAAQACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAAAQAAAB4OEJJTQQZAAAA
AAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNBAoAAAAAAAEAADhCSU0nEAAAAAAACgAB
AAAAAAAAAAI4QklNA/UAAAAAAEgAL2ZmAAEAbGZmAAYAAAAAAAEAL2ZmAAEAoZmaAAYAAAAAAAEA
MgAAAAEAWgAAAAYAAAAAAAEANQAAAAEALQAAAAYAAAAAAAE4QklNA/gAAAAAAHAAAP//////////
//////////////////8D6AAAAAD/////////////////////////////A+gAAAAA////////////
/////////////////wPoAAAAAP////////////////////////////8D6AAAOEJJTQQAAAAAAAAC
AAE4QklNBAIAAAAAAAQAAAAAOEJJTQQwAAAAAAACAQE4QklNBC0AAAAAAAYAAQAAAAI4QklNBAgA
AAAAABAAAAABAAACQAAAAkAAAAAAOEJJTQQeAAAAAAAEAAAAADhCSU0EGgAAAAADPwAAAAYAAAAA
AAAAAAAAAGQAAACWAAAABWcqaAeYmAAtADIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAA
AAAAAJYAAABkAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAAAAAAABu
dWxsAAAAAgAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAA
AABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAABkAAAAAFJnaHRsb25nAAAAlgAAAAZzbGljZXNW
bExzAAAAAU9iamMAAAABAAAAAAAFc2xpY2UAAAASAAAAB3NsaWNlSURsb25nAAAAAAAAAAdncm91
cElEbG9uZwAAAAAAAAAGb3JpZ2luZW51bQAAAAxFU2xpY2VPcmlnaW4AAAANYXV0b0dlbmVyYXRl
ZAAAAABUeXBlZW51bQAAAApFU2xpY2VUeXBlAAAAAEltZyAAAAAGYm91bmRzT2JqYwAAAAEAAAAA
AABSY3QxAAAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAA
ZAAAAABSZ2h0bG9uZwAAAJYAAAADdXJsVEVYVAAAAAEAAAAAAABudWxsVEVYVAAAAAEAAAAAAABN
c2dlVEVYVAAAAAEAAAAAAAZhbHRUYWdURVhUAAAAAQAAAAAADmNlbGxUZXh0SXNIVE1MYm9vbAEA
AAAIY2VsbFRleHRURVhUAAAAAQAAAAAACWhvcnpBbGlnbmVudW0AAAAPRVNsaWNlSG9yekFsaWdu
AAAAB2RlZmF1bHQAAAAJdmVydEFsaWduZW51bQAAAA9FU2xpY2VWZXJ0QWxpZ24AAAAHZGVmYXVs
dAAAAAtiZ0NvbG9yVHlwZWVudW0AAAARRVNsaWNlQkdDb2xvclR5cGUAAAAATm9uZQAAAAl0b3BP
dXRzZXRsb25nAAAAAAAAAApsZWZ0T3V0c2V0bG9uZwAAAAAAAAAMYm90dG9tT3V0c2V0bG9uZwAA
AAAAAAALcmlnaHRPdXRzZXRsb25nAAAAAAA4QklNBCgAAAAAAAwAAAABP/AAAAAAAAA4QklNBBQA
AAAAAAQAAAACOEJJTQQMAAAAABAGAAAAAQAAAJYAAABkAAABxAAAsJAAAA/qABgAAf/Y/+AAEEpG
SUYAAQIAAEgASAAA/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkM
EQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0L
Cw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAz/wAARCABkAJYDASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQF
BgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhED
BCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfS
VeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIB
AgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYW
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
bwB0AG8AcwBoAG8AcAAAABMAQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAIABDAFMAMwAA
AAEAOEJJTQQGAAAAAAAHAAEBAQABAQD/4Q/OaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8
P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4
bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA0
LjEtYzAzNiA0Ni4yNzY3MjAsIE1vbiBGZWIgMTkgMjAwNyAyMjo0MDowOCAgICAgICAgIj4gPHJk
ZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgt
bnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJs
Lm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczp4YXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFw
LzEuMC8iIHhtbG5zOnhhcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIg
eG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxu
czp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIgeG1sbnM6ZXhpZj0iaHR0cDov
L25zLmFkb2JlLmNvbS9leGlmLzEuMC8iIGRjOmZvcm1hdD0iaW1hZ2UvanBlZyIgeGFwOkNyZWF0
b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1MzIFdpbmRvd3MiIHhhcDpDcmVhdGVEYXRlPSIyMDE0
LTA3LTMxVDEwOjMxOjU1KzA4OjAwIiB4YXA6TW9kaWZ5RGF0ZT0iMjAxNC0wNy0zMVQxMDozMTo1
NSswODowMCIgeGFwOk1ldGFkYXRhRGF0ZT0iMjAxNC0wNy0zMVQxMDozMTo1NSswODowMCIgeGFw
TU06RG9jdW1lbnRJRD0idXVpZDpGQzZCNEZBRDVBMThFNDExQkIyNUFDQzkyQzk1RkEzNCIgeGFw
TU06SW5zdGFuY2VJRD0idXVpZDpGRDZCNEZBRDVBMThFNDExQkIyNUFDQzkyQzk1RkEzNCIgcGhv
dG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYt
Mi4xIiBwaG90b3Nob3A6SGlzdG9yeT0iIiB0aWZmOk9yaWVudGF0aW9uPSIxIiB0aWZmOlhSZXNv
bHV0aW9uPSI3MjAwMDAvMTAwMDAiIHRpZmY6WVJlc29sdXRpb249IjcyMDAwMC8xMDAwMCIgdGlm
ZjpSZXNvbHV0aW9uVW5pdD0iMiIgdGlmZjpOYXRpdmVEaWdlc3Q9IjI1NiwyNTcsMjU4LDI1OSwy
NjIsMjc0LDI3NywyODQsNTMwLDUzMSwyODIsMjgzLDI5NiwzMDEsMzE4LDMxOSw1MjksNTMyLDMw
NiwyNzAsMjcxLDI3MiwzMDUsMzE1LDMzNDMyO0Y4MTUxOEY4M0ZCN0VBNTBGQzU0RDRDMTAxQjU5
NzNDIiBleGlmOlBpeGVsWERpbWVuc2lvbj0iMTUwIiBleGlmOlBpeGVsWURpbWVuc2lvbj0iMTAw
IiBleGlmOkNvbG9yU3BhY2U9IjEiIGV4aWY6TmF0aXZlRGlnZXN0PSIzNjg2NCw0MDk2MCw0MDk2
MSwzNzEyMSwzNzEyMiw0MDk2Miw0MDk2MywzNzUxMCw0MDk2NCwzNjg2NywzNjg2OCwzMzQzNCwz
MzQzNywzNDg1MCwzNDg1MiwzNDg1NSwzNDg1NiwzNzM3NywzNzM3OCwzNzM3OSwzNzM4MCwzNzM4
MSwzNzM4MiwzNzM4MywzNzM4NCwzNzM4NSwzNzM4NiwzNzM5Niw0MTQ4Myw0MTQ4NCw0MTQ4Niw0
MTQ4Nyw0MTQ4OCw0MTQ5Miw0MTQ5Myw0MTQ5NSw0MTcyOCw0MTcyOSw0MTczMCw0MTk4NSw0MTk4
Niw0MTk4Nyw0MTk4OCw0MTk4OSw0MTk5MCw0MTk5MSw0MTk5Miw0MTk5Myw0MTk5NCw0MTk5NSw0
MTk5Niw0MjAxNiwwLDIsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsMTYsMTcsMTgsMjAs
MjIsMjMsMjQsMjUsMjYsMjcsMjgsMzA7MUQzMTFEM0ZBNTlCMEIwODE2NzQ5OEMzNjlGN0M1Qjgi
PiA8eGFwTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0idXVpZDpGQjZCNEZBRDVBMThF
NDExQkIyNUFDQzkyQzk1RkEzNCIgc3RSZWY6ZG9jdW1lbnRJRD0idXVpZDpGQjZCNEZBRDVBMThF
NDExQkIyNUFDQzkyQzk1RkEzNCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6
eG1wbWV0YT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICA8P3hwYWNrZXQgZW5kPSJ3Ij8+/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50
clJHQiBYWVogB84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAEAAPbW
AAEAAAAA0y1IUCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAARY3BydAAAAVAAAAAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAA
AhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVl
ZAAAA0wAAACGdmlldwAAA9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAM
clRSQwAABDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMp
IDE5OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYt
Mi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAA
AAAAAAAAAABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAA
ACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJ
RUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3Bh
Y2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3Bh
Y2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3
aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2lu
ZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3
AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMA
AAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAA
AAUACgAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsA
kACVAJoAnwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwEl
ASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB
+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAML
AxYDIQMtAzgDQwNPA1oDZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGME
cQR+BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYW
BicGNwZIBlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsI
HwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApq
CoEKmAquCsUK3ArzCwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0N
Jg1ADVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAm
EEMQYRB+EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MT
pBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdl
F4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4ob
shvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBB
IGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTgl
aCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrP
KwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw
2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426Tck
N2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+
ID5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVV
RZpF3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJN
Sk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1
VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpe
bF69Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeT
Z+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpx
lXHwcktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vC
fCF8gXzhfUF9oX4BfmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG
14c7h5+IBIhpiM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIR
knqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKe
QJ6unx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqP
qwKrdavprFys0K1ErbiuLa6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i3
4LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVL
xcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TT
xtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT
4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx
//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4AIUFk
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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20130812/IBM%20PMI03.jpg

/9j/4AAQSkZJRgABAgEASABIAAD/4RN9RXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUA
AAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAcAAAAcgEyAAIAAAAUAAAAjodp
AAQAAAABAAAApAAAANAACvyAAAAnEAAK/IAAACcQQWRvYmUgUGhvdG9zaG9wIENTMyBXaW5kb3dz
ADIwMTM6MDg6MDkgMTM6Mzk6MTQAAAAAA6ABAAMAAAAB//8AAKACAAQAAAABAAAAlqADAAQAAAAB
AAAAZAAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEeARsABQAAAAEAAAEmASgAAwAAAAEA
AgAAAgEABAAAAAEAAAEuAgIABAAAAAEAABJHAAAAAAAAAEgAAAABAAAASAAAAAH/2P/gABBKRklG
AAECAABIAEgAAP/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBEL
CgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsN
Dg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwM/8AAEQgAZACWAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYH
CAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQh
EjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXi
ZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIE
BAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKy
gwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dX
Z3eHl6e3x//aAAwDAQACEQMRAD8A9OdZW07XPa0+BIBS9amJ9RsTE7hErH6saR1Wp1mLZewUPD3N
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
DJBH0f6zdrnoLLrrAGeu31HNjcGECfpT/wBJdlxebQpLtYcbYYkMgHTwSRK34wqtDi3cWjaY77mp
Llv9C47/AO2OP+d935Y718388v8AveP+r/jP/9T01JQ3JSkpmkoSlKSmaShKUpKZpKEpSkpmkoSl
KSmaShKUpKZqvlXbGhjdXPkx5BFlZgyqMnJvl7ZB9JrCRO1vJ/tvLkhuGTDG5i+mq26tjt2x7Z/P
Akaf5yD1HGttbRYwF5qta+ADMT7lYOHXuL2lzHHkhx15/wDJJiM2r3NItA5H0SpBo3L/AJFEK77i
P1Z7tp0JDdD/AGnIzcHIdqaww+ZH/fdy0KpDBPJ1KlOicc8/D7GlM1IgdHmvdMQJ4SQpv+0k7x6M
yBGvmkuW/i5b/9X0jVLVfMSSSn6d1S1XzEkkp+ndUtV8xJJKfp3VLVfMSSSn6d1S1XzEkkp+ndUt
V8xJJKfp3VZNv/N6Tv8ASn+TMz/YXzwkmy+n+Eujv1/wX6Jo+wf9pftEfyd23/wX2K2yY13f2on/
AKC+a0kYfy4flZ4/4f8AhP04OBHCdfMSSLXO5836Q/yT/wADPySXzekqn/tOw/8Ahb//2f/tGKZQ
aG90b3Nob3AgMy4wADhCSU0EJQAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNBC8AAAAAAEorAQEA
SAAAAEgAAAAAAAAAAAAAANACAABAAgAAAAAAAAAAAAAYAwAAZAIAAAABwAMAALAEAAABAA8nAQBs
bHVuAAAAAAAAAAAAcjhCSU0D7QAAAAAAEABIAAAAAQACAEgAAAABAAI4QklNBCYAAAAAAA4AAAAA
AAAAAAAAP4AAADhCSU0EDQAAAAAABAAAAHg4QklNBBkAAAAAAAQAAAAeOEJJTQPzAAAAAAAJAAAA
AAAAAAABADhCSU0ECgAAAAAAAQAAOEJJTScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAASAAv
ZmYAAQBsZmYABgAAAAAAAQAvZmYAAQChmZoABgAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAA
AQAtAAAABgAAAAAAAThCSU0D+AAAAAAAcAAA/////////////////////////////wPoAAAAAP//
//////////////////////////8D6AAAAAD/////////////////////////////A+gAAAAA////
/////////////////////////wPoAAA4QklNBAAAAAAAAAIAAThCSU0EAgAAAAAABAAAAAA4QklN
BDAAAAAAAAIBAThCSU0ELQAAAAAABgABAAAAAzhCSU0ECAAAAAAAEAAAAAEAAAJAAAACQAAAAAA4
QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAAM/AAAABgAAAAAAAAAAAAAAZAAAAJYAAAAFZypoB5iY
AC0AMQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAlgAAAGQAAAAAAAAAAAAAAAAA
AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09iamMA
AAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9t
bG9uZwAAAGQAAAAAUmdodGxvbmcAAACWAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVz
bGljZQAAABIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5l
bnVtAAAADEVTbGljZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGlj
ZVR5cGUAAAAASW1nIAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25n
AAAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAABkAAAAAFJnaHRsb25nAAAAlgAAAAN1
cmxURVhUAAAAAQAAAAAAAG51bGxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRh
Z1RFWFQAAAABAAAAAAAOY2VsbFRleHRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAA
AAAJaG9yekFsaWduZW51bQAAAA9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxp
Z25lbnVtAAAAD0VTbGljZVZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAA
ABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lAAAACXRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRP
dXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb25nAAAAAAAAAAtyaWdodE91dHNldGxvbmcA
AAAAADhCSU0EKAAAAAAADAAAAAE/8AAAAAAAADhCSU0EFAAAAAAABAAAAAM4QklNBAwAAAAAEmMA
AAABAAAAlgAAAGQAAAHEAACwkAAAEkcAGAAB/9j/4AAQSkZJRgABAgAASABIAAD/7QAMQWRvYmVf
Q00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwM
DAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwM
DAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAGQAlgMBIgACEQED
EQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAA
AAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQV
UsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0
pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRB
UWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKz
hMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/
APTnWVtO1z2tPgSAUvWpifUbExO4RKx+rGkdVqdZi2XsFDw9zai8bj/M+4fuxYsejHyn4r634zw6
w0sY/wBFzQ1253qFzfz/ANH/ANqElPYh7C7aHAuHLZE/cpLn+jnLxcvJfnU2WZD21kWV1k8nY9u7
6P8Ao10CSlJk6SSlJJJJKWTpk6Slk6SSSlJk6SSlJJJJKUkmTpKWSSSSU//Q9PstZUwvscGMby5x
AA+LinDgRIMg8EGVx31wvusz2UAkV0hpB/SbGOPva+xu30rXu9za9iX1ayraeove/c3FtY991m99
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
5WDh17i9pcxx5Icdef8AySYjNq9zSLQOR9EqQaNy/wCRRCu+4j9We7adCQ3Q/wBpyM3ByHamsMPm
R/33ctCqQwTydSpTonHPPw+xpTNSIHR5r3TECeEkKb/tJO8ejMgRr5pLlv4uW//V9I1S1XzEkkp+
ndUtV8xJJKfp3VLVfMSSSn6d1S1XzEkkp+ndUtV8xJJKfp3VLVfMSSSn6d1WTb/zek7/AEp/kzM/
2F88JJsvp/hLo79f8F+iaPsH/aX7RH8ndt/8F9itsmNd39qJ/wCgvmtJGH8uH5WeP+H/AIT9ODgR
wnXzEki1zufN+kP8k/8AAz8kl83pKp/7TsP/AIW//9kAOEJJTQQhAAAAAABVAAAAAQEAAAAPAEEA
ZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAEwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBo
AG8AcAAgAEMAUwAzAAAAAQA4QklNBAYAAAAAAAcABgAAAAEBAP/hD85odHRwOi8vbnMuYWRvYmUu
Y29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5U
Y3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFk
b2JlIFhNUCBDb3JlIDQuMS1jMDM2IDQ2LjI3NjcyMCwgTW9uIEZlYiAxOSAyMDA3IDIyOjQwOjA4
ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIv
MjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczpk
Yz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnhhcD0iaHR0cDovL25z
LmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6eGFwTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFw
LzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUv
UmVzb3VyY2VSZWYjIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9z
aG9wLzEuMC8iIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIiB4bWxu
czpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyIgZGM6Zm9ybWF0PSJpbWFnZS9q
cGVnIiB4YXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzMgV2luZG93cyIgeGFwOkNy
ZWF0ZURhdGU9IjIwMTMtMDgtMDlUMTM6Mzk6MTQrMDg6MDAiIHhhcDpNb2RpZnlEYXRlPSIyMDEz
LTA4LTA5VDEzOjM5OjE0KzA4OjAwIiB4YXA6TWV0YWRhdGFEYXRlPSIyMDEzLTA4LTA5VDEzOjM5
OjE0KzA4OjAwIiB4YXBNTTpEb2N1bWVudElEPSJ1dWlkOjFDQjI1RERDQjUwMEUzMTE4OTNBQUEx
MDlENzMzNjQ4IiB4YXBNTTpJbnN0YW5jZUlEPSJ1dWlkOjFEQjI1RERDQjUwMEUzMTE4OTNBQUEx
MDlENzMzNjQ4IiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6SUNDUHJvZmlsZT0i
QWRvYmUgUkdCICgxOTk4KSIgcGhvdG9zaG9wOkhpc3Rvcnk9IiIgdGlmZjpPcmllbnRhdGlvbj0i
MSIgdGlmZjpYUmVzb2x1dGlvbj0iNzIwMDAwLzEwMDAwIiB0aWZmOllSZXNvbHV0aW9uPSI3MjAw
MDAvMTAwMDAiIHRpZmY6UmVzb2x1dGlvblVuaXQ9IjIiIHRpZmY6TmF0aXZlRGlnZXN0PSIyNTYs
MjU3LDI1OCwyNTksMjYyLDI3NCwyNzcsMjg0LDUzMCw1MzEsMjgyLDI4MywyOTYsMzAxLDMxOCwz
MTksNTI5LDUzMiwzMDYsMjcwLDI3MSwyNzIsMzA1LDMxNSwzMzQzMjtBMzNCQjU0NEM0MkE1NTUx
OTQzNTJFMUMzREUwNUM2QSIgZXhpZjpQaXhlbFhEaW1lbnNpb249IjE1MCIgZXhpZjpQaXhlbFlE
aW1lbnNpb249IjEwMCIgZXhpZjpDb2xvclNwYWNlPSItMSIgZXhpZjpOYXRpdmVEaWdlc3Q9IjM2
ODY0LDQwOTYwLDQwOTYxLDM3MTIxLDM3MTIyLDQwOTYyLDQwOTYzLDM3NTEwLDQwOTY0LDM2ODY3
LDM2ODY4LDMzNDM0LDMzNDM3LDM0ODUwLDM0ODUyLDM0ODU1LDM0ODU2LDM3Mzc3LDM3Mzc4LDM3
Mzc5LDM3MzgwLDM3MzgxLDM3MzgyLDM3MzgzLDM3Mzg0LDM3Mzg1LDM3Mzg2LDM3Mzk2LDQxNDgz
LDQxNDg0LDQxNDg2LDQxNDg3LDQxNDg4LDQxNDkyLDQxNDkzLDQxNDk1LDQxNzI4LDQxNzI5LDQx
NzMwLDQxOTg1LDQxOTg2LDQxOTg3LDQxOTg4LDQxOTg5LDQxOTkwLDQxOTkxLDQxOTkyLDQxOTkz
LDQxOTk0LDQxOTk1LDQxOTk2LDQyMDE2LDAsMiw0LDUsNiw3LDgsOSwxMCwxMSwxMiwxMywxNCwx
NSwxNiwxNywxOCwyMCwyMiwyMywyNCwyNSwyNiwyNywyOCwzMDszMzM1QjUyODU4Q0JDNDU5QURE
OTFBQUJGN0ZEMzk1OSI+IDx4YXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ1dWlk
OjFCQjI1RERDQjUwMEUzMTE4OTNBQUExMDlENzMzNjQ4IiBzdFJlZjpkb2N1bWVudElEPSJ1dWlk
OjFCQjI1RERDQjUwMEUzMTE4OTNBQUExMDlENzMzNjQ4Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8
L3JkZjpSREY+IDwveDp4bXBtZXRhPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9InciPz7/4gJASUNDX1BST0ZJTEUAAQEA
AAIwQURCRQIQAABtbnRyUkdCIFhZWiAHzwAGAAMAAAAAAABhY3NwQVBQTAAAAABub25lAAAAAAAA
AAAAAAAAAAAAAAAA9tYAAQAAAADTLUFEQkUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAApjcHJ0AAAA/AAAADJkZXNjAAABMAAAAGt3dHB0AAABnAAAABRia3B0
AAABsAAAABRyVFJDAAABxAAAAA5nVFJDAAAB1AAAAA5iVFJDAAAB5AAAAA5yWFlaAAAB9AAAABRn
WFlaAAACCAAAABRiWFlaAAACHAAAABR0ZXh0AAAAAENvcHlyaWdodCAxOTk5IEFkb2JlIFN5c3Rl
bXMgSW5jb3Jwb3JhdGVkAAAAZGVzYwAAAAAAAAARQWRvYmUgUkdCICgxOTk4KQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAAAAAAGN1cnYA
AAAAAAAAAQIzAABjdXJ2AAAAAAAAAAECMwAAY3VydgAAAAAAAAABAjMAAFhZWiAAAAAAAACcGAAA
T6UAAAT8WFlaIAAAAAAAADSNAACgLAAAD5VYWVogAAAAAAAAJjEAABAvAAC+nP/uAA5BZG9iZQBk
QAAAAAH/2wCEAAICAgICAgICAgIDAgICAwQDAgIDBAUEBAQEBAUGBQUFBQUFBgYHBwgHBwYJCQoK
CQkMDAwMDAwMDAwMDAwMDAwBAwMDBQQFCQYGCQ0KCQoNDw4ODg4PDwwMDAwMDw8MDAwMDAwPDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAGQAlgMBEQACEQEDEQH/3QAEABP/xAGiAAAA
BwEBAQEBAAAAAAAAAAAEBQMCBgEABwgJCgsBAAICAwEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAA
AgEDAwIEAgYHAwQCBgJzAQIDEQQABSESMUFRBhNhInGBFDKRoQcVsUIjwVLR4TMWYvAkcoLxJUM0
U5KismNzwjVEJ5OjszYXVGR0w9LiCCaDCQoYGYSURUaktFbTVSga8uPzxNTk9GV1hZWltcXV5fVm
doaWprbG1ub2N0dXZ3eHl6e3x9fn9zhIWGh4iJiouMjY6PgpOUlZaXmJmam5ydnp+So6Slpqeoqa
qrrK2ur6EQACAgECAwUFBAUGBAgDA20BAAIRAwQhEjFBBVETYSIGcYGRMqGx8BTB0eEjQhVSYnLx
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
OJWu32K1p/XOS/5t3i/yF39v9rhf4N5P/9k=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20140704/Atlassian.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAZACWAwERAAIRAQMRAf/EALMAAAEEAwEBAAAAAAAAAAAA
AAAEBgcIAQIFAwkBAAEEAwEBAAAAAAAAAAAAAAABBAUGAgMHCAkQAAAGAQMDAgMDCAkCBwAAAAEC
AwQFBgcAERIhEwgxFEEiFVHSFmGRMiOTVBcJcVIzc7MklFYYQjTwgbFyZKQZEQACAQMDAwEECAMH
BAMAAAABAgMRBAUAEgYhMRNBUSIUB2FxgZEyUiMWobEVQmKSM0NTVHKCJBfwwSX/2gAMAwEAAhED
EQA/ALZCI7+uvpTr5rEmujRoqdGjRU6NGip0aNFTo0aKnRo0VOjRoqdbEUUTHkmc5BENhEhjFHbo
O25RAdtw0hAPcV0oZh1BI16+6c/vC/7ZT72k2J7B92l8kn5j9+j3Tn94X/bKfe0bE9g+7R5JPzH7
9HunP7wv+2U+9o2J7B92jySfmP36PdOf3hf9sp97RsT2D7tHkk/Mfv0e6c/vC/7ZT72jYnsH3aPJ
J+Y/fo905/eF/wBsp97RsT2D7tHkk/Mfv1sRd4ocqaazpRQ48SJpnWOocw+hSEIImMYfsANIVjUb
mChR6mmlDysQqlix9BUnXaUgbgih7pWFsqbYC8hXPGyhUgL68hOKIABdviPTTUXeOZ9iywF/ZuWv
89O2scoqeRobgR+0o9P5a4funPX/ADC/QRAf1qm4CHqA/N0ENO9iewfdpn5JPzH7zo905/eF/wBs
p97RsT2D7tHkk/Mfv0lUMJCHMHUSlMYAH03ABHr+bWYFSBrBjSp19Kbr46eH2NLNSccX7JOb4a5X
KqVKdLYWkLVJClRi1sKKDVV9wbllkmqT5M/MgEP209hFQepg4rjOY/MXNWN1msTZYuTG21xKnjLy
rMwi6kL12ElaUNRU+nprtWT4Z8usJf2uGy17lI8jcwRP5AkTQqZeg3dN4AYGooaD+166rNb/ABay
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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://images.csdn.net/20131219/160x120(1)01.jpg

/9j/4QGCRXhpZgAATU0AKgAAAAgADAEAAAMAAAABAKAAAAEBAAMAAAABAHgAAAECAAMAAAADAAAA
ngEGAAMAAAABAAIAAAESAAMAAAABAAEAAAEVAAMAAAABAAMAAAEaAAUAAAABAAAApAEbAAUAAAAB
AAAArAEoAAMAAAABAAIAAAExAAIAAAAcAAAAtAEyAAIAAAAUAAAA0IdpAAQAAAABAAAA5AAAARwA
CAAIAAgADqYAAAAnEAAOpgAAACcQQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzADIwMTM6MTI6
MTkgMTc6NTk6MTcAAASQAAAHAAAABDAyMjGgAQADAAAAAf//AACgAgAEAAAAAQAAAKCgAwAEAAAA
AQAAAHgAAAAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABagEbAAUAAAABAAABcgEoAAMAAAAB
AAIAAAIBAAQAAAABAAABegICAAQAAAABAAAAAAAAAAAAAABIAAAAAQAAAEgAAAAB/+0IdlBob3Rv
c2hvcCAzLjAAOEJJTQQEAAAAAAAPHAFaAAMbJUccAgAAAgAAADhCSU0EJQAAAAAAEM3P+n2ox74J
BXB2rq8Fw044QklNBDoAAAAAAJMAAAAQAAAAAQAAAAAAC3ByaW50T3V0cHV0AAAABQAAAABDbHJT
ZW51bQAAAABDbHJTAAAAAFJHQkMAAAAASW50ZWVudW0AAAAASW50ZQAAAABDbHJtAAAAAE1wQmxi
b29sAQAAAA9wcmludFNpeHRlZW5CaXRib29sAAAAAAtwcmludGVyTmFtZVRFWFQAAAABAAAAOEJJ
TQQ7AAAAAAGyAAAAEAAAAAEAAAAAABJwcmludE91dHB1dE9wdGlvbnMAAAASAAAAAENwdG5ib29s
AAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb2wAAAAAAENybkNib29sAAAAAABDbnRDYm9vbAAAAAAA
TGJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFbWxEYm9vbAAAAAAASW50cmJvb2wAAAAAAEJja2dP
YmpjAAAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb3ViQG/gAAAAAAAAAAAAR3JuIGRvdWJAb+AA
AAAAAAAAAABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVbnRGI1JsdAAAAAAAAAAAAAAAAEJsZCBV
bnRGI1JsdAAAAAAAAAAAAAAAAFJzbHRVbnRGI1B4bEBYAAAAAAAAAAAACnZlY3RvckRhdGFib29s
AQAAAABQZ1BzZW51bQAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVudEYjUmx0AAAAAAAAAAAAAAAA
VG9wIFVudEYjUmx0AAAAAAAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAAAA4QklNA+0AAAAAABAA
YAAAAAEAAgBgAAAAAQACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAAAQAAAAe
OEJJTQQZAAAAAAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAAAoAAQAAAAAA
AAACOEJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAAB
AFoAAAAGAAAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4AAAAAABwAAD/////////////////
////////////A+gAAAAA/////////////////////////////wPoAAAAAP//////////////////
//////////8D6AAAAAD/////////////////////////////A+gAADhCSU0EAAAAAAAAAgAEOEJJ
TQQCAAAAAAAKAAAAAAAAAAAAADhCSU0EMAAAAAAABQEBAQEBADhCSU0ELQAAAAAABgABAAAABjhC
SU0ECAAAAAAAEAAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAANRAAAA
BgAAAAAAAAAAAAAAeAAAAKAAAAAOADIAMAAxADMAMQAyADEAOQAxADcANAAzADQAOQAAAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAoAAAAHgAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAA
AAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09iamMAAAABAAAAAAAAUmN0
MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAAHgAAAAA
UmdodGxvbmcAAACgAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZQAAABIAAAAH
c2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAADEVTbGlj
ZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAAAAASW1n
IAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0
bG9uZwAAAAAAAAAAQnRvbWxvbmcAAAB4AAAAAFJnaHRsb25nAAAAoAAAAAN1cmxURVhUAAAAAQAA
AAAAAG51bGxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAA
AAAOY2VsbFRleHRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWdu
ZW51bQAAAA9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VT
bGljZVZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0Nv
bG9yVHlwZQAAAABOb25lAAAACXRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAA
AAAAAAxib3R0b21PdXRzZXRsb25nAAAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAA
AAAADAAAAAI/8AAAAAAAADhCSU0EEQAAAAAAAQEAOEJJTQQUAAAAAAAEAAAABjhCSU0EIQAAAAAA
VQAAAAEBAAAADwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAAABMAQQBkAG8AYgBlACAA
UABoAG8AdABvAHMAaABvAHAAIABDAFMANQAAAAEAOEJJTQQGAAAAAAAHAAUAAQABAQD/4Q3caHR0
cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBN
cENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEv
IiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTIt
MTc6MzI6MDAgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcv
MTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIi
IHhtbG5zOmNycz0iaHR0cDovL25zLmFkb2JlLmNvbS9jYW1lcmEtcmF3LXNldHRpbmdzLzEuMC8i
IHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1s
bnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczpkYz0iaHR0cDovL3B1
cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29t
L3hhcC8xLjAvbW0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NU
eXBlL1Jlc291cmNlRXZlbnQjIiBjcnM6QWxyZWFkeUFwcGxpZWQ9IlRydWUiIHBob3Rvc2hvcDpD
b2xvck1vZGU9IjMiIHhtcDpDcmVhdGVEYXRlPSIyMDEzLTEyLTE5VDE3OjQzOjUxKzA4OjAwIiB4
bXA6TW9kaWZ5RGF0ZT0iMjAxMy0xMi0xOVQxNzo1OToxNyswODowMCIgeG1wOk1ldGFkYXRhRGF0
ZT0iMjAxMy0xMi0xOVQxNzo1OToxNyswODowMCIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiB4bXBN
TTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjgxNzg1RDM5OTQ2OEUzMTFBQkFBQ0Q3MzVCRjI1RkJFIiB4
bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjgwNzg1RDM5OTQ2OEUzMTFBQkFBQ0Q3MzVCRjI1RkJF
IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ODA3ODVEMzk5NDY4RTMxMUFCQUFD
RDczNUJGMjVGQkUiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0
aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo4MDc4NUQzOTk0NjhFMzExQUJB
QUNENzM1QkYyNUZCRSIgc3RFdnQ6d2hlbj0iMjAxMy0xMi0xOVQxNzo1OToxNyswODowMCIgc3RF
dnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiBzdEV2dDpjaGFu
Z2VkPSIvIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0i
eG1wLmlpZDo4MTc4NUQzOTk0NjhFMzExQUJBQUNENzM1QkYyNUZCRSIgc3RFdnQ6d2hlbj0iMjAx
My0xMi0xOVQxNzo1OToxNyswODowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9z
aG9wIENTNSBXaW5kb3dzIiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpI
aXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3hwYWNrZXQg
ZW5kPSJ3Ij8+/+4ADkFkb2JlAGRAAAAAAf/bAIQABAMDAwMDBAMDBAYEAwQGBwUEBAUHCAYGBwYG
CAoICQkJCQgKCgwMDAwMCgwMDAwMDAwMDAwMDAwMDAwMDAwMDAEEBQUIBwgPCgoPFA4ODhQUDg4O
DhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAeACgAwER
AAIRAQMRAf/dAAQAFP/EALYAAQADAQEBAQEAAAAAAAAAAAAFBgcEAwIBCAEBAAEFAQEAAAAAAAAA
AAAAAAQCAwUGBwEIEAABAwQBAgQFAQUFBQkAAAABAgMEABEFBhIhBzFRIhNBYTIUFUJxgVIjJJHh
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
1D8WZqD6S11X/9k=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.csdn.net/public/common/toolbar/css/index.css

.csdn-toolbar {
	background: rgb(255, 255, 255); padding: 0px; color: rgb(51, 51, 51); =
line-height: 1.5em; font-family: "Helvetica", "Tahoma, Arial", =
"sans-serif"; font-size: 0.75em; border-bottom-color: rgb(233, 233, =
233); border-bottom-width: 1px; border-bottom-style: solid;
}
.csdn-toolbar * {
	box-sizing: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box;
}
.csdn-toolbar *::before {
	box-sizing: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box;
}
.csdn-toolbar *::after {
	box-sizing: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box;
}
.csdn-toolbar div {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar dl {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar dt {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar dd {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar ul {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar li {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h1 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h2 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h3 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h4 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h5 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar h6 {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar pre {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar code {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar form {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar fieldset {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar legend {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar input {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar textarea {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar p {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar blockquote {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar th {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar td {
	margin: 0px; padding: 0px; text-align: left; line-height: 1.5em;
}
.csdn-toolbar table {
	border-collapse: collapse; table-layout: fixed; border-spacing: 0;
}
.csdn-toolbar fieldset {
	border: 0px currentColor; border-image: none;
}
.csdn-toolbar img {
	border: 0px currentColor; border-image: none;
}
.csdn-toolbar address {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar caption {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar cite {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar code {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar dfn {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar em {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar strong {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar th {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar var {
	font-style: normal; font-weight: normal;
}
.csdn-toolbar ul {
	list-style: none;
}
.csdn-toolbar caption {
	text-align: left;
}
.csdn-toolbar th {
	text-align: left;
}
.csdn-toolbar .clearfix::before {
	display: table; content: " ";
}
.csdn-toolbar .clearfix::after {
	display: table; content: " ";
}
.csdn-toolbar .clearfix::after {
	clear: both;
}
.csdn-toolbar .clearfix {
	overflow: visible;
}
.csdn-toolbar .col-sm-2 {
	float: left;
}
.csdn-toolbar h1 {
	background: none; margin: 0px; text-align: left; color: rgb(51, 51, =
51); line-height: 1.5em; font-family: "Helvetica", "Tahoma, Arial", =
"sans-serif"; font-weight: bold;
}
.csdn-toolbar h2 {
	background: none; margin: 0px; text-align: left; color: rgb(51, 51, =
51); line-height: 1.5em; font-family: "Helvetica", "Tahoma, Arial", =
"sans-serif"; font-weight: bold;
}
.csdn-toolbar h3 {
	background: none; margin: 0px; text-align: left; color: rgb(51, 51, =
51); line-height: 1.5em; font-family: "Helvetica", "Tahoma, Arial", =
"sans-serif"; font-weight: bold;
}
.csdn-toolbar h4 {
	background: none; margin: 0px; text-align: left; color: rgb(51, 51, =
51); line-height: 1.5em; font-family: "Helvetica", "Tahoma, Arial", =
"sans-serif"; font-weight: bold;
}
.csdn-toolbar h5 {
	background: none; margin: 0px; text-align: left; color: rgb(51, 51, =
51); line-height: 1.5em; font-family: "Helvetica", "Tahoma, Arial", =
"sans-serif"; font-weight: bold;
}
.csdn-toolbar h6 {
	background: none; margin: 0px; text-align: left; color: rgb(51, 51, =
51); line-height: 1.5em; font-family: "Helvetica", "Tahoma, Arial", =
"sans-serif"; font-weight: bold;
}
.csdn-toolbar h1 {
	font-size: 3em;
}
.csdn-toolbar h2 {
	font-size: 2.5em;
}
.csdn-toolbar h3 {
	font-size: 2em;
}
.csdn-toolbar h4 {
	font-size: 1.5em;
}
.csdn-toolbar h5 {
	font-size: 1.16em;
}
.csdn-toolbar h6 {
	font-size: 1em;
}
.csdn-toolbar textarea {
	resize: none;
}
.csdn-toolbar a:link {
	color: rgb(51, 51, 51); text-decoration: none;
}
.csdn-toolbar a:visited {
	color: rgb(51, 51, 51); text-decoration: none;
}
.csdn-toolbar a:hover {
	color: rgb(204, 0, 0); text-decoration: none;
}
.csdn-toolbar h1 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h1 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h2 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h2 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h3 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h3 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h4 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h4 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h5 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h5 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h6 a:link {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h6 a:visited {
	color: rgb(51, 51, 51);
}
.csdn-toolbar h1 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h2 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h3 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h4 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h5 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar h6 a:hover {
	color: rgb(204, 0, 0);
}
.csdn-toolbar a:focus {
=09
}
.csdn-toolbar a.f-blue:link {
	color: rgb(41, 129, 169); text-decoration: none;
}
.csdn-toolbar a.f-blue:visited {
	color: rgb(41, 129, 169); text-decoration: none;
}
.csdn-toolbar a.f-blue:visited {
	color: rgb(2, 93, 135); text-decoration: none;
}
.csdn-toolbar a.f-undline:link {
	text-decoration: underline;
}
.csdn-toolbar a.f-undline:visited {
	text-decoration: underline;
}
.csdn-toolbar a.f-undline:visited {
	text-decoration: underline;
}
.csdn-toolbar .col-sm-1 {
	float: left;
}
.csdn-toolbar .col-sm-2 {
	float: left;
}
.csdn-toolbar .col-sm-3 {
	float: left;
}
.csdn-toolbar .col-sm-4 {
	float: left;
}
.csdn-toolbar .col-sm-5 {
	float: left;
}
.csdn-toolbar .col-sm-6 {
	float: left;
}
.csdn-toolbar .col-sm-7 {
	float: left;
}
.csdn-toolbar .col-sm-8 {
	float: left;
}
.csdn-toolbar .col-sm-9 {
	float: left;
}
.csdn-toolbar .col-sm-10 {
	float: left;
}
.csdn-toolbar .col-sm-11 {
	float: left;
}
.csdn-toolbar .form-horizontal .form-group::after {
	clear: both;
}
.csdn-toolbar .form-horizontal .form-group::before {
	display: table; content: " ";
}
.csdn-toolbar .form-horizontal .form-group::after {
	display: table; content: " ";
}
.csdn-toolbar .col-sm-12 {
	width: 100%;
}
.csdn-toolbar .col-sm-11 {
	width: 91.66%;
}
.csdn-toolbar .col-sm-10 {
	width: 86.33%;
}
.csdn-toolbar .col-sm-9 {
	width: 75%;
}
.csdn-toolbar .col-sm-8 {
	width: 66.66%;
}
.csdn-toolbar .col-sm-7 {
	width: 58.33%;
}
.csdn-toolbar .col-sm-6 {
	width: 50%;
}
.csdn-toolbar .col-sm-5 {
	width: 41.66%;
}
.csdn-toolbar .col-sm-4 {
	width: 33.33%;
}
.csdn-toolbar .col-sm-3 {
	width: 25%;
}
.csdn-toolbar .col-sm-2 {
	width: 16.66%;
}
.csdn-toolbar .col-sm-1 {
	width: 8.33%;
}
.csdn-toolbar .pull-left {
	float: left;
}
.csdn-toolbar .pull-right {
	float: right;
}
.csdn-toolbar a {
	color: rgb(153, 153, 153); font-size: 12px; font-weight: normal; =
text-decoration: none;
}
.csdn-toolbar a:hover {
	color: rgb(51, 51, 51);
}
.csdn-toolbar dl {
	margin: 0px; font-size: 12px;
}
.csdn-toolbar ul {
	margin: 0px; padding: 0px;
}
.csdn-toolbar li {
	margin: 0px; padding: 0px;
}
.csdn-toolbar li {
	background: none; border-width: 0px 1px; border-style: solid; =
border-color: rgb(238, 238, 238) rgb(255, 255, 255) rgb(238, 238, 238) =
rgb(238, 238, 238); list-style: none; border-image: none; width: 40px; =
height: 40px; float: left; position: relative;
}
.csdn-toolbar .hide {
	display: none;
}
.csdn-toolbar .open .dropdown-menu {
	border-radius: 0px; top: 23px; display: block; min-width: 70px;
}
.csdn-toolbar .open .dropdown-menu li {
	border: 0px currentColor; border-image: none; width: 100%; height: =
auto; text-align: center; color: rgb(51, 51, 51); padding-right: 10px; =
float: left;
}
.csdn-toolbar input:focus {
	border-color: rgb(153, 204, 255); box-shadow: none;
}
.csdn-toolbar textarea:focus {
	border-color: rgb(153, 204, 255); box-shadow: none;
}
.csdn-toolbar .form-horizontal .form-group {
	margin: 0px 0px 10px;
}
.csdn-toolbar .form-horizontal .form-group .ft {
	width: 362px; padding-left: 12px; margin-left: 25px;
}
.csdn-toolbar .form-horizontal .control-label {
	padding: 7px 10px 0px 0px; width: 38px; text-align: right; box-sizing: =
border-box; -webkit-box-sizing: border-box; -moz-box-sizing: border-box;
}
.csdn-toolbar .form-control {
	padding: 0px 7px; border-radius: 0px; border: 1px solid rgb(204, 204, =
204); transition:border-color 0.15s ease-in-out, box-shadow 0.15s =
ease-in-out; border-image: none; width: 100%; height: 28px; color: =
rgb(85, 85, 85); line-height: 1.4285; font-size: 14px; vertical-align: =
middle; display: block; box-shadow: none; background-image: none; =
background-color: rgb(255, 255, 255); -webkit-box-shadow: inset 0 1px =
1px rgba(0, 0, 0, 0.075); -webkit-transition: border-color ease-in-out =
0.15s, box-shadow ease-in-out 0.15s;
}
.csdn-toolbar textarea.form-control {
	height: 70px; padding-top: 5px;
}
.csdn-toolbar .nobg {
	background: none !important;
}
.csdn-toolbar .icon-hasnotes-sm {
	background-image: url("../images/f_icon.png");
}
.csdn-toolbar .icon-enter-sm {
	background-image: url("../images/f_icon.png");
}
.csdn-toolbar .write-icon {
	background-image: url("../images/f_icon.png");
}
.csdn-toolbar .icon-enter-sm {
	background-position: 0px -192px;
}
.csdn-toolbar .icon {
	background-position: 1px 1px; margin: 10px auto 0px; width: 20px; =
height: 20px; font-size: 16px; position: relative; z-index: 1001; =
background-image: url("../images/f_icon.png"); background-repeat: =
no-repeat;
}
.csdn-toolbar .icon .wrap {
	background: rgb(255, 255, 255); padding: 7px; border: 1px solid =
rgb(204, 204, 204); border-image: none; top: 30px; font-size: 12px; =
display: none; position: absolute; box-shadow: 0px 3px 2px =
rgba(0,0,0,0.15);
}
.csdn-toolbar .icon .curr-icon-wrap {
	top: -4px; width: 41px; height: 3px; border-bottom-color: rgb(255, 255, =
255); border-bottom-width: 1px; border-bottom-style: solid; position: =
absolute;
}
.csdn-toolbar .on {
	border-width: 0px 1px; border-color: rgb(204, 204, 204); =
background-color: rgb(255, 255, 255);
}
.csdn-toolbar .on .wrap {
	display: block;
}
.csdn-toolbar .container {
	margin: 0px auto; width: 960px;
}
.csdn-toolbar .container::before {
	display: table; content: " ";
}
.csdn-toolbar .container::after {
	display: table; content: " ";
}
.csdn-toolbar .btn {
	padding: 0px; border-radius: 0px; border: 1px solid transparent; =
border-image: none; width: 80px; height: 28px; text-align: center; =
color: rgb(255, 255, 255); line-height: 28px; font-size: 14px; =
font-weight: normal; margin-bottom: 0px; vertical-align: middle; =
display: inline-block; white-space: nowrap; cursor: pointer; box-sizing: =
border-box; -ms-user-select: none; background-image: none; =
-webkit-box-sizing: border-box; -moz-box-sizing: border-box; =
-webkit-user-select: none; -moz-user-select: none; -o-user-select: none; =
user-select: none;
}
.csdn-toolbar .btn:focus {
	outline: rgb(51, 51, 51) dotted thin; outline-offset: -2px;
}
.csdn-toolbar .btn:hover {
	color: rgb(51, 51, 51); text-decoration: none;
}
.csdn-toolbar .btn:focus {
	color: rgb(51, 51, 51); text-decoration: none;
}
.csdn-toolbar .btn:active {
	outline: 0px; box-shadow: inset 0px 3px 5px rgba(0,0,0,0.125); =
background-image: none; -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, =
0, 0.125);
}
.csdn-toolbar .disabled.btn {
	cursor: not-allowed; opacity: 0.65; pointer-events: none; box-shadow: =
none; -webkit-box-shadow: none;
}
.csdn-toolbar [disabled].btn {
	cursor: not-allowed; opacity: 0.65; pointer-events: none; box-shadow: =
none; -webkit-box-shadow: none;
}
.csdn-toolbar fieldset[disabled] .btn {
	cursor: not-allowed; opacity: 0.65; pointer-events: none; box-shadow: =
none; -webkit-box-shadow: none;
}
.csdn-toolbar .btn:hover {
	color: rgb(255, 255, 255);
}
.csdn-toolbar .btn:focus {
	color: rgb(255, 255, 255);
}
.csdn-toolbar .btn-default:hover {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .btn-default:focus {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .btn-default:active {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .active.btn-default {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .open .btn-default.dropdown-toggle {
	border-color: rgb(173, 173, 173); color: rgb(238, 238, 238); =
background-color: rgb(235, 235, 235);
}
.csdn-toolbar .btn-default:hover {
	background-color: rgb(102, 102, 102);
}
.csdn-toolbar .btn-default:focus {
	background-color: rgb(102, 102, 102);
}
.csdn-toolbar .btn-default {
	background-color: rgb(153, 153, 153);
}
.csdn-toolbar .btn-primary {
	background-color: rgb(220, 60, 0);
}
.csdn-toolbar .btn-primary:hover {
	background-color: rgb(180, 50, 0);
}
.csdn-toolbar .btn-primary:focus {
	background-color: rgb(180, 50, 0);
}
.csdn-toolbar .loginlink {
	background: none; padding: 10px 13px; border: 0px currentColor; =
border-image: none; height: 20px; display: none;
}
.csdn-toolbar .logo {
	padding: 0px; width: auto; height: 40px; font-size: 12px;
}
.csdn-toolbar .logo .icon {
	background-position: 0px 0px; margin: 0px; padding: 0px; width: 40px; =
height: 40px; line-height: 18px; float: left; display: block;
}
.csdn-toolbar .logo .img {
	width: 120px; height: 40px; margin-left: 10px; float: left; =
background-image: url("../images/f_name.png");
}
.csdn-toolbar .none {
	background-position: 0px 45px;
}
.csdn-toolbar .blog-icon {
	background-position: 0px -52px;
}
.csdn-toolbar .down-icon {
	background-position: 0px -102px;
}
.csdn-toolbar .bbs-icon {
	background-position: 0px -152px;
}
.csdn-toolbar .space-icon {
	background-position: 0px -202px;
}
.csdn-toolbar .code-icon {
	background-position: 0px -252px;
}
.csdn-toolbar .share-icon {
	background-position: 0px -305px;
}
.csdn-toolbar .tag-icon {
	background-position: 0px -354px;
}
.csdn-toolbar .dashboard-icon {
	background-position: 0px -403px;
}
.csdn-toolbar .news-icon {
	background-position: 0px 16px;
}
.csdn-toolbar .tag-icon {
	background-position: 0px -354px;
}
.csdn-toolbar .notify-icon {
	background-position: 0px -456px;
}
.csdn-toolbar .ask-icon {
	background-position: 0px -503px;
}
.csdn-toolbar .search .icon {
	background-position: 0px -130px;
}
.csdn-toolbar .search .wrap {
	padding: 10px; width: 400px;
}
.csdn-toolbar .search .wrap .border {
	border: 1px solid rgb(204, 204, 204); border-image: none;
}
.csdn-toolbar .search .wrap input {
	padding: 0px 5px; border: 0px currentColor; border-image: none; width: =
356px; height: 26px; line-height: 22px;
}
.csdn-toolbar .search .wrap input:focus {
	border: currentColor; border-image: none;
}
.csdn-toolbar .search .wrap .btn {
	height: 26px;
}
.csdn-toolbar .search .wrap .icon-enter-sm {
	width: 20px; height: 18px; right: 15px; margin-top: 4px; position: =
absolute;
}
.csdn-toolbar .on .on-search-icon {
	background-position: -20px -130px;
}
.csdn-toolbar .on .on-search-icon .wrap {
	right: -221px;
}
.csdn-toolbar .on .on-search-icon .curr-icon-wrap {
	right: 209px;
}
.csdn-toolbar .unlogin .search {
	border-width: 0px 1px;
}
.csdn-toolbar .unlogin .search .wrap {
	right: -53px;
}
.csdn-toolbar .unlogin .search .curr-icon-wrap {
	right: 41px;
}
.csdn-toolbar .favor .icon {
	background-position: 0px -111px;
}
.csdn-toolbar .favor .favor-btns {
	padding: 0px; text-align: right;
}
.csdn-toolbar .favor .favor-btns .btn {
	margin-left: 4px;
}
.csdn-toolbar .favor .wrap {
	padding: 20px;
}
.csdn-toolbar .favor .checkbox label {
	display: block;
}
.csdn-toolbar .favor .share {
	margin: 2px 5px 0px 0px; height: 14px; vertical-align: middle; =
position: static;
}
.csdn-toolbar .on .on-favor-icon {
	background-position: -20px -111px;
}
.csdn-toolbar .on .on-favor-icon .wrap {
	width: 400px; height: 230px; right: -179px;
}
.csdn-toolbar .on .on-favor-icon .curr-icon-wrap {
	right: 167px;
}
.csdn-toolbar .on .on-favor-icon .last {
	margin-right: 0px;
}
.csdn-toolbar .on .on-favor-icon .favor-form .alert {
	display: none;
}
.csdn-toolbar .on .on-favor-icon .favor-form .error .alert {
	margin: 5px 0px 0px 81px; width: 300px; display: block;
}
.csdn-toolbar .on .on-favor-icon .favor-failed {
	text-align: center; margin-top: 60px;
}
.csdn-toolbar .on .on-favor-icon .favor-success {
	text-align: center; margin-top: 60px;
}
.csdn-toolbar .on .on-favor-icon .favor-failed .msg {
	line-height: 40px; font-size: 18px; vertical-align: top;
}
.csdn-toolbar .on .on-favor-icon .favor-success .msg {
	line-height: 40px; font-size: 18px; vertical-align: top;
}
.csdn-toolbar .on .on-favor-icon .favor-failed .btns {
	text-align: center; margin-top: 10px;
}
.csdn-toolbar .on .on-favor-icon .favor-success .btns {
	text-align: center; margin-top: 10px;
}
.csdn-toolbar .on .on-favor-icon .favor-failed .btns a {
	margin-left: 10px;
}
.csdn-toolbar .on .on-favor-icon .favor-success .btns a {
	margin-left: 10px;
}
.csdn-toolbar .notify .on-notify-icon {
	display: block !important;
}
.csdn-toolbar .notify .icon {
	background-position: 0px -90px;
}
.csdn-toolbar .notify .icon-hasnotes-sm {
	background-position: -23px -196px; left: 23px; top: 9px; width: 10px; =
height: 10px; position: absolute; z-index: 1002;
}
.csdn-toolbar .notify .number {
	background: 0px 0px rgb(220, 60, 0); left: 24px; top: 9px; width: 12px; =
height: 13px; text-align: center; color: rgb(255, 255, 255); =
line-height: 14px; font-size: 12px; position: absolute; z-index: 1002;
}
.csdn-toolbar #header_notice_num {
	background: none !important; display: none;
}
.csdn-toolbar .csdn_note {
	display: block !important;
}
.csdn-toolbar .csdn_note .close1 {
	display: none;
}
.csdn-toolbar .csdn_note .go_all {
	background: none; float: right;
}
.csdn-toolbar .csdn_note .read_all {
	background: none; float: right;
}
.csdn-toolbar .csdn_note .go_back {
	line-height: 39px;
}
.csdn-toolbar .csdn_note .detail_con {
	min-height: 312px !important;
}
.csdn-toolbar .csdn_note .notifications .count_down {
	color: rgb(204, 204, 204);
}
.csdn-toolbar .csdn_note .notifications .list dt {
	line-height: 27px;
}
.csdn-toolbar .csdn_note .notifications .menu_title a {
	margin-right: 5px;
}
.csdn-toolbar .on .on-notify-icon {
	background-position: -20px -90px;
}
.csdn-toolbar .on .on-notify-icon .wrap {
	padding: 0px; left: auto !important; width: 450px !important; right: =
-137px !important;
}
.csdn-toolbar .on .on-notify-icon .curr-icon-wrap {
	right: 125px;
}
.csdn-toolbar .on .on-notify-icon .csdn_note .box {
	border: 0px currentColor; border-image: none; left: 0px; top: 0px; =
box-shadow: none;
}
.csdn-toolbar .on .on-notify-icon .last {
	margin-right: 0px;
}
.csdn-toolbar .ugc .icon {
	background-position: 0px -70px;
}
.csdn-toolbar .ugc .p-news .icon {
	background-position: -42px -52px;
}
.csdn-toolbar .ugc .p-news:hover .icon {
	background-position: -62px -52px;
}
.csdn-toolbar .ugc .p-down .icon {
	background-position: -42px -72px;
}
.csdn-toolbar .ugc .p-down:hover .icon {
	background-position: -62px -72px;
}
.csdn-toolbar .ugc .p-doc .icon {
	background-position: -42px -72px;
}
.csdn-toolbar .ugc .p-doc:hover .icon {
	background-position: -62px -72px;
}
.csdn-toolbar .ugc .p-ask .icon {
	background-position: -42px -131px;
}
.csdn-toolbar .ugc .p-ask:hover .icon {
	background-position: -62px -131px;
}
.csdn-toolbar .ugc .c-obj .icon {
	background-position: -42px -92px;
}
.csdn-toolbar .ugc .c-obj:hover .icon {
	background-position: -62px -92px;
}
.csdn-toolbar .ugc .c-code .icon {
	background-position: -42px -191px;
}
.csdn-toolbar .ugc .c-code:hover .icon {
	background-position: -62px -191px;
}
.csdn-toolbar .ugc .p-src .icon {
	background-position: -42px -170px;
}
.csdn-toolbar .ugc .p-src:hover .icon {
	background-position: -62px -170px;
}
.csdn-toolbar .ugc .p-blog .icon {
	background-position: -42px -111px;
}
.csdn-toolbar .ugc .p-blog:hover .icon {
	background-position: -62px -111px;
}
.csdn-toolbar .ugc .p-bbs .icon {
	background-position: -42px -132px;
}
.csdn-toolbar .ugc .p-bbs:hover .icon {
	background-position: -62px -132px;
}
.csdn-toolbar .ugc .c-grop .icon {
	background-position: -42px -152px;
}
.csdn-toolbar .ugc .c-grop:hover .icon {
	background-position: -62px -152px;
}
.csdn-toolbar .on .on-ugc-icon {
	background-position: -20px -70px;
}
.csdn-toolbar .on .on-ugc-icon .wrap {
	padding: 12px 0px; width: 161px; right: -95px;
}
.csdn-toolbar .on .on-ugc-icon dl {
	margin: 0px;
}
.csdn-toolbar .on .on-ugc-icon dl dt {
	width: 100%; font-weight: normal;
}
.csdn-toolbar .on .on-ugc-icon dl dt em.icon {
	margin: 0px 8px 0px 0px; width: 16px; height: 16px; float: left;
}
.csdn-toolbar .on .on-ugc-icon dl dt span {
	height: 12px; line-height: 12px; margin-top: 3px; float: left; display: =
block;
}
.csdn-toolbar .on .on-ugc-icon dl dt a {
	padding: 10px 13px; text-align: left; display: block;
}
.csdn-toolbar .on .on-ugc-icon dl dt a:hover {
	background: rgb(238, 238, 238); color: rgb(51, 51, 51);
}
.csdn-toolbar .on .on-ugc-icon .curr-icon-wrap {
	right: 83px;
}
.csdn-toolbar .on .on-ugc-icon .last {
	margin-right: 0px;
}
.csdn-toolbar .profile .icon {
	background-position: 0px 1px;
}
.csdn-toolbar .profile .curr-icon-img {
	margin: 0px; width: 20px; height: 20px; display: block;
}
.csdn-toolbar .on .settings {
	background-position: 0px -150px; padding: 0px 10px; margin-right: 2px;
}
.csdn-toolbar .on .quit {
	background-position: 0px -170px; padding: 0px 10px;
}
.csdn-toolbar .on .on-profile-icon {
	background-position: -20px 0px; font-size: 12px;
}
.csdn-toolbar .on .on-profile-icon .wrap {
	padding: 0px; width: 251px; right: -53px;
}
.csdn-toolbar .on .on-profile-icon .curr-icon-wrap {
	right: 41px;
}
.csdn-toolbar .on .on-profile-icon .bd {
	padding: 20px;
}
.csdn-toolbar .on .on-profile-icon .bd .write-icon {
	background-position: -78px -50px; padding: 3px 10px;
}
.csdn-toolbar .on .on-profile-icon .bd .img {
	width: 100px; margin-right: 7px;
}
.csdn-toolbar .on .on-profile-icon .bd .info {
	width: 103px; text-align: left; float: right; -ms-word-wrap: =
break-word;
}
.csdn-toolbar .on .on-profile-icon .bd .info .nickname {
	font-size: 14px;
}
.csdn-toolbar .on .on-profile-icon .bd .info a {
	padding-bottom: 5px; display: block;
}
.csdn-toolbar .on .on-profile-icon .bd .info .fill-dec {
	color: rgb(102, 102, 102);
}
.csdn-toolbar .on .on-profile-icon .ft {
	padding: 0px 12px 0px 20px; line-height: 40px; position: relative; =
background-color: rgb(245, 245, 245);
}
.csdn-toolbar .on .on-profile-icon .ft .icon-cog {
	background: url("../images/f_icon.png") no-repeat -2px -152px; width: =
16px; height: 16px; margin-top: -1px; margin-right: 2px; vertical-align: =
middle; display: inline-block;
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout {
	background: url("../images/f_icon.png") no-repeat -2px -152px; width: =
16px; height: 16px; margin-top: -1px; margin-right: 2px; vertical-align: =
middle; display: inline-block;
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout {
	background-position: -2px -172px;
}
.csdn-toolbar .on .on-profile-icon .ft a {
	line-height: 40px;
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right {
	margin-top: 13px;
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right .out {
	display: none;
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right:hover .out {
	background: rgb(245, 245, 245); padding: 2px; border-radius: 5px; =
border: 1px solid rgb(153, 153, 153); border-image: none; top: -12px; =
width: 32px; height: 16px; text-align: center; right: -10px; color: =
rgb(102, 102, 102); line-height: 16px; display: block; position: =
absolute;
}
.csdn-toolbar .on .on-profile-icon .ft a:hover .settings {
	background-position: -20px -150px;
}
.csdn-toolbar .on .on-profile-icon .ft a:hover .quit {
	background-position: -20px -170px;
}
.csdn-toolbar .apps {
	border-width: 0px 1px; border-right-color: rgb(238, 238, 238);
}
.csdn-toolbar .apps .icon {
	background-position: 0px -51px;
}
.csdn-toolbar .on.apps {
	border-width: 0px 1px; border-right-color: rgb(204, 204, 204);
}
.csdn-toolbar .hasnew {
	background-position: -23px -196px; left: 23px; top: 9px; width: 10px; =
height: 10px; position: absolute; z-index: 1002; background-image: =
url("../images/f_icon.png");
}
.csdn-toolbar .on .on-apps-icon {
	background-position: -20px -51px;
}
.csdn-toolbar .on .on-apps-icon .wrap {
	padding: 0px 20px 20px; width: 310px; right: -11px;
}
.csdn-toolbar .on .on-apps-icon .curr-icon-wrap {
	right: 0px;
}
.csdn-toolbar .on .on-apps-icon .detail {
	width: 90px; font-size: 14px; margin-right: 20px; float: left;
}
.csdn-toolbar .on .on-apps-icon .detail dt {
	color: rgb(51, 51, 51); line-height: 31px; font-weight: bold; =
margin-top: 15px; border-bottom-color: rgb(102, 102, 102); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.csdn-toolbar .on .on-apps-icon .detail dd {
	line-height: 31px; border-bottom-color: rgb(221, 221, 221); =
border-bottom-width: 1px; border-bottom-style: solid;
}
.csdn-toolbar .on .on-apps-icon .detail dd a {
	color: rgb(51, 51, 51);
}
.csdn-toolbar .on .on-apps-icon .last.detail {
	margin-right: 0px;
}
.csdn-toolbar .unlogin .loginlink {
	width: 60px; height: 20px; line-height: 24px; font-size: 12px; =
border-right-color: currentColor; border-right-width: medium; =
border-right-style: none; display: block;
}
.csdn-toolbar .unlogin .favor {
	display: none;
}
.csdn-toolbar .unlogin .notify {
	display: none;
}
.csdn-toolbar .unlogin .ugc {
	display: none;
}
.csdn-toolbar .unlogin .profile {
	display: none;
}
.csdn_notice_tip {
	display: none !important;
}
.csdn-toolbar-skin-black {
	background: rgb(72, 82, 94); height: 40px; border-bottom-color: =
currentColor; border-bottom-width: medium; border-bottom-style: none;
}
.csdn-toolbar-skin-black li {
	height: 40px; border-right-color: rgb(72, 82, 94); border-left-color: =
rgb(116, 121, 126); border-right-width: 1px; border-left-width: 1px; =
border-right-style: solid; border-left-style: solid;
}
.csdn-toolbar-skin-black li.on {
	width: 40px; height: 40px; border-right-color: rgb(255, 255, 255); =
border-right-width: 1px; border-right-style: solid;
}
.csdn-toolbar-skin-black .icon .wrap {
	top: 30px;
}
.csdn-toolbar-skin-black .icon .curr-icon-wrap {
	width: 41px;
}
.csdn-toolbar-skin-black .apps {
	border-right-color: rgb(116, 121, 126);
}
.csdn-toolbar-skin-black .on .on-apps-icon .wrap {
	right: -12px;
}
.csdn-toolbar-skin-black .loginlink {
	background: none; color: rgb(221, 221, 221);
}
.csdn-toolbar-skin-black .loginlink a {
	color: rgb(221, 221, 221);
}
.csdn-toolbar-skin-black .loginlink a:hover {
	color: rgb(254, 254, 254);
}
.csdn-toolbar-skin-black .blog-icon {
	background-position: -162px -52px;
}
.csdn-toolbar-skin-black .down-icon {
	background-position: -162px -102px;
}
.csdn-toolbar-skin-black .bbs-icon {
	background-position: -162px -152px;
}
.csdn-toolbar-skin-black .space-icon {
	background-position: -162px -202px;
}
.csdn-toolbar-skin-black .code-icon {
	background-position: -162px -252px;
}
.csdn-toolbar-skin-black .share-icon {
	background-position: -162px -305px;
}
.csdn-toolbar-skin-black .tag-icon {
	background-position: -162px -354px;
}
.csdn-toolbar-skin-black .dashboard-icon {
	background-position: -162px -403px;
}
.csdn-toolbar-skin-black .news-icon {
	background-position: -162px -3px;
}
.csdn-toolbar-skin-black .tag-icon {
	background-position: -162px -354px;
}
.csdn-toolbar-skin-black .notify-icon {
	background-position: -162px -456px;
}
.csdn-toolbar-skin-black .ask-icon {
	background-position: -162px -503px;
}
.navbar-fixed-top {
	left: 0px; right: 0px; position: fixed; z-index: 1030;
}
.navbar-fixed-bottom {
	left: 0px; right: 0px; position: fixed; z-index: 1030;
}
.navbar-fixed-top {
	top: 0px;
}
.csdn-toolbar .icon-signout {
	line-height: 40px;
}
.csdn-toolbar .on .on-profile-icon .ft .icon-cog::before {
	display: none;
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout::before {
	display: none;
}

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.csdn.net/article/2014-12-15/common.css

body {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
div {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
label {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
dl {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
dt {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
dd {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
ul {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
ol {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
li {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
h1 {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
h2 {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
h3 {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
h4 {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
h5 {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
h6 {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
pre {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
code {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
form {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
fieldset {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
legend {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
p {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
blockquote {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
th {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
td {
	list-style: none; margin: 0px; padding: 0px; text-decoration: none;
}
body {
	background: rgb(255, 255, 255); font: 12px/24px Helvetica, Tahoma, =
Arial, sans-serif; text-align: center; color: rgb(51, 51, 51); =
text-decoration: none; font-size-adjust: none; font-stretch: normal;
}
input {
	vertical-align: middle;
}
checkbox {
	vertical-align: middle;
}
select {
	vertical-align: middle;
}
img {
	vertical-align: middle;
}
label {
	font-family: Tahoma; vertical-align: middle;
}
label input[type=3Dcheckbox] {
	vertical-align: middle;
}
img {
	border: currentColor; border-image: none;
}
a {
	cursor: pointer;
}
a:link {
	color: rgb(51, 51, 51); text-decoration: none;
}
a:visited {
	color: rgb(51, 51, 51); text-decoration: none;
}
a:hover {
	color: rgb(204, 0, 0); text-decoration: none;
}
a:active {
	color: rgb(204, 0, 0); text-decoration: none;
}
label {
	_font-family: Tahoma;
}
.tl {
	text-align: left;
}
.tr {
	text-align: right;
}
.tc {
	text-align: center;
}
.fl {
	float: left;
}
.fr {
	float: right;
}
.wrap {
	margin: 0px auto; width: 960px; text-align: left;
}
.head {
	height: 54px; overflow: hidden;
}
.head .logo {
	background: url("../images/logo_csdn.png") no-repeat left; width: 93px; =
height: 54px; float: left; display: inline-block;
}
.csdn-toolbar .logo .img {
	background: url("../images/logo_w.png") no-repeat 0px 0px;
}
.head .search {
	margin: 14px 0px 0px; border: 1px solid rgb(204, 204, 204); =
border-image: none; width: 300px; height: 24px; overflow: hidden; float: =
right;
}
.head .search .sear_input {
	padding: 0px 5px; border: currentColor; border-image: none; width: =
266px; height: 24px; color: rgb(51, 51, 51); line-height: 24px; =
font-size: 12px; float: left;
}
.head .search .sear_btn {
	background: url("../images/ico_search.gif") no-repeat center; border: =
currentColor; border-image: none; width: 24px; height: 24px; overflow: =
hidden; float: left; display: inline-block; cursor: pointer;
}
.nav {
	overflow: hidden;
}
.nav .lev_1 {
	border-bottom-color: rgb(225, 225, 225); border-bottom-width: 2px; =
border-bottom-style: solid; background-color: rgb(255, 255, 255);
}
.nav .lev_1::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.nav .lev_1 ul {
	margin: 0px auto; width: 960px;
}
.nav .lev_2 .tabcontent {
	margin: 0px auto; width: 960px;
}
.nav .lev_1 li {
	margin-right: 20px; float: left; display: block;
}
.nav .lev_1 li a {
	padding: 13px 6px; color: rgb(114, 114, 114); font-family: =
"=CE=A2=C8=ED=D1=C5=BA=DA","Helvetica Neue",Helvetica,Arial,sans-serif; =
font-size: 16px; text-decoration: none; display: block;
}
.nav .lev_1 li a.current {
	margin-bottom: -2px; border-bottom-color: rgb(220, 60, 0); =
border-bottom-width: 2px; border-bottom-style: solid;
}
.nav .lev_1 li a:hover {
	margin-bottom: -2px; border-bottom-color: rgb(220, 60, 0); =
border-bottom-width: 2px; border-bottom-style: solid;
}
.nav .lev_1 li a.current {
=09
}
.nav .lev_2 {
	height: 30px; line-height: 30px; overflow: hidden; background-color: =
rgb(245, 245, 245);
}
.nav .lev_2::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.nav .lev_2 div {
	display: none;
}
.nav .lev_2 ul {
=09
}
.nav .lev_2 li {
	float: left;
}
.nav .lev_2 li a {
	padding: 0px 20px; height: 35px; color: rgb(51, 51, 51); =
text-decoration: none; display: inline-block;
}
.nav .lev_2 li a:hover {
	color: rgb(204, 0, 0); background-color: rgb(255, 255, 255);
}
.nav .lev_2 #sc2 {
	padding-left: 55px;
}
.nav .lev_2 #sc3 {
	padding-left: 165px;
}
.nav .lev_2 #sc4 {
	padding-left: 260px;
}
.nav .lev_2 #sc5 {
	padding-left: 370px;
}
.nav .lev_2 #sc6 {
	padding-left: 460px;
}

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://news.csdn.net/css/content.css

@import url( common.css );
.ad_960 {
	height: 90px; overflow: hidden; margin-top: 10px; display: block;
}
.ad_960::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.ad_960 .ad_728 {
	width: 728px; overflow: hidden; float: left;
}
.ad_960 .ad_230 {
	width: 230px; overflow: hidden; float: right;
}
.ad_960 .ad_760 {
	width: 760px; overflow: hidden; float: left;
}
.ad_960 .ad_190 {
	width: 190px; overflow: hidden; float: right;
}
.title_top {
=09
}
.ad_590 {
	margin: 0px 0px 15px; text-align: center;
}
.ad_590 img {
	width: 590px;
}
.title_top h1 {
	height: 75px; line-height: 75px; font-family: Microsoft YaHei;
}
.title_top h1 a {
	color: rgb(51, 51, 51); text-decoration: none;
}
.title_top h1 .rss {
	background: url("../images/ico_rss.gif") no-repeat left; font: =
12px/24px Helvetica, Tahoma, Arial, sans-serif; margin: 24px 0px 0px; =
padding: 0px 0px 0px 30px; height: 24px; color: rgb(102, 102, 102); =
text-decoration: none; display: inline-block; font-size-adjust: none; =
font-stretch: normal;
}
.title_top h1 .journal {
	background: url("../images/journal.png") no-repeat left; font: =
12px/24px Helvetica, Tahoma, Arial, sans-serif; margin: 24px 0px 0px; =
padding: 0px 0px 0px 30px; height: 24px; color: rgb(102, 102, 102); =
text-decoration: none; display: inline-block; font-size-adjust: none; =
font-stretch: normal;
}
.fr {
	font: 12px/24px Helvetica, Tahoma, Arial, sans-serif; font-size-adjust: =
none; font-stretch: normal;
}
.fr form {
	line-height: 1em; margin-bottom: 1px; vertical-align: middle; display: =
inline-block;
}
.fr .search {
	border: 1px solid rgb(204, 204, 204); border-image: none; width: 300px; =
height: 24px; overflow: hidden;
}
.fr .search .sear_input {
	padding: 0px 5px; border: currentColor; border-image: none; width: =
266px; height: 24px; color: rgb(51, 51, 51); line-height: 24px; =
font-size: 12px; float: left;
}
.fr .search .sear_btn {
	background: url("../images/ico_search.gif") no-repeat center rgba(0, 0, =
0, 0); border: currentColor; border-image: none; width: 24px; height: =
24px; overflow: hidden; float: left; display: inline-block; cursor: =
pointer;
}
.brea_nav {
	height: 54px; line-height: 54px;
}
.brea_nav a {
	color: rgb(102, 102, 102); text-decoration: none;
}
.brea_nav em {
	margin: 0px 5px; font-family: sans-serif; font-style: normal; =
text-decoration: none;
}
.brea_nav .rss {
	background: url("../images/ico_rss.gif") no-repeat left; font: =
12px/24px Helvetica, Tahoma, Arial, sans-serif; margin: 15px 0px 0px; =
padding: 0px 0px 0px 30px; height: 24px; color: rgb(102, 102, 102); =
text-decoration: none; display: inline-block; font-size-adjust: none; =
font-stretch: normal;
}
.top_imglist {
	margin: 0px 0px 40px; width: 960px; overflow: hidden; display: block;
}
.top_imglist::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.top_imglist ul {
	width: 1005px;
}
.top_imglist li {
	margin: 0px 32px 0px 0px; width: 216px; float: left; position: =
relative;
}
.top_imglist li img {
	padding: 2px; border: 1px solid rgb(204, 204, 204); border-image: none; =
width: 210px; height: 140px;
}
.top_imglist li span {
	background: rgb(0, 0, 0); left: 3px; height: 30px; text-align: center; =
right: 3px; bottom: 3px; line-height: 30px; font-size: 14px; =
font-weight: bold; display: block; position: absolute; opacity: 0.6; =
-moz-opacity: 0.6;
}
.top_imglist li span a {
	color: rgb(255, 255, 255); text-decoration: none; position: relative;
}
.content {
	margin: 0px 0px 50px; display: block;
}
.content::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.content .left {
	margin: 0px 19px 0px 0px; width: 620px; overflow: hidden; =
padding-right: 19px; border-right-color: rgb(221, 221, 221); =
border-right-width: 1px; border-right-style: solid; float: left;
}
.content .right {
	width: 300px; overflow: hidden; float: left;
}
.content .left .news {
=09
}
.content .left .news .unit {
	background: url("../images/line_1.gif") repeat-x bottom; margin: 0px =
0px 20px; padding: 0px 0px 11px;
}
.content .left .news .unit h1 {
	font: 28px/36px "Microsoft YaHei"; margin: 0px 0px 5px; =
font-size-adjust: none; font-stretch: normal;
}
.content .left .news .unit h4 {
	font: 12px/24px Helvetica, Tahoma, Arial, sans-serif; margin: 0px 0px =
10px; color: rgb(153, 153, 153); font-size-adjust: none; font-stretch: =
normal;
}
.content .left .news .unit h4 span {
	margin: 0px 8px;
}
.content .left .news .unit dl {
	margin: 0px 0px 10px; display: block;
}
.content .left .news .unit dl::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.content .left .news .unit dt {
	margin: 0px 10px 0px 0px; width: 180px; float: left;
}
.content .left .news .unit dt img {
	width: 180px; height: 120px;
}
.content .left .news .unit dd {
	font: 14px/24px "Microsoft YaHei"; color: rgb(102, 102, 102); overflow: =
hidden; max-height: 120px; font-size-adjust: none; font-stretch: normal;
}
.content .left .news .unit .tag {
	_zoom: 1;
}
.content .left .news .unit .tag::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.content .left .news .unit .tag a {
	background: rgb(243, 243, 243); margin: 0px 10px 10px 0px; padding: 3px =
10px; border-radius: 10px; line-height: 14px; text-decoration: none; =
float: left; display: block; -webkit-border-radius: 10px; =
-moz-border-radius: 10px; -khtml-border-radius: 10px;
}
.content .left .news .unit .tag a:hover {
	background: rgb(204, 0, 0); color: rgb(255, 255, 255);
}
.content .left .ad_newslist {
	background: url("../images/line_1.gif") repeat-x bottom; margin: 0px =
0px 20px; padding: 0px 0px 21px;
}
.content .left .ad_newslist dl {
=09
}
.content .left .ad_newslist dt {
	font-size: 14px; font-weight: bold;
}
.content .left .ad_newslist dt a {
	text-decoration: underline;
}
.content .left .ad_newslist dd {
=09
}
.content .left .ad_newslist .link a {
	color: rgb(153, 153, 153);
}
.detail {
	font-size: 14px;
}
.detail h1.title {
	font: 28px/36px "Microsoft YaHei"; margin: 0px 0px 5px; =
font-size-adjust: none; font-stretch: normal;
}
.detail h1.title a {
	color: rgb(51, 51, 51);
}
.detail h4 {
	font: 12px/24px Helvetica, Tahoma, Arial, sans-serif; margin: 0px 0px =
10px; color: rgb(153, 153, 153); display: block; font-size-adjust: none; =
font-stretch: normal;
}
.detail h4::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.detail h4 .tit_bar {
	float: left;
}
.detail h4 span {
	margin: 0px 8px;
}
.detail h4 .t_share {
	margin: 2px 0px 0px; float: left;
}
.detail h4 .t_share span {
=09
}
.detail .tag {
	margin: 0px 0px 20px; display: block;
}
.detail .tag::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.detail .tag a {
	background: rgb(243, 243, 243); margin: 0px 10px 10px 0px; padding: 0px =
10px; border-radius: 10px; line-height: 20px; text-decoration: none; =
float: left; display: block; -webkit-border-radius: 10px; =
-moz-border-radius: 10px; -khtml-border-radius: 10px;
}
.detail .tag a:hover {
	background: rgb(204, 0, 0); color: rgb(255, 255, 255);
}
.detail .summary {
	background: rgb(247, 247, 247); margin: 0px 0px 1.5em; padding: 5px =
10px;
}
.detail .con {
	margin: 0px 0px 30px;
}
.detail .con h1 {
	margin: 0.75em 0px;
}
.detail .con h2 {
	margin: 0.75em 0px;
}
.detail .con h3 {
	margin: 0.75em 0px;
}
.detail .con h4 {
	margin: 0.75em 0px;
}
.detail .con h4 {
	color: rgb(51, 51, 51); font-size: 1em; font-weight: bold;
}
.detail .con p {
	margin: 0px 0px 1.5em;
}
.detail .con blockquote {
	margin: 0px 0px 1.5em;
}
.detail .con .quote {
	background: rgb(253, 253, 223); margin: 15px; padding: 10px 15px; =
border: 1px solid rgb(204, 204, 204); border-image: none;
}
.detail .con ul {
	margin: 0px 0px 1em 20px;
}
.detail .con ul li {
=09
}
.detail .con ol {
	list-style: decimal; margin: 0px 0px 1em 30px;
}
.detail .con ol li {
	list-style: decimal;
}
.detail .con pre {
	background: rgb(247, 247, 247); margin: 0px 0px 1em; overflow: hidden; =
white-space: pre-wrap;
}
.detail .con pre ol {
	background: rgb(247, 247, 247); margin: 0px 0px 1px 3em; padding: 5px =
0px; border-left-color: rgb(20, 107, 0); border-left-width: 3px; =
border-left-style: solid;
}
.detail .con pre ol li {
	background: rgb(255, 255, 255); padding: 0px 3px 0px 10px; color: =
rgb(92, 92, 92);
}
.detail .con pre ol li.alt {
	color: inherit;
}
.detail .con pre ol li span {
	background: rgb(255, 255, 255);
}
.detail .con pre .comment {
	color: rgb(0, 130, 0);
}
.detail .guide {
	margin: 0px 0px 10px;
}
.detail .guide h3 {
	font: bold 14px/24px Helvetica, Tahoma, Arial, sans-serif; margin: 0px =
0px 5px; border-bottom-color: rgb(204, 204, 204); border-bottom-width: =
1px; border-bottom-style: solid; font-size-adjust: none; font-stretch: =
normal;
}
.detail .guide ul {
	margin: 0px 0px 5px; display: block;
}
.detail .guide ul::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.detail .guide li {
	padding: 0px 15px 0px 0px; overflow: hidden; white-space: nowrap; =
-ms-text-overflow: ellipsis;
}
.detail .guide p {
	color: rgb(102, 102, 102);
}
.detail .share {
	margin: 0px 0px 15px; text-align: right; font-size: 12px; display: =
block;
}
.detail .share::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.detail .share .fav {
	background: url("../images/ico_fav.png") no-repeat left 2px; margin: =
0px 10px 0px 0px; padding: 0px 0px 0px 20px; height: 21px; line-height: =
21px; text-decoration: none; display: inline-block;
}
.detail .share .weibo_sina {
	background: url("../images/ico_weibo_share.png") no-repeat 0px 0px; =
width: 16px; height: 16px; line-height: 99px; overflow: hidden; =
text-decoration: none; vertical-align: middle; display: inline-block;
}
.detail .share .bshareDiv {
	float: right;
}
.detail .digg {
	margin: 0px 0px 40px; text-align: center; display: block;
}
.detail .digg::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.detail .digg dl {
	margin: 0px 5px; padding: 1px; border-radius: 3px; border: 1px solid =
rgb(204, 204, 204); border-image: none; width: 77px; text-align: center; =
display: inline-block; -webkit-border-radius: 3px; -moz-border-radius: =
3px; -khtml-border-radius: 3px;
}
.detail .digg dt {
	background: url("../images/digg_bg.png") no-repeat 0px 0px; font: =
18px/36px Microsoft YaHei; width: 77px; height: 36px; color: rgb(255, =
255, 255); cursor: pointer; font-size-adjust: none; font-stretch: =
normal;
}
.detail .digg dd {
	height: 20px; color: rgb(102, 102, 102); line-height: 20px;
}
.detail .digg .support {
=09
}
.detail .digg .oppose {
=09
}
.detail .digg .support {
	_margin-left: 115px;
}
.detail .digg .oppose {
=09
}
.detail .digg dl.disable dt {
	background: url("../images/not_digg_bg.gif") no-repeat 0px 0px;
}
.detail .writer {
=09
}
.detail .writer h3 {
	font: bold 14px/24px Helvetica, Tahoma, Arial, sans-serif; margin: 0px =
0px 5px; border-bottom-color: rgb(204, 204, 204); border-bottom-width: =
1px; border-bottom-style: solid; font-size-adjust: none; font-stretch: =
normal;
}
.detail .writer dl {
	padding: 10px 0px; display: block;
}
.detail .writer dl::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.detail .writer dt {
	margin: 0px 10px 0px 0px; width: 56px; float: left;
}
.detail .writer dt img {
	padding: 2px; border: 1px solid rgb(204, 204, 204); border-image: none; =
width: 50px; height: 50px;
}
.detail .writer dd {
	width: 560px; color: rgb(102, 102, 102); line-height: 18px; font-size: =
12px; float: left;
}
.detail .related {
	margin: 0px 0px 20px; color: rgb(102, 102, 102); font-size: 12px;
}
.detail .related a {
	background: rgb(243, 243, 243); margin: 0px 10px 0px 0px; padding: 3px =
10px; border-radius: 10px; text-decoration: none; -webkit-border-radius: =
10px; -moz-border-radius: 10px; -khtml-border-radius: 10px;
}
.detail .related a:hover {
	background: rgb(204, 0, 0); color: rgb(255, 255, 255);
}
.detail .relational {
	margin: 0px 0px 20px;
}
.detail .relational .list_1 {
	display: block;
}
.detail .relational .list_1::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.detail .relational .list_1 li {
	padding: 0px 15px 0px 9px; width: 290px; overflow: hidden; font-size: =
12px; float: left; white-space: nowrap; -ms-text-overflow: ellipsis;
}
.detail .relational .list_1 li a {
	color: rgb(102, 102, 102);
}
.detail div.ad {
	margin: 0px 0px 20px; text-align: center;
}
.comments {
	display: block;
}
.comments::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.comments li {
	display: block;
}
.comments li::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
#comment {
	border: currentColor !important; border-image: none !important;
}
#comment a {
	color: rgb(0, 102, 204) !important;
}
#comment #commentlist {
	margin: 0px !important;
}
.commentlist li {
	border-bottom-color: rgb(204, 204, 204) !important; =
border-bottom-width: 1px !important; border-bottom-style: solid =
!important;
}
.commentlist li li {
	background: url("../images/line_1.gif") repeat-x top; border: =
currentColor !important; border-image: none !important;
}
.commentlist li p {
	color: rgb(102, 102, 102) !important;
}
.commentlist li span.t {
	background: none !important; padding: 0px !important; color: rgb(0, =
102, 204) !important;
}
.ccommentlist {
	margin: 0px !important;
}
.commentform {
	margin: 20px 0px !important;
}
.commentform textarea {
	padding: 5px 8px; border: 1px solid rgb(204, 204, 204) !important; =
border-image: none !important; width: 612px !important; color: rgb(102, =
102, 102) !important;
}
.commentform .submit {
	background: rgb(220, 227, 242) !important; border: 1px solid rgb(205, =
216, 232) !important; border-image: none !important; height: 22px; =
color: rgb(51, 51, 51) !important; line-height: 22px !important;
}
#cmtRplBlock {
	background: rgb(244, 248, 254) !important; margin: 10px 0px; border: =
currentColor !important; border-image: none !important;
}
.comments #cmtRplBlock textarea {
	width: 548px !important;
}
.commentlist li li #cmtRplBlock textarea {
	width: 475px !important;
}
.cmtNotice {
	color: rgb(102, 102, 102) !important; line-height: 20px !important; =
border-top-color: currentColor !important; border-top-width: medium =
!important; border-top-style: none !important;
}
#commentpage a.gray {
	background: rgb(255, 255, 255) !important; font: 12px/22px Arial, =
Helvetica, sans-serif; margin: 0px 2px !important; padding: 0px 8px =
!important; border-radius: 2px; border: 1px solid rgb(219, 229, 238) =
!important; border-image: none !important; height: 22px !important; =
color: rgb(51, 51, 51) !important; vertical-align: middle; display: =
inline-block !important; cursor: pointer; font-size-adjust: none; =
font-stretch: normal; -webkit-border-radius: 2px; -moz-border-radius: =
2px; -khtml-border-radius: 2px;
}
#commentpage a.selc {
	background: rgb(7, 81, 154) !important; margin: 0px 3px !important; =
border-radius: 2px; border: currentColor !important; border-image: none =
!important; height: 24px !important; color: rgb(255, 255, 255) =
!important; line-height: 24px !important; text-decoration: none; =
vertical-align: middle; -webkit-border-radius: 2px; -moz-border-radius: =
2px; -khtml-border-radius: 2px;
}
#commentpage a:hover {
	background: rgb(7, 81, 154) !important; margin: 0px 3px !important; =
border-radius: 2px; border: currentColor !important; border-image: none =
!important; height: 24px !important; color: rgb(255, 255, 255) =
!important; line-height: 24px !important; text-decoration: none; =
vertical-align: middle; -webkit-border-radius: 2px; -moz-border-radius: =
2px; -khtml-border-radius: 2px;
}
#commentpage a.selc {
	padding: 5px 8px !important;
}
.page_nav {
	font: 12px/24px Arial; padding: 15px 0px; text-align: center; color: =
rgb(102, 102, 102); clear: both; font-size-adjust: none; font-stretch: =
normal;
}
#commentpage {
	font: 12px/24px Arial; padding: 15px 0px; text-align: center; color: =
rgb(102, 102, 102); clear: both; font-size-adjust: none; font-stretch: =
normal;
}
.page_nav a {
	background: rgb(255, 255, 255); font: 12px/22px Arial, Helvetica, =
sans-serif; margin: 0px 2px; padding: 0px 8px; border-radius: 2px; =
border: 1px solid rgb(219, 229, 238); border-image: none; height: 22px; =
color: rgb(51, 51, 51); display: inline-block; cursor: pointer; =
font-size-adjust: none; font-stretch: normal; -webkit-border-radius: =
2px; -moz-border-radius: 2px; -khtml-border-radius: 2px;
}
#commentpage a {
	background: rgb(255, 255, 255); font: 12px/22px Arial, Helvetica, =
sans-serif; margin: 0px 2px; padding: 0px 8px; border-radius: 2px; =
border: 1px solid rgb(219, 229, 238); border-image: none; height: 22px; =
color: rgb(51, 51, 51); display: inline-block; cursor: pointer; =
font-size-adjust: none; font-stretch: normal; -webkit-border-radius: =
2px; -moz-border-radius: 2px; -khtml-border-radius: 2px;
}
.page_nav strong {
	background: rgb(204, 0, 0); margin: 0px 3px; padding: 0px 8px; =
border-radius: 2px; border: currentColor; border-image: none; height: =
24px; color: rgb(255, 255, 255); line-height: 24px; font-weight: normal; =
text-decoration: none; display: inline-block; -webkit-border-radius: =
2px; -moz-border-radius: 2px; -khtml-border-radius: 2px;
}
.page_nav a:hover {
	background: rgb(204, 0, 0); margin: 0px 3px; border: currentColor; =
border-image: none; height: 24px; color: rgb(255, 255, 255); =
line-height: 24px; text-decoration: none;
}
.page_nav a.on {
	background: rgb(204, 0, 0); margin: 0px 3px; border: currentColor; =
border-image: none; height: 24px; color: rgb(255, 255, 255); =
line-height: 24px; text-decoration: none;
}
.page_nav a.select {
	cursor: default;
}
.page_nav .view_all {
	text-align: center; display: block;
}
.page_nav .view_all a {
	margin: 0px; padding: 0px; border: currentColor; border-image: none; =
height: auto; color: rgb(0, 102, 204); line-height: 24px;
}
.page_nav .view_all a:hover {
	background: none; margin: 0px; padding: 0px; height: auto;
}
.ad_300_250 {
	margin: 0px 0px 15px;
}
.ad_300_250 img {
	width: 300px; height: 250px;
}
.ad_475_60 {
	margin: 0px 0px 15px;
}
.ad_475_60 img {
	width: 475px; height: 60px;
}
.atte_us {
	margin: 0px 0px 20px; padding: 10px; border: 1px solid rgb(245, 245, =
245); border-image: none; text-align: right; color: rgb(102, 102, 102);
}
.atte_us li {
=09
}
.atte_us .input_email {
	padding: 0px 5px; border: 1px solid rgb(204, 204, 204); border-image: =
none; width: 268px; height: 22px; color: rgb(102, 102, 102); =
line-height: 22px; display: block;
}
.atte_us .btn_sub {
	background: url("../images/sprite_att.png") no-repeat 0px -192px; =
margin: 10px 0px 0px; padding: 0px 3px 5px 0px; border: currentColor; =
border-image: none; width: 109px; height: 33px; text-align: center; =
color: rgb(61, 86, 104); line-height: 28px; font-size: 14px; cursor: =
pointer;
}
.atte_us dl {
	margin: 15px 0px 0px; border-top-color: rgb(204, 204, 204); =
border-top-width: 1px; border-top-style: solid;
}
.atte_us dd {
	margin: 15px 0px 0px; line-height: 32px; font-size: 14px;
}
.atte_us .weibo_sina {
	background: url("../images/sprite_att.png") no-repeat; padding: 0px 0px =
0px 40px;
}
.atte_us .android {
	background: url("../images/sprite_att.png") no-repeat; padding: 0px 0px =
0px 40px;
}
.atte_us .ios {
	background: url("../images/sprite_att.png") no-repeat; padding: 0px 0px =
0px 40px;
}
.atte_us .weibo_sina {
	background-position: 0px 0px;
}
.atte_us .android {
	background-position: 0px -64px;
}
.atte_us .ios {
	background-position: 0px -128px;
}
.hot_weekly {
	margin: 0px 0px 20px;
}
.hot_weekly li {
	width: 290px; overflow: hidden; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.report {
	margin: 0px 0px 20px;
}
.report dl {
	display: block;
}
.report dl::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.report dt {
	margin: 0px 0px 0px 10px; width: 100px; float: right;
}
.report dt img {
	width: 100px; height: 66px;
}
.report dd {
	background: url("../images/list_image_red.gif") no-repeat left 10px; =
padding: 0px 0px 0px 9px; color: rgb(102, 102, 102);
}
.report dd.report_dd_dot {
	padding-bottom: 10px; margin-bottom: 10px; border-bottom-color: =
rgb(204, 204, 204); border-bottom-width: 1px; border-bottom-style: =
dashed;
}
.report dd a {
=09
}
.art_blog {
	margin: 0px 0px 20px;
}
.art_blog .con li {
	width: 290px; overflow: hidden; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.topic {
	margin: 0px 0px 20px;
}
.topic dt {
	background: url("../images/list_image_red.gif") no-repeat left 10px; =
padding: 0px 0px 0px 9px;
}
.topic dd {
	padding: 0px 0px 0px 9px;
}
.party {
	margin: 0px 0px 20px;
}
.party table {
=09
}
.party table td {
	padding: 0px 0px 10px; line-height: 20px;
}
.party table th {
	background: url("../images/time_bg.gif") no-repeat 0px 2px; padding: =
0px 4px 0px 5px; text-align: left; color: rgb(255, 255, 255); font-size: =
14px;
}
.party .btn_sign_up {
	background: url("../images/btn_join.png") no-repeat 0px 0px; width: =
70px; height: 26px; text-align: center; color: rgb(255, 255, 255) =
!important; line-height: 26px; overflow: hidden; text-decoration: none; =
display: inline-block;
}
.party td .btn_sign_up {
	margin: 5px 0px 0px;
}
.hot_tag {
=09
}
.hot_tag ul {
	display: block;
}
.hot_tag ul::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.hot_tag li {
	width: 85px; overflow: hidden; float: left; white-space: nowrap; =
-ms-text-overflow: ellipsis;
}
.hot_topic {
	margin: 20px 0px 40px; width: 960px; overflow: hidden; clear: both;
}
.hot_topic h1 {
	background: url("../images/tit_bg_1.gif") repeat-x center; font: =
18px/18px Microsoft YaHei; margin: 0px 0px 20px; font-size-adjust: none; =
font-stretch: normal;
}
.hot_topic h1 .title {
	background: rgb(204, 0, 0); padding: 5px 10px; height: 18px; color: =
rgb(255, 255, 255); display: inline-block;
}
.hot_topic ul {
	width: 1010px; display: block;
}
.hot_topic ul::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.hot_topic li {
	margin: 0px 45px 0px 0px; width: 156px; overflow: hidden; float: left;
}
.hot_topic li img {
	padding: 2px; border: 1px solid rgb(204, 204, 204); border-image: none; =
width: 150px; height: 100px;
}
.hot_topic li span {
	text-align: center; display: block;
}
.right .job {
	margin: 0px 0px 40px;
}
.right .job #Scroll {
	overflow: hidden;
}
.right .job #ScrollMe {
	height: 120px; overflow: hidden;
}
.right .job li {
	width: 300px; overflow: hidden; white-space: nowrap; -ms-text-overflow: =
ellipsis;
}
.tit_1 {
	font: 18px/18px Microsoft YaHei; margin: 0px 0px 20px; =
font-size-adjust: none; font-stretch: normal;
}
.tit_2 {
	background: url("../images/point_gray.gif") repeat-x bottom; margin: =
0px 0px 20px; line-height: 24px; font-size: 14px;
}
.tit_2 a {
	color: rgb(51, 51, 51); text-decoration: none;
}
.tit_2 p {
	background: url("../images/point_red.gif") repeat-x bottom; =
padding-bottom: 5px; display: inline-block;
}
.tit_3 {
	margin: 0px 0px 30px; height: 36px; line-height: 36px; font-size: 36px;
}
.tit_3 .rss {
	background: url("../images/ico_rss.gif") no-repeat left; font: =
12px/24px Helvetica, Tahoma, Arial, sans-serif; padding: 0px 0px 0px =
30px; height: 24px; color: rgb(102, 102, 102); text-decoration: none; =
display: inline-block; font-size-adjust: none; font-stretch: normal;
}
.tab_1 {
	background: url("../images/tab_1_bg.gif") repeat-x bottom; margin: 0px =
0px 10px; font-size: 14px;
}
.tab_1 ul {
	display: block;
}
.tab_1 ul::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.tab_1 li {
	padding: 0px 15px; font-weight: normal; float: left; cursor: pointer;
}
.tab_1 li.hover {
	background: rgb(255, 255, 255); border-width: 1px 1px medium; =
border-style: solid solid none; border-color: rgb(204, 204, 204) =
rgb(204, 204, 204) currentColor; border-image: none; font-weight: bold;
}
.tab_1 li a {
	color: rgb(51, 51, 51);
}
.list_1 {
=09
}
.list_1 li {
	background: url("../images/list_image_red.gif") no-repeat left 10px; =
padding: 0px 0px 5px 9px;
}
.right {
	font: 13px/24px Helvetica, Tahoma, Arial, sans-serif; font-size-adjust: =
none; font-stretch: normal;
}
.right h2 {
	font-size: 18px;
}
.rtbrill dt {
	background: url("../images/point_gray.gif") repeat-x bottom; margin: =
0px 0px 20px; line-height: 24px; font-size: 18px;
}
.rtbrill dt p {
	background: url("../images/point_red.gif") repeat-x bottom; =
padding-bottom: 5px; display: inline-block;
}
#digestComment dd p {
	color: rgb(51, 51, 51) !important; line-height: 24px !important; =
font-size: 13px !important;
}
#digestComment dd {
	padding-bottom: 5px; margin-bottom: 10px; border-bottom-color: rgb(204, =
204, 204); border-bottom-width: 1px; border-bottom-style: dashed;
}
.red {
	color: rgb(204, 0, 0);
}
.right .orangebg {
	padding-bottom: 0px !important; border-bottom-color: currentColor =
!important; border-bottom-width: medium !important; border-bottom-style: =
none !important;
}
.right #cmtRplBlock {
	padding: 0px 10px; width: 280px !important;
}
.right .commentform textarea {
	width: 260px !important;
}
.commentform {
	margin-top: 0px !important; margin-bottom: 0px !important;
}
.commentform form {
	padding-bottom: 5px !important;
}
.commentform .submit {
	line-height: 18px !important;
}
.news_content a:link {
	color: rgb(0, 102, 204);
}
.news_content a:visited {
	color: rgb(0, 102, 204);
}
.news_content a:hover {
	color: rgb(204, 0, 0);
}
.report .title {
	font-weight: bold;
}
#cmtRplBlock {
	background: none !important;
}
.comments #cmtRplBlock textarea {
	width: 515px !important;
}
.commentlist li li #cmtRplBlock textarea {
	width: 450px !important;
}
.header {
	margin: 0px 0px 45px; padding: 21px 0px 0px; height: 54px;
}
.header .logo_slogan {
	background: url("../images/logo_slogan.png") no-repeat 0px 0px; width: =
158px; height: 54px; overflow: hidden; float: left; display: =
inline-block; cursor: pointer;
}
.news_list {
=09
}
.news_list dl {
	background: url("../images/line_1.gif") repeat-x bottom; margin: 0px =
0px 30px; padding: 0px 0px 31px; display: block;
}
.news_list dl::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.news_list dt {
	width: 140px; color: rgb(153, 153, 153); font-size: 24px; float: left;
}
.news_list dd {
	padding: 0px 0px 0px 20px; width: 455px; font-size: 14px; =
border-left-color: rgb(204, 204, 204); border-left-width: 4px; =
border-left-style: solid; float: left;
}
.news_list dd li {
=09
}
.news_list dd li a {
	width: 455px; overflow: hidden; display: inline-block; white-space: =
nowrap; -ms-text-overflow: ellipsis;
}
.news_list dd li .time {
	width: 118px; color: rgb(153, 153, 153); float: right;
}
.tag_hot {
=09
}
.tag_hot ul {
	display: block;
}
.tag_hot ul::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.tag_hot li {
	background: url("../images/point.gif") no-repeat left 10px; padding: =
0px 10px 0px 9px; width: 81px; overflow: hidden; float: left; =
white-space: nowrap; -ms-text-overflow: ellipsis;
}
.right .sitemap {
	background: url("../images/sitemap_bg.png") no-repeat 0px 0px; margin: =
0px 0px 20px; height: 72px; color: rgb(51, 51, 51); line-height: 86px; =
text-indent: 80px; overflow: hidden; font-family: Microsoft YaHei; =
font-size: 20px;
}
.right .sitemap a {
	height: 72px; display: block;
}
.top_arrow {
	margin: 0px; padding: 0px; border: 0px currentColor; border-image: =
none; width: 35px; height: auto; right: 40px; bottom: 150px; display: =
block; position: fixed; z-index: 2147483647; cursor: pointer; opacity: =
0.5;
}
.con table {
	border-collapse: collapse;
}
.con td {
	padding: 5px; border: 2px solid rgb(221, 221, 221); border-image: none;
}
.con th {
	padding: 5px; border: 2px solid rgb(221, 221, 221); border-image: none;
}
.con .syntaxhighlighter table {
	border: currentColor; border-image: none;
}
.con .syntaxhighlighter td {
	border: currentColor; border-image: none;
}
.con .syntaxhighlighter th {
	border: currentColor; border-image: none;
}
.detail .con pre {
	background: rgb(247, 247, 247); margin: 0px 0px 1em; padding: 10px; =
border: 1px solid rgb(221, 221, 221); border-image: none; overflow: =
hidden; white-space: pre-wrap;
}
.ad_300_200 {
	margin: 0px 0px 20px;
}
.ad_300_200 img {
	width: 300px; height: 200px;
}
.detail .con .copyright {
	font-weight: bold;
}
.share ul li {
	overflow: hidden; white-space: nowrap; -ms-text-overflow: ellipsis;
}
.share dt {
	padding-bottom: 10px; margin-bottom: 10px; border-bottom-color: =
rgb(204, 204, 204); border-bottom-width: 1px; border-bottom-style: =
dotted;
}
.share dt img {
	width: 150px; margin-right: 10px; float: left;
}
.content .share {
	background: none; height: auto;
}
.box {
	display: block;
}
.box::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.box {
	margin-top: 15px;
}
.box h2 a {
	font-weight: bold;
}
.clearfix {
	display: block;
}
.clearfix::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.box dt {
	font-size: 14px; font-weight: bold;
}
.hm-t-txt-wrapper {
	margin-top: 20px;
}
.hm-t-header {
	display: none;
}
html #hm_t_7245 div.hm-t-txt-wrapper {
	padding-left: 10px;
}

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/css/ask_float_block.css

@font-face {
	font-family: FontAwesome;
	src: =
url(//ask.csdn.net/assets/fontawesome-webfont-d8970a29b6bda4953188db1bf11=
caa77.eot?#iefix&v=3D3.2.1) format("embedded-opentype"), =
url(//ask.csdn.net/assets/fontawesome-webfont-b6eacf39cdd874409fca9bbfa0f=
d5524.woff?v=3D3.2.1) format("woff"), =
url(//ask.csdn.net/assets/fontawesome-webfont-e6510d64f0dee7530f4c35b4ecc=
be2eb.ttf?v=3D3.2.1) format("truetype"), =
url(//ask.csdn.net/assets/fontawesome-webfont-4bb899176c47fb8cc6662a8929e=
ebc8a.svg#fontawesomeregular?v=3D3.2.1) format("svg");
	font-weight: normal;
	font-style: normal;
}
.clearfix::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
body > .marker {
	background: rgb(0, 0, 0); transition:0.5s ease-in; left: 0px; top: 0px; =
width: 0px; height: 0px; position: absolute; z-index: 900; opacity: 0;
}
body > .pop_edit {
	background: rgb(255, 255, 255); border: 1px solid rgb(220, 220, 220); =
border-image: none; left: 50%; top: 50%; clear: both; font-family: =
"microsoft yahei"; margin-top: -270px; margin-left: -333px; position: =
fixed; z-index: 1000; opacity: 0;
}
body > .pop_edit * {
	box-sizing: border-box;
}
body > .pop_edit .active.icon-preview::before {
	color: rgb(0, 68, 204) !important; position: relative; z-index: 10002;
}
body > .pop_edit .active.icon-preview::after {
	background: rgba(255, 255, 255, 0.7); margin: -10px 0px 0px -520px; =
width: 600px; height: 40px; position: absolute; z-index: 3; content: "";
}
body > .pop_edit .cm_box {
	position: relative;
}
body > .pop_edit .cm_box .cm_dialog {
	background: rgba(0, 0, 0, 0.01); left: 0px; top: 0px; width: 100%; =
height: 100%; display: none; position: fixed; z-index: 10000;
}
body > .pop_edit .pop_cm {
	background: rgb(255, 255, 255); margin: -5px 0px 0px 275px; padding: =
10px; border: 1px solid rgb(204, 204, 204); border-image: none; top: =
48px; width: 300px; display: none; position: absolute; z-index: 10001; =
box-shadow: 2px 2px 10px rgba(0,0,0,0.3);
}
body > .pop_edit .pop_cm::after {
	border-width: 10px; border-style: solid; border-color: transparent =
transparent rgb(204, 204, 204); border-image: none; left: 40px; top: =
-20px; position: absolute; content: "";
}
body > .pop_edit .pop_cm::before {
	border-width: 10px; border-style: solid; border-color: transparent =
transparent rgb(204, 204, 204); border-image: none; left: 40px; top: =
-20px; position: absolute; content: "";
}
body > .pop_edit .pop_cm::after {
	top: -19px; border-bottom-color: rgb(255, 255, 255);
}
body > .pop_edit .cm_add_img.pop_cm {
	margin-left: 310px;
}
body > .pop_edit .pop_cm .nav-tabs {
	margin: -5px -10px 10px; padding: 5px 10px; height: 30px; font-size: =
12px; border-bottom-color: rgb(221, 221, 221); border-bottom-width: 1px; =
border-bottom-style: solid;
}
body > .pop_edit .pop_cm .nav-tabs a {
	padding: 3px 20px; border: 1px solid transparent; border-image: none; =
height: 25px; color: rgb(153, 153, 153); text-decoration: none; display: =
inline-block;
}
body > .pop_edit .pop_cm .nav-tabs a.active {
	border-color: rgb(221, 221, 221) rgb(221, 221, 221) rgb(255, 255, 255); =
border-radius: 3px 3px 0px 0px; color: rgb(102, 102, 102);
}
body > .pop_edit .pop_cm .up_img_loading {
	background: rgba(255, 255, 255, 0.8); left: 0px; top: 0px; width: 100%; =
height: 100%; text-align: center; line-height: 100px; display: none; =
position: absolute; z-index: 2;
}
body > .pop_edit .pop_cm .active.up_img_loading {
	display: block;
}
body > .pop_edit .pop_cm .tab_panel {
	display: none;
}
body > .pop_edit .pop_cm .active.tab_panel {
	display: block;
}
body > .pop_edit .pop_cm .set_img {
	margin: 0px; height: 101px; position: relative;
}
body > .pop_edit .pop_cm .set_img iframe {
	border: 0px currentColor; border-image: none; width: 100%; height: =
101px;
}
body > .pop_edit .pop_cm .set_img .markdown_file_name {
	padding: 5px; width: 100%; color: rgb(153, 153, 153); overflow: hidden;
}
body > .pop_edit .pop_cm .set_img label {
	background: 0px 0px rgb(221, 221, 221); padding: 0px 15px; top: 0px; =
right: 0px; line-height: 28px; font-size: 12px; font-weight: normal; =
border-left-color: rgb(204, 204, 204); border-left-width: 1px; =
border-left-style: solid; position: absolute;
}
body > .pop_edit .pop_cm .markdown_file_msg {
	margin: -10px 0px 10px; font-size: 14px;
}
body > .pop_edit .pop_cm input {
	padding: 5px 10px; border: 1px solid rgb(221, 221, 221); border-image: =
none; width: 278px; margin-bottom: 10px;
}
body > .pop_edit .pop_cm .text-right {
	text-align: right;
}
body > .pop_edit .pop_cm .btn {
	background: rgb(153, 153, 153); font: 12px/20px "microsoft yahei"; =
padding: 2px 10px; color: rgb(255, 255, 255); display: inline-block; =
cursor: pointer; font-size-adjust: none; font-stretch: normal;
}
body > .pop_edit h3 {
	height: 50px; color: rgb(102, 102, 102); line-height: 50px; =
padding-left: 19px; font-family: microsoft yahei; font-size: 18px; =
font-weight: normal; margin-top: 0px; margin-bottom: 10px; =
border-bottom-color: rgb(240, 240, 240); border-bottom-width: 1px; =
border-bottom-style: solid; position: relative;
}
body > .pop_edit h3 .err {
	margin: 0px; left: 0px; top: inherit; width: 99%; text-align: left; =
bottom: -23px; padding-left: 5px; font-size: 12px; position: absolute;
}
body > .pop_edit .close {
	background: none; top: 8px; right: 19px; color: rgb(85, 85, 85); =
font-size: 30px; text-decoration: none; position: absolute;
}
body > .pop_edit .close:hover {
	color: rgb(85, 136, 204);
}
body > .pop_edit .ask_float_channel:link {
	color: rgb(69, 139, 202); cursor: pointer;
}
body > .pop_edit .ask_float_channel:visited {
	color: rgb(69, 139, 202); cursor: pointer;
}
body > .pop_edit .ask_float_channel:hover {
	color: rgb(69, 139, 202); cursor: pointer;
}
body > .pop_edit .ask_float_channel:focus {
	color: rgb(69, 139, 202); cursor: pointer;
}
body > .pop_edit .ask_float_span {
	left: 70px; top: 14px; color: rgb(102, 102, 102); font-family: =
"microsoft yahei"; font-size: 14px; position: absolute;
}
body > .pop_edit .context {
	padding: 0px 20px 10px; color: rgb(51, 51, 51); font-size: 16px;
}
body > .pop_edit .red {
	padding: 0px; left: -11px; top: 50%; color: rgb(255, 0, 0); margin-top: =
-10px; display: inline-block; position: absolute;
}
body > .pop_edit .success {
	padding: 15px 20px 20px; text-align: right; border-top-color: rgb(240, =
240, 240); border-top-width: 1px; border-top-style: solid;
}
body > .pop_edit .success a {
	width: 80px; height: 28px; text-align: center; color: rgb(255, 255, =
255); line-height: 28px; font-size: 14px; text-decoration: none; =
margin-left: 10px; display: inline-block; -ms-zoom: 1;
}
body > .pop_edit .success .cancel {
	background: rgb(153, 153, 153);
}
body > .pop_edit .success .ok {
	background: rgb(190, 0, 0);
}
body > .pop_edit .success .del {
	background: rgb(153, 153, 153); display: none;
}
.ask_first {
	left: 50%; top: 250px; width: 667px; height: 560px; text-align: left; =
display: none; position: absolute;
}
.ask_first .askFirst_desc {
	height: 370px;
}
.ask_first .askFirst_desc .afd_p {
	color: rgb(51, 51, 51); line-height: 21px; font-size: 14px;
}
.ask_first .askFirst_desc .afd_p a {
	color: rgb(43, 129, 169); cursor: pointer;
}
.ask_first .askFirst_se {
	color: rgb(51, 51, 51); font-size: 16px; margin-bottom: 10px;
}
.ask_first .search_div {
	width: 100%; height: 35px; margin-right: 20px; margin-bottom: 10px;
}
.ask_first .search_div input {
	width: 100%;
}
.ask_second {
	text-align: left; display: none;
}
.ask_second .err_div {
	border: 1px solid rgb(255, 218, 218); border-image: none; width: 100%; =
height: 28px; margin-bottom: 5px;
}
.ask_second .err_div .err_ico {
	background: url("../images/ph_pop_err_icon.fw.png") no-repeat 0px 0px; =
width: 16px; height: 16px; margin-top: 6px; margin-right: 10px; =
margin-left: 5px; float: left; display: inline-block;
}
.ask_second .err_div .err_txt {
	height: 16px; color: rgb(183, 77, 70); font-size: 12px; margin-top: =
2px; float: left; display: inline-block;
}
.ask_second .input_div {
	width: 100%; height: 35px; margin-right: 20px; margin-bottom: 10px;
}
.ask_second .input_div input {
	border: 1px solid rgb(220, 220, 220); border-image: none; width: 100%; =
height: 35px; color: rgb(101, 101, 101); text-indent: 5px; font-size: =
16px; box-sizing: border-box;
}
.ask_second .second_se {
	margin: 5px 0px; color: rgb(101, 101, 101); font-size: 16px; display: =
inline-block;
}
.ask_second .div_rich_editor {
	border: 1px solid rgb(221, 221, 221); border-image: none; width: 100%; =
height: 245px; position: relative;
}
.ask_second .div_tags {
	width: 100%; height: 35px;
}
.ask_second .tags_con {
	padding: 0px 5px; border: 1px solid rgb(220, 220, 220); border-image: =
none; width: 100%; height: 35px; font-size: 14px; float: left; =
-ms-overflow-y: auto;
}
.ask_second .focus.tags_con {
	border-color: rgb(85, 153, 221); outline: rgb(102, 187, 238) solid 1px;
}
.ask_second .tags_con input {
	border: 0px currentColor; border-image: none; width: 200px; height: =
20px; margin-top: 7px; float: left;
}
.ask_second .tags_con .tag {
	background: rgb(240, 244, 247); padding: 0px 10px; border-radius: 15px; =
height: 22px; color: rgb(61, 141, 175); line-height: 22px; overflow: =
hidden; margin-top: 5px; margin-right: 5px; float: left; display: block;
}
.ask_second .tags_con .tag span {
	float: left; display: block;
}
.ask_second .tags_con .tag a {
	height: 20px; color: rgb(68, 153, 187); font-size: 14px; =
text-decoration: none; margin-left: 5px; float: left; display: block;
}
.ask_second .tags_con .tag a:hover {
	color: rgb(204, 51, 0);
}
.ask_second .drt_tagRecomm {
	height: 20px; margin-top: 20px; margin-bottom: 15px;
}
.ask_second .drt_tagRecomm .drt_tit {
	color: rgb(101, 101, 101); font-size: 14px;
}
.ask_second .left_area {
	float: left; display: inline-block;
}
.ask_second .left_area > * {
	vertical-align: middle;
}
.ask_second .left_area .wyxs {
	color: rgb(102, 102, 102); font-size: 14px; margin-right: 10px; =
margin-left: 10px;
}
.ask_second .left_area .cb_num {
	border: 1px solid rgb(220, 220, 220); border-image: none; width: 157px; =
line-height: 23px;
}
.ask_second .left_area .phib_rii {
	width: 183px; height: 20px; text-align: left; color: rgb(249, 191, 71); =
margin-left: 10px; display: inline-block;
}
.ask_second .left_area .phib_rii span {
	background: url("../images/ph_right_cb.fw.png") no-repeat 0px 2px; =
height: 25px; line-height: 21px; padding-left: 20px; margin-top: 0px; =
display: inline-block;
}
#float_ask_img {
	top: 200px; right: 50px; position: fixed; z-index: 9;
}
.complete_list {
	background: rgb(255, 255, 255); margin: 0px; padding: 1px; =
border-radius: 3px; border: 1px solid rgb(204, 204, 204); border-image: =
none; overflow: hidden; display: none; position: fixed; z-index: 9999; =
box-shadow: 2px 2px 5px rgba(0,0,0,0.3);
}
.complete_list li {
	font: 12px/20px "microsoft yahei"; padding: 2px 10px; cursor: default; =
font-size-adjust: none; font-stretch: normal;
}
.complete_list .outborder {
	background: rgb(245, 245, 245);
}
.ask_second .se_key {
	padding: 0px 15px; border-radius: 10px; height: 21px; text-align: =
center; color: rgb(101, 101, 101); line-height: 21px; font-size: 12px; =
font-weight: normal; margin-right: 15px; display: inline-block; =
background-color: rgb(242, 242, 242);
}
.ask_second .se_key:hover {
	color: rgb(255, 255, 255); text-decoration: none; background-color: =
rgb(189, 25, 33);
}
.ask_second textarea {
	font-family: Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, =
DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, =
serif; font-size: 12px;
}
.ask_second pre {
	background: rgb(238, 238, 238); margin: 0px 0px 7px; padding: 5px; =
width: auto; overflow: auto; font-family: Consolas, Menlo, Monaco, =
Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans =
Mono, Courier New, monospace, serif; max-height: 600px;
}
.ask_second code {
	padding: 2px 5px; border-radius: 3px; border: 1px solid rgb(221, 221, =
221); border-image: none; color: rgb(102, 102, 102); font-family: =
Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans =
Mono, Bitstream Vera Sans Mono, Courier New, monospace, serif; display: =
block; background-color: rgb(238, 238, 238);
}
.ask_second p code {
	padding: 1px 5px;
}
.ask_second blockquote {
	padding: 10px 10px 1px; background-color: rgb(238, 238, 238);
}
.ask_second hr {
	margin: 0px 0px 20px; border: 0px currentColor; border-image: none; =
height: 1px; background-color: rgb(170, 170, 170);
}
.wmd-prompt-dialog * {
	margin: 0px; padding: 0px;
}
.ask_second .str {
	color: rgb(128, 0, 0);
}
.ask_second .kwd {
	color: rgb(0, 0, 139); font-weight: bold;
}
.ask_second .com {
	color: rgb(128, 128, 128);
}
.ask_second .typ {
	color: rgb(43, 145, 175); font-weight: bold;
}
.ask_second .lit {
	color: rgb(128, 0, 0);
}
.ask_second .pun {
	color: rgb(0, 0, 0);
}
.ask_second .pln {
	color: rgb(0, 0, 0);
}
.ask_second .tag {
	color: rgb(128, 0, 0); font-weight: bold;
}
.ask_second .atn {
	color: rgb(255, 0, 0);
}
.ask_second .atv {
	color: rgb(0, 0, 255);
}
.ask_second .dec {
	color: rgb(128, 0, 128);
}
.ask_second .wmd {
	width: 660px; position: relative;
}
.ask_second #wmd-button-bar {
	margin: 10px 0px 0px; width: 405px; height: 25px; clear: both; display: =
inline-block; background-color: rgb(255, 255, 255);
}
.ask_second #wmd-input {
	margin: 0px; padding: 0px 3px; border: 1px solid rgb(220, 220, 220); =
border-image: none; width: 626px; height: 200px; line-height: 18px; =
resize: none;
}
.ask_second #wmd-preview {
	padding: 3px; border: 2px dotted rgb(204, 204, 204); border-image: =
none; clear: both; font-size: 12px; display: none;
}
.grippie {
	background-position: center 1px; border-width: 0px 1px 1px; =
border-style: solid; border-color: rgb(221, 221, 221); height: 9px; =
line-height: 9px; overflow: hidden; margin-bottom: 6px; display: none; =
cursor: s-resize; background-image: url("../images/drag.gif"); =
background-repeat: no-repeat; background-color: rgb(238, 238, 238);
}
#wmd-preview p {
	-ms-word-wrap: break-word;
}
.wmd-button-row {
	margin: 0px; padding: 0px; height: 20px; position: relative;
}
.wmd-spacer {
	list-style: none; width: 1px; height: 20px; margin-left: 14px; display: =
inline-block; position: absolute; background-color: silver;
}
.wmd-button {
	background-position: 0px 0px; list-style: none; width: 20px; height: =
20px; margin-right: 5px; margin-left: 5px; display: inline-block; =
position: absolute; background-image: url("../images/wmd-buttons.png"); =
background-repeat: no-repeat;
}
.wmd-button > a {
	width: 20px; height: 20px; display: inline-block; position: absolute;
}
.wmd-bold-button {
	background-position: 0px 0px; left: 0px;
}
.wmd-italic-button {
	background-position: -20px 0px; left: 25px;
}
.wmd-spacer1 {
	left: 50px;
}
.wmd-link-button {
	background-position: -40px 0px; left: 75px;
}
.wmd-quote-button {
	background-position: -60px 0px; left: 100px;
}
.wmd-code-button {
	background-position: -80px 0px; left: 125px;
}
.wmd-image-button {
	background-position: -100px 0px; left: 150px;
}
.wmd-spacer2 {
	left: 175px;
}
.wmd-olist-button {
	background-position: -120px 0px; left: 200px;
}
.wmd-ulist-button {
	background-position: -140px 0px; left: 225px;
}
.wmd-heading-button {
	background-position: -160px 0px; left: 250px;
}
.wmd-hr-button {
	background-position: -180px 0px; left: 275px;
}
.wmd-spacer3 {
	left: 300px;
}
.wmd-undo-button {
	background-position: -200px 0px; left: 325px;
}
.wmd-redo-button {
	background-position: -220px 0px; left: 350px;
}
.wmd-help-button {
	background-position: -240px 0px; right: 0px;
}
.wmd-at-button {
	left: 375px;
}
.wmd-prompt-background {
	background-color: black;
}
.wmd-prompt-dialog {
	border-width: 3px; border-style: solid; border-color: rgb(255, 255, =
255) rgb(153, 153, 153) rgb(153, 153, 153) rgb(255, 255, 255); =
background-color: rgb(221, 221, 221);
}
.wmd-mini-button {
	margin: 5px; padding: 3px 8px; color: rgb(68, 68, 68); text-decoration: =
none; display: inline-block;
}
.wmd-mini-button:visited {
	margin: 5px; padding: 3px 8px; color: rgb(68, 68, 68); text-decoration: =
none; display: inline-block;
}
.wmd-mini-button:hover {
	border-radius: 15px; text-decoration: none; background-color: rgb(204, =
204, 204); -webkit-border-radius: 15px 15px 15px 15px; =
-moz-border-radius: 15px 15px 15px 15px;
}
.selected.wmd-mini-button {
	border-radius: 15px; color: rgb(238, 238, 238); text-decoration: none; =
background-color: rgb(136, 136, 136); -webkit-border-radius: 15px 15px =
15px 15px; -moz-border-radius: 15px 15px 15px 15px;
}
.selected.wmd-mini-button:hover {
	color: rgb(238, 238, 238); background-color: rgb(136, 136, 136);
}
.dialog-input {
	padding: 3px 0px 0px 2px; border: 1px solid rgb(153, 153, 153); =
border-image: none; height: 23px; font-family: Trebuchet MS, Liberation =
Sans, DejaVu Sans, sans-serif;
}
#upload-url-input input {
	padding: 3px 0px 0px 2px; border: 1px solid rgb(153, 153, 153); =
border-image: none; height: 23px; font-family: Trebuchet MS, Liberation =
Sans, DejaVu Sans, sans-serif;
}
#shadow-filename {
	padding: 3px 0px 0px 2px; border: 1px solid rgb(153, 153, 153); =
border-image: none; height: 23px; font-family: Trebuchet MS, Liberation =
Sans, DejaVu Sans, sans-serif;
}
.dialog-button {
	border: 1px solid rgb(153, 153, 153); border-image: none; height: 28px; =
font-family: Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; =
cursor: pointer; background-color: rgb(240, 240, 240);
}
#ok-dialog-button {
	border: 1px solid rgb(153, 153, 153); border-image: none; height: 28px; =
font-family: Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; =
cursor: pointer; background-color: rgb(240, 240, 240);
}
#close-dialog-button {
	border: 1px solid rgb(153, 153, 153); border-image: none; height: 28px; =
font-family: Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; =
cursor: pointer; background-color: rgb(240, 240, 240);
}
#choose-file {
	border: 1px solid rgb(153, 153, 153); border-image: none; height: 28px; =
font-family: Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; =
cursor: pointer; background-color: rgb(240, 240, 240);
}
#image-upload-progress {
	background: url("images/progress-dots.gif") no-repeat center; height: =
5px; text-indent: -9999px;
}
#qlink_box {
	background: rgb(239, 239, 239); padding: 3px 3px 2px; border-radius: =
5px; border: 1px solid rgb(239, 239, 239); display: none; position: =
absolute; z-index: 999; -webkit-border-radius: 5px; -moz-border-radius: =
5px;
}
#qlink_box input {
	background: rgb(255, 255, 255); padding: 0px; border-radius: 2px; =
border: 1px solid rgb(177, 177, 177); border-image: none; width: 400px; =
height: 24px; font-size: 100%; -webkit-border-radius: 2px; =
-moz-border-radius: 2px;
}
#qlink_suggest {
	background: rgb(255, 255, 255); border-width: 0px 1px 1px; =
border-style: none solid solid; border-color: currentColor rgb(177, 177, =
177) rgb(177, 177, 177); padding: 1px 0px; border-image: none; left: =
3px; top: 44px; width: 400px; position: absolute;
}
#qlink_suggest dl {
	list-style: none; margin: 0px; padding: 0px;
}
#qlink_suggest dd {
	margin: 0px; padding: 0px 5px; line-height: 28px; display: block;
}
#qlink_suggest dd.active {
	background: rgb(239, 239, 239);
}
#qlink_suggest dd:hover {
	background: rgb(239, 239, 239); cursor: pointer;
}
.ask_second textarea {
	border: 1px solid rgb(128, 128, 128); border-image: none;
}
.ask_second #notes-preview {
	border: 1px solid rgb(128, 128, 128); border-image: none;
}
#notes-preview {
	-ms-overflow-x: hidden;
}
body .searchContainer {
	border: 1px solid rgb(221, 221, 221); border-image: none; width: 628px; =
display: none; position: absolute; min-height: 90px; background-color: =
rgb(255, 255, 255);
}
body .searchContainer span {
	line-height: 30px;
}
body .searchContainer .sTitle {
	color: rgb(101, 101, 101); line-height: 30px; font-size: 14px; =
margin-right: 10px; margin-left: 10px; border-bottom-color: rgb(221, =
221, 221); border-bottom-width: 1px; border-bottom-style: solid;
}
body .searchContainer .sItem {
	padding: 0px 10px; cursor: pointer;
}
body .searchContainer .sItem .sfirst {
	width: 85%; text-align: left; color: rgb(153, 153, 153); overflow: =
hidden; font-size: 14px; float: left; white-space: nowrap; =
-ms-text-overflow: ellipsis;
}
body .searchContainer .sItem .ssecond {
	width: 15%; text-align: right; color: rgb(153, 153, 153); font-size: =
14px; float: right; white-space: nowrap;
}
body .searchContainer .sItemHover {
	color: rgb(255, 255, 255); background-color: rgb(204, 204, 204);
}
body .searchContainer .sItemHover .sfirst {
	color: rgb(255, 255, 255);
}
body .searchContainer .sItemHover .ssecond {
	color: rgb(255, 255, 255);
}
body .searchContainer .sFooter {
	border-top-color: rgb(221, 221, 221); border-top-width: 1px; =
border-top-style: solid; background-color: rgb(245, 245, 245);
}
body .searchContainer .sFooter .sFirstNewAsk {
	color: rgb(101, 101, 101); line-height: 27px; font-size: 14px; =
text-decoration: none; margin-right: 10px; float: right; cursor: =
pointer;
}
body .searchContainer .sFooter a:link {
	color: rgb(101, 101, 101);
}
.ask_second .searchContainer .sFooter a:visited {
	color: rgb(101, 101, 101);
}
body .searchContainer .sFooter a:hover {
	color: rgb(190, 26, 33);
}
body .searchContainer .sFooter a:focus {
	color: rgb(190, 26, 33);
}
#com-ask-float-block {
	background: url("../images/common_float_block.png") no-repeat 0px =
-318px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; border-image: none; width: 90px; height: 28px; right: =
40px; bottom: 124px; color: rgb(255, 255, 255); line-height: 16px; =
position: fixed; z-index: 899; cursor: pointer; min-width: 40px;
}
#com-ask-float-block:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-318px;
}
#com-app-float-block {
	background: url("../images/common_float_block.png") no-repeat 0px 0px; =
margin: 0px; padding: 0px; border-radius: 0px; border: 0px currentColor; =
border-image: none; width: 90px; height: 28px; right: 40px; bottom: =
124px; color: rgb(255, 255, 255); line-height: 16px; position: fixed; =
z-index: 899; cursor: pointer; min-width: 40px;
}
#com-app-float-block:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
0px;
}
#com-appcode-float-block {
	background: url("../images/common_float_block.png") no-repeat 0px =
-198px rgb(255, 255, 255); margin: 0px; padding: 0px; border-radius: =
0px; border: 0px currentColor; border-image: none; width: 90px; height: =
112px; right: 40px; bottom: 124px; color: rgb(255, 255, 255); =
line-height: 16px; position: fixed; z-index: 900; cursor: pointer; =
min-width: 40px;
}
#com-appcode-float-block:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-198px rgb(255, 255, 255);
}
#com-appcode-float-block:hover #appcode-close {
	background: url("../images/common_float_block.png") no-repeat -177px =
-201px rgb(255, 255, 255);
}
#com-appcode-float-block #appcode-close {
	background: url("../images/common_float_block.png") no-repeat -77px =
-201px; width: 10px; height: 10px; margin-top: 3px; margin-right: 3px; =
float: right; display: inline-block; cursor: pointer;
}
#com-quick-reply {
	background: url("../images/common_float_block.png") no-repeat 0px =
-33px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; border-image: none; width: 90px; height: 28px; right: =
40px; bottom: 82px; color: rgb(255, 255, 255); line-height: 16px; =
position: fixed; z-index: 899; cursor: pointer; min-width: 40px;
}
#com-quick-reply:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-33px;
}
#com-d-top-a {
	background: url("../images/common_float_block.png") no-repeat 0px =
-165px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; border-image: none; width: 90px; height: 28px; right: =
40px; bottom: 40px; color: rgb(255, 255, 255); line-height: 16px; =
display: none; position: fixed; z-index: 899; cursor: pointer; =
min-width: 40px;
}
#com-d-top-a:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-165px;
}
#com-edu-call-center {
	background: url("../images/common_float_block.png") no-repeat 0px =
-132px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; border-image: none; width: 90px; height: 28px; right: =
40px; bottom: 40px; color: rgb(255, 255, 255); line-height: 16px; =
position: fixed; z-index: 899; cursor: pointer; min-width: 40px;
}
#com-edu-call-center:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-132px;
}
#com-quick-reply-bbs {
	background: url("../images/common_float_block.png") no-repeat 0px =
-33px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; border-image: none; width: 90px; height: 28px; right: =
40px; bottom: 82px; color: rgb(255, 255, 255); line-height: 16px; =
position: fixed; z-index: 899; cursor: pointer; min-width: 40px;
}
#com-quick-reply-bbs:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-33px;
}
#com-back-channel {
	background: url("../images/common_float_block.png") no-repeat 0px =
-66px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; border-image: none; width: 90px; height: 28px; right: =
40px; bottom: 40px; color: rgb(255, 255, 255); line-height: 16px; =
position: fixed; z-index: 899; cursor: pointer; min-width: 40px;
}
#com-back-channel:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-66px;
}
#com-back-home {
	background: url("../images/common_float_block.png") no-repeat 0px =
-99px; margin: 0px; padding: 0px; border-radius: 0px; border: 0px =
currentColor; border-image: none; width: 90px; height: 28px; right: =
40px; bottom: 40px; color: rgb(255, 255, 255); line-height: 16px; =
position: fixed; z-index: 899; cursor: pointer; min-width: 40px;
}
#com-back-home:hover {
	background: url("../images/common_float_block.png") no-repeat -100px =
-99px;
}
#previw-button {
	background: url("../images/preview-img.png"); width: 44px; height: =
14px; margin-top: 12px; margin-right: 5px; float: right;
}
.editor-preview img {
	max-height: 200px; max-width: 80%;
}
#picture_dialog_form {
	top: 50%; width: 1px; height: 1px; overflow: hidden; position: fixed;
}
.editor-toolbar .icon-preview::before {
	content: "\f06e";
}
.editor-toolbar .active.icon-preview::before {
	content: "\f070";
}
.editor-toolbar .icon-info::before {
	content: "\f05a";
}
.editor-toolbar .icon-headline::before {
	font: bold 18px/24px "Times"; content: "H1"; font-size-adjust: none; =
font-stretch: normal;
}
.editor-toolbar .icon-heading::before {
	font: bold 18px/24px "Times"; content: "H2"; font-size-adjust: none; =
font-stretch: normal;
}
.editor-toolbar .icon-code {
	margin-right: 6px;
}
.editor-toolbar .icon-code::before {
	letter-spacing: -3px; font-weight: bold; content: "</>";
}
.pop_edit.ask_second .CodeMirror {
	width: 630px; height: 200px;
}
.CodeMirror {
	border: 1px solid rgb(238, 238, 238); border-image: none;
}
.CodeMirror-scroll {
	overflow: auto;
}
.CodeMirror-lines {
	padding: 4px 0px;
}
.CodeMirror pre {
	padding: 0px 4px;
}
.CodeMirror-scrollbar-filler {
	background-color: rgb(255, 255, 255);
}
.CodeMirror div.CodeMirror-cursor {
	border-left-color: rgb(0, 0, 0); border-left-width: 1px; =
border-left-style: solid; z-index: 3;
}
.CodeMirror div.CodeMirror-secondarycursor {
	border-left-color: rgb(192, 192, 192); border-left-width: 1px; =
border-left-style: solid;
}
.cm-keymap-fat-cursor.CodeMirror div.CodeMirror-cursor {
	background: rgb(119, 238, 119); border: 0px currentColor; border-image: =
none; width: auto; z-index: 1;
}
.cm-strong {
	color: rgb(136, 85, 68);
}
.cm-em {
	color: rgb(136, 85, 68);
}
.cm-s-paper .cm-keyword {
	color: rgb(85, 85, 85);
}
.cm-s-paper .cm-atom {
	color: rgb(127, 140, 141);
}
.cm-s-paper .cm-number {
	color: rgb(127, 140, 141);
}
.cm-s-paper .cm-def {
	color: rgb(0, 0, 255);
}
.cm-s-paper .cm-variable {
	color: rgb(0, 0, 0);
}
.cm-s-paper .cm-variable-2 {
	color: rgb(85, 136, 102);
}
.cm-s-paper .cm-variable-3 {
	color: rgb(0, 136, 85);
}
.cm-s-paper .cm-property {
	color: rgb(0, 0, 0);
}
.cm-s-paper .cm-operator {
	color: rgb(0, 0, 0);
}
.cm-s-paper .cm-comment {
	color: rgb(149, 149, 149);
}
.cm-s-paper .cm-string {
	color: rgb(68, 119, 238);
}
.cm-s-paper .cm-string-2 {
	color: rgb(255, 85, 0);
}
.cm-s-paper .cm-meta {
	color: rgb(85, 85, 85);
}
.cm-s-paper .cm-error {
	color: rgb(255, 0, 0);
}
.cm-s-paper .cm-qualifier {
	color: rgb(85, 85, 85);
}
.cm-s-paper .cm-builtin {
	color: rgb(85, 85, 85);
}
.cm-s-paper .cm-bracket {
	color: rgb(153, 153, 119);
}
.cm-s-paper .cm-tag {
	color: rgb(127, 140, 141);
}
.cm-s-paper .cm-attribute {
	color: rgb(127, 140, 141);
}
.cm-s-paper .cm-header {
	color: rgb(0, 0, 0);
}
.cm-s-paper .cm-quote {
	color: rgb(136, 136, 136);
}
.cm-s-paper .cm-hr {
	color: rgb(153, 153, 153);
}
.cm-s-paper .cm-link {
	color: rgb(85, 119, 136);
}
.cm-negative {
	color: rgb(221, 68, 68);
}
.cm-positive {
	color: rgb(34, 153, 34);
}
.cm-header {
	font-weight: bold;
}
.cm-strong {
	font-weight: bold;
}
.cm-em {
	font-style: italic;
}
.cm-link {
	text-decoration: underline;
}
.cm-invalidchar {
	color: rgb(255, 0, 0);
}
div.CodeMirror span.CodeMirror-matchingbracket {
	color: rgb(0, 255, 0);
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
	color: rgb(255, 34, 34);
}
.CodeMirror {
	overflow: hidden; position: relative;
}
.CodeMirror-scroll {
	height: 100%; padding-right: 30px; padding-bottom: 30px; margin-right: =
-30px; margin-bottom: -30px; position: relative;
}
.CodeMirror-sizer {
	position: relative;
}
.CodeMirror-vscrollbar {
	display: none; position: absolute; z-index: 6;
}
.CodeMirror-hscrollbar {
	display: none; position: absolute; z-index: 6;
}
.CodeMirror-scrollbar-filler {
	display: none; position: absolute; z-index: 6;
}
.CodeMirror-vscrollbar {
	top: 0px; right: 0px; -ms-overflow-x: hidden; -ms-overflow-y: scroll;
}
.CodeMirror-hscrollbar {
	left: 0px; bottom: 0px; -ms-overflow-x: scroll; -ms-overflow-y: hidden;
}
.CodeMirror-scrollbar-filler {
	right: 0px; bottom: 0px; z-index: 6;
}
.CodeMirror-lines {
	cursor: text;
}
.CodeMirror pre {
	background: none; border-width: 0px; margin: 0px; border-radius: 0px; =
color: inherit; line-height: inherit; overflow: visible; font-family: =
Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans =
Mono, Bitstream Vera Sans Mono, Courier New, monospace, serif; =
font-size: inherit; white-space: pre-wrap; position: relative; z-index: =
2; -ms-word-wrap: normal; -webkit-border-radius: 0; -moz-border-radius: =
0; -o-border-radius: 0;
}
.CodeMirror ul {
	margin: auto !important; padding: inherit !important; =
list-style-position: inside !important;
}
.CodeMirror ol {
	margin: auto !important; padding: inherit !important; =
list-style-position: inside !important;
}
.CodeMirror li {
	margin: auto !important; padding: inherit !important; =
list-style-position: inside !important;
}
.CodeMirror ul {
=09
}
.CodeMirror ul li {
=09
}
.CodeMirror ol {
	list-style-type: decimal !important;
}
.CodeMirror ol li {
	list-style-type: decimal !important;
}
.CodeMirror-wrap pre {
	white-space: pre-wrap; -ms-word-break: normal; -ms-word-wrap: =
break-word;
}
.CodeMirror-linebackground {
	left: 0px; top: 0px; right: 0px; bottom: 0px; position: absolute; =
z-index: 0;
}
.CodeMirror-linewidget {
	overflow: auto; position: relative; z-index: 2;
}
.CodeMirror-widget {
	display: inline-block;
}
.CodeMirror-wrap .CodeMirror-scroll {
	-ms-overflow-x: hidden;
}
.CodeMirror-measure {
	width: 100%; height: 0px; overflow: hidden; visibility: hidden; =
position: absolute;
}
.CodeMirror-measure pre {
	position: static;
}
.CodeMirror div.CodeMirror-cursor {
	width: 0px; border-right-color: currentColor; border-right-width: =
medium; border-right-style: none; visibility: hidden; position: =
absolute;
}
.CodeMirror-focused div.CodeMirror-cursor {
	visibility: visible;
}
.CodeMirror-selected {
	background: rgb(217, 217, 217);
}
.CodeMirror-focused .CodeMirror-selected {
	background: rgb(189, 195, 199);
}
.cm-searching {
	background: rgba(255, 255, 0, 0.4);
}
@media print
{
.CodeMirror div.CodeMirror-cursor {
	visibility: hidden;
}
}
.editor-wrapper {
	font: 16px/1.62 "Helvetica Neue", "Xin Gothic", "Hiragino Sans GB", =
"WenQuanYi Micro Hei", "Microsoft YaHei", sans-serif; color: rgb(44, 62, =
80); font-size-adjust: none; font-stretch: normal;
}
.editor-wrapper input.title {
	background: none; font: 18px/normal "Helvetica Neue", "Xin Gothic", =
"Hiragino Sans GB", "WenQuanYi Micro Hei", "Microsoft YaHei", =
sans-serif; padding: 4px; border: currentColor; border-image: none; =
width: 100%; font-size-adjust: none; font-stretch: normal; opacity: 0.6;
}
.editor-toolbar {
	position: relative; opacity: 0.6; -ms-user-select: none; =
-webkit-user-select: none; -moz-user-select: none; -o-user-select: none; =
user-select: none;
}
.editor-toolbar::before {
	background: linear-gradient(45deg, rgb(249, 249, 249), rgb(189, 195, =
199), rgb(249, 249, 249)); height: 1px; display: block; content: " ";
}
.editor-toolbar::after {
	background: linear-gradient(45deg, rgb(249, 249, 249), rgb(189, 195, =
199), rgb(249, 249, 249)); height: 1px; display: block; content: " ";
}
.editor-toolbar::before {
	margin-bottom: 8px;
}
.editor-toolbar::after {
	margin-top: 8px;
}
.editor-wrapper input.title:hover {
	opacity: 0.8;
}
.editor-wrapper input.title:focus {
	opacity: 0.8;
}
.editor-toolbar:hover {
	opacity: 0.8;
}
.editor-toolbar a {
	margin: 0px 4px; border-radius: 3px; border: 1px solid transparent; =
border-image: none; width: 24px; height: 24px; text-align: center; =
color: rgb(44, 62, 80) !important; font-size: 16px; text-decoration: =
none !important; display: inline-block; cursor: pointer;
}
.editor-toolbar a:hover {
	background: rgb(252, 252, 252); border-color: rgb(149, 165, 166);
}
.editor-toolbar a.active {
	background: rgb(252, 252, 252); border-color: rgb(149, 165, 166);
}
.editor-toolbar a::before {
	line-height: 24px;
}
.editor-toolbar i.separator {
	margin: 0px 6px; width: 0px; color: transparent; text-indent: -10px; =
border-right-color: rgb(255, 255, 255); border-left-color: rgb(217, 217, =
217); border-right-width: 1px; border-left-width: 1px; =
border-right-style: solid; border-left-style: solid; display: =
inline-block;
}
.editor-toolbar i:first-child.separator {
	margin-left: 0px;
}
.editor-toolbar i:last-child.separator {
	margin-right: 0px;
}
.editor-toolbar a.icon-fullscreen {
	right: 0px; position: absolute;
}
.editor-statusbar {
	padding: 2px 5px 8px 0px; text-align: right; color: rgb(149, 150, 148); =
font-size: 12px;
}
.editor-statusbar span {
	margin-left: 1em; display: inline-block; min-width: 4em;
}
.editor-statusbar .lines::before {
	content: "lines: ";
}
.editor-statusbar .words::before {
	content: "words: ";
}
.editor-preview {
	background: rgb(252, 253, 254); padding: 5px; transition:left 0.2s; =
left: 100%; top: 0px; width: 100%; height: 100%; overflow: auto; =
position: absolute; z-index: 9999; box-sizing: border-box; =
-webkit-transition: left 0.2s ease; -moz-transition: left 0.2s ease;
}
.editor-preview-active {
	left: 0px;
}
.editor-preview > p {
	margin-top: 0px;
}
[class^=3D'icon-'] {
	font-family: FontAwesome; font-style: normal; font-weight: normal; =
text-decoration: inherit; -webkit-font-smoothing: antialiased;
}
[class*=3D' icon-'] {
	font-family: FontAwesome; font-style: normal; font-weight: normal; =
text-decoration: inherit; -webkit-font-smoothing: antialiased;
}
[class^=3D'icon-']::before {
	text-decoration: inherit; display: inline-block; speak: none;
}
[class*=3D' icon-']::before {
	text-decoration: inherit; display: inline-block; speak: none;
}
.icon-bold::before {
	content: "\f032";
}
.icon-italic::before {
	content: "\f033";
}
.icon-quote-left::before {
	content: "\f10d";
}
.icon-list-ul::before {
	content: "\f0ca";
}
.icon-list-ol::before {
	content: "\f0cb";
}
.icon-link::before {
	content: "\f0c1";
}
.icon-picture::before {
	content: "\f03e";
}
.icon-reply::before {
	content: "\f112";
}
.icon-share-alt::before {
	content: "\f064";
}
.icon-preview::before {
	content: "\f06e";
}

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: res://ieframe.dll/info_48.png

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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: res://ieframe.dll/bullet.png

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

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: res://ieframe.dll/ErrorPageTemplate.css

body {
	color: rgb(87, 87, 87); font-family: "Microsoft YaHei", "=CB=CE=CC=E5", =
"Segoe UI", "verdana", "Arial"; margin-top: 20px; margin-left: 20px; =
background-image: url("background_gradient.jpg"); background-repeat: =
repeat-x; background-color: rgb(232, 234, 239);
}
body.securityError {
	font-family: "Microsoft YaHei", "=CB=CE=CC=E5", "Segoe UI", "verdana" , =
"Arial"; margin-top: 20px; margin-left: 20px; background-image: =
url("background_gradient_red.jpg"); background-repeat: repeat-x; =
background-color: rgb(232, 234, 239);
}
body.tabInfo {
	background-image: none; background-color: rgb(244, 244, 244);
}
a {
	color: rgb(19, 112, 171); font-size: 1em; font-weight: normal; =
text-decoration: none; margin-left: 0px; vertical-align: top;
}
a:link {
	color: rgb(19, 112, 171); text-decoration: none; vertical-align: top;
}
a:visited {
	color: rgb(19, 112, 171); text-decoration: none; vertical-align: top;
}
a:hover {
	color: rgb(7, 74, 229); text-decoration: underline;
}
p {
	font-size: 0.9em;
}
h1 {
	color: rgb(68, 101, 162); font-size: 1.1em; font-weight: normal; =
margin-top: 7px; margin-bottom: 4px; vertical-align: bottom;
}
h2 {
	font-size: 0.9em; font-weight: normal; margin-top: 20px; margin-bottom: =
1px;
}
h3 {
	font-size: 0.9em; font-weight: normal; margin-top: 10px; margin-bottom: =
1px;
}
h4 {
	font-size: 0.9em; font-weight: normal; margin-top: 12px; margin-bottom: =
1px;
}
h5 {
	color: rgb(87, 87, 87); font-size: 0.9em; font-weight: normal; =
margin-top: 1px; margin-bottom: 0px;
}
.actionIcon {
	margin-top: 0px; margin-right: 6px; vertical-align: middle;
}
.infoBlock {
	color: rgb(87, 87, 87); padding-left: 25px; font-size: 0.9em; display: =
block;
}
.errorCodeAndDivider {
	color: rgb(120, 120, 120); font-size: 0.7em; font-weight: normal;
}
ul {
	line-height: 1.3em; padding-top: 1px; padding-bottom: 1px; font-size: =
0.9em; margin-top: 1px; margin-bottom: 1px; list-style-position: =
outside;
}
ol {
	line-height: 1.3em; padding-top: 1px; padding-bottom: 1px; font-size: =
0.9em; margin-top: 1px; margin-bottom: 1px; list-style-position: =
outside;
}
.divider {
	border-bottom-color: rgb(182, 188, 198); border-bottom-width: 1px; =
border-bottom-style: solid;
}

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: res://ieframe.dll/errorPageStrings.js

77u/Ly9TcGxpdCBvdXQgZm9yIGxvY2FsaXphdGlvbi4NCnZhciBMX0dPQkFDS19URVhUID0gIui/
lOWbnuWIsOS4iuS4gOmhteOAgiI7DQp2YXIgTF9SRUZSRVNIX1RFWFQgPSAi5Yi35paw6K+l6aG1
6Z2i44CCIjsNCnZhciBMX01PUkVJTkZPX1RFWFQgPSAi6K+m57uG5L+h5oGvIjsNCnZhciBMX09G
RkxJTkVfVVNFUlNfVEVYVCA9ICLlr7nkuo7ohLHmnLrnlKjmiLciOw0KdmFyIExfUkVMT0FEX1RF
WFQgPSAi6YeN5paw6ZSu5YWl5Zyw5Z2A44CCIjsNCnZhciBMX0hJREVfSE9US0VZU19URVhUID0g
IumakOiXj+mAiemhueWNoeW/q+aNt+aWueW8jyI7DQp2YXIgTF9TSE9XX0hPVEtFWVNfVEVYVCA9
ICLmmL7npLrmm7TlpJrpgInpobnljaHlv6vmjbfmlrnlvI8iOw0KdmFyIExfQ09OTkVDVElPTl9P
RkZfVEVYVCA9ICLkvaDmnKrov57mjqXliLAgSW50ZXJuZXTjgILor7fmo4Dmn6XkvaDnmoQgSW50
ZXJuZXQg6L+e5o6l44CCIjsNCnZhciBMX0NPTk5FQ1RJT05fT05fVEVYVCA9ICLkvaDlj6/og73l
t7Lnu4/ov57mjqXliLAgSW50ZXJuZXTvvIzkvYbkvaDlj6/og73luIzmnJvlsJ3or5Xph43mlrDo
v57mjqXliLAgSW50ZXJuZXTjgIIiOw0KDQovL3VzZWQgYnkgaW52YWxpZGNlcnQuanMNCnZhciBM
X0NlcnRVbmtub3duQ0FfVEVYVCA9ICLmraTnvZHnq5nlh7rlhbfnmoTlronlhajor4HkuabkuI3m
mK/nlLHlj5fkv6Hku7vnmoTor4HkuabpooHlj5HmnLrmnoTpooHlj5HnmoTjgIIiOw0KdmFyIExf
Q2VydEV4cGlyZWRfVEVYVCA9ICLmraTnvZHnq5nlh7rlhbfnmoTlronlhajor4Hkuablt7Lov4fm
nJ/miJbov5jmnKrnlJ/mlYjjgIIiOw0KdmFyIExfQ2VydENOTWlzbWF0Y2hfVEVYVCA9ICLmraTn
vZHnq5nlh7rlhbfnmoTlronlhajor4HkuabmmK/kuLrlhbbku5bnvZHnq5nlnLDlnYDpooHlj5Hn
moTjgIIiOw0KdmFyIExfQ2VydFJldm9rZWRfVEVYVCA9ICLmraTnu4Tnu4fnmoTor4Hkuablt7Lo
oqvlkIrplIDjgIIiOw0KdmFyIExfQ2VydFNpZ0ZhaWxlZF9URVhUID0gIuatpOe9keermeaPkOS+
m+eahOWuieWFqOivgeS5puS4jeWuieWFqOOAgiI7DQoNCnZhciBMX1BoaXNoaW5nVGhyZWF0X1RF
WFQgPSAi572R57uc6ZKT6bG8572R56uZ5aiB6IOBOiDov5nmmK/kuIDkuKrnvZHnu5zpkpPpsbzn
vZHnq5nvvIzlroPmqKHmi5/lj5fkv6Hku7vnmoTnvZHnq5nvvIzmrLrpqpfkvaDms4TmvI/kuKrk
urrmiJbotKLliqHkv6Hmga/jgIIiOw0KdmFyIExfTWFsd2FyZVRocmVhdF9URVhUID0gIuaBtuaE
j+i9r+S7tuWogeiDgTog5q2k572R56uZ5YyF5ZCr5oyH5ZCR55eF5q+S5oiW5YW25LuW6L2v5Lu2
56iL5bqP55qE6ZO+5o6l77yM6L+Z5Lqb55eF5q+S5oiW56iL5bqP5Y+v6IO95Lya5ZCR5oG25oSP
5Lq65ZGY5rOE5ryP5a2Y5YKo5Zyo5L2g55qE6K6h566X5py65LiK5oiW6ZSu5YWl55qE5Liq5Lq6
5L+h5oGv44CCIjsNCg0KdmFyIExfVG9wRnJhbWVVbnNhZmVfVEVYVCA9ICLlt7LmnInkurrkuL7m
iqXmraTnvZHnq5nkuI3lronlhagiOw0KdmFyIExfQ29udGVudFVuc2FmZV9URVhUID0gIuW3suac
ieS6uuS4vuaKpeatpOe9keermeS4iueahOWGheWuueS4jeWuieWFqCI7DQp2YXIgTF9Db250ZW50
X1RFWFQgPSAi5om/6L296ICFOiAgIjsNCg0KdmFyIExfQUNSX1RpdGxlX1RFWFQgPSAi5peg5rOV
5L2/5L2g6L+U5Zue5YiwICVz44CCIjsNCnZhciBMX0FDUl9UaXRsZUZhbGxiYWNrX1RFWFQgPSAi
5oiR5Lus5peg5rOV6L+U5Zue5L2g5p+l55yL55qE6aG16Z2i44CCIjsNCnZhciBMX0FDUl9SZXR1
cm5Ub19URVhUID0gIuWwneivlei/lOWbnuWIsCAlcyI7DQp2YXIgTF9BQ1JfUmV0dXJuVG9GYWxs
YmFja19URVhUID0gIuWwneivlei/lOWbnuafpeeci+eahOmhtemdoiI7DQp2YXIgTF9BQ1JfR29I
b21lX1RFWFQgPSAi6L2s5Yiw5Li76aG1IjsNCg0KLy91c2VkIGJ5IG5ldyBkbnNlcnJvci5odG0N
CnZhciBMX0lOVEVSTkVUX05PVF9DT05ORUNURURfVEVYVCA9ICLmnKrov57mjqXliLDnvZHnu5wi
Ow0KdmFyIExfSU5URVJORVRfQ09OTkVDVEVEX1RFWFQgPSAi5peg5rOV5pi+56S65q2k6aG1IjsN
Cg0KLy91c2VkIGJ5IGluc2VjdXJlZmFsbGJhY2tibG9jay5odG0NCnZhciBMX0luc2VjdXJlU1NM
M0ZhbGxiYWNrRGV0ZWN0ZWRfVEVYVCA9ICLuoaDlvZDuoaHni5xFcnJvcjogQ29ubmVjdGluZyB0
byB0aGlzIHNpdGUgaGFzIGJlZW4gYmxvY2tlZCBiZWNhdXNlIGl0IHdvdWxkIHJlcXVpcmUgYW4g
aW5zZWN1cmUgZmFsbGJhY2sgdG8gU1NMIDMuMCI7DQoNCi8vdXNlZCBieSBmYWxsYmFja25hdmNh
bmNlbC5odG0NCnZhciBMX0luc2VjdXJlU1NMM0ZhbGxiYWNrRGV0ZWN0ZWRfSUZSQU1FX1RFWFQg
PSAi7qGk7qGg5bqc5a2xRXJyb3I6IEEgcmVzb3VyY2UgZW1iZWRkZWQgaW4gYW4gaWZyYW1lIG9u
IHRoaXMgc2l0ZSBoYXMgYmVlbiBibG9ja2VkIGJlY2F1c2UgaXQgd291bGQgcmVxdWlyZSBhbiBp
bnNlY3VyZSBmYWxsYmFjayB0byBTU0wgMy4wIjsNCg0KdmFyIExfVExTX1NTTF9URVhUID0gIueh
ruS/neWQr+eUqOS6hiBUTFMg5ZKMIFNTTCDljY/orq7jgILovazliLDigJzlt6XlhbfigJ0+4oCc
SW50ZXJuZXQg6YCJ6aG54oCdPuKAnOmrmOe6p+KAnT7igJzorr7nva7igJ0+4oCc5a6J5YWo4oCd
IjsNCg0KLy8gVXNlZCBieSBJTSBETlMgZXJyb3IgcGFnZQ0KdmFyIExfVEhJU19QQUdFX0NBTlRf
QkVfRElTUExBWUVEX1RFWFQgPSAi5peg5rOV5pi+56S65q2k6aG1IjsNCnZhciBMX1lPVV9BUkVf
Tk9UX0NPTk5FQ1RFRF9URVhUID0gIuacqui/nuaOpSI7DQoNCi8vIFVzZWQgYnkgSUV4dGVuc2lv
blZhbGlkYXRpb24gZXJyb3IgcGFnZQ0KdmFyIExfQWN0aXZlWFVuc2FmZV9URVhUID0gIiVzIOW3
sumYu+atouatpOe9keermSI7DQp2YXIgTF9BY3RpdmVYVW5zYWZlX0ZyYW1lX1RFWFQgPSAiJXMg
5bey6Zi75q2i5q2k572R56uZ5LiK55qE5YaF5a65IjsNCnZhciBMX0FjdGl2ZVhVbnNhZmVfRXhw
bGFpbl9URVhUID0gIiVzIOW3sumYu+atouatpOermeeCue+8jOWboOS4uuWug+WPr+iDveS8muWv
ueS9oOeahOeUteiEkeaIlumakOengeaehOaIkOWogeiDgeOAgiI7DQp2YXIgTF9BY3RpdmVYVW5z
YWZlX0hvc3RlZF9URVhUID0gIuaJmOeuoeiAhTogJXMiOw0KDQo=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: res://ieframe.dll/httpErrorPagesScripts.js

=EF=BB=BF
function isExternalUrlSafeForNavigation(urlStr)
{
var regEx =3D new RegExp("^(http(s?)|ftp|file)://", "i");
return regEx.exec(urlStr);
}
function clickRefresh()
{
var location =3D window.location.href;
var poundIndex =3D location.indexOf('#');
if (poundIndex !=3D -1 && poundIndex+1 < location.length && =
isExternalUrlSafeForNavigation(location.substring(poundIndex+1)))
{
window.location.replace(location.substring(poundIndex+1));
}
}
function navCancelInit()
{
var location =3D window.location.href;
var poundIndex =3D location.indexOf('#');
if (poundIndex !=3D -1 && poundIndex+1 < location.length && =
isExternalUrlSafeForNavigation(location.substring(poundIndex+1)))
{
var bElement =3D document.createElement("A");
bElement.innerText =3D L_REFRESH_TEXT;
bElement.href =3D 'javascript:clickRefresh()';
navCancelContainer.appendChild(bElement);
}
else
{
var textNode =3D document.createTextNode(L_RELOAD_TEXT);
navCancelContainer.appendChild(textNode);
}
}
function expandCollapse(elem, changeImage)
{
if (document.getElementById)
{
ecBlock =3D document.getElementById(elem);
if (ecBlock !=3D undefined && ecBlock !=3D null)
{
if (changeImage)
{
elemImage =3D document.getElementById(elem + "Image");
}
if (!changeImage || (elemImage !=3D undefined && elemImage !=3D null))
{
if (ecBlock.currentStyle.display =3D=3D "none" || =
ecBlock.currentStyle.display =3D=3D null || ecBlock.currentStyle.display =
=3D=3D "")
{
ecBlock.style.display =3D "block";
if (changeImage)
{
elemImage.src =3D "up.png";
}
}
else if (ecBlock.currentStyle.display =3D=3D "block")
{
ecBlock.style.display =3D "none";
if (changeImage)
{
elemImage.src =3D "down.png";
}
}
else
{
ecBlock.style.display =3D "block";
if (changeImage)
{
elemImage.src =3D "up.png";
}
}
}
}
}
}
function initHomepage()
{
DocURL=3Ddocument.location.href;
var poundIndex =3D DocURL.indexOf('#');
if (poundIndex !=3D -1 && poundIndex+1 < location.length && =
isExternalUrlSafeForNavigation(location.substring(poundIndex+1)))
{
protocolIndex=3DDocURL.indexOf("://", 4);
serverIndex=3DDocURL.indexOf("/", protocolIndex + 3);
BeginURL=3DDocURL.indexOf("#",1) + 1;
urlresult=3DDocURL.substring(BeginURL, serverIndex);
if (protocolIndex - BeginURL > 7)
urlresult=3D"";
displayresult=3DDocURL.substring(protocolIndex + 3, serverIndex);
}
else
{
displayresult =3D "";
urlresult =3D "";
}
var aElement =3D document.createElement("A");
aElement.innerText =3D displayresult;
aElement.href =3D urlresult;
homepageContainer.appendChild(aElement);
}
function initConnectionStatus()
{
if (navigator.onLine)
{
checkConnection.innerText =3D L_CONNECTION_ON_TEXT;
}
else
{
checkConnection.innerText =3D L_CONNECTION_OFF_TEXT;
}
}
function initGoBack()
{
if (history.length < 1)
{
var textNode =3D document.createTextNode(L_GOBACK_TEXT);
goBackContainer.appendChild(textNode);
}
else
{
var bElement =3D document.createElement("A");
bElement.innerText =3D L_GOBACK_TEXT ;
bElement.href =3D "javascript:history.back();";
goBackContainer.appendChild(bElement);
}
}
function initMoreInfo(infoBlockID)
{
var bElement =3D document.createElement("A");
bElement.innerText =3D L_MOREINFO_TEXT;
bElement.href =3D "javascript:expandCollapse(\'infoBlockID\', true);";
moreInfoContainer.appendChild(bElement);
}
function initOfflineUser(offlineUserID)
{
var bElement =3D document.createElement("A");
bElement.innerText =3D L_OFFLINE_USERS_TEXT;
bElement.href =3D "javascript:expandCollapse('offlineUserID', true);";
offlineUserContainer.appendChild(bElement);
}
function initUnframeContent()
{
var location =3D window.location.href;
var poundIndex =3D location.indexOf('#');
if (poundIndex !=3D -1 && poundIndex+1 < location.length && =
isExternalUrlSafeForNavigation(location.substring(poundIndex+1)))
{
document.getElementById("whatToDoIntro").style.display=3D"";
document.getElementById("whatToDoBody").style.display=3D"";
}
}
function removeNoScriptElements() {
var noScriptElements =3D document.getElementsByTagName("noscript");
for (var i =3D noScriptElements.length - 1; i >=3D 0; i--)
{
var bElement =3D noScriptElements[i];
if (bElement !=3D=3D undefined && bElement !=3D=3D null)
{
bElement.removeNode(true);
}
}
}
function makeNewWindow()
{
var location =3D window.location.href;
var poundIndex =3D location.indexOf('#');
if (poundIndex !=3D -1 && poundIndex+1 < location.length && =
isExternalUrlSafeForNavigation(location.substring(poundIndex+1)))
{
window.open(location.substring(poundIndex+1));
}
}
function setTabInfo(tabInfoBlockID)
{
var bPrevElement =3D document.getElementById("tabInfoTextID");
var bPrevImage =3D document.getElementById("tabInfoBlockIDImage");
if (bPrevElement !=3D null)
{
tabInfoContainer.removeChild(bPrevElement);
}
if (bPrevImage !=3D null)
{
tabImageContainer.removeChild(bPrevImage);
}
var bElement =3D document.createElement("A");
var bImageElement =3D document.createElement("IMG");
var ecBlock =3D document.getElementById(tabInfoBlockID);
if ((ecBlock !=3D undefined && ecBlock !=3D null) &&
(ecBlock.currentStyle.display =3D=3D "none" || =
ecBlock.currentStyle.display =3D=3D null || ecBlock.currentStyle.display =
=3D=3D ""))
{
bElement.innerText =3D L_SHOW_HOTKEYS_TEXT;
bImageElement.alt =3D L_SHOW_HOTKEYS_TEXT;
bImageElement.src=3D"down.png";
}
else
{
bElement.innerText =3D L_HIDE_HOTKEYS_TEXT;
bImageElement.alt =3D L_HIDE_HOTKEYS_TEXT;
bImageElement.src=3D"up.png";
}
bElement.id =3D "tabInfoTextID";
bElement.href =3D "javascript:expandCollapse(\'tabInfoBlockID\', false); =
setTabInfo('tabInfoBlockID');";
bImageElement.id=3D"tabInfoBlockIDImage";
bImageElement.border=3D"0";
bImageElement.className=3D"actionIcon";
tabInfoContainer.appendChild(bElement);
tabImageContainer.appendChild(bImageElement);
}
function launchInternetOptions()
{
window.external.msLaunchInternetOptions();
}
function diagnoseConnection()
{
window.external.DiagnoseConnection();
}
function diagnoseConnectionAndRefresh()
{
window.external.DiagnoseConnection();
if (navigator.onLine)
{
clickRefresh();
}
}
function getInfo()
{
checkConnection();
if (document.addEventListener)
{
addEventListener("offline", reportConnectionEvent, false);
}
else
{
attachEvent("onoffline", reportConnectionEvent);
}
document.body.ononline =3D reportConnectionEvent;
document.body.onoffline =3D reportConnectionEvent;
}
function checkConnection()
{
var newHeading =3D document.getElementById("mainTitle");
var notConnectedTasks =3D document.getElementById("notConnectedTasks");
var cantDisplayTasks =3D document.getElementById("cantDisplayTasks");
if (navigator.onLine)
{
document.title =3D L_INTERNET_CONNECTED_TEXT;
newHeading.textContent =3D L_INTERNET_CONNECTED_TEXT;
addURL();
notConnectedTasks.style.display =3D "none";
cantDisplayTasks.style.display =3D "";
}
else
{
document.title =3D L_INTERNET_NOT_CONNECTED_TEXT;
newHeading.textContent =3D L_INTERNET_NOT_CONNECTED_TEXT;
notConnectedTasks.style.display =3D "";
cantDisplayTasks.style.display =3D "none";
}
}
function reportConnectionEvent(e)
{
if (!e) e =3D window.event;
if ('online' =3D=3D e.type)
{
setTimeout ( "clickRefresh()", 1000 );
}
else if ('offline' =3D=3D e.type)
{
checkConnection();
}
else
{
checkConnection();
}
}
function addURL()
{
var urlResult =3D "";
var DocURL =3D document.location.href;
var urlPlaceholder =3D document.getElementById("webpage");
var beginIndex =3D DocURL.indexOf('#') + 1;
if (DocURL.indexOf("file://", beginIndex) =3D=3D -1)
{
var protocolEndIndex =3D DocURL.indexOf("://", beginIndex);
var endIndex=3DDocURL.indexOf("/", protocolEndIndex + 3);
urlResult =3D DocURL.substring(beginIndex, endIndex);
}
urlPlaceholder.innerText =3D urlResult + " ";
}
function addDomainName()
{
var domainNamePlaceholder =3D document.getElementById("DomainName");
domainNamePlaceholder.innerText =3D findValue("DomainName=3D") + " ";
}
function addProxyDetail()
{
var proxyDetailPlaceholder =3D document.getElementById("ProxyDetail");
proxyDetailPlaceholder.innerText =3D findValue("ProxyDetail=3D");
}
function findValue(key)
{
var value =3D '';
DocQuery =3D document.location.search;
BeginString =3D DocQuery.indexOf(key);
if (BeginString > 0)
{
BeginString +=3D key.length;
EndString =3D Math.max(0, Math.min(DocQuery.indexOf("&", BeginString), =
DocQuery.indexOf("#", BeginString)));
if (EndString > 0)
{
value =3D DocQuery.substring(BeginString, EndString);
}
else
{
value =3D DocQuery.substring(BeginString);
}
}
return value;
}
function isHTTPS(cantDisplayTasks)
{
var DocURL =3D document.location.href;
var poundIndex =3D DocURL.indexOf('#');
var protocolIndex =3D DocURL.indexOf("https://", poundIndex);
if (protocolIndex>poundIndex)
{
var bElement =3D document.createElement("li");
bElement.textContent =3D L_TLS_SSL_TEXT;
cantDisplayTasks.appendChild(bElement);
}
}

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: multipart/alternative;
	boundary="----=_NextPart_001_003B_01D1170A.858FF150"


------=_NextPart_001_003B_01D1170A.858FF150
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: base64
Content-Location: http://www.csdn.net/article/2014-12-15/2823132

77u/PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlv
bmFsLy9FTiIgImh0dHA6Ly93d3cudzNjLm9yZy9UUi8xOTk5L1JFQy1odG1sNDAxLTE5OTkxMjI0
L2xvb3NlLmR0ZCI+DQo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEu
MCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRt
bDEtdHJhbnNpdGlvbmFsLmR0ZCI+PEhUTUwgDQp4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS94aHRtbCI+PEhFQUQ+PE1FVEEgY29udGVudD0iSUU9MTEuMDAwMCIgDQpodHRwLWVxdWl2PSJY
LVVBLUNvbXBhdGlibGUiPg0KIDxMSU5LIGhyZWY9Imh0dHA6Ly9jLmNzZG5pbWcuY24vcHVibGlj
L2Zhdmljb24uaWNvIiByZWw9IlNIT1JUQ1VUIElDT04iPiANCjxNRVRBIGh0dHAtZXF1aXY9IkNv
bnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ij4JIA0KPFRJVExF
Pldvcmt0aWxl5Lit55m+5LiH57qn5a6e5pe25raI5oGv5o6o6YCB5pyN5Yqh55qE5a6e546wLUNT
RE4uTkVUIDwvVElUTEU+IA0KPE1FVEEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IuebuOi+
g+S6juaJi+acuuerr+eahOa2iOaBr+aOqOmAge+8iOS4gOiIrOmDveaYr+S7pVNvY2tldOaWueW8
j+WunueOsO+8ie+8jFdFQuerr+aYr+WfuuS6jkhUVFDljY/orq7vvIzlvojpmr7lg49UQ1DkuIDm
oLfkv53mjIHplb/ov57mjqXjgILkvYbpmo/nnYDmioDmnK/nmoTlj5HlsZXvvIzlh7rnjrDkuoZX
ZWJTb2NrZXTvvIxDb21ldOetieaWsOeahOaKgOacr+WPr+S7pei+vuWIsOexu+S8vOmVv+i/nuaO
peeahOaViOaenOOAgiI+IA0KPE1FVEEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IuacjeWKoeWZ
qCzliIbluIPlvI8s5Lit6Ze05Lu2LOWNs+aXtumAmuS/oSI+IA0KPE1FVEEgbmFtZT0iYXV0aG9y
IiBjb250ZW50PSJDU0ROLk5FVCI+IA0KPE1FVEEgbmFtZT0iQ29weXJpZ2h0IiBjb250ZW50PSJD
U0ROLk5FVCI+IDwhLS0gdG9vbGJhciBzdGFydCAtLT4gPExJTksgaHJlZj0iaHR0cDovL3N0YXRp
Yy5jc2RuLm5ldC9wdWJsaWMvY29tbW9uL3Rvb2xiYXIvY3NzL2luZGV4LmNzcyIgDQpyZWw9InN0
eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIj4gDQo8U0NSSVBUIHNyYz0iaHR0cDovL2MuY3Nkbmlt
Zy5jbi9wdWJsaWMvY29tbW9uL2xpYnMvanF1ZXJ5L2pxdWVyeS0xLjkuMS5taW4uanMiIHR5cGU9
InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQogPCEtLSB0b29sYmFyIGVuZCAtLT4gPExJTksg
aHJlZj0iaHR0cDovL25ld3MuY3Nkbi5uZXQvY3NzL2NvbnRlbnQuY3NzIiByZWw9InN0eWxlc2hl
ZXQiIA0KdHlwZT0idGV4dC9jc3MiPiANCjxTQ1JJUFQ+CnZhciBfaG10ID0gX2htdCB8fCBbXTsK
KGZ1bmN0aW9uKCkgewogIHZhciBobSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIp
OwogIGhtLnNyYyA9ICIvL2htLmJhaWR1LmNvbS9obS5qcz82Mjc1YzdmMmM3ZDk2MTdmNDdiNWVh
M2M3MjYzMzM3NCI7CiAgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2Ny
aXB0IilbMF07CiAgcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShobSwgcyk7Cn0pKCk7CjwvU0NS
SVBUPg0KIA0KPE1FVEEgbmFtZT0iR0VORVJBVE9SIiBjb250ZW50PSJNU0hUTUwgMTEuMDAuOTYw
MC4xNzQ5NiI+PC9IRUFEPiANCjxCT0RZPg0KPFNDUklQVCBzcmM9Imh0dHA6Ly9jcmVhdGltLnF0
bW9qby5jbi90ZC9BbGx5ZXNEZWxpdmVyLm1pbi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBj
aGFyc2V0PSJnYmsiIGFkcy1zcmM9Imh0dHA6Ly9jc2RuaW0ucXRtb2pvLmNvbS9tYWluL3M/dXNl
cj1hbGx5ZXN0ZXN0fGFsbHllc3Rlc3R8YWxseWVzdGVzdDA0MTAmYW1wO2RiPWNzZG5pbSZhbXA7
Ym9yZGVyPTAmYW1wO2xvY2FsPXllcyZhbXA7anM9aWUiPjwvU0NSSVBUPg0KIA0KPFNDUklQVCBz
cmM9Imh0dHA6Ly9jcmVhdGltLnF0bW9qby5jbi90ZC9BbGx5ZXNEZWxpdmVyLm1pbi5qcyIgdHlw
ZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJnYmsiIGFkcy1zcmM9Imh0dHA6Ly9jc2RuaW0u
cXRtb2pvLmNvbS9tYWluL3M/dXNlcj1jc2RufGhvbWVwYWdlfGZsb2F0aW5nXzEmYW1wO2RiPWNz
ZG5pbSZhbXA7Ym9yZGVyPTAmYW1wO2xvY2FsPXllcyZhbXA7anM9aWUiPjwvU0NSSVBUPg0KIA0K
PFNDUklQVCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogIHZhciBwcm90b2NvbCA9IHdpbmRvdy5s
b2NhdGlvbi5wcm90b2NvbDsKICBkb2N1bWVudC53cml0ZSgnPHNjcmlwdCB0eXBlPSJ0ZXh0L2ph
dmFzY3JpcHQiIHNyYz0iJyArcHJvdG9jb2wrICcvL2MuY3NkbmltZy5jbi9wdWJmb290ZXIvanMv
cmVwb0FkZHIyLmpzP3Y9JyArIE1hdGgucmFuZG9tKCkgKyAnIj48LycrJ3NjcmlwdD4nKTsKPC9T
Q1JJUFQ+DQogDQo8U0NSSVBUIGlkPSJ0b29sYmFyLXRwbC1zY3JpcHRJZCIgc3JjPSJodHRwOi8v
c3RhdGljLmNzZG4ubmV0L3B1YmxpYy9jb21tb24vdG9vbGJhci9qcy9odG1sLmpzIiB0eXBlPSJ0
ZXh0L2phdmFzY3JpcHQiIGRvbWFpbj0iaHR0cDovL2Nsb3VkLmNzZG4ubmV0IiBza2luPSJibGFj
ayIgcHJvZD0ibmV3cyI+PC9TQ1JJUFQ+DQogDQo8U0NSSVBUIHNyYz0iaHR0cDovL2NianMuYmFp
ZHUuY29tL2pzL20uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQogDQo8RElW
IGNsYXNzPSJ3cmFwIj48IS0tIOmXtOath+a7muWKqCAtLT4JIA0KPFNDUklQVCBsYW5ndWFnZT0i
amF2YXNjcmlwdCI+ZnVuY3Rpb24gVChuKXtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiQXJ0aWNs
ZUNudCIpLnN0eWxlLmZvbnRTaXplPW4rInB4Ijt9PC9TQ1JJUFQ+DQoJIA0KPFNDUklQVCBzcmM9
Imh0dHA6Ly9uZXdzLmNzZG4ubmV0L2pzL2pxdWVyeS5hdXRvc2Nyb2xsLmpzIiB0eXBlPSJ0ZXh0
L2phdmFzY3JpcHQiPjwvU0NSSVBUPg0KPCEtLea7muWKqGpzLS0+CSA8IS0tIC8v6Ze05q2H5rua
5YqoIC0tPgkgDQo8U0NSSVBUIHR5cGU9InRleHQvamF2YXNjcmlwdCI+QkFJRFVfQ0xCX3ByZWxv
YWRTbG90cygiNDIxNzE4IiwiNDIxNzE3IiwiNDIxNzE1IiwiNDIxNzE0IiwiNDIxNzEyIiwiNDQ1
ODIxIiwiNDIxNzA5IiwiMTE5ODM1Iik7PC9TQ1JJUFQ+DQoJIDwhLS08ZGl2IGNsYXNzPSJhZF85
NjAiPgoJCTxkaXYgY2xhc3M9ImFkXzIzMCI+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQi
PkJBSURVX0NMQl9maWxsU2xvdCgiNDIxNzEyIik7PC9zY3JpcHQ+PC9kaXY+CgkJPGRpdiBjbGFz
cz0iYWRfNzI4Ij48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+QkFJRFVfQ0xCX2ZpbGxT
bG90KCI0MjE3MDkiKTs8L3NjcmlwdD48L2Rpdj4KCTwvZGl2Pi0tPiANCjwvRElWPjwhLS0gbmF2
IC0tPgkgDQo8RElWIGNsYXNzPSJuYXYiIGlkPSJ4Y3hfdGFibWVudSI+DQo8RElWIGNsYXNzPSJj
eF90YWJtZW51IiBpZD0iY3hfdGFibWVudSI+PCEtLSBsZXYgb25lIC0tPgkJCSANCjxESVYgY2xh
c3M9Imxldl8xIiBpZD0iZGRpbWFnZXRhYnMiPg0KPFVMPg0KICA8TEk+PEEgaWQ9InNjbGluazEi
IG9uY2xpY2s9IkxvZ0NsaWNrQ291bnQodGhpcywgMzkyKTsiIGhyZWY9Imh0dHA6Ly9uZXdzLmNz
ZG4ubmV0LyIgDQogIHRhcmdldD0iX2JsYW5rIj7kuJrnlYw8L0E+PC9MST4NCiAgPExJPjxBIGlk
PSJzY2xpbmsyIiBvbmNsaWNrPSJMb2dDbGlja0NvdW50KHRoaXMsIDM5Myk7IiBocmVmPSJodHRw
Oi8vbW9iaWxlLmNzZG4ubmV0LyIgDQogIHRhcmdldD0iX2JsYW5rIj7np7vliqjlvIDlj5E8L0E+
PC9MST4NCiAgPExJPjxBIGlkPSJzY2xpbmszIiBvbmNsaWNrPSJMb2dDbGlja0NvdW50KHRoaXMs
IDM5NCk7IiBocmVmPSJodHRwOi8vY2xvdWQuY3Nkbi5uZXQvIiANCiAgdGFyZ2V0PSJfYmxhbmsi
PuS6keiuoeeulzwvQT48L0xJPg0KICA8TEk+PEEgaWQ9InNjbGluazQiIG9uY2xpY2s9IkxvZ0Ns
aWNrQ291bnQodGhpcywgMzk1KTsiIGhyZWY9Imh0dHA6Ly9zZC5jc2RuLm5ldC8iIA0KICB0YXJn
ZXQ9Il9ibGFuayI+6L2v5Lu256CU5Y+RPC9BPjwvTEk+DQogIDxMST48QSBpZD0ic2NsaW5rNiIg
aHJlZj0iaHR0cDovL3Byb2dyYW1tZXIuY3Nkbi5uZXQvIiANCiAgdGFyZ2V0PSJfYmxhbmsiPueo
i+W6j+WRmDwvQT48L0xJPg0KICA8TEk+PEEgaWQ9InNjbGluazciIGhyZWY9Imh0dHA6Ly9nZWVr
LmNzZG4ubmV0LyIgdGFyZ2V0PSJfYmxhbmsiPuaegeWuouWktOadoTwvQT48L0xJPg0KICA8TEk+
PEEgaWQ9InNjbGluazUiIGhyZWY9Imh0dHA6Ly9zcGVjaWFsLmNzZG4ubmV0L25ld3NzdWJqZWN0
L2luZGV4Lmh0bWwiIA0KICB0YXJnZXQ9Il9ibGFuayI+5LiT6aKYPC9BPjwvTEk+PCEtLTxsaT48
YSBocmVmPSJodHRwOi8vc2hhcmUuY3Nkbi5uZXQiIGlkPSJzY2xpbms4IiB0YXJnZXQ9Il9ibGFu
ayI+Q1NETiBTaGFyZTwvYT48L2xpPgoJCQkJPGxpPjxhIGhyZWY9Imh0dHA6Ly9yZWFkLmNzZG4u
bmV0LyIgaWQ9InNjbGluazkiIHRhcmdldD0iX2JsYW5rIj7miJHnmoRUYWc8L2E+PC9saT4tLT4N
CiAgCQkJCSA8L1VMPjwvRElWPjwhLS0gbGV2IHR3byAtLT4JCQkgDQo8RElWIGNsYXNzPSJsZXZf
MiIgaWQ9InRhYmNvbnRlbnRjb250YWluZXIiPg0KPERJViBjbGFzcz0idGFiY29udGVudCIgaWQ9
InNjMSI+DQo8VUw+DQogIDxMST48QSBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy9jdG8v
bmV3cyIgdGFyZ2V0PSJfYmxhbmsiPkNUTzwvQT48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDov
L3d3dy5jc2RuLm5ldC90YWcvJUU0JUJBJUE3JUU1JTkzJTgxL25ld3MiIA0KICB0YXJnZXQ9Il9i
bGFuayI+5Lqn5ZOBPC9BPjwvTEk+DQogIDxMST48QSBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0
L3RhZy8lRTUlODglOUIlRTQlQjglOUEvbmV3cyIgDQogIHRhcmdldD0iX2JsYW5rIj7liJvkuJo8
L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnLyVFOCU4MSU4
QyVFNSU5QyVCQS9uZXdzIiANCiAgdGFyZ2V0PSJfYmxhbmsiPuiBjOWcujwvQT48L0xJPg0KICA8
TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvJUU0JUJBJUJBJUU3JTg5JUE5L25l
d3MiIA0KICB0YXJnZXQ9Il9ibGFuayI+5Lq654mpPC9BPjwvTEk+DQogIDxMST48QSBocmVmPSJo
dHRwOi8vd3d3LmNzZG4ubmV0L3RhZy8lRTclQTQlQkUlRTUlOEMlQkElRTQlQjklOEIlRTYlOTgl
OUYvbmV3cyIgDQogIHRhcmdldD0iX2JsYW5rIj7npL7ljLrkuYvmmJ88L0E+PC9MST4NCiAgPExJ
PjxBIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnLyVFNSVBRiVCOSVFOCVBRiU5RGN0by9u
ZXdzIiB0YXJnZXQ9Il9ibGFuayI+5a+56K+dQ1RPPC9BPjwvTEk+PC9VTD48L0RJVj4NCjxESVYg
Y2xhc3M9InRhYmNvbnRlbnQiIGlkPSJzYzIiPg0KPFVMPg0KICA8TEk+PEEgaHJlZj0iaHR0cDov
L3d3dy5jc2RuLm5ldC90YWcvYW5kcm9pZC9uZXdzIiANCiAgdGFyZ2V0PSJfYmxhbmsiPkFuZHJv
aWQ8L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnL2lvcy9u
ZXdzIiB0YXJnZXQ9Il9ibGFuayI+aU9TPC9BPjwvTEk+DQogIDxMST48QSBocmVmPSJodHRwOi8v
d3d3LmNzZG4ubmV0L3RhZy8lRTclQTclQkIlRTUlOEElQTglRTYlQjglQjglRTYlODglOEYvbmV3
cyIgDQogIHRhcmdldD0iX2JsYW5rIj7np7vliqjmuLjmiI88L0E+PC9MST4NCiAgPExJPjxBIGhy
ZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnLyVFOCVCRiU5MSVFNSU4QyVBMC9uZXdzIiANCiAg
dGFyZ2V0PSJfYmxhbmsiPui/keWMoDwvQT48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3
dy5jc2RuLm5ldC90YWcvc3dpZnQvbmV3cyIgDQp0YXJnZXQ9Il9ibGFuayI+U3dpZnQ8L0E+PC9M
ST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnLyVFNiU5OSVCQSVFOCU4
MyVCRCVFNyVBMSVBQyVFNCVCQiVCNi9uZXdzIiANCiAgdGFyZ2V0PSJfYmxhbmsiPuaZuuiDveeh
rOS7tjwvQT48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvaHRt
bDUvbmV3cyIgDQp0YXJnZXQ9Il9ibGFuayI+SFRNTDU8L0E+PC9MST48L1VMPjwvRElWPg0KPERJ
ViBjbGFzcz0idGFiY29udGVudCIgaWQ9InNjMyI+DQo8VUw+DQogIDxMST48QSBocmVmPSJodHRw
Oi8vd3d3LmNzZG4ubmV0L3RhZy8lRTUlQTQlQTclRTYlOTUlQjAlRTYlOEQlQUUvbmV3cyIgdGFy
Z2V0PSJfYmxhbmsiPuWkp+aVsOaNrjwvQT48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3
dy5jc2RuLm5ldC90YWcvJUU2JTk1JUIwJUU2JThEJUFFJUU0JUI4JUFEJUU1JUJGJTgzL25ld3Mi
IA0KICB0YXJnZXQ9Il9ibGFuayI+5pWw5o2u5Lit5b+DPC9BPjwvTEk+DQogIDxMST48QSBocmVm
PSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy8lRTYlOUMlOEQlRTUlOEElQTElRTUlOTklQTgvbmV3
cyIgdGFyZ2V0PSJfYmxhbmsiPuacjeWKoeWZqDwvQT48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0
cDovL3d3dy5jc2RuLm5ldC90YWcvJUU4JTk5JTlBJUU2JThCJTlGJUU1JThDJTk2L25ld3MiIHRh
cmdldD0iX2JsYW5rIj7omZrmi5/ljJY8L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly93
d3cuY3Nkbi5uZXQvdGFnLyVFNSVBRSU4OSVFNSU4NSVBOC9uZXdzIiANCiAgdGFyZ2V0PSJfYmxh
bmsiPuWuieWFqDwvQT48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90
YWcvJUU0JUJBJTkxJUU1JTg1JTg4JUU5JTk0JThCL25ld3MiIHRhcmdldD0iX2JsYW5rIj7kupHl
hYjplIs8L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnLyVF
NSVBRCU5OCVFNSU4MiVBOC9uZXdzIiANCiAgdGFyZ2V0PSJfYmxhbmsiPuWtmOWCqDwvQT48L0xJ
Pg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvbm9zcWwvbmV3cyIgDQp0
YXJnZXQ9Il9ibGFuayI+Tm9TUUw8L0E+PC9MST48L1VMPjwvRElWPg0KPERJViBjbGFzcz0idGFi
Y29udGVudCIgaWQ9InNjNCI+DQo8VUw+DQogIDxMST48QSBocmVmPSJodHRwOi8vd3d3LmNzZG4u
bmV0L3RhZy8lRTclQkMlOTYlRTclQTglOEIlRTglQUYlQUQlRTglQTglODAvbmV3cyIgDQogIHRh
cmdldD0iX2JsYW5rIj7nvJbnqIvor63oqIA8L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6
Ly93d3cuY3Nkbi5uZXQvdGFnLyVFNSVCQyU4MCVFNiU5NCVCRSVFNSVCOSVCMyVFNSU4RiVCMC9u
ZXdzIiANCiAgdGFyZ2V0PSJfYmxhbmsiPuW8gOaUvuW5s+WPsDwvQT48L0xJPg0KICA8TEk+PEEg
aHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvaHRtbDUvbmV3cyIgDQp0YXJnZXQ9Il9ibGFu
ayI+SFRNTDU8L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFn
LyVFNSVCQyU4MCVFNiVCQSU5MC9uZXdzIiANCiAgdGFyZ2V0PSJfYmxhbmsiPuW8gOa6kDwvQT48
L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvJUU2JTlFJUI2JUU2
JTlFJTg0L25ld3MiIA0KICB0YXJnZXQ9Il9ibGFuayI+5p625p6EPC9BPjwvTEk+DQogIDxMST48
QSBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy8lRTYlOTklQkElRTglODMlQkQlRTclQUUl
OTclRTYlQjMlOTUvbmV3cyIgDQogIHRhcmdldD0iX2JsYW5rIj7mmbrog73nrpfms5U8L0E+PC9M
ST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnLyVFNSU4OSU4RCVFNyVB
QiVBRiVFNSVCQyU4MCVFNSU4RiU5MS9uZXdzIiANCiAgdGFyZ2V0PSJfYmxhbmsiPuWJjeerr+W8
gOWPkTwvQT48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvJUU2
JTk1JUIwJUU2JThEJUFFJUU1JUJBJTkzL25ld3MiIHRhcmdldD0iX2JsYW5rIj7mlbDmja7lupM8
L0E+PC9MST48L1VMPjwvRElWPg0KPERJViBjbGFzcz0idGFiY29udGVudCIgaWQ9InNjNSI+DQo8
VUw+DQogIDxMST48QSBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy8lRTUlQjAlODElRTkl
OUQlQTIlRTclQTclODAvbmV3cyIgdGFyZ2V0PSJfYmxhbmsiPuWwgemdouengDwvQT48L0xJPg0K
ICA8TEk+PEEgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvJUU3JTg5JUI5JUU1JTg4JUFC
JUU3JUFEJTk2JUU1JTg4JTkyL25ld3MiIA0KICB0YXJnZXQ9Il9ibGFuayI+54m55Yir562W5YiS
PC9BPjwvTEk+DQogIDxMST48QSBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy8lRTclQUUl
QTElRTclOTAlODYlRTUlQUUlOUUlRTglQjclQjUvbmV3cyIgDQogIHRhcmdldD0iX2JsYW5rIj7n
rqHnkIblrp7ot7U8L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQv
dGFnLyVFNiU4QSU4MCVFNiU5QyVBRiVFNiU5RSVCNiVFNiU5RSU4NC9uZXdzIiANCiAgdGFyZ2V0
PSJfYmxhbmsiPuaKgOacr+aetuaehDwvQT48L0xJPjwvVUw+PC9ESVY+PC9ESVY+PC9ESVY+PC9E
SVY+DQo8U0NSSVBUIHR5cGU9InRleHQvamF2YXNjcmlwdCI+CgkvLyBUaGUgaWRlYSBib3Jyb3dl
ZCBmcm9tIGR5bmFtaWNEcml2ZS5jb20KCQoJdmFyIGluaXRpYWx0YWIgPSBbMSwgInNjMSJdCgkK
CXZhciBwcmV2aW91c3RhYiA9ICIiOwoJdmFyIGludHY7CglmdW5jdGlvbiBleHBhbmRjb250ZW50
KGNpZCwgYW9iamVjdCkgewoJICAgIHN0b3BUaW1lcigpOwoJICAgIGhpZ2hsaWdodHRhYihhb2Jq
ZWN0KTsKCSAgICBpZiAocHJldmlvdXN0YWIgIT0gIiIpewoJICAgICAgICAgZG9jdW1lbnQuZ2V0
RWxlbWVudEJ5SWQocHJldmlvdXN0YWIpLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CgkgICAgfQoJ
ICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNpZCkuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7
CgkgICAgcHJldmlvdXN0YWIgPSBjaWQ7Cgl9CgkKCWZ1bmN0aW9uIGhpZ2hsaWdodHRhYihhb2Jq
ZWN0KSB7CgkgICAgc3RvcFRpbWVyKCk7CgkKCSAgIGlmICh0eXBlb2YgdGFib2JqbGlua3MgPT0g
InVuZGVmaW5lZCIpewoJICAgICAgICAgY29sbGVjdGRkaW1hZ2V0YWJzKCk7CgkgICAgfQoJICAg
Zm9yIChpID0gMDsgaSA8IHRhYm9iamxpbmtzLmxlbmd0aDsgaSsrKXsKCSAgICAJdGFib2JqbGlu
a3NbaV0uY2xhc3NOYW1lID0gIiI7ICAgCgkgICAgfQoJICAgIGFvYmplY3QuY2xhc3NOYW1lID0g
ImN1cnJlbnQiOwoJfQoJCglmdW5jdGlvbiBjb2xsZWN0ZGRpbWFnZXRhYnMoKSB7CgkgICAgdmFy
IHRhYm9iaiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJkZGltYWdldGFicyIpOwoJICAgIHRh
Ym9iamxpbmtzID0gdGFib2JqLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJBIik7Cgl9CgkKCWZ1bmN0
aW9uIHN0YXJ0VGltZXIoKSB7CgkgICAgaW50diA9IHNldFRpbWVvdXQoImV4cGFuZGNvbnRlbnQo
aW5pdGlhbHRhYlsxXSwgdGFib2JqbGlua3NbaW5pdGlhbHRhYlswXS0xXSkiLCAyMDAwKTsKCX0K
CQoJZnVuY3Rpb24gc3RvcFRpbWVyKCkgewoJICAgIGNsZWFyVGltZW91dChpbnR2KTsKCX0KCQoJ
JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsgCgkJY29sbGVjdGRkaW1hZ2V0YWJzKCk7CgkJ
dmFyIGRvbWFpbiA9IG5ldyBBcnJheSgnbmV3cy4nLCdtb2JpbGUuJywnY2xvdWQuJywnc2QuJywn
cHJvZ3JhbW1lci4nKTsKCQlmb3IodmFyIGk9MDtpPGRvbWFpbi5sZW5ndGg7aSsrKXsKCQkJaWYo
d2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZihkb21haW5baV0pID4gMCl7CgkJCQlleHBhbmRj
b250ZW50KCdzYycrKGkrMSksIHRhYm9iamxpbmtzW2ldKTsKCQkJfQoJCX0KCQkkKCcjYnV0dG9u
X2JvdGgnKS5jbGljayhmdW5jdGlvbigpewoJCQl2YXIga2V5PSQoJyNxdWVyaWVzX3NlYXJjaGZp
ZWxkX3F1ZXJ5LW5ldycpLnZhbCgpOwoJCQlrZXkgPSAkLnRyaW0oa2V5KTsKCQkJaWYoa2V5PT0i
Iil7CgkJCQlhbGVydCgi5YWz6ZSu5a2X5LiN6IO95Li656m677yBIik7CgkJCX0KCQkJZWxzZXsK
CQkJCWtleSA9ICBlbmNvZGVVUklDb21wb25lbnQoa2V5KQoJCQkJdmFyIHVybD0iaHR0cDovL3Nv
LmNzZG4ubmV0L3NlYXJjaD9zb3J0PWNyZWF0ZWRfYXQmdD1uZXdzJnE9IitrZXk7CgkJCQl3aW5k
b3cubG9jYXRpb24uaHJlZj11cmw7CgkJCX0KCQkJcmV0dXJuIGZhbHNlOwoJCX0pOwoJfSk7CgkK
CTwvU0NSSVBUPg0KICANCjxESVYgY2xhc3M9IndyYXAiPg0KPERJViBjbGFzcz0iYWRfOTYwIj4N
CjxESVYgY2xhc3M9ImFkXzE5MCI+DQo8U0NSSVBUIHNyYz0iaHR0cDovL2NyZWF0aW0ucXRtb2pv
LmNuL3RkL0FsbHllc0RlbGl2ZXIubWluLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJz
ZXQ9ImdiayIgYWRzLXNyYz0iaHR0cDovL2NzZG5pbS5xdG1vam8uY29tL21haW4vcz91c2VyPWNz
ZG58YXJ0aWNsZXxidXR0b24xJmFtcDtkYj1jc2RuaW0mYW1wO2JvcmRlcj0wJmFtcDtsb2NhbD15
ZXMmYW1wO2pzPWllIj48L1NDUklQVD4NCjwvRElWPg0KPERJViBjbGFzcz0iYWRfNzYwIj4NCjxT
Q1JJUFQgc3JjPSJodHRwOi8vY3JlYXRpbS5xdG1vam8uY24vdGQvQWxseWVzRGVsaXZlci5taW4u
anMiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgY2hhcnNldD0iZ2JrIiBhZHMtc3JjPSJodHRwOi8v
Y3NkbmltLnF0bW9qby5jb20vbWFpbi9zP3VzZXI9Y3NkbnxhcnRpY2xlfGJhbm5lcjEmYW1wO2Ri
PWNzZG5pbSZhbXA7Ym9yZGVyPTAmYW1wO2xvY2FsPXllcyZhbXA7anM9aWUiPjwvU0NSSVBUPg0K
PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPSJicmVhX25hdiI+PFNQQU4gY2xhc3M9ImZyIj48QSBj
bGFzcz0icnNzIiBocmVmPSJodHRwOi8vbmV3cy5jc2RuLm5ldC9yc3NfY2xvdWQuaHRtbCIgDQp0
YXJnZXQ9Il9ibGFuayI+6K6i6ZiF5LqR6K6h566XUlNTPC9BPgkJCQkJCQk8L1NQQU4+PEEgDQpo
cmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0LyI+Q1NETummlumhtTwvQT48RU0+Jmd0OzwvRU0+CQkg
PEEgaHJlZj0iaHR0cDovL2Nsb3VkLmNzZG4ubmV0LyIgDQp0YXJnZXQ9Il9ibGFuayI+5LqR6K6h
566XPC9BPgk8L0RJVj4NCjxESVYgY2xhc3M9ImNvbnRlbnQiPg0KPERJViBjbGFzcz0ibGVmdCI+
DQo8RElWIGNsYXNzPSJkZXRhaWwiPg0KPEgxIGNsYXNzPSJ0aXRsZSI+V29ya3RpbGXkuK3nmb7k
uIfnuqflrp7ml7bmtojmga/mjqjpgIHmnI3liqHnmoTlrp7njrA8L0gxPg0KPEg0Pg0KPERJViBj
bGFzcz0idGl0X2JhciI+CQkJCQkJ5Y+R6KGo5LqOPFNQQU4gY2xhc3M9ImFnbyI+MjAxNC0xMi0x
NSAxMTo0MzwvU1BBTj58DQoJCQkJCQkgPFNQQU4gY2xhc3M9InZpZXdfdGltZSI+5qyh6ZiF6K+7
PC9TUEFOPnwgCQkJCQkJIOadpea6kDxTUEFOIA0KY2xhc3M9ImFnbyI+5Lyv5LmQ5Zyo57q/PC9T
UEFOPnwJCQkJCQkgPFNQQU4gY2xhc3M9Im51bV9yZWNvbSI+PEZPTlQgY2xhc3M9ImNtdGNvdW50
IiANCmlkPSJyZW1hcmtfY291bnQxIiBzdHlsZT0iY29sb3I6IHJnYigyMDQsIDAsIDApOyBmb250
LXNpemU6IDEycHg7Ij4wPC9GT05UPiANCuadoeivhOiuujwvU1BBTj58IAkJCQkJCSDkvZzogIU8
U1BBTiBjbGFzcz0iYWdvIj5Xb3JrdGlsZeeglOWPkeWboumYnzwvU1BBTj4JCQkJCSA8L0RJVj48
L0g0Pg0KPERJViBjbGFzcz0idGFnIj48QSBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy8l
RTYlOUMlOEQlRTUlOEElQTElRTUlOTklQTgvbmV3cyI+5pyN5Yqh5ZmoPC9BPjxBIA0KaHJlZj0i
aHR0cDovL3d3dy5jc2RuLm5ldC90YWcvJUU1JTg4JTg2JUU1JUI4JTgzJUU1JUJDJThGL25ld3Mi
PuWIhuW4g+W8jzwvQT48QSBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy8lRTQlQjglQUQl
RTklOTclQjQlRTQlQkIlQjYvbmV3cyI+5Lit6Ze05Lu2PC9BPjxBIA0KaHJlZj0iaHR0cDovL3d3
dy5jc2RuLm5ldC90YWcvJUU1JThEJUIzJUU2JTk3JUI2JUU5JTgwJTlBJUU0JUJGJUExL25ld3Mi
PuWNs+aXtumAmuS/oTwvQT48L0RJVj4NCjxESVYgDQpjbGFzcz0ic3VtbWFyeSI+PElOUFVUIG5h
bWU9ImFydGljbGVfZGVzY3JpcHRpb24iIGlkPSJhcnRpY2xlX2Rlc2NyaXB0aW9uIiB0eXBlPSJo
aWRkZW4iIHZhbHVlPSLnm7jovoPkuo7miYvmnLrnq6/nmoTmtojmga/mjqjpgIHvvIjkuIDoiKzp
g73mmK/ku6VTb2NrZXTmlrnlvI/lrp7njrDvvInvvIxXRULnq6/mmK/ln7rkuo5IVFRQ5Y2P6K6u
77yM5b6I6Zq+5YOPVENQ5LiA5qC35L+d5oyB6ZW/6L+e5o6l44CC5L2G6ZqP552A5oqA5pyv55qE
5Y+R5bGV77yM5Ye6546w5LqGV2ViU29ja2V077yMQ29tZXTnrYnmlrDnmoTmioDmnK/lj6/ku6Xo
vr7liLDnsbvkvLzplb/ov57mjqXnmoTmlYjmnpzjgIIiPg0KCQkJCSANCjxTQ1JJUFQgdHlwZT0i
dGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCI+CihmdW5jdGlvbigpewogIHZhciBfdyA9
IDIyICwgX2ggPSAxNjsKICB2YXIgYXJ0aWNsZV9kZXNjcmlwdGlvbj0kKCIjYXJ0aWNsZV9kZXNj
cmlwdGlvbiIpLnZhbCgpOwogIHZhciBwYXJhbSA9IHsKICAgIHVybDpsb2NhdGlvbi5ocmVmLAog
ICAgdHlwZTonMycsCiAgICBjb3VudDonJywgLyoq5piv5ZCm5pi+56S65YiG5Lqr5pWw77yMMeaY
vuekuijlj6/pgIkpKi8KICAgIGFwcGtleTonJywgLyoq5oKo55Sz6K+355qE5bqU55SoYXBwa2V5
LOaYvuekuuWIhuS6q+adpea6kCjlj6/pgIkpKi8KICAgIHRpdGxlOmFydGljbGVfZGVzY3JpcHRp
b24sIC8qKuWIhuS6q+eahOaWh+Wtl+WGheWuuSjlj6/pgInvvIzpu5jorqTkuLrmiYDlnKjpobXp
naLnmoR0aXRsZSkqLwogICAgcGljOicnLCAvKirliIbkuqvlm77niYfnmoTot6/lvoQo5Y+v6YCJ
KSovCiAgICByYWxhdGVVaWQ6JycsIC8qKuWFs+iBlOeUqOaIt+eahFVJRO+8jOWIhuS6q+W+ruWN
muS8mkDor6XnlKjmiLco5Y+v6YCJKSovCglsYW5ndWFnZTonemhfY24nLCAvKirorr7nva7or63o
qIDvvIx6aF9jbnx6aF90dyjlj6/pgIkpKi8KICAgIHJuZDpuZXcgRGF0ZSgpLnZhbHVlT2YoKQog
IH0KICB2YXIgdGVtcCA9IFtdOwogIGZvciggdmFyIHAgaW4gcGFyYW0gKXsKICAgIHRlbXAucHVz
aChwICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KCBwYXJhbVtwXSB8fCAnJyApICkKICB9CiAg
ZG9jdW1lbnQud3JpdGUoJzxpZnJhbWUgYWxsb3dUcmFuc3BhcmVuY3k9InRydWUiIGZyYW1lYm9y
ZGVyPSIwIiBzY3JvbGxpbmc9Im5vIiBzcmM9Imh0dHA6Ly9oaXRzLnNpbmFqcy5jbi9BMS93ZWli
b3NoYXJlLmh0bWw/JyArIHRlbXAuam9pbignJicpICsgJyIgd2lkdGg9IicrIF93KyciIGhlaWdo
dD0iJytfaCsnIj48L2lmcmFtZT4nKQp9KSgpCjwvU0NSSVBUPg0KPFNUUk9ORz7mkZjopoHvvJo8
L1NUUk9ORz7nm7jovoPkuo7miYvmnLrnq6/nmoTmtojmga/mjqjpgIHvvIjkuIDoiKzpg73mmK/k
u6VTb2NrZXTmlrnlvI/lrp7njrDvvInvvIxXRULnq6/mmK/ln7rkuo5IVFRQ5Y2P6K6u77yM5b6I
6Zq+5YOPVENQ5LiA5qC35L+d5oyB6ZW/6L+e5o6l44CC5L2G6ZqP552A5oqA5pyv55qE5Y+R5bGV
77yM5Ye6546w5LqGV2ViU29ja2V077yMQ29tZXTnrYnmlrDnmoTmioDmnK/lj6/ku6Xovr7liLDn
sbvkvLzplb/ov57mjqXnmoTmlYjmnpzjgIIJCQkJPC9ESVY+DQo8RElWIGNsYXNzPSJjb24gbmV3
c19jb250ZW50Ij4NCjxQPuWcqOWboumYn+WNj+WQjOW3peWFtyAgICAgPEEgaHJlZj0iaHR0cHM6
Ly93b3JrdGlsZS5jb20vP2htc3I9aHR0cCUzQSUyRiUyRmJsb2cuam9iYm9sZS5jb20lMkYmYW1w
O2htbWQ9JUU2JTk2JTg3JUU1JUFEJTk3JmFtcDtobXBsPSZhbXA7aG1rdz0mYW1wO2htY2k9Ij5X
b3JrdGlsZTwvQT7nmoTkvb/nlKjov4fnqIvkuK3vvIzkvaDkvJrlj5HnjrDml6DorrrmmK/lj7Pk
uIrop5LnmoTmtojmga/pgJrnn6XvvIzov5jmmK/lnKjku7vliqHpnaLmnb/kuK3mi5bliqjku7vl
iqHvvIzov5jmnInnlKjmiLfnmoTlnKjnur/nirbmgIHvvIzpg73mmK/lrp7ml7bliLfmlrDjgIJX
b3JrdGlsZeS4reeahOaOqOmAgeacjeWKoeaYr+mHh+eUqOeahOaYr+WfuuS6jlhNUFDljY/orq7j
gIFFcmxhbmfor63oqIDlrp7njrDnmoRFamFiYmVyZO+8jOW5tuWcqOWFtua6kOeggeWfuuehgOS4
iu+8jOe7k+WQiOaIkeS7rOeahOS4muWKoe+8jOWvuea6kOeggeS9nOS6huS/ruaUueS7pemAgumF
jeaIkeS7rOiHqui6q+eahOmcgOaxguOAguWPpuWklu+8jOWfuuS6jkFNUVDljY/orq7kuZ/lj6/k
u6XkvZzkuLrlrp7ml7bmtojmga/mjqjpgIHnmoTkuIDnp43pgInmi6nvvIzouKLouKLnvZHlsLHm
mK/ph4fnlKggDQogICAgUmFiYml0TVErU1RPTVDljY/orq7lrp7njrDnmoTmtojmga/mjqjpgIHm
nI3liqHjgILmnKzmloflsIbnu5PlkIjmiJHlnKhXb3JrdGlsZeWSjOi4oui4oue9keeahOmhueeb
ruWunui3te+8jOS7i+e7jeS4i+a2iOaBr+aOqOmAgeacjeWKoeeahOWFt+S9k+WunueOsOOAgjwv
UD4NCjxQPjwvUD4NCjxIMj7lrp7ml7bmjqjpgIHnmoTlh6Dnp43lrp7njrDmlrnlvI88L0gyPg0K
PFA+PC9QPg0KPFA+55u46L6D5LqO5omL5py656uv55qE5raI5oGv5o6o6YCB77yI5LiA6Iis6YO9
5piv5LulU29ja2V05pa55byP5a6e546w77yJ77yMV0VC56uv5piv5Z+65LqOSFRUUOWNj+iuru+8
jOW+iOmavuWDj1RDUOS4gOagt+S/neaMgemVv+i/nuaOpeOAguS9humaj+edgOaKgOacr+eahOWP
keWxle+8jOWHuueOsOS6hldlYlNvY2tldO+8jENvbWV0562J5paw55qE5oqA5pyv5Y+v5Lul6L6+
5Yiw57G75Ly86ZW/6L+e5o6l55qE5pWI5p6c77yM6L+Z5Lqb5oqA5pyv5aSn5L2T5Y+v5YiG5Li6
5Lul5LiL5Yeg57G777yaPC9QPg0KPFA+PFNUUk9ORz4x77yJ55+t6L2u6K+iPC9TVFJPTkc+44CC
6aG16Z2i56uv6YCa6L+HSlPlrprml7blvILmraXliLfmlrDvvIzov5nnp43mlrnlvI/lrp7ml7bm
lYjmnpzovoPlt67jgII8L1A+DQo8UD48U1RST05HPjLvvInplb/ova7or6I8L1NUUk9ORz7jgILp
obXpnaLnq6/pgJrov4dKU+W8guatpeivt+axguacjeWKoeerr++8jOacjeWKoeerr+WcqOaOpeaU
tuWIsOivt+axguWQju+8jOWmguaenOivpeasoeivt+axguayoeacieaVsOaNru+8jOWImeaMgui1
t+i/measoeivt+axgu+8jOebtOWIsOacieaVsOaNruWIsOi+vuaIluaXtumXtOeJh++8iOacjeWK
oeerr+iuvuWumu+8ieWIsO+8jOWImei/lOWbnuacrOasoeivt+axgu+8jOWuouaIt+err+aOpeed
gOS4i+S4gOasoeivt+axguOAguekuuS+i+WmguS4i++8mjwvUD4NCjxQIHN0eWxlPSJ0ZXh0LWFs
aWduOiBjZW50ZXI7Ij48SU1HIGNsYXNzPSJhbGlnbmNlbnRlciBzaXplLWZ1bGwgd3AtaW1hZ2Ut
ODExMjkiIA0KYWx0PSIxIiBzcmM9Imh0dHA6Ly9qYmNkbjIuYjAudXBhaXl1bi5jb20vMjAxNC8x
Mi8yOGM4ZWRkZTNkNjFhMDQxMTUxMWQzYjE4NjZmMDYzNi5qcGVnIj4gDQogICAgPC9QPg0KPFA+
PFNUUk9ORz4z77yJV2ViU29ja2V0PC9TVFJPTkc+44CC5rWP6KeI5Zmo6YCa6L+HV2ViU29ja2V0
5Y2P6K6u6L+e5o6l5pyN5Yqh56uv77yM5a6e546w5LqG5rWP6KeI5Zmo5ZKM5pyN5Yqh5Zmo56uv
55qE5YWo5Y+M5bel6YCa5L+h44CC6ZyA6KaB5pyN5Yqh56uv5ZKM5rWP6KeI5Zmo6YO95pSv5oyB
V2ViU29ja2V05Y2P6K6u44CCPC9QPg0KPFA+5Lul5LiK5Yeg56eN5pa55byP5Lit77yM5pa55byP
MeWunueOsOi+g+eugOWNle+8jOS9huaViOeOh+WSjOWunuaXtuaViOaenOi+g+W3ruOAguaWueW8
jzLlr7nmnI3liqHnq6/lrp7njrDnmoTopoHmsYLmr5TovoPpq5jvvIzlsKTlhbbmmK/lubblj5Hp
h4/lpKfnmoTmg4XlhrXkuIvvvIzlr7nmnI3liqHnq6/nmoTljovlipvlvojlpKfjgILmlrnlvI8z
5pWI546H6L6D6auY77yM5L2G5a+56L6D5L2O54mI5pys55qE5rWP6KeI5Zmo5LiN5pSv5oyB77yM
5Y+m5aSW5pyN5Yqh56uv5Lmf6ZyA6KaB5pyJ5pSv5oyBV2ViU29ja2V055qE5a6e546w44CCV29y
a3RpbGXnmoRXRULnq6/lrp7ml7bmtojmga/mjqjpgIHvvIzph4fnlKjnmoTmmK9YTVBQ5omp5bGV
5Y2P6K6uWEVQLTAxMjQgDQogICAgICAgQk9TSCggICAgICAgICA8QSANCmhyZWY9Imh0dHA6Ly94
bXBwLm9yZy9leHRlbnNpb25zL3hlcC0wMTI0Lmh0bWwiPmh0dHA6Ly94bXBwLm9yZy9leHRlbnNp
b25zL3hlcC0wMTI0Lmh0bWw8L0E+Ke+8jOacrOi0qOaYr+mHh+eUqOaWueW8jzLplb/ova7or6Ln
moTmlrnlvI/jgILouKLouKLnvZHliJnph4fnlKjkuoZXZWJTb2NrZXTov57mjqVSYWJiaXRNUeea
hOaWueW8j+WunueOsO+8jOS4i+mdouaIkeS8muWFt+S9k+S7i+e7jeWmguS9leeUqOi/meS4pOen
jeaWueW8j+WunueOsFNlcnZlciANCiAgICAgICBQdXNo44CCPC9QPg0KPEgyPui/kOihjOaXtueO
r+Wig+WHhuWkhzwvSDI+DQo8UD7mnI3liqHnq6/nmoTlrp7njrDkuK3vvIzml6Dorrrph4fnlKhF
amFiYmVyZOi/mOaYr1JhYmJpdE1R77yM6YO95piv5Z+65LqORXJsYW5n6K+t6KiA5byA5Y+R55qE
77yM5omA5Lul5b+F6aG75a6J6KOFRXJsYW5n6L+Q6KGM5pe2546v5aKD44CCRXJsYW5n5piv5LiA
56eN5Ye95pWw5byP6K+t6KiA77yM5YW35pyJ5a656ZSZ44CB6auY5bm25Y+R55qE54m554K577yM
5YCf5YqpT1RQ55qE5Ye95pWw5bqT77yM5b6I5a655piT5p6E5bu65LiA5Liq5YGl5aOu55qE5YiG
5biD5byP57O757uf44CC55uu5YmN77yM5Z+65LqORXJsYW5n5byA5Y+R55qE5Lqn5ZOB5pyJ77yM
5pWw5o2u5bqT5pa56Z2i77yaUmlha++8iER5bmFtb+WunueOsO+8ieOAgUNvdWNoRELvvIwgDQog
ICAgICAgIFdlYnNlcnZlcuaWuemdou+8mkNvd2JveeOAgU1vY2hpd2Vi77yMIA0K5raI5oGv5Lit
6Ze05Lu25pyJUmFiYml0TVHnrYnjgILlr7nkuo7mnI3liqHnq6/nqIvluo/lkZjmnaXor7TvvIxF
cmxhbmfmj5DkvpvnmoTpq5jlubblj5HjgIHlrrnplJnjgIHng63pg6jnvbLnrYnnibnmgKfmmK/l
hbbku5bor63oqIDml6Dms5Xovr7liLDnmoTjgILml6DorrrlnKjlrp7ml7bpgJrkv6Hov5jmmK/l
nKjmuLjmiI/nqIvluo/kuK3vvIznlKhFcmxhbmflj6/ku6XlvojlrrnmmJPkuLrmr4/kuIDkuKrk
uIrnur/nlKjmiLfliJvlu7rkuIDkuKrlr7nlupTnmoRQcm9jZXNz77yM5a+55LiA5Y+wNOaguDjk
uKpH55qE5pyN5Yqh5Zmo5p2l6K+077yM5om/6L295LiK55m+5LiH5Liq6L+Z5qC355qEUHJvY2Vz
c+aYr+mdnuW4uOi9u+advueahOS6i+OAguS4i+WbvuaYr0VybGFuZ+eoi+W6j+WPkei1t1Byb2Nl
c3PnmoTkuIDoiKzmgKfnpLrmhI/lm77vvJo8L1A+DQo8UCBzdHlsZT0idGV4dC1hbGlnbjogY2Vu
dGVyOyI+PElNRyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1mdWxsIHdwLWltYWdlLTgxMTMxIiAN
CnN0eWxlPSJ3aWR0aDogNTQ4LjI3cHg7IGhlaWdodDogMzcxcHg7IiBhbHQ9IjIiIHNyYz0iaHR0
cDovL2piY2RuMi5iMC51cGFpeXVuLmNvbS8yMDE0LzEyLzY2NWY2NDRlNDM3MzFmZjlkYjNkMzQx
ZGE1YzgyN2UxLmpwZWciPiANCiAgICAgICAgPC9QPg0KPFA+5aaC5Zu+5omA56S677yMU2Vzc2lv
biBNYW5hZ2VyKG9yIEdhdGV3YXkp6LSf6LSj5Li65q+P5Liq55So5oi377yIVUlE77yJ5Yib5bu6
55u45a+55bqU55qEUHJvY2Vzc++8jCANCuW5tuaKiui/meS4quWvueW6lOWFs+ezu++8iE1BUO+8
ieWtmOaUvuWIsOaVsOaNruihqOS4reOAguavj+S4qlByb2Nlc3PliJnlr7nlupTnlKjmiLfmlbDm
ja7vvIzlubbkuJTku5bku6zkuYvpl7Tlj6/ku6Xnm7jkupLlj5HpgIHmtojmga/jgIJFcmxhbmfn
moTkvJjlir/lsLHmmK/lnKjlhoXlrZjotrPlpJ/nmoTmg4XlhrXkuIvliJvlu7rkuIrnmb7kuIfk
uKrov5nmoLfnmoRQcm9jZXNz77yM6ICM5LiU5a6D55qE5Yib5bu65ZKM6ZSA5q+B5q+USkFWQeea
hFRocmVhZOimgei9u+mHj+eahOWkmu+8jOS4pOiAheS4jeaYr+S4gOS4quaVsOmHj+e6p+eahOOA
gjwvUD4NCjxQPuWlveS6hu+8jOaIkeS7rOeOsOWcqOW8gOWni+edgOaJi0VybGFuZ+eOr+Wig+ea
hOaQreW7uu+8iOWunumqjOeahOezu+e7n+S4ulVidW50dSZuYnNwOzEyLjA0LCA05qC4OOS4qkfl
hoXlrZjvvInvvJo8L1A+DQo8UD4x44CB5L6d6LWW5bqT5a6J6KOFPC9QPg0KPFA+PC9QPg0KPFBS
RSBjbGFzcz0iYnJ1c2g6IGpzIiBzbmlwcGV0X2ZpbGVfbmFtZT0icHRjbXNfMTQxODYxNDk5MF8w
LmpzIiBjb2RlX3NuaXBwZXRfaWQ9IjU1MjQ1MiI+c3VkbyBhcHQtZ2V0IGluc3RhbGwgYnVpbGQt
ZXNzZW50aWFsCnN1ZG8gYXB0LWdldCBpbnN0YWxsIGxpYm5jdXJzZXM1LWRldgpzdWRvIGFwdC1n
ZXQgaW5zdGFsbCBsaWJzc2wtZGV2IGxpYnlhbWwtZGV2CnN1ZG8gYXB0LWdldCBpbnN0YWxsIG00
CnN1ZG8gYXB0LWdldCBpbnN0YWxsIHVuaXhvZGJjIHVuaXhvZGJjLWRldgpzdWRvIGFwdC1nZXQg
aW5zdGFsbCBmcmVlZ2x1dDMtZGV2IGxpYnd4Z3RrMi44LWRldgpzdWRvIGFwdC1nZXQgaW5zdGFs
bCB4c2x0cHJvYwpzdWRvIGFwdC1nZXQgaW5zdGFsbCBmb3AgdGs4LjUgbGlieG1sMi11dGlscwo8
L1BSRT4y44CB5a6Y572R5LiL6L29T1RQ5rqQ56CB5YyFKCANCiAgICAgICAgPEEgDQpocmVmPSJo
dHRwOi8vd3d3LmVybGFuZy5vcmcvZG93bmxvYWQuaHRtbCI+aHR0cDovL3d3dy5lcmxhbmcub3Jn
L2Rvd25sb2FkLmh0bWw8L0E+KSwgDQrop6Pljovlubblronoo4XvvJogICAgICAgICANCjxQPjwv
UD4NCjxQPjwvUD4NCjxQUkUgY2xhc3M9ImJydXNoOiBqcyIgc25pcHBldF9maWxlX25hbWU9InB0
Y21zXzE0MTg2MTQ5OTBfMS5qcyIgY29kZV9zbmlwcGV0X2lkPSI1NTI0NTIiPnRhciB6eHZmIG90
cHNyY1IxNkIwMS50YXIuZ3oKY2Qgb3Rwc3JjUjE2QjAxCmNvbmZpZ3VyZQptYWtlICZhbXA7IG1h
a2UgaW5zdGFsbDwvUFJFPg0KPFA+PC9QPg0KPFA+6Iez5q2k77yMZXJsYW5n6L+Q6KGM546v5aKD
5bCx5a6M5oiQ5LqG44CC5LiL6Z2i5bCG5YiG5Yir5LuL57uNcmFiYml0bXHlkoxlamFiYmVyZOae
hOW7uuWunuaXtua2iOaBr+acjeWKoeOAgjwvUD4NCjxIMj7ln7rkuo5SYWJiaXRNUeeahOWunuaX
tua2iOaBr+acjeWKoTwvSDI+DQo8UD5SYWJiaXRNUeaYr+WcqOS4mueVjOW5v+azm+W6lOeUqOea
hOa2iOaBr+S4remXtOS7tu+8jOS5n+aYr+WvuUFNUVDljY/orq7lrp7njrDmnIDlpb3nmoTkuIDn
p43kuK3pl7Tku7bjgIJBTVFQ5Y2P6K6u5Lit5a6a5LmJ5LqGUHJvZHVjZXLjgIEgDQpDb25zdW1l
cuOAgU1lc3NhZ2VRdWV1ZeOAgUV4Y2hhbmdl44CBQmluZGluZ+OAgVZpcnR1YWwgICAgICAgICAg
ICANCkhvc3TnrYnlrp7kvZPvvIzku5bku6znmoTlhbPns7vlpoLkuIvlm77miYDnpLrvvJo8L1A+
DQo8UCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+PElNRyBhbHQ9IjMiIHNyYz0iaHR0cDov
L2piY2RuMi5iMC51cGFpeXVuLmNvbS8yMDE0LzEyLzM4MDI2ZWQyMmZjMWE5MWQ5MmI1ZDJlZjkz
NTQwZjIwMS5wbmciPiANCiAgICAgICAgICAgIDxCUj48L1A+DQo8UD7mtojmga/lj5HluIPogIUo
UHJvZHVjZXIp6L+e5o6l5Lqk5o2i5Zmo77yIRXhjaGFuZ2XvvIksIOS6pOaNouWZqOWSjOa2iOaB
r+mYn+WIl++8iE1lc3NhZ2UgDQpRdWV1Ze+8iemAmui/h0tFWei/m+ihjEJpbmRpbmfvvIxCaW5k
aW5n5piv5qC55o2uRXhjaGFuZ2XnmoTnsbvlnovvvIjliIbkuLpGYW5vdXTjgIFEaXJlY3TjgIFU
b3BpY+OAgUhlYWRlcu+8ieWIhuWIq+Wvuea2iOaBr+S9nOS4jeWQjOW9ouW8j+eahOa0vuWPkeOA
gk1lc3NhZ2UgDQogICAgICAgICAgIFF1ZXVl5Y+I5YiG5Li6RHVyYWJsZeOAgVRlbXBvcmFyeeOA
gUF1dG8tRGVsZXRl5LiJ56eN57G75Z6L77yMRHVyYWJsZSANClF1ZXVl5piv5oyB5LmF5YyW6Zif
5YiX77yM5LiN5Lya5Zug5Li65pyN5YqhU2h1dERvd27ogIzmtojlpLHvvIxUZW1wb3JhcnkgICAg
ICAgICAgICANClF1ZXVl5YiZ5pyN5Yqh6YeN5ZCv5ZCO5Lya5raI5aSx77yMQXV0by1EZWxldGXl
iJnmmK/lnKjmsqHmnIlDb25zdW1lcui/nuaOpeaXtuiHquWKqOWIoOmZpOOAguWPpuWkllJhYmJp
dE1R5pyJ5b6I5aSa56ys5LiJ5pa55o+S5Lu277yM5Y+v5Lul5Z+65LqOQU1RUOWNj+iuruWfuueh
gOS5i+S4iuWBmuWHuuW+iOWkmuaJqeWxleeahOW6lOeUqOOAguS4i+mdouaIkeS7rOWwhuS7i+e7
jVdFQiANCiAgICAgICAgICAgU1RPTVDmj5Lku7bmnoTlu7rln7rkuo5BTVFQ5LmL5LiK55qEU1RP
TVDmlofmnKzljY/orq7vvIzpgJrov4fmtY/op4jlmahXZWJTb2NrZXTovr7liLDlrp7ml7bnmoTm
tojmga/kvKDovpPjgILns7vnu5/nmoTnu5PmnoTlpoLlm77vvJo8L1A+DQo8UCBzdHlsZT0idGV4
dC1hbGlnbjogY2VudGVyOyI+PElNRyBjbGFzcz0iYWxpZ25jZW50ZXIgc2l6ZS1mdWxsIHdwLWlt
YWdlLTgxMTM3IiANCnN0eWxlPSJ3aWR0aDogNTMxLjg2cHg7IGhlaWdodDogMjgxcHg7IiBhbHQ9
IjQiIHNyYz0iaHR0cDovL2piY2RuMi5iMC51cGFpeXVuLmNvbS8yMDE0LzEyLzAxMWVjZWU3ZDI5
NWMwNjZhZTY4ZDQzOTYyMTVjM2QwLmpwZWciPiANCiAgICAgICAgICAgIDxCUj48L1A+DQo8UD7l
poLlm77miYDnpLrvvIxXRULnq6/miJHku6zkvb/nlKhTVE9NUC5KU+WSjFNvY2tKUy5KU+S4jlJh
YmJpdE1R55qEV0VCIFNUT01QIFBsdWdpbumAmuS/oe+8jOaJi+acuuerr+WPr+S7peeUqFNUT01Q
aiwgICAgIA0KICAgICAgIA0KR296aXJyYShBbmRyb2lkKeaIluiAhU9iamMtU1RPTVAoSU9TKemA
mui/h1NUT01Q5Y2P6K6u5LiOUmFiYml0TVHmlLblj5Hmtojmga/jgILlm6DkuLrmiJHku6zmmK/l
rp7ml7bmtojmga/ns7vnu5/pgJrluLjpg73mmK/opoHkuI7lt7LmnInnmoTnlKjmiLfns7vnu5/n
u5PlkIjvvIxSYWJiaXRNUeWPr+S7pemAmui/h+esrOS4ieaWueaPkuS7tlJhYmJpdE1RLUFZVEgt
QmFja2VuZC1IVFRQ5p2l6YCC6YWN5bey5pyJ55qE55So5oi357O757uf77yM6L+Z5Liq5o+S5Lu2
5Y+v5Lul6YCa6L+HSFRUUOaOpeWPo+WujOaIkOeUqOaIt+i/nuaOpeaXtueahOiupOivgei/h+eo
i+OAguW9k+eEtu+8jOiupOivgeaWueW8j+i/mOaciUxEQVDnrYnlhbbku5bmlrnlvI/jgILkuIvp
naLku4vnu43lhbfkvZPmraXpqqTvvJogDQogICAgICAgICAgICA8QlI+PC9QPg0KPFA+5LuO5a6Y
572R77yIICAgICAgICAgICAgIDxBIA0KaHJlZj0iaHR0cDovL3JhYmJpdG1xLmNvbS9kb3dubG9h
ZC5odG1sIj5odHRwOi8vcmFiYml0bXEuY29tL2Rvd25sb2FkLmh0bWw8L0E+77yJ5LiL6L295pyA
5paw54mI5pys55qE5rqQ56CB5YyF77yM6Kej5Y6L5bm25a6J6KOF77yaIA0KICAgICAgICAgICAg
PEJSPjwvUD4NCjxQPjwvUD4NCjxQUkUgY2xhc3M9ImJydXNoOiBqcyIgc25pcHBldF9maWxlX25h
bWU9InB0Y21zXzE0MTg2MTQ5OTBfMi5qcyIgY29kZV9zbmlwcGV0X2lkPSI1NTI0NTIiPnRhciB6
eGYgcmFiYml0bXEtc2VydmVyLXgueC54LnRhci5negpjZCByYWJiaXRtcS1zZXJ2ZXIteC54LngK
bWFrZSAmYW1wOyBtYWtlIGluc3RhbGw8L1BSRT7kuLpSYWJiaXRNUeWuieijhVdFQi1TVE9NUOaP
kuS7tiANCiAgICAgICAgDQo8UD48L1A+DQo8UD48L1A+DQo8UFJFIGNsYXNzPSJicnVzaDoganMi
IHNuaXBwZXRfZmlsZV9uYW1lPSJwdGNtc18xNDE4NjE0OTkwXzMuanMiIGNvZGVfc25pcHBldF9p
ZD0iNTUyNDUyIj5jZCAvcGF0aC90by95b3VyL3JhYmJpdG1xCi4vc2Jpbi9yYWJiaXRtcS1wbHVn
aW5zIGVuYWJsZSByYWJiaXRtcV93ZWJfc3RvbXAKLi9zYmluL3JhYmJpdG1xLXBsdWdpbnMgZW5h
YmxlIHJhYmJpdG1xX3dlYl9zdG9tcF9leGFtcGxlcwouL3NiaW4vcmFiYml0bXFjdGwgc3RvcAou
L3NiaW4vcmFiYml0bXFjdGwgc3RhcnQKLi9zYmluL3JhYmJpdG1xY3RsIHN0YXR1czwvUFJFPg0K
PFA+PC9QPg0KPFA+5bCG5Lya5pi+56S65LiL5Zu+5omA56S655qE6L+Q6KGM55qE5o+S5Lu25YiX
6KGoPC9QPg0KPFA+PEEgaHJlZj0iaHR0cDovL2piY2RuMi5iMC51cGFpeXVuLmNvbS8yMDE0LzEy
LzRlNDRmMWFjODVjZDYwZTNjYWE1NmJmZDRhZmI2NzVlLmpwZWciPjxJTUcgDQpjbGFzcz0iYWxp
Z25jZW50ZXIgc2l6ZS1mdWxsIHdwLWltYWdlLTgxMTQwIiBhbHQ9IjQuMiIgc3JjPSJodHRwOi8v
amJjZG4yLmIwLnVwYWl5dW4uY29tLzIwMTQvMTIvNTI5YzMzOWYwN2M5ODE5OTU1NDk5ODIyY2Yw
Y2IwNDgucG5nIj4gDQogICAgICAgICAgICA8L0E+ICAgICAgICAgPC9QPg0KPFA+PEEgaHJlZj0i
aHR0cDovL2piY2RuMi5iMC51cGFpeXVuLmNvbS8yMDE0LzEyLzRlNDRmMWFjODVjZDYwZTNjYWE1
NmJmZDRhZmI2NzVlLmpwZWciPjxJTUc+IA0KICAgICAgICAgICAgPC9BPuWuieijheeUqOaIt+aO
iOadg+aPkuS7tjwvUD4NCjxQPjwvUD4NCjxQUkUgY2xhc3M9ImJydXNoOiBqcyIgc25pcHBldF9m
aWxlX25hbWU9InB0Y21zXzE0MTg2MTQ5OTBfNC5qcyIgY29kZV9zbmlwcGV0X2lkPSI1NTI0NTIi
PmNkIC9wYXRoL3RvL3lvdXIvcmFiYml0bXEvcGx1Z2lucwp3Z2V0ICZsdDthIGhyZWY9Imh0dHA6
Ly93d3cucmFiYml0bXEuY29tL2NvbW11bml0eS1wbHVnaW5zL3YzLjMueC9yYWJiaXRtcV9hdXRo
X2JhY2tlbmRfaHR0cC0zLjMueC1lN2FjNjI4OS5leiImZ3Q7aHR0cDovL3d3dy5yYWJiaXRtcS5j
b20vY29tbXVuaXR5LXBsdWdpbnMvdjMuMy54L3JhYmJpdG1xX2F1dGhfYmFja2VuZF9odHRwLTMu
My54LWU3YWM2Mjg5LmV6Jmx0Oy9hJmd0OwpjZCAuLgouL3NiaW4vcmFiYml0bXEtcGx1Z2lucyBl
bmFibGUgcmFiYml0bXFfYXV0aF9iYWNrZW5kX2h0dHA8L1BSRT7nvJbovpFSYWJiaXRNUS5Db25m
aWfmlofku7bvvIjpu5jorqTlrZjmlL7kuo4vRUNUL1JhYmJpdE1RL+S4i++8ie+8jOa3u+WKoO+8
miANCiAgICAgICAgDQo8UD48L1A+DQo8UFJFIGNsYXNzPSJicnVzaDoganMiIHNuaXBwZXRfZmls
ZV9uYW1lPSJwdGNtc18xNDE4NjE4ODQwXzUuanMiIGNvZGVfc25pcHBldF9pZD0iNTUyNDUyIj5b
CiAuLi4KIHtyYWJiaXQsIFt7YXV0aF9iYWNrZW5kcywgW3JhYmJpdF9hdXRoX2JhY2tlbmRfaHR0
cF19XX0sCiAuLi4KIHtyYWJiaXRtcV9hdXRoX2JhY2tlbmRfaHR0cCwKIFt7dXNlcl9wYXRoLCDi
gJxodHRwOi8veW91ci1zZXJ2ZXIvYXV0aC91c2Vy4oCdfSwKIHt2aG9zdF9wYXRoLCDigJxodHRw
Oi8veW91ci1zZXJ2ZXIvYXV0aC92aG9zdOKAnX0sCiB7cmVzb3VyY2VfcGF0aCwg4oCcaHR0cDov
L3lvdXItc2VydmVyL2F1dGgvcmVzb3VyY2XigJ19CiBdfQogLi4uCl0uPC9QUkU+DQo8UD48L1A+
DQo8UD7lhbbkuK3vvIxVc2VyX1BhdGjmmK/moLnmja7nlKjmiLflkI3lr4bnoIHov5vooYzmoKHp
qozvvIxWSE9TVF9QYXRo5piv5qCh6aqM5piv5ZCm5pyJ5p2D6ZmQ6K6/6ZeuVkhPU1TvvIwgDQpS
ZXNvdXJjZV9QYXRo5piv5qCh6aqM55So5oi35a+55Lyg5YWl55qERXhjaGFuZ2XjgIFRdWV1ZeaY
r+WQpuacieadg+mZkOOAguaIkeS4i+mdoueahOS7o+eggeaYr+eUqE5vZGUuanPlrp7njrDnmoTo
v5nkuInkuKrmjqXlj6PnmoTnpLrkvovvvJo8L1A+DQo8UD48L1A+DQo8UD48L1A+DQo8UFJFIGNs
YXNzPSJicnVzaDoganMiIHNuaXBwZXRfZmlsZV9uYW1lPSJwdGNtc18xNDE4NjE0OTkwXzYuanMi
IGNvZGVfc25pcHBldF9pZD0iNTUyNDUyIj52YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3Mn
KTsKIHZhciBhcHAgPSBleHByZXNzKCk7CiBhcHAuZ2V0KCcvYXV0aC91c2VyJywgZnVuY3Rpb24o
cmVxLCByZXMpewogdmFyIG5hbWUgPSByZXEucXVlcnkudXNlcm5hbWU7CiB2YXIgcGFzcyA9IHJl
cS5xdWVyeS5wYXNzd29yZDsKIGNvbnNvbGUubG9nKCJuYW1lIDogIiArIG5hbWUgKyAiLCBwYXNz
IDogIiArIHBhc3MpOwogaWYobmFtZSA9PT0gJ2d1ZXN0JyAmYW1wOyZhbXA7IHBhc3MgPT09ICJn
dWVzdCIpewogY29uc29sZS5sb2coImFsbG93Iik7CiByZXMuc2VuZCgiYWxsb3ciKTsKIH1lbHNl
ewogcmVzLnNlbmQoJ2RlbnknKTsKIH0KIH0pOwogYXBwLmdldCgnL2F1dGgvdmhvc3QnLCBmdW5j
dGlvbihyZXEsIHJlcyl7CiBjb25zb2xlLmxvZygiL2F1dGgvdmhvc3QiKTsKIHJlcy5zZW5kKCJh
bGxvdyIpOwogfSk7CiBhcHAuZ2V0KCcvYXV0aC9yZXNvdXJjZScsIGZ1bmN0aW9uKHJlcSwgcmVz
KXsKIGNvbnNvbGUubG9nKCIvYXV0aC9yZXNvdXJjZSIpOwogcmVzLnNlbmQoImFsbG93Iik7CiB9
KTsKIGFwcC5saXN0ZW4oMzAwMCk7PC9QUkU+5rWP6KeI5Zmo56uvSlPlrp7njrDvvIznpLrkvovk
u6PnoIHlpoLkuIvvvJogDQogICAgICAgIA0KPFA+PC9QPg0KPFA+PC9QPg0KPFBSRSBjbGFzcz0i
YnJ1c2g6IGpzIiBzbmlwcGV0X2ZpbGVfbmFtZT0icHRjbXNfMTQxODYxNDk5MF83LmpzIiBjb2Rl
X3NuaXBwZXRfaWQ9IjU1MjQ1MiI+Li4uLi4uCiB2YXIgd3MgPSBuZXcgU29ja0pTKCdodHRwOi8v
JyArIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSArICc6MTU2NzQvc3RvbXAnKTsKIHZhciBjbGll
bnQgPSBTdG9tcC5vdmVyKHdzKTsKIC8vIFNvY2tKUyBkb2VzIG5vdCBzdXBwb3J0IGhlYXJ0LWJl
YXQ6IGRpc2FibGUgaGVhcnQtYmVhdHMKIGNsaWVudC5oZWFydGJlYXQub3V0Z29pbmcgPSAwOwog
Y2xpZW50LmhlYXJ0YmVhdC5pbmNvbWluZyA9IDA7CiBjbGllbnQuZGVidWcgPSBwaXBlKCcjc2Vj
b25kJyk7CiB2YXIgcHJpbnRfZmlyc3QgPSBwaXBlKCcjZmlyc3QnLCBmdW5jdGlvbihkYXRhKSB7
CiBjbGllbnQuc2VuZCgnL2V4Y2hhbmdlL2ZlZWQvdXNlcl94JywgeyJjb250ZW50LXR5cGUiOiJ0
ZXh0L3BsYWluIn0sIGRhdGEpOwogfSk7CiB2YXIgb25fY29ubmVjdCA9IGZ1bmN0aW9uKHgpIHsK
IGlkID0gY2xpZW50LnN1YnNjcmliZSgiL2V4Y2hhbmdlL2ZlZWQvdXNlcl94IiwgZnVuY3Rpb24o
ZCkgewogcHJpbnRfZmlyc3QoZC5ib2R5KTsKIH0pOwogfTsKIHZhciBvbl9lcnJvciA9IGZ1bmN0
aW9uKCkgewogY29uc29sZS5sb2coJ2Vycm9yJyk7CiB9OwogY2xpZW50LmNvbm5lY3QoJ2d1ZXN0
MScsICdndWVzdDEnLCBvbl9jb25uZWN0LCBvbl9lcnJvciwgJy8nKTsKIC4uLi4uLjwvUFJFPg0K
PFA+PC9QPg0KPFA+6ZyA6KaB6K+05piO55qE5pe277yM5Zyo6L+Z6YeM5oiR5Lus6aaW5YWI6KaB
5ZyoUmFiYml0TVHlrp7kvovkuK3liJvlu7pGZWVk6L+Z5LiqRXhjaGFuZ2XvvIzmiJHku6znlKhT
VE9NUC5KU+i/nuaOpeaIkOWKn+WQju+8jOagueaNruW9k+WJjeeZu+mZhueUqOaIt+eahElE77yI
dXNlcl9477yJ57uR5a6a5Yiw6L+Z5LiqRXhjaGFuZ2XvvIzljbNTdWJzY3JpYmUo4oCcL2V4Y2hh
bmdlL2ZlZWQvdXNlcl944oCdLCANCiAgICAgICAgICAgIOKApikg6L+Z5Liq5pON5L2c55qE6KGM
5Li677yM6L+Z5qC35Zyo5ZCRUmFiYml0TVHkuK1GZWVkIA0KRXhjaGFuZ2Xlj5HpgIHmtojmga/l
ubbmjIflrprnlKjmiLdJRCh1c2VyX3gp5Li6S0VZ77yM6aG16Z2i56uv5bCx5Lya6YCa6L+HV0VC
ICAgICAgICAgICAgU29ja2V05a6e5pe25o6l5pS25Yiw6L+Z5p2h5raI5oGv44CCPC9QPg0KPFA+
5Yiw55uu5YmN5Li65q2i77yM5Z+65LqOUmFiYml0TVErU1RPTVDlrp7njrBXRULnq6/mtojmga/m
jqjpgIHlsLHlt7Lnu4/lrozmiJDvvIzlhbbkuK3lvojlpJrnmoTnu4boioLpnIDopoHlsI/kvJnk
vLTku6zkurLoh6rljrvlrp7ot7XkuobvvIzov5nph4zlsLHkuI3lpJror7TkuobjgILlrp7ot7Xo
v4fnqIvkuK3lj6/ku6Xlj4LnhaflrpjmlrnmlofmoaPvvJo8L1A+DQo8UD48QSBocmVmPSJodHRw
Oi8vcmFiYml0bXEuY29tL3N0b21wLmh0bWwiPmh0dHA6Ly9yYWJiaXRtcS5jb20vc3RvbXAuaHRt
bDwvQT4gICANCiAgICAgICAgICA8QlI+PEEgDQpocmVmPSJodHRwOi8vcmFiYml0bXEuY29tL3dl
Yi1zdG9tcC5odG1sIj5odHRwOi8vcmFiYml0bXEuY29tL3dlYi1zdG9tcC5odG1sPC9BPiANCiAg
ICAgICAgICAgIDxCUj48QSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vc2ltb25tYWNtdWxsZW4v
cmFiYml0bXEtYXV0aC1iYWNrZW5kLWh0dHAiPmh0dHBzOi8vZ2l0aHViLmNvbS9zaW1vbm1hY211
bGxlbi9yYWJiaXRtcS1hdXRoLWJhY2tlbmQtaHR0cDwvQT4gDQogICAgICAgIDwvUD4NCjxQPuS7
peS4iueahOWunueOsOaYr+aIkeacrOS6uuWcqOi4oui4oue9keaXtumHh+eUqOeahOaWueW8j++8
jOS4i+mdouaOpeedgOS7i+e7jeS4gOS4i+eOsOWcqOWcqFdvcmt0aWxl5Lit5aaC5L2V6YCa6L+H
RWphYmJlcmTlrp7njrDmtojmga/mjqjpgIHjgII8L1A+DQo8UD48L1A+DQo8SDI+5Z+65LqORWph
YmJlcmTnmoTlrp7ml7bmtojmga/mjqjpgIE8L0gyPg0KPFA+PC9QPg0KPFA+5LiOUmFiYml0TVHk
uI3lkIzvvIxFamFiYmVyZOaYr1hNUFDljY/orq7nmoTkuIDnp43lrp7njrDvvIzkuI5BTVFQ55u4
5q+U77yMWE1QUOW5v+azm+W6lOeUqOS6juWNs+aXtumAmuS/oemihuWfn+OAglhNUFDljY/orq7n
moTlrp7njrDmnInlvojlpJrnp43vvIzmr5TlpoJKQVZB55qET3BlbkZpcmXvvIzkvYbnm7jovoPl
hbbku5blrp7njrDvvIxFamFiYmVyZOeahOW5tuWPkeaAp+iDveaXoOeWkeS9v+acgOS8mOengOea
hOOAglhNUFDljY/orq7nmoTliY3ouqvmmK9KYWJiZXLljY/orq7vvIzml6nmnJ/nmoRKYWJiZXLl
jY/orq7kuLvopoHljIXmi6zlnKjnur/nirbmgIHvvIhQcmVzZW5jZe+8ieOAgeWlveWPi+iKseWQ
jeWGjO+8iFJvc3Rlcu+8ieOAgUlR77yISW5mby9RdWVyee+8ieWHoOS4qumDqOWIhuOAgueOsOWc
qEphYmJlcuW3sue7j+aIkOS4ulJGQ+eahOWumOaWueagh+WHhu+8jOWmglJGQzI3OTnvvIxSRkM0
NjIy77yMUkZDNjEyMe+8jOS7peWPilhNUFDnmoTmianlsZXljY/orq7vvIhYRVDvvInjgIJXb3Jr
dGlsZSANCiAgICAgICAgICAgV2Vi56uv55qE5raI5oGv5o+Q6YaS5Yqf6IO95bCx5piv5Z+65LqO
WEVQLTAxMjTjgIFYRVAtMDIwNuWumuS5ieeahEJPU0jmianlsZXljY/orq7jgII8L1A+DQo8UD7n
lLHkuo7oh6rouqvkuJrliqHnmoTpnIDopoHvvIzmiJHku6zlr7lFamFiYmVyZOeahOeUqOaIt+iu
pOivgeWSjOWlveWPi+WIl+ihqOaooeWdl+eahOa6kOeggei/m+ihjOS/ruaUue+8jOmAmui/h1Jl
ZGlz5L+d5a2Y55So5oi355qE5Zyo57q/54q25oCB77yM6ICM5LiN5pivTW5lc2lh5ZKMTXlTUUzj
gILlj6blpJblpb3lj4vov5nlnZfmiJHku6zmmK/ku47lt7LmnInnmoTmlbDmja7lupPkuK3vvIhN
b25nb0RC77yJ5Lit6I635Y+W6aG555uu5oiW5Zui6Zif55qE5oiQ5ZGY44CCV2Vi56uv6YCa6L+H
U3Ryb3BoZS5KU+adpei/nuaOpe+8iEhUVFAtQklORO+8ie+8jFN0cm9waGUuSlPlj6/ku6Xku6Xp
lb/ova7or6LlkoxXZWJTb2NrZXTkuKTnp43mlrnlvI/mnaXov57mjqXvvIznlLHkuo5FamFiYmVy
ZOi/mOayoeacieWlveeahFdlYlNvY2tldOeahOWunueOsO+8jOWwsemHh+eUqOS6hkJPU0jnmoTm
lrnlvI/mqKHmi5/plb/ov57mjqXjgILmlbTkuKrns7vnu5/nmoTnu5PmnoTlpoLkuIvvvJo8L1A+
DQo8UCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+PEEgaHJlZj0iaHR0cDovL2piY2RuMi5i
MC51cGFpeXVuLmNvbS8yMDE0LzEyLzRlNDRmMWFjODVjZDYwZTNjYWE1NmJmZDRhZmI2NzVlLmpw
ZWciPjxJTUcgDQpzdHlsZT0id2lkdGg6IDUwOS44M3B4OyBoZWlnaHQ6IDMxMXB4OyIgYWx0PSI1
IiBzcmM9Imh0dHA6Ly9qYmNkbjIuYjAudXBhaXl1bi5jb20vMjAxNC8xMi80ZTQ0ZjFhYzg1Y2Q2
MGUzY2FhNTZiZmQ0YWZiNjc1ZS5qcGVnIj4gDQogICAgICAgICAgICA8L0E+ICAgICAgICAgICAg
IDwvUD4NCjxQPldlYuerr+eUqFN0cm9waGUuSlPpgJrov4dIVFRQLUJJTkTov5vooYzov57mjqVO
Z2lueOS7o+eQhu+8jE5naW545Y+N5ZCR5Luj55CGRWphYmJlcmRDbHVzdGVy44CCaU9T55SoWE1Q
UC1GcmFtV29ya+i/nuaOpSwgDQogICAgICAgICAgICAgICAgDQpBbmRyb2lk5Y+v5Lul55SoU21h
Y2vnm7TmjqXov55FamFiYmVyZOacjeWKoeWZqOmbhue+pOOAgui/meS6m+mDveaYr+eOsOacieea
hOW6k++8jOaXoOmcgOWvuUNsaWVudOi/m+ihjOW8gOWPkeOAguWcqOe6v+eKtuaAgeagueaNrueU
qOaIt1VJROS9nOS4uktFWeWumuS5ieS6huWcqOe6v+OAgeemu+e6v+OAgeW/meetieeKtuaAgeWt
mOaUvuS6jlJlZGlz5Lit44CC5aW95Y+L5YiX6KGo5LuOTW9uZ29EQueahFByb2plY3TooajkuK3o
jrflj5bjgILnlKjmiLforqTor4Hnm7TmjqXkv67mlLnkuoZFamFiYmVyZF9BdXRoX0ludGVybmFs
LmVybOaWh+S7tu+8jOmAmui/h01vbmdvRELpqbHliqjov57mjqXnlKjmiLflupPvvIzlnKjnur/n
irbmgIHnrYnlip/og73mmK/mlrDliqDkuobmqKHlnZfvvIzlhbbpg6jliIbku6PnoIHlpoLkuIs6
PC9QPg0KPFA+PC9QPg0KPFBSRSBjbGFzcz0iYnJ1c2g6IGpzIiBzbmlwcGV0X2ZpbGVfbmFtZT0i
cHRjbXNfMTQxODYxODg0MF84LmpzIiBjb2RlX3NuaXBwZXRfaWQ9IjU1MjQ1MiI+LW1vZHVsZSh3
dF9tb2RfcHJvaikuCiAtYmVoYXZpb3VyKGdlbl9tb2QpLgogLWJlaGF2aW91cihnZW5fc2VydmVy
KS4KIC1pbmNsdWRlKCJlamFiYmVyZC5ocmwiKS4KIC1pbmNsdWRlKCJsb2dnZXIuaHJsIikuCiAt
aW5jbHVkZSgiamxpYi5ocmwiKS4KIC1kZWZpbmUoU1VQRVJWSVNPUiwgZWphYmJlcmRfc3VwKS4K
IC4uLgogLWRlZmluZShPTkxJTkUsIDEpLgogLWRlZmluZShPRkZMSU5FLCAwKS4KIC1kZWZpbmUo
QlVTWSwgMikuCiAtZGVmaW5lKExFQVZFLCAzKS4KIC4uLgogJSUgQVBJCiAtZXhwb3J0KFtzdGFy
dF9saW5rLzIsIGdldF9wcm9qX29ubGluZV91c2Vycy8yXSkuCiAlJSBnZW5fbW9kIGNhbGxiYWNr
cwogLWV4cG9ydChbc3RhcnQvMiwgc3RvcC8xXSkuCiAlJSBnZW5fc2VydmVyIGNhbGxiYWNrcwog
LWV4cG9ydChbaW5pdC8xLCB0ZXJtaW5hdGUvMiwgaGFuZGxlX2NhbGwvMywgaGFuZGxlX2Nhc3Qv
MiwgaGFuZGxlX2luZm8vMiwgY29kZV9jaGFuZ2UvM10pLgogJSUgSG9vayBjYWxsYmFja3MKIC1l
eHBvcnQoW3VzZXJfYXZhaWxhYmxlLzEsIHVuc2V0X3ByZXNlbmNlLzMsIHNldF9wcmVzZW5jZS80
XSkuCiAtZXhwb3J0KFtnZXRfcmVkaXMvMSwgcmVtb3ZlX29ubGluZV91c2VyLzMsIGFwcGVuZF9v
bmxpbmVfdXNlci8zXSkuCiAuLi4KIC1yZWNvcmQoc3RhdGUse2hvc3QgPSAmbHQ7Jmx0OyIiJmd0
OyZndDssIHNlcnZlcl9ob3N0LCByY29ubiwgbWNvbm59KS4Kc3RhcnRfbGluayhIb3N0LCBPcHRz
KSAtJmd0OwogUHJvYyA9IGdlbl9tb2Q6Z2V0X21vZHVsZV9wcm9jKEhvc3QsID9NT0RVTEUpLAog
Z2VuX3NlcnZlcjpzdGFydF9saW5rKHtsb2NhbCwgUHJvY30sID9NT0RVTEUsIFtIb3N0LCBPcHRz
XSwgW10pLgogdXNlcl9hdmFpbGFibGUoTmV3KSAtJmd0OwogTFVzZXIgPSBOZXcjamlkLmx1c2Vy
LCBMU2VydmVyID0gTmV3I2ppZC5sc2VydmVyLAogUHJvYyA9IGdlbl9tb2Q6Z2V0X21vZHVsZV9w
cm9jKExTZXJ2ZXIsID9NT0RVTEUpLAogZ2VuX3NlcnZlcjpjYXN0KFByb2MsIHt1c2VyX2F2YWls
YWJsZSwgTFVzZXIsIExTZXJ2ZXJ9KS4KYXBwZW5kX29ubGluZV91c2VyKFVpZCwgUHJvaiwgSG9z
dCkgLSZndDsKIFByb2MgPSBnZW5fbW9kOmdldF9tb2R1bGVfcHJvYyhIb3N0LCA/TU9EVUxFKSwK
IGdlbl9zZXJ2ZXI6Y2FsbChQcm9jLCB7YXBwZW5kX29ubGluZV91c2VyLCBVaWQsIFByb2p9KS4K
IHJlbW92ZV9vbmxpbmVfdXNlcihVaWQsIFByb2osIEhvc3QpIC0mZ3Q7CiBQcm9jID0gZ2VuX21v
ZDpnZXRfbW9kdWxlX3Byb2MoSG9zdCwgP01PRFVMRSksCiBnZW5fc2VydmVyOmNhbGwoUHJvYywg
e3JlbW92ZV9vbmxpbmVfdXNlciwgVWlkLCBQcm9qfSkuCiAuLi4KIHNldF9wcmVzZW5jZShVc2Vy
LCBTZXJ2ZXIsIFJlc291cmNlLCBQYWNrZXQpIC0mZ3Q7CiBQcm9jID0gZ2VuX21vZDpnZXRfbW9k
dWxlX3Byb2MoU2VydmVyLCA/TU9EVUxFKSwKIGdlbl9zZXJ2ZXI6Y2FzdChQcm9jLCB7c2V0X3By
ZXNlbmNlLCBVc2VyLCBTZXJ2ZXIsIFJlc291cmNlLCBQYWNrZXR9KS4KIC4uLgpzdGFydChIb3N0
LCBPcHRzKSAtJmd0OwogUHJvYyA9IGdlbl9tb2Q6Z2V0X21vZHVsZV9wcm9jKEhvc3QsID9NT0RV
TEUpLAogQ2hpbGRTcGVjID0ge1Byb2MsIHs/TU9EVUxFLCBzdGFydF9saW5rLCBbSG9zdCwgT3B0
c119LAogdHJhbnNpZW50LCAyMDAwLCB3b3JrZXIsIFs/TU9EVUxFXX0sCiBzdXBlcnZpc29yOnN0
YXJ0X2NoaWxkKD9TVVBFUlZJU09SLCBDaGlsZFNwZWMpLgpzdG9wKEhvc3QpIC0mZ3Q7CiBQcm9j
ID0gZ2VuX21vZDpnZXRfbW9kdWxlX3Byb2MoSG9zdCwgP01PRFVMRSksCiBnZW5fc2VydmVyOmNh
bGwoUHJvYywgc3RvcCksCiBzdXBlcnZpc29yOmRlbGV0ZV9jaGlsZCg/U1VQRVJWSVNPUiwgUHJv
YykuCmluaXQoW0hvc3QsIE9wdHNdKSAtJmd0OwogTXlIb3N0ID0gZ2VuX21vZDpnZXRfb3B0X2hv
c3QoSG9zdCwgT3B0cywgJmx0OyZsdDsid3RtdWMuQEhPU1RAIiZndDsmZ3Q7KSwKIFJlZGlzSG9z
dCA9IGdlbl9tb2Q6Z2V0X29wdChyZWRpc19ob3N0LCBPcHRzLCBmdW4oQikgLSZndDsgQiBlbmQs
P1JFRElTX0hPU1QpLAogUmVkaXNQb3J0ID0gZ2VuX21vZDpnZXRfb3B0KHJlZGlzX3BvcnQsIE9w
dHMsIGZ1bihJKSB3aGVuIGlzX2ludGVnZXIoSSksIEkmZ3Q7MCAtJmd0OyBJIGVuZCwgP1JFRElT
X1BPUlQpLAogZWphYmJlcmRfaG9va3M6YWRkKHNldF9wcmVzZW5jZV9ob29rLCBIb3N0LCA/TU9E
VUxFLCBzZXRfcHJlc2VuY2UsIDEwMCksCiBlamFiYmVyZF9ob29rczphZGQodXNlcl9hdmFpbGFi
bGVfaG9vaywgSG9zdCwgP01PRFVMRSwgdXNlcl9hdmFpbGFibGUsIDUwKSwKIGVqYWJiZXJkX2hv
b2tzOmFkZChzbV9yZW1vdmVfY29ubmVjdGlvbl9ob29rLCBIb3N0LCA/TU9EVUxFLCB1bnNldF9w
cmVzZW5jZSwgNTApLAogTW9uZ29Ib3N0ID0gZ2VuX21vZDpnZXRfb3B0KG1vbmdvX2hvc3QsIE9w
dHMsIGZ1bihCKSAtJmd0OyBiaW5hcnlfdG9fbGlzdChCKSBlbmQsID9NT05HT19IT1NUKSwKIE1v
bmdvUG9ydCA9IGdlbl9tb2Q6Z2V0X29wdChtb25nb19wb3J0LCBPcHRzLCBmdW4oSSkgd2hlbiBp
c19pbnRlZ2VyKEkpLCBJJmd0OzAgLSZndDsgSSBlbmQsID9NT05HT19QT1JUKSwKIHtvaywgTW9u
Z299ID0gbW9uZ29fY29ubmVjdGlvbjpzdGFydF9saW5rKHtNb25nb0hvc3QsIE1vbmdvUG9ydH0p
LAogQyA9IGMoUmVkaXNIb3N0LCBSZWRpc1BvcnQpLAogZWphYmJlcmRfcm91dGVyOnJlZ2lzdGVy
X3JvdXRlKE15SG9zdCksIHtvaywgI3N0YXRle2hvc3QgPSBIb3N0LCBzZXJ2ZXJfaG9zdCA9IE15
SG9zdCwgcmNvbm4gPSBDLCBtY29ubiA9IE1vbmdvfX0uCiB0ZXJtaW5hdGUoX1JlYXNvbiwgI3N0
YXRle2hvc3QgPSBIb3N0LCByY29ubiA9IEMsIG1jb25uID0gTW9uZ299KSAtJmd0OwogZWphYmJl
cmRfaG9va3M6ZGVsZXRlKHNldF9wcmVzZW5jZV9ob29rLCBIb3N0LCA/TU9EVUxFLCBzZXRfcHJl
c2VuY2UsIDEwMCksCiBlamFiYmVyZF9ob29rczpkZWxldGUodXNlcl9hdmFpbGFibGVfaG9vaywg
SG9zdCwgP01PRFVMRSwgdXNlcl9hdmFpbGFibGUsIDUwKSwKIGVqYWJiZXJkX2hvb2tzOmRlbGV0
ZSh1bnNldF9wcmVzZW5jZV9ob29rLCBIb3N0LCA/TU9EVUxFLCB1bnNldF9wcmVzZW5jZSwgNTAp
LAogZXJlZGlzOnN0b3AoQyksCiBvay4KIC4uLgogaGFuZGxlX2NhbGwoe2FwcGVuZF9vbmxpbmVf
dXNlciwgVWlkLCBQcm9qSWR9LCBfRnJvbSwgU3RhdGUpIC0mZ3Q7CiBDID0gU3RhdGUjc3RhdGUu
cmNvbm4sCiBLZXkgPSAmbHQ7Jmx0OyEtLT9QUkVfUlBPSl9PTkxJTkVfVVNFUlMgL2JpbmFyeSwg
UHJvaklkL2JpbmFyeS0tJmd0OyZndDssCiBSZXNwID0gZXJlZGlzOnEoQywgWyJTQUREIiwgS2V5
LCBVaWRdKSwKIHtyZXBseSwgUmVzcCwgU3RhdGV9OwogaGFuZGxlX2NhbGwoe3JlbW92ZV9vbmxp
bmVfdXNlciwgVWlkLCBQcm9qSWR9LCBfRnJvbSwgU3RhdGUpIC0mZ3Q7CiAuLi4KIGhhbmRsZV9j
YWxsKHtnZXRfcHJval9vbmxpbmVfdXNlcnMsIFByb2pJZH0sIF9Gcm9tLCBTdGF0ZSkgLSZndDsK
IC4uLgogaGFuZGxlX2Nhc3Qoe3NldF9wcmVzZW5jZSwgVXNlciwgU2VydmVyLCBSZXNvdXJjZSwg
UGFja2V0fSwgI3N0YXRle21jb25uID0gTW9uZ299ID0gU3RhdGUpIC0mZ3Q7CiBDID0gU3RhdGUj
c3RhdGUucmNvbm4sCiBLZXkgPSAmbHQ7Jmx0OyEtLT9VU0VSX1BSRVNFTkNFIC9iaW5hcnksIFVz
ZXIvYmluYXJ5LS0mZ3Q7Jmd0OywKIFBpZHMgPSBnZXRfdXNlcl9wcm9qcyhVc2VyLCBNb25nbyks
CiBDbWQgPSBnZXRfcHJval9rZXkoUGlkcywgWyJTVU5JT04iXSksCiBjYXNlIHhtbDpnZXRfc3Vi
dGFnX2NkYXRhKFBhY2tldCwgJmx0OyZsdDsic2hvdyImZ3Q7Jmd0Oykgb2YKICZsdDsmbHQ7ImF3
YXkiJmd0OyZndDsgLSZndDsKIGVyZWRpczpxKEMsIFsiU0VUIiwgS2V5LCA/TEVBVkVdKTsKICZs
dDsmbHQ7Im9mZmxpbmUiJmd0OyZndDsgLSZndDsKIC4uLgogaGFuZGxlX2Nhc3QoX01zZywgU3Rh
dGUpIC0mZ3Q7IHtub3JlcGx5LCBTdGF0ZX0uCmhhbmRsZV9pbmZvKHtyb3V0ZSwgRnJvbSwgVG8s
IFBhY2tldH0sICNzdGF0ZXtob3N0ID0gSG9zdCwgc2VydmVyX2hvc3QgPSBNeUhvc3QsIHJjb25u
ID0gUmVkaXNDb25uLCBtY29ubiA9IE1vbmdvfSA9IFN0YXRlKSAtJmd0OwogY2FzZSBjYXRjaCBk
b19yb3V0ZShIb3N0LCBNeUhvc3QsIEZyb20sIFRvLCBQYWNrZXQsIFJlZGlzQ29ubiwgTW9uZ28p
IG9mCiB7J0VYSVQnLCBSZWFzb259IC0mZ3Q7CiA/RVJST1JfTVNHKCJ+cCIsIFtSZWFzb25dKTsK
IF8gLSZndDsKIG9rCiBlbmQsCiB7bm9yZXBseSwgU3RhdGV9OwpoYW5kbGVfaW5mbyhfSW5mbywg
U3RhdGUpIC0mZ3Q7IHtub3JlcGx5LCBTdGF0ZX0uCmNvZGVfY2hhbmdlKF9PbGRWc24sIFN0YXRl
LCBfRXh0cmEpIC0mZ3Q7IHtvaywgU3RhdGV9LgogLi4uPC9QUkU+DQo8UD48L1A+DQo8UD48L1A+
DQo8UD7lhbbkuK3vvIxVc2VyXF9BdmFpbGFibGVcX0hPT0vlkoxTTVxfUmVtb3ZlXF9Db25uZWN0
aW9uXF9IT09LIA0K5bCx5piv55So5oi35LiK57q/5ZKM55So5oi35pat5byA6L+e5o6l6Kem5Y+R
55qE5LqL5Lu277yMRWphYmJlcmQgICAgICAgICAgICAgICAgIOS4reato+aYr+eUseS6jui/meS6
m0hPT0vvvIzmiY3og73lvojlrrnmmJPmianlsZXlip/og73jgII8L1A+DQo8UD7lnKjnlKhUc3Vu
Z+WvuUVqYWJiZXJk6L+b6KGM5Y6L5Yqb5rWL6K+V77yM5rWL6K+V5py65Zmo5Li6NOaguOW/gzhH
5YaF5a2Y55qE5pmu6YCaUEPvvIzku6Uz5Y+w5a6i5oi35py65qih5ouf55So5oi355m75b2V44CB
6K6+572u5Zyo57q/54q25oCB44CB5Y+R6YCB5LiA5p2h5paH5pys5raI5oGv44CB5YWz6Zet6L+e
5o6l5pON5L2c77yM5Zyo5ZCM5pe25Zyo57q/6L6+5YiwMzB35pe277yMQ1BV5Y2g55So5LiN5Yiw
MyXvvIzlhoXlrZjlpKfmpoLliLAz5LiqR+W3puWPs++8jOmaj+edgOeUqOaIt+aVsOWinuWkmu+8
jOS4u+imgeWGheWtmOeahOaNn+iAl+i+g+Wkp+OAgueUseS6juWOi+WKm+a1i+ivleavlOi+g+iA
l+aXtu+8jOWGjeetieWIsOacieaXtumXtOeahOaXtuWAme+8jOS8muWcqOWBmuS4gOS6m+abtOa3
seWFpeeahOa1i+ivleOAgjwvUD4NCjxQPjwvUD4NCjxQPjwvUD4NCjxIUj4NCg0KPFA+PEI+5YWN
6LS56K6i6ZiF4oCcPFNQQU4gc3R5bGU9ImNvbG9yOiByZ2IoMCwgMTI4LCAyNTUpOyI+Q1NETuS6
keiuoeeul++8iOW3pu+8iTwvU1BBTj7lkow8U1BBTj48U1BBTiANCnN0eWxlPSJjb2xvcjogcmdi
KDI1NSwgMCwgMCk7Ij5DU0RO5aSn5pWw5o2u77yI5Y+z77yJPC9TUEFOPjwvU1BBTj7igJ3lvq7k
v6HlhazkvJflj7fvvIzlrp7ml7bmjozmj6HnrKzkuIDmiYvkupHkuK3mtojmga/vvIw8Qj7kuobo
p6PmnIDmlrDnmoTlpKfmlbDmja7ov5vlsZXvvIE8L0I+PC9CPiANCjwvUD4NCjxQPjxBIGhyZWY9
Imh0dHA6Ly9jbXMuY3NkbmltZy5jbi9hcnRpY2xlLzIwMTQwOC8xMS81M2U4N2RiNjM3ZDFiLmpw
ZyIgdGFyZ2V0PSJfYmxhbmsiPjxJTUcgDQpzdHlsZT0ibWFyZ2luOiAwcHggMTBweCAxMHB4IDBw
eDsgd2lkdGg6IDE1MHB4OyBoZWlnaHQ6IDE1MHB4OyBmbG9hdDogbGVmdDsiIA0KYWx0PSIiIHNy
Yz0iaHR0cDovL2Ntcy5jc2RuaW1nLmNuL2FydGljbGUvMjAxNDA4LzExLzUzZTg3ZGI2MzdkMWIu
anBnIiBib3JkZXI9IjAiPiANCiAgICA8L0E+ICAgICA8QSBocmVmPSJodHRwOi8vY21zLmNzZG5p
bWcuY24vYXJ0aWNsZS8yMDE0MDgvMTEvNTNlODdkYzRiMmY1Yy5qcGciIA0KdGFyZ2V0PSJfYmxh
bmsiPjxJTUcgc3R5bGU9Im1hcmdpbjogMHB4IDBweCAxMHB4IDEwcHg7IHdpZHRoOiAxNTBweDsg
aGVpZ2h0OiAxNTBweDsgZmxvYXQ6IHJpZ2h0OyIgDQphbHQ9IiIgc3JjPSJodHRwOi8vY21zLmNz
ZG5pbWcuY24vYXJ0aWNsZS8yMDE0MDgvMTEvNTNlODdkYzRiMmY1Yy5qcGciIGJvcmRlcj0iMCI+
IA0KICAgIDwvQT5DU0RO5Y+R5biD6Jma5ouf5YyW44CBRG9ja2Vy44CBT3BlblN0YWNr44CBQ2xv
dWRTdGFja+OAgeaVsOaNruS4reW/g+etieebuOWFs+S6keiuoeeul+i1hOiur++8jCAmbmJzcDsg
Jm5ic3A7IA0K5YiG5LqrSGFkb29w44CBU3BhcmvjgIFOb1NRTC9OZXdTUUzjgIFIQmFzZeOAgUlt
cGFsYeOAgeWGheWtmOiuoeeul+OAgea1geiuoeeul+OAgeacuuWZqOWtpuS5oOWSjOaZuuiDveeu
l+azleetieebuOWFs+Wkp+aVsOaNruingueCue+8jOaPkOS+m+S6keiuoeeul+WSjOWkp+aVsOaN
ruaKgOacr+OAgeW5s+WPsOOAgeWunui3teWSjOS6p+S4muS/oeaBr+etieacjeWKoeOAgiANCiZu
YnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOzwvUD4NCjxQIGNsYXNzPSJjb3B5cmlnaHQiPjwvUD48
L0RJVj4NCjxESVYgY2xhc3M9InNoYXJlIj4NCjxESVYgY2xhc3M9ImJkc2hhcmVidXR0b25ib3gi
IHN0eWxlPSJmbG9hdDogcmlnaHQ7Ij48IS0tIGEgaHJlZj0iIyIgY2xhc3M9ImJkc19tb3JlIiBk
YXRhLWNtZD0ibW9yZSI+PC9hIC0tPg0KCQkJICAgPEEgdGl0bGU9IuWIhuS6q+WIsOW+ruS/oSIg
Y2xhc3M9ImJkc193ZWl4aW4iIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvYXJ0aWNsZS8yMDE0
LTEyLTE1LzI4MjMxMzIjIiANCmRhdGEtY21kPSJ3ZWl4aW4iPjwvQT4JCQkgICA8QSB0aXRsZT0i
5YiG5Lqr5Yiw5paw5rWq5b6u5Y2aIiBjbGFzcz0iYmRzX3RzaW5hIiBocmVmPSJodHRwOi8vd3d3
LmNzZG4ubmV0L2FydGljbGUvMjAxNC0xMi0xNS8yODIzMTMyIyIgDQpkYXRhLWNtZD0idHNpbmEi
PjwvQT4JCQkgICA8QSB0aXRsZT0i5YiG5Lqr5Yiw6IW+6K6v5b6u5Y2aIiBjbGFzcz0iYmRzX3Rx
cSIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC9hcnRpY2xlLzIwMTQtMTItMTUvMjgyMzEzMiMi
IA0KZGF0YS1jbWQ9InRxcSI+PC9BPgkJCSAgIDxBIHRpdGxlPSLliIbkuqvliLBRUeepuumXtCIg
Y2xhc3M9ImJkc19xem9uZSIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC9hcnRpY2xlLzIwMTQt
MTItMTUvMjgyMzEzMiMiIA0KZGF0YS1jbWQ9InF6b25lIj48L0E+CQkJICAgPC9ESVY+DQo8U0NS
SVBUPndpbmRvdy5fYmRfc2hhcmVfY29uZmlnPXsiY29tbW9uIjp7ImJkU25zS2V5Ijp7fSwiYmRU
ZXh0IjoiIiwiYmRNaW5pIjoiMiIsImJkTWluaUxpc3QiOmZhbHNlLCJiZFBpYyI6IiIsImJkU3R5
bGUiOiIwIiwiYmRTaXplIjoiMzIifSwic2hhcmUiOnt9fTt3aXRoKGRvY3VtZW50KTBbKGdldEVs
ZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF18fGJvZHkpLmFwcGVuZENoaWxkKGNyZWF0ZUVsZW1l
bnQoJ3NjcmlwdCcpKS5zcmM9J2h0dHA6Ly9iZGltZy5zaGFyZS5iYWlkdS5jb20vc3RhdGljL2Fw
aS9qcy9zaGFyZS5qcz92PTg5ODYwNTkzLmpzP2NkbnZlcnNpb249Jyt+KC1uZXcgRGF0ZSgpLzM2
ZTUpXTs8L1NDUklQVD4NCiAgCQkJIAkJPC9ESVY+DQo8RElWIGNsYXNzPSJkZXRhaWwiPg0KPERJ
ViBjbGFzcz0iZGlnZyI+PElOUFVUIGlkPSJkaWdnX2lkIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIy
ODIzMTMyIj4JCQkJCQkgDQo8REwgY2xhc3M9InN1cHBvcnQiPg0KICA8RFQ+6aG2PC9EVD4NCiAg
PEREPjA8L0REPjwvREw+DQo8REwgY2xhc3M9Im9wcG9zZSI+DQogIDxEVD7ouKk8L0RUPg0KICA8
REQ+MDwvREQ+PC9ETD48L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9ImFkXzYwMF85MCI+DQo8U0NS
SVBUIHNyYz0iaHR0cDovL2NyZWF0aW0ucXRtb2pvLmNuL3RkL0FsbHllc0RlbGl2ZXIubWluLmpz
IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9ImdiayIgYWRzLXNyYz0iaHR0cDovL2Nz
ZG5pbS5xdG1vam8uY29tL21haW4vcz91c2VyPWNzZG58YXJ0aWNsZXxiYW5uZXIzJmFtcDtkYj1j
c2RuaW0mYW1wO2JvcmRlcj0wJmFtcDtsb2NhbD15ZXMmYW1wO2pzPWllIj48L1NDUklQVD4NCiA8
L0RJVj4NCjxESVYgY2xhc3M9InJlbGF0ZWQiPuaOqOiNkOmYheivu+ebuOWFs+S4u+mimO+8mgkJ
CQkJCQkJCQkJIDxBIHRpdGxlPSJodHRw5Y2P6K6uIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0
L3RhZy9odHRwJUU1JThEJThGJUU4JUFFJUFFL25ld3MiIA0KdGFyZ2V0PSJfYmxhbmsiPmh0dHDl
jY/orq48L0E+CQkJCQkJCQkJCQkgPEEgdGl0bGU9Iua2iOaBr+S4remXtOS7tiIgaHJlZj0iaHR0
cDovL3d3dy5jc2RuLm5ldC90YWcvJUU2JUI2JTg4JUU2JTgxJUFGJUU0JUI4JUFEJUU5JTk3JUI0
JUU0JUJCJUI2L25ld3MiIA0KdGFyZ2V0PSJfYmxhbmsiPua2iOaBr+S4remXtOS7tjwvQT4JCQkJ
CQkJCQkJCSA8QSB0aXRsZT0i5Y6L5Yqb5rWL6K+VIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0
L3RhZy8lRTUlOEUlOEIlRTUlOEElOUIlRTYlQjUlOEIlRTglQUYlOTUvbmV3cyIgDQp0YXJnZXQ9
Il9ibGFuayI+5Y6L5Yqb5rWL6K+VPC9BPgkJCQkJCQkJCQkJIDxBIHRpdGxlPSLmlbDmja7kuK3l
v4MiIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnLyVFNiU5NSVCMCVFNiU4RCVBRSVFNCVC
OCVBRCVFNSVCRiU4My9uZXdzIiANCnRhcmdldD0iX2JsYW5rIj7mlbDmja7kuK3lv4M8L0E+CQkJ
CQkJCQkJCQkgPEEgdGl0bGU9IuacuuWZqOWtpuS5oCIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5l
dC90YWcvJUU2JTlDJUJBJUU1JTk5JUE4JUU1JUFEJUE2JUU0JUI5JUEwL25ld3MiIA0KdGFyZ2V0
PSJfYmxhbmsiPuacuuWZqOWtpuS5oDwvQT4JCQkJCQkJCQkJCSA8QSB0aXRsZT0i5pm66IO9566X
5rOVIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy8lRTYlOTklQkElRTglODMlQkQlRTcl
QUUlOTclRTYlQjMlOTUvbmV3cyIgDQp0YXJnZXQ9Il9ibGFuayI+5pm66IO9566X5rOVPC9BPgkJ
CQkJCQkJCSA8L0RJVj48IS0tIHJlbGF0aW9uYWwgYXJ0aWNsZSBhbmQgbmV3cyAtLT4NCgkJCQkg
PERJViBjbGFzcz0icmVsYXRpb25hbCIgaWQ9IlRhYjMiPg0KPEgyIGNsYXNzPSJ0YWJfMSBNZW51
Ym94Ij4NCjxVTD4NCiAgPExJIGNsYXNzPSJob3ZlciIgaWQ9InRocmVlMSIgb25jbGljaz0ic2V0
VGFiKCd0aHJlZScsMSwyKSI+55u45YWz5paH56ugPC9MST4NCiAgPExJIGlkPSJ0aHJlZTIiIG9u
Y2xpY2s9InNldFRhYigndGhyZWUnLDIsMikiPuacgOaWsOaKpemBkzwvTEk+PC9VTD48L0gyPg0K
PERJViBjbGFzcz0iY29uIENvbnRlbnRib3giPg0KPERJViBjbGFzcz0iaG92ZXIiIGlkPSJjb25f
dGhyZWVfMSI+DQo8VUwgY2xhc3M9Imxpc3RfMSI+DQogIDxMST48QSB0aXRsZT0i5LqR5LiN562J
5LqO6auY5oCn6IO9IOS9huWPr+S7peaLpeaciemrmOaAp+iDvSIgaHJlZj0iaHR0cDovL3d3dy5j
c2RuLm5ldC9hcnRpY2xlLzE5NzAtMDEtMDEvMjgyMTQxMiIgDQogIHRhcmdldD0iX2JsYW5rIj7k
upHkuI3nrYnkuo7pq5jmgKfog70g5L2G5Y+v5Lul5oul5pyJ6auY5oCn6IO9PC9BPjwvTEk+DQog
IDxMST48QSB0aXRsZT0iQ2xvdWRDYW1w5Yib5aeL5Lq6RGF2ZSBOaWVsc2Vu77yaUGFhU+eahOa9
nOiDveS4jui/t+aDkSIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC9hcnRpY2xlLzE5NzAtMDEt
MDEvMzEwNzgyIiANCiAgdGFyZ2V0PSJfYmxhbmsiPkNsb3VkQ2FtcOWIm+Wni+S6ukRhdmUgTmll
bHNlbu+8mlBhYVPnmoTmvZzog73kuI7ov7fmg5E8L0E+PC9MST4NCiAgPExJPjxBIHRpdGxlPSJP
cmFjbGXorqHliJLlj5HluIPlhY3otLnlkozmlLbotLnniYjmnKznmoRKVk0iIGhyZWY9Imh0dHA6
Ly93d3cuY3Nkbi5uZXQvYXJ0aWNsZS8xOTcwLTAxLTAxLzI4MTUyMSIgDQogIHRhcmdldD0iX2Js
YW5rIj5PcmFjbGXorqHliJLlj5HluIPlhY3otLnlkozmlLbotLnniYjmnKznmoRKVk08L0E+PC9M
ST4NCiAgPExJPjxBIHRpdGxlPSLomZrmi5/ljJblkozotrPlpJ/lrZjlgqjlpoLkvZXlhbzlvpfv
vJ8iIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvYXJ0aWNsZS8xOTcwLTAxLTAxLzIxMTEiIA0K
ICB0YXJnZXQ9Il9ibGFuayI+6Jma5ouf5YyW5ZKM6Laz5aSf5a2Y5YKo5aaC5L2V5YW85b6X77yf
PC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0i5Y+M5qC45pyN5Yqh5Zmo5Lmx55u4IOmHh+i0reiv
peazqOaEj+S6m+S7gOS5iCIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC9hcnRpY2xlLzE5NzAt
MDEtMDEvMjc5MSIgDQogIHRhcmdldD0iX2JsYW5rIj7lj4zmoLjmnI3liqHlmajkubHnm7gg6YeH
6LSt6K+l5rOo5oSP5Lqb5LuA5LmIPC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0i5LqR6K6h566X
5Yiw5bqV566X5ZWl77yf5p2O5b2m5a6P44CB6ams5YyW6IW+UEvpqazkupEiIGhyZWY9Imh0dHA6
Ly93d3cuY3Nkbi5uZXQvYXJ0aWNsZS8xOTcwLTAxLTAxLzMxMDYyMSIgDQogIHRhcmdldD0iX2Js
YW5rIj7kupHorqHnrpfliLDlupXnrpfllaXvvJ/mnY7lvablro/jgIHpqazljJbohb5QS+mprOS6
kTwvQT48L0xJPjwvVUw+PC9ESVY+DQo8RElWIGlkPSJjb25fdGhyZWVfMiIgc3R5bGU9ImRpc3Bs
YXk6IG5vbmU7Ij4NCjxVTCBjbGFzcz0ibGlzdF8xICI+DQogIDxMST48QSB0aXRsZT0i5b6u6L2v
5YWs5biDT25lRHJpdmXlrZjlgqjpmY3nuqforqHliJLvvIzlj5bmtojml6DpmZDlrZjlgqjnqbrp
l7QiIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvYXJ0aWNsZS8yMDE1LTExLTA0LzI4MjYxMTci
IA0KICB0YXJnZXQ9Il9ibGFuayI+5b6u6L2v5YWs5biDT25lRHJpdmXlrZjlgqjpmY3nuqforqHl
iJLvvIzlj5bmtojml6DpmZDlrZjlgqjnqbrpl7Q8L0E+PC9MST4NCiAgPExJPjxBIHRpdGxlPSLk
uLrku4DkuYjpgInmi6kgSmF2YSA4ID8iIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvYXJ0aWNs
ZS8yMDE1LTExLTAzLzI4MjYxMTYiIA0KICB0YXJnZXQ9Il9ibGFuayI+5Li65LuA5LmI6YCJ5oup
IEphdmEgOCA/PC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0i5Y2a56eR572R57uc5Y+v6KeG5YyW
5pa55qGI6K6p6L+Q6JCl5ZWG5pGG6ISxT1RU5Zuw5omwIiBocmVmPSJodHRwOi8vd3d3LmNzZG4u
bmV0L2FydGljbGUvMjAxNS0xMS0wMy8yODI2MTExIiANCiAgdGFyZ2V0PSJfYmxhbmsiPuWNmuen
kee9kee7nOWPr+inhuWMluaWueahiOiuqei/kOiQpeWVhuaRhuiEsU9UVOWbsOaJsDwvQT48L0xJ
Pg0KICA8TEk+PEEgdGl0bGU9IuW+ruS/oeWIhuS6q+mihOWRiu+8muWuueWZqOS6keS5i0t1YmVy
bmV0ZXPlupTnlKjkuI7lrp7ot7UiIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvYXJ0aWNsZS8y
MDE1LTExLTAzLzI4MjYxMDkiIA0KICB0YXJnZXQ9Il9ibGFuayI+5b6u5L+h5YiG5Lqr6aKE5ZGK
77ya5a655Zmo5LqR5LmLS3ViZXJuZXRlc+W6lOeUqOS4juWunui3tTwvQT48L0xJPg0KICA8TEk+
PEEgdGl0bGU9IkFrYW1haeaKlei1hENsZWFyU2t5IERhdGEgMjcwMOS4h+e+juWFg+mHjei/lOS6
keWtmOWCqOihjOS4miIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC9hcnRpY2xlLzIwMTUtMTEt
MDIvMjgyNjEwOCIgDQogIHRhcmdldD0iX2JsYW5rIj5Ba2FtYWnmipXotYRDbGVhclNreSBEYXRh
IDI3MDDkuIfnvo7lhYPph43ov5TkupHlrZjlgqjooYzkuJo8L0E+PC9MST4NCiAgPExJPjxBIHRp
dGxlPSLkvaDlupTor6Xnn6XpgZPnmoTmnLrlmajlrabkuaDmlrnms5UiIGhyZWY9Imh0dHA6Ly93
d3cuY3Nkbi5uZXQvYXJ0aWNsZS8yMDE1LTExLTAyLzI4MjYxMDciIA0KICB0YXJnZXQ9Il9ibGFu
ayI+5L2g5bqU6K+l55+l6YGT55qE5py65Zmo5a2m5Lmg5pa55rOVPC9BPjwvTEk+PC9VTD48L0RJ
Vj48L0RJVj48L0RJVj48IS0tIC8vcmVsYXRpb25hbCBhcnRpY2xlIGFuZCBuZXdzIOW5v+WRiiAt
LT4JDQoJCQkJPCEtLSBjb21tZW50cyAtLT4gICAgICAgICAgICAgICAgCQkJCQkJCQkJIA0KPERJ
ViBjbGFzcz0iY3Nkbl9jb21tZW50cyIgaWQ9ImNvbW1lbnRzIj48L0RJVj4NCjxTQ1JJUFQgc3Jj
PSJodHRwOi8vYy5jc2RuaW1nLmNuL3BpZy9wdWJqcy9jbmljay5qcyIgdHlwZT0idGV4dC9qYXZh
c2NyaXB0Ij48L1NDUklQVD4NCgkJCQkJIA0KPFNDUklQVCBzcmM9Imh0dHA6Ly9wdGNtcy5jc2Ru
Lm5ldC9jb21tZW50L2pzL2NvbW1lbnRzLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvU0NS
SVBUPg0KCQkJCQkgDQo8U0NSSVBUIHNyYz0iaHR0cDovL2MuY3NkbmltZy5jbi9hdHN1Z2dlc3Qv
Y29tbWVudF9hdHN1Z2dlc3QuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQoJ
CQkJCSA8IS0tc2NyaXB0IHNyYz0ianMvaHR0cHM6Ly9wYXNzcG9ydC5jc2RuLm5ldC9zY3JpcHRz
L2xvZ2luLmpzP3Y9MS4yIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0LS0+DQoJCQkJ
CSANCjxTQ1JJUFQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCQkJCQkgICAgLy92YXIgcGF0aCA9
IGxvY2F0aW9uLnByb3RvY29sICsiLy8iKyBsb2NhdGlvbi5ob3N0KyIvY29tbWVudHMvIjsgICAg
ICAgICAgICAgICAgIC8v5pys5Zyw5rWL6K+V6ZyA6KaB6YWN572u5LiA5LiqY3Nkbi5uZXTnmoTl
rZDln5/lkI3vvIzku6Xkvr/nmbvlvZXvvIzkvos6aHR0cDovL2NvbW1lbnRzLmNzZG4ubmV0CgkJ
CQkJICAgIHZhciBwYXRoID0gImh0dHA6Ly9wdGNtcy5jc2RuLm5ldC9jb21tZW50IjsKCQkJCQkg
ICAgY3Nkbi5jb21tZW50cyA9IG5ldyBjc2RuLmNvbW1lbnRzKHsKCQkJCQkgICAgICAgIGlkOiJj
b21tZW50cyIsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgLy/lrrnlmahJRAoJCQkJCSAgICAgICAgcGF0aDpwYXRoLAoJCQkJ
CSAgICAgICAgZGF0YXBhdGg6Imh0dHA6Ly9wdGNtcy5jc2RuLm5ldCIsICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/mlbDmja7mjqXlj6Nob3N0CgkJCQkJICAgICAg
ICBjc3NVcmw6cGF0aCsiL2Nzcy9jb21tZW50cy5jc3MiLCAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAvL2Nzc+WcsOWdgAoJCQkJCSAgICAgICAgLy9sb2dp
blVybDpwYXRoKyIvanMvbG9naW4uanMiLCAgICAgICAgICAgICAgICAgIC8vbG9naW4uanPlnLDl
nYAKCQkJCQkgICAgICAgIGxvZ2luVXJsOiJodHRwczovL3Bhc3Nwb3J0LmNzZG4ubmV0L2NvbnRl
bnQvbG9naW5ib3gvbG9naW4uanMiLAoJCQkJCSAgICAgICAgYXJ0aWNsZVVSTDoiaHR0cDovL3d3
dy5jc2RuLm5ldC9hcnRpY2xlLzIwMTQtMTItMTUvMjgyMzEzMiIsCgkJCQkJICAgICAgICB0aXRs
ZToiV29ya3RpbGUlRTQlQjglQUQlRTclOTklQkUlRTQlQjglODclRTclQkElQTclRTUlQUUlOUUl
RTYlOTclQjYlRTYlQjYlODglRTYlODElQUYlRTYlOEUlQTglRTklODAlODElRTYlOUMlOEQlRTUl
OEElQTElRTclOUElODQlRTUlQUUlOUUlRTclOEUlQjAiLAoJCQkJCSAgICAgICAgbWQ1OiJodHRw
Oi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvc2NyaXB0cy9tZDUuanMiLCAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAvL+eUqOS6juiuoeeul+eUqOaIt+WktOWDj+eahG1kNS5qc+WcsOWdgAoJ
CQkJCSAgICAgICAgY29tcG9uZW50c1VybDpwYXRoKyIvanMvY29tcG9uZXQuanMiLCAgICAgICAg
ICAgICAgLy9DU0RO6YCa55So57uE5Lu25Zyw5Z2ACgkJCQkJICAgICAgICB0b29sa2l0VXJsOnBh
dGgrIi9qcy90b29sa2l0LmpzIiwgICAgICAgICAgICAgICAgICAvL0NTRE7lt6XlhbfljIXlnLDl
nYAKCQkJCQkgICAgICAgIHRhYjp7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/jgJDpgJrnlKjnu4Tku7bj
gJF0YWIKCQkJCQkgICAgICAgICAgICBpZDoiY3NkblRhYiIsICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/lrrnlmahJRAoJCQkJ
CSAgICAgICAgICAgIGhpZ2hsaWdodDoiaG92ZXIiICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+ihqOekuuW9k+WJjemAieaLqeeahENT
U+agt+W8j+WQjQoJCQkJCSAgICAgICAgfSwKCQkJCQkgICAgICAgIHBhZ2luYXRpb246eyAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgLy/jgJDpgJrnlKjnu4Tku7bjgJFBSkFY5YiG6aG157uE5Lu2CgkJCQkJICAgICAgICAg
ICAgcGFnZXNpemU6NTAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIC8v5q+P6aG15aSa5bCR5p2h5pWw5o2uCgkJCQkJICAgICAg
ICAgICAgc2hvd3BhZ2VzOjEwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIC8v5pi+56S65aSa5bCR6aG1CgkJCQkJICAgICAgICB9
LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jb3VudGNoYW5nZTpmdW5jdGlvbihjb3Vu
dCl7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+iv
hOiuuuaVsGNoYWduZ2Xlm57osIMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIg
ZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVtYXJrX2NvdW50MScpOwogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIGlmKGVsKXtlbC5pbm5lckhUTUw9Y291bnR9CiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICB9CgkJCQkJICAgIH0pOwoJCQkJCTwvU0NSSVBUPg0KCQkJCQkJ
CQkgPCEtLSAvL2NvbW1lbnRzIC0tPgkJCSA8L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9InJpZ2h0
Ij4NCjxESVYgY2xhc3M9ImFkXzMwMF8yNTAiPg0KPFNDUklQVCBzcmM9Imh0dHA6Ly9jcmVhdGlt
LnF0bW9qby5jbi90ZC9BbGx5ZXNEZWxpdmVyLm1pbi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0
IiBjaGFyc2V0PSJnYmsiIGFkcy1zcmM9Imh0dHA6Ly9jc2RuaW0ucXRtb2pvLmNvbS9tYWluL3M/
dXNlcj1jc2RufGFydGljbGV8cGlwJmFtcDtkYj1jc2RuaW0mYW1wO2JvcmRlcj0wJmFtcDtsb2Nh
bD15ZXMmYW1wO2pzPWllIj48L1NDUklQVD4NCjwvRElWPg0KPERJViBzdHlsZT0icGFkZGluZzog
MTBweDsgYm9yZGVyOiAxcHggc29saWQgcmdiKDIwNCwgMjA0LCAyMDQpOyBib3JkZXItaW1hZ2U6
IG5vbmU7IGZvbnQtc2l6ZTogMTRweDsgbWFyZ2luLWJvdHRvbTogMjBweDsiPg0KPFVMIHN0eWxl
PSJwYWRkaW5nOiA1cHg7IHdpZHRoOiAxNjBweDsgZmxvYXQ6IHJpZ2h0OyI+DQogIDxMSSBzdHls
ZT0iZm9udC1zaXplOiAxNnB4OyBmb250LXdlaWdodDogYm9sZDsiPkNTRE7lrpjmlrnlvq7kv6E8
L0xJPg0KICA8TEkgc3R5bGU9ImZsb2F0OiBsZWZ0OyI+5omr5o+P5LqM57u056CBLOWQkUNTRE7l
kJDmp708L0xJPg0KICA8TEk+5b6u5L+h5Y+377yaQ1NETm5ld3M8L0xJPjwvVUw+PElNRyB3aWR0
aD0iMTAwIiBoZWlnaHQ9IjEwMCIgc3JjPSJodHRwOi8vYXJ0aWNsZXMuY3Nkbi5uZXQvdXBsb2Fk
cy9hbGxpbWcvMTIxMTE2LzI4XzEyMTExNjEwMDUwN18xLmpwZyI+IA0KICAgICAgICAgICAgPC9E
SVY+DQo8RElWIHN0eWxlPSJwYWRkaW5nOiAzcHg7IGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMDQs
IDIwNCwgMjA0KTsgYm9yZGVyLWltYWdlOiBub25lOyBmb250LXNpemU6IDE0cHg7IGZvbnQtd2Vp
Z2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAyMHB4OyI+PElNRyANCnN0eWxlPSJtYXJnaW4tcmln
aHQ6IDEwcHg7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IiBzcmM9Imh0dHA6Ly9uZXdzLmNzZG4u
bmV0L2ltYWdlcy9pY29uX2lwYWQucG5nIj48QSANCmhyZWY9Imh0dHA6Ly9kaW5neXVlLnByb2dy
YW1tZXIuY29tLmNuLyIgdGFyZ2V0PSJfYmxhbmsiPueoi+W6j+WRmOenu+WKqOerr+iuoumYheS4
i+i9vTwvQT48L0RJVj4NCjxESVYgY2xhc3M9InNpdGVtYXAiPjxBIGhyZWY9Imh0dHA6Ly93d3cu
Y3Nkbi5uZXQvYXJ0aWNsZS9sYXN0bmV3cyIgdGFyZ2V0PSJfYmxhbmsiPuavj+aXpei1hOiur+W/
q+mAn+a1j+iniCANCjwvQT48L0RJVj48IS0tIOiuoumYheWSjOWFs+azqCAtLT4JCQkgDQo8RElW
IGNsYXNzPSJyZXBvcnQiPg0KPEgyIGNsYXNzPSJ0aXRfMiI+DQo8UD7lvq7ljZrlhbPms6g8L1A+
PC9IMj48SUZSQU1FIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjMwMCIgY2xhc3M9InNoYXJlX3NlbGYi
IHNyYz0icmVzOi8vaWVmcmFtZS5kbGwvbmF2Y2FuY2wuaHRtIiANCmZyYW1lYm9yZGVyPSIwIiBz
Y3JvbGxpbmc9Im5vIj48L0lGUkFNRT4JCQkJCQkJCQkJCSA8L0RJVj4NCjxESVYgY2xhc3M9InJ0
YnJpbGwiIGlkPSJkaWdlc3RDb21tZW50Ij48L0RJVj4NCjxESVYgY2xhc3M9ImFkXzMwMF8yNTAi
PjwhLS1BZEZvcndhcmQgQmVnaW46LS0+CQkJCSANCjxTQ1JJUFQgc3JjPSJodHRwOi8vY3JlYXRp
bS5xdG1vam8uY24vdGQvQWxseWVzRGVsaXZlci5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlw
dCIgY2hhcnNldD0iZ2JrIiBhZHMtc3JjPSJodHRwOi8vY3NkbmltLnF0bW9qby5jb20vbWFpbi9z
P3VzZXI9Y3NkbnxhcnRpY2xlfHBpcDImYW1wO2RiPWNzZG5pbSZhbXA7Ym9yZGVyPTAmYW1wO2xv
Y2FsPXllcyZhbXA7anM9aWUiPjwvU0NSSVBUPg0KCQkJIDwhLS1BZEZvcndhcmQgRW5kLS0+CQkJ
IDwvRElWPjwhLS0gcmVjb21tZW5kIGFuZCBob3Qgd2Vla2x5IC0tPgkJCQkJCQ0KPERJViBjbGFz
cz0iaG90X3dlZWtseSIgaWQ9IlRhYjIiPg0KPEgyIGNsYXNzPSJ0aXRfMiI+DQo8UD7nm7jlhbPn
g63pl6jmlofnq6A8L1A+PC9IMj4NCjxESVYgY2xhc3M9ImNvbiBDb250ZW50Ym94Ij4NCjxESVYg
aWQ9ImNvbl90d29fMiI+DQo8VUwgY2xhc3M9Imxpc3RfMSAiPg0KICA8TEk+PEEgdGl0bGU9IumY
v+mHjOKAnOS4iea0u+KAneaVsOaNruS4reW/g+Wunui3tee7j+mqjO+8muayoeS6uuiDveWBmu+8
jOaIkeS7rOWwseiHquW3seWBmiIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC9hcnRpY2xlLzIw
MTUtMTAtMjkvMjgyNjA3OSIgDQogIHRhcmdldD0iX2JsYW5rIj7pmL/ph4zigJzkuInmtLvigJ3m
lbDmja7kuK3lv4Plrp7ot7Xnu4/pqozvvJrmsqHkurrog73lgZrvvIzmiJHku6zlsLHoh6rlt7Hl
gZo8L0E+PC9MST4NCiAgPExJPjxBIHRpdGxlPSLkuLrku4DkuYjpgInmi6kgSmF2YSA4ID8iIGhy
ZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvYXJ0aWNsZS8yMDE1LTExLTAzLzI4MjYxMTYiIA0KICB0
YXJnZXQ9Il9ibGFuayI+5Li65LuA5LmI6YCJ5oupIEphdmEgOCA/PC9BPjwvTEk+DQogIDxMST48
QSB0aXRsZT0i5YWo55CD56eR5oqA5YWs5Y+45byA6K6h566X5aWl6L+Q5Lya77yM6Zi/6YeM5LqR
56C05LqG5Zub5Liq5LiW55WM57qq5b2V77yBIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L2Fy
dGljbGUvMjAxNS0xMC0yOC8yODI2MDY4IiANCiAgdGFyZ2V0PSJfYmxhbmsiPuWFqOeQg+enkeaK
gOWFrOWPuOW8gOiuoeeul+Wlpei/kOS8mu+8jOmYv+mHjOS6keegtOS6huWbm+S4quS4lueVjOe6
quW9le+8gTwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9IuS4uuS9leacuuWZqOWtpuS5oOeahOm7
hOmHkeaXtuS7o+aJjeWImuWImuadpeS4tCIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC9hcnRp
Y2xlLzIwMTUtMTAtMjcvMjgyNjA1MSIgDQogIHRhcmdldD0iX2JsYW5rIj7kuLrkvZXmnLrlmajl
rabkuaDnmoTpu4Tph5Hml7bku6PmiY3liJrliJrmnaXkuLQ8L0E+PC9MST4NCiAgPExJPjxBIHRp
dGxlPSJBcGFjaGUgRWFnbGXigJTigJRlQmF55byA5rqQ5YiG5biD5byP5a6e5pe2SGFkb29w5pWw
5o2u5a6J5YWo5pa55qGIIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L2FydGljbGUvMjAxNS0x
MC0yOS8yODI2MDc2IiANCiAgdGFyZ2V0PSJfYmxhbmsiPkFwYWNoZSBFYWdsZeKAlOKAlGVCYXnl
vIDmupDliIbluIPlvI/lrp7ml7ZIYWRvb3DmlbDmja7lronlhajmlrnmoYg8L0E+PC9MST4NCiAg
PExJPjxBIHRpdGxlPSLlvq7mnI3liqHnmoTpibTlrprkuI7mgJ3ogIMiIGhyZWY9Imh0dHA6Ly93
d3cuY3Nkbi5uZXQvYXJ0aWNsZS8yMDE1LTEwLTMxLzI4MjYwOTUiIA0KICB0YXJnZXQ9Il9ibGFu
ayI+5b6u5pyN5Yqh55qE6Ym05a6a5LiO5oCd6ICDPC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0i
5ZC06Iux5piK77ya55S15ZWG5pCc57Si5byV5pOO55qE5p625p6E6K6+6K6h5ZKM5oCn6IO95LyY
5YyWIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L2FydGljbGUvMjAxNS0xMC0yOS8yODI2MDg2
IiANCiAgdGFyZ2V0PSJfYmxhbmsiPuWQtOiLseaYiu+8mueUteWVhuaQnOe0ouW8leaTjueahOae
tuaehOiuvuiuoeWSjOaAp+iDveS8mOWMljwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9IuS9oOW6
lOivpeefpemBk+eahOacuuWZqOWtpuS5oOaWueazlSIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5l
dC9hcnRpY2xlLzIwMTUtMTEtMDIvMjgyNjEwNyIgDQogIHRhcmdldD0iX2JsYW5rIj7kvaDlupTo
r6Xnn6XpgZPnmoTmnLrlmajlrabkuaDmlrnms5U8L0E+PC9MST4NCiAgPExJPjxBIHRpdGxlPSLl
pKfop4TmqKHkuLvpopjmqKHlnovvvJrlr7lTcGFyayBMREHnrpfms5XnmoTmlLnov5siIGhyZWY9
Imh0dHA6Ly93d3cuY3Nkbi5uZXQvYXJ0aWNsZS8yMDE1LTExLTAyLzI4MjYwOTciIA0KICB0YXJn
ZXQ9Il9ibGFuayI+5aSn6KeE5qih5Li76aKY5qih5Z6L77ya5a+5U3BhcmsgTERB566X5rOV55qE
5pS56L+bPC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0iQkRUQyBQUFTpm4bokIPvvIjkuIDvvInv
vJpJQk3jgIFJbnRlbOOAgUhvcnRvbndvcmtz44CBZUJheeetieWbveWkluWQjeS8geWkp+aVsOaN
ruWunuaImCIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC9hcnRpY2xlLzIwMTUtMTAtMzAvMjgy
NjA4NyIgDQogIHRhcmdldD0iX2JsYW5rIj5CRFRDIA0KUFBU6ZuG6JCD77yI5LiA77yJ77yaSUJN
44CBSW50ZWzjgIFIb3J0b253b3Jrc+OAgWVCYXnnrYnlm73lpJblkI3kvIHlpKfmlbDmja7lrp7m
iJg8L0E+PC9MST48L1VMPjwvRElWPjwvRElWPjwvRElWPjwhLS0gaG90IHRhZyAtLT4NCgkJCSAN
CjxESVYgY2xhc3M9ImhvdF90YWciPg0KPEgyIGNsYXNzPSJ0aXRfMiI+DQo8UD48QSBocmVmPSJo
dHRwOi8vd3d3LmNzZG4ubmV0L3RhZyI+54Ot6Zeo5qCH562+PC9BPjwvUD48L0gyPg0KPFVMIGNs
YXNzPSJsaXN0XzEiPg0KICA8TEk+PEEgdGl0bGU9IkhhZG9vcCIgaHJlZj0iaHR0cDovL3d3dy5j
c2RuLm5ldC90YWcvaGFkb29wIiANCiAgdGFyZ2V0PSJfYmxhbmsiPkhhZG9vcDwvQT48L0xJPg0K
ICA8TEk+PEEgdGl0bGU9IkFXUyIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvYXdzIiAN
CiAgdGFyZ2V0PSJfYmxhbmsiPkFXUzwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9Iuenu+WKqOa4
uOaIjyIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvJUU3JUE3JUJCJUU1JThBJUE4JUU2
JUI4JUI4JUU2JTg4JThGIiANCiAgdGFyZ2V0PSJfYmxhbmsiPuenu+WKqOa4uOaIjzwvQT48L0xJ
Pg0KICA8TEk+PEEgdGl0bGU9IkphdmEiIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnL2ph
dmEiIA0KICB0YXJnZXQ9Il9ibGFuayI+SmF2YTwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9IkFu
ZHJvaWQiIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnL2FuZHJvaWQiIA0KICB0YXJnZXQ9
Il9ibGFuayI+QW5kcm9pZDwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9ImlPUyIgaHJlZj0iaHR0
cDovL3d3dy5jc2RuLm5ldC90YWcvaW9zIiANCiAgdGFyZ2V0PSJfYmxhbmsiPmlPUzwvQT48L0xJ
Pg0KICA8TEk+PEEgdGl0bGU9IlN3aWZ0IiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy9z
d2lmdCIgDQogIHRhcmdldD0iX2JsYW5rIj5Td2lmdDwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9
IuaZuuiDveehrOS7tiIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvJUU2JTk5JUJBJUU4
JTgzJUJEJUU3JUExJUFDJUU0JUJCJUI2IiANCiAgdGFyZ2V0PSJfYmxhbmsiPuaZuuiDveehrOS7
tjwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9IkRvY2tlciIgaHJlZj0iaHR0cDovL3d3dy5jc2Ru
Lm5ldC90YWcvZG9ja2VyIiANCiAgdGFyZ2V0PSJfYmxhbmsiPkRvY2tlcjwvQT48L0xJPg0KICA8
TEk+PEEgdGl0bGU9Ik9wZW5TdGFjayIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvb3Bl
bnN0YWNrIiB0YXJnZXQ9Il9ibGFuayI+T3BlblN0YWNrPC9BPjwvTEk+DQogIDxMST48QSB0aXRs
ZT0iVlBOIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy92cG4iIA0KICB0YXJnZXQ9Il9i
bGFuayI+VlBOPC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0iU3BhcmsiIGhyZWY9Imh0dHA6Ly93
d3cuY3Nkbi5uZXQvdGFnL3NwYXJrIiANCiAgdGFyZ2V0PSJfYmxhbmsiPlNwYXJrPC9BPjwvTEk+
DQogIDxMST48QSB0aXRsZT0iRVJQIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy9lcnAi
IA0KICB0YXJnZXQ9Il9ibGFuayI+RVJQPC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0iSUUxMCIg
aHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvaWUxMCIgDQogIHRhcmdldD0iX2JsYW5rIj5J
RTEwPC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0iRWNsaXBzZSIgaHJlZj0iaHR0cDovL3d3dy5j
c2RuLm5ldC90YWcvZWNsaXBzZSIgDQogIHRhcmdldD0iX2JsYW5rIj5FY2xpcHNlPC9BPjwvTEk+
DQogIDxMST48QSB0aXRsZT0iQ1JNIiBocmVmPSJodHRwOi8vd3d3LmNzZG4ubmV0L3RhZy9jcm0i
IA0KICB0YXJnZXQ9Il9ibGFuayI+Q1JNPC9BPjwvTEk+DQogIDxMST48QSB0aXRsZT0iSmF2YVNj
cmlwdCIgaHJlZj0iaHR0cDovL3d3dy5jc2RuLm5ldC90YWcvamF2YXNjcmlwdCIgdGFyZ2V0PSJf
YmxhbmsiPkphdmFTY3JpcHQ8L0E+PC9MST4NCiAgPExJPjxBIHRpdGxlPSLmlbDmja7lupMiIGhy
ZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnLyVFNiU5NSVCMCVFNiU4RCVBRSVFNSVCQSU5MyIg
DQogIHRhcmdldD0iX2JsYW5rIj7mlbDmja7lupM8L0E+PC9MST4NCiAgPExJPjxBIHRpdGxlPSJV
YnVudHUiIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnL3VidW50dSIgDQogIHRhcmdldD0i
X2JsYW5rIj5VYnVudHU8L0E+PC9MST4NCiAgPExJPjxBIHRpdGxlPSJORkMiIGhyZWY9Imh0dHA6
Ly93d3cuY3Nkbi5uZXQvdGFnL25mYyIgDQogIHRhcmdldD0iX2JsYW5rIj5ORkM8L0E+PC9MST4N
CiAgPExJPjxBIHRpdGxlPSJXQVAiIGhyZWY9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdGFnL3dhcCIg
DQogIHRhcmdldD0iX2JsYW5rIj5XQVA8L0E+PC9MST48L1VMPjwvRElWPjwhLS0gLy9ob3QgdGFn
IC0tPgkJCQkJCSA8IS0tIHNoYXJlIC0tPg0KCQkJIA0KPFNUWUxFPgouYm94eyBtYXJnaW4tYm90
dG9tOjIwcHg7fQouYm94IGgyeyBjb2xvcjojYzAwO2ZvbnQ6bm9ybWFsIDE4cHgvMzBweCAiTWlj
cm9zb2Z0IFlhSGVpIjtib3JkZXItYm90dG9tOjJweCAjMzMzIHNvbGlkO21hcmdpbi1ib3R0b206
MTVweDt9Ci5ib3ggaDIgYXsgY29sb3I6I2MwMDt9CjwvU1RZTEU+DQogDQo8RElWIGNsYXNzPSJi
b3ggc2hhcmUiPg0KPEgyPjxBIG9uY2xpY2s9IkxvZ0NsaWNrQ291bnQodGhpcywzNDIpOyIgaHJl
Zj0iaHR0cDovL2Rvd25sb2FkLmNzZG4ubmV0L2FsYnVtL2xpc3QiIA0KdGFyZ2V0PSJfYmxhbmsi
PuS4i+i9veS4k+i+kTwvQT48L0gyPg0KPERMPg0KICA8RFQgY2xhc3M9ImNsZWFyZml4Ij48QSB0
aXRsZT0iIFN3aWZ0IOWInee6p+aVmeeoi+axh+aAu++8mlN3aWZ05Z+656GAIiBvbmNsaWNrPSJM
b2dDbGlja0NvdW50KHRoaXMsMzQyKTsiIA0KICBocmVmPSJodHRwOi8vZG93bmxvYWQuY3Nkbi5u
ZXQvYWxidW0vZGV0YWlsLzIwODkiIHRhcmdldD0iX2JsYW5rIj48SU1HIHN0eWxlPSJ3aWR0aDog
NzVweDsgaGVpZ2h0OiA3NXB4OyIgDQogIHNyYz0iaHR0cDovL2ltYWdlcy5jc2RuLm5ldC8yMDE1
MDgyMS91PTIyOTM2Mzk1NjksMjM2OTQ5MTU1MCZhbXA7Zm09NTglMjAoMSkuanBnIj48L0E+IA0K
ICAgICAgICAgICAgICAgICAgICAgICAgICA8QSB0aXRsZT0iIFN3aWZ0IOWInee6p+aVmeeoi+ax
h+aAu++8mlN3aWZ05Z+656GAIiBvbmNsaWNrPSJMb2dDbGlja0NvdW50KHRoaXMsMzQyKTsiIA0K
ICBocmVmPSJodHRwOi8vZG93bmxvYWQuY3Nkbi5uZXQvYWxidW0vZGV0YWlsLzIwODkiIHRhcmdl
dD0iX2JsYW5rIj5Td2lmdCANCiAg5Yid57qn5pWZ56iL5rGH5oC777yaU3dpZnTln7rnoYAgICAg
ICAgICAgICA8L0E+PC9EVD4NCiAgPERUIGNsYXNzPSJjbGVhcmZpeCI+PEEgdGl0bGU9IjE45pys
5Lit5paH54mI5pWP5o235byA5Y+R5Lmm57GN5pS26ZuGIiBvbmNsaWNrPSJMb2dDbGlja0NvdW50
KHRoaXMsMzQyKTsiIA0KICBocmVmPSJodHRwOi8vZG93bmxvYWQuY3Nkbi5uZXQvYWxidW0vZGV0
YWlsLzIyNTciIHRhcmdldD0iX2JsYW5rIj48SU1HIHN0eWxlPSJ3aWR0aDogNzVweDsgaGVpZ2h0
OiA3NXB4OyIgDQogIHNyYz0iaHR0cDovL2ltYWdlcy5jc2RuLm5ldC8yMDE1MTAxOS8wNjcyZjEy
OGVlNzc1MjRjOThlMzM2YTc0ZDMyYWViNS5qcGciPjwvQT4gDQogICAgICAgICAgICAgICAgICAg
ICAgICAgIDxBIHRpdGxlPSIxOOacrOS4reaWh+eJiOaVj+aNt+W8gOWPkeS5puexjeaUtumbhiIg
b25jbGljaz0iTG9nQ2xpY2tDb3VudCh0aGlzLDM0Mik7IiANCiAgaHJlZj0iaHR0cDovL2Rvd25s
b2FkLmNzZG4ubmV0L2FsYnVtL2RldGFpbC8yMjU3IiANCiAgdGFyZ2V0PSJfYmxhbmsiPjE45pys
5Lit5paH54mI5pWP5o235byA5Y+R5Lmm57GN5pS26ZuGICAgICAgICAgICAgPC9BPjwvRFQ+DQog
IDxEVCBjbGFzcz0iY2xlYXJmaXgiPjxBIHRpdGxlPSJBbmRyb2lkIOiHquWumuS5ieaOp+S7tuOA
geW8gOa6kOW6kyIgb25jbGljaz0iTG9nQ2xpY2tDb3VudCh0aGlzLDM0Mik7IiANCiAgaHJlZj0i
aHR0cDovL2Rvd25sb2FkLmNzZG4ubmV0L2FsYnVtL2RldGFpbC8yMjI1IiB0YXJnZXQ9Il9ibGFu
ayI+PElNRyBzdHlsZT0id2lkdGg6IDc1cHg7IGhlaWdodDogNzVweDsiIA0KICBzcmM9Imh0dHA6
Ly9pbWFnZXMuY3Nkbi5uZXQvMjAxNTEwMTkvdT0yODAzNjEyMjU4LDM1MzQzMjIzOTEmYW1wO2Zt
PTIxJmFtcDtncD0wLmpwZyI+PC9BPiANCiAgICAgICAgICAgICAgICAgICAgICAgICAgPEEgdGl0
bGU9IkFuZHJvaWQg6Ieq5a6a5LmJ5o6n5Lu244CB5byA5rqQ5bqTIiBvbmNsaWNrPSJMb2dDbGlj
a0NvdW50KHRoaXMsMzQyKTsiIA0KICBocmVmPSJodHRwOi8vZG93bmxvYWQuY3Nkbi5uZXQvYWxi
dW0vZGV0YWlsLzIyMjUiIHRhcmdldD0iX2JsYW5rIj5BbmRyb2lkIA0KICDoh6rlrprkuYnmjqfk
u7bjgIHlvIDmupDlupMgICAgICAgICAgICA8L0E+PC9EVD4NCiAgPERUIGNsYXNzPSJjbGVhcmZp
eCI+PEEgdGl0bGU9IuW+ruS/oeW8gOWPkeaWuemdoueahOeDremXqOi1hOa6kCIgb25jbGljaz0i
TG9nQ2xpY2tDb3VudCh0aGlzLDM0Mik7IiANCiAgaHJlZj0iaHR0cDovL2Rvd25sb2FkLmNzZG4u
bmV0L2FsYnVtL2RldGFpbC8yMDY1IiB0YXJnZXQ9Il9ibGFuayI+PElNRyBzdHlsZT0id2lkdGg6
IDc1cHg7IGhlaWdodDogNzVweDsiIA0KICBzcmM9Imh0dHA6Ly9pbWFnZXMuY3Nkbi5uZXQvMjAx
NTA4MTAvZTk2ZGIzYzgyM2JiYzYyNGYzZmI1NTczMTk2M2MzM2YuanBnIj48L0E+IA0KICAgICAg
ICAgICAgICAgICAgICAgICAgICA8QSB0aXRsZT0i5b6u5L+h5byA5Y+R5pa56Z2i55qE54Ot6Zeo
6LWE5rqQIiBvbmNsaWNrPSJMb2dDbGlja0NvdW50KHRoaXMsMzQyKTsiIA0KICBocmVmPSJodHRw
Oi8vZG93bmxvYWQuY3Nkbi5uZXQvYWxidW0vZGV0YWlsLzIwNjUiIHRhcmdldD0iX2JsYW5rIj4g
ICAgICAgICAgICANCiAg5b6u5L+h5byA5Y+R5pa56Z2i55qE54Ot6Zeo6LWE5rqQICAgICAgICAg
ICAgPC9BPjwvRFQ+DQogIDxEVCBjbGFzcz0iY2xlYXJmaXgiPjxBIHRpdGxlPSLpnaLor5XmsYLo
gYzotYTmupDnsr7lk4HmsYfpm4YiIG9uY2xpY2s9IkxvZ0NsaWNrQ291bnQodGhpcywzNDIpOyIg
DQogIGhyZWY9Imh0dHA6Ly9kb3dubG9hZC5jc2RuLm5ldC9hbGJ1bS9kZXRhaWwvMjA2NyIgdGFy
Z2V0PSJfYmxhbmsiPjxJTUcgc3R5bGU9IndpZHRoOiA3NXB4OyBoZWlnaHQ6IDc1cHg7IiANCiAg
c3JjPSJodHRwOi8vaW1hZ2VzLmNzZG4ubmV0LzIwMTUwODEwLzM2MDExN2RhYzIzMGE0MzVhMmZh
ODljMmQ0NzhmODgzLmpwZyI+PC9BPiANCiAgICAgICAgICAgICAgICAgICAgICAgICAgPEEgdGl0
bGU9IumdouivleaxguiBjOi1hOa6kOeyvuWTgeaxh+mbhiIgb25jbGljaz0iTG9nQ2xpY2tDb3Vu
dCh0aGlzLDM0Mik7IiANCiAgaHJlZj0iaHR0cDovL2Rvd25sb2FkLmNzZG4ubmV0L2FsYnVtL2Rl
dGFpbC8yMDY3IiB0YXJnZXQ9Il9ibGFuayI+ICAgICAgICAgICAgDQogIOmdouivleaxguiBjOi1
hOa6kOeyvuWTgeaxh+mbhiAgICAgICAgICAgIDwvQT48L0RUPjwvREw+PC9ESVY+PCEtLSAvL3No
YXJlIC0tPgkJCQkJCQkJIDwvRElWPjwvRElWPg0KPERJViBjbGFzcz0iaG90X3RvcGljIj4NCjxI
MT48U1BBTiBjbGFzcz0idGl0bGUiPueDremXqOS4k+WMujwvU1BBTj48L0gxPg0KPFVMPg0KICA8
TEk+PEEgaHJlZj0iaHR0cDovL2cuY3Nkbi5uZXQvNTI3Mjg2NCIgdGFyZ2V0PSJfYmxhbmsiPjxJ
TUcgYWx0PSIiIHNyYz0iaHR0cDovL2ltYWdlcy5jc2RuLm5ldC8yMDE0MDczMS9yb25nbGlhbjEu
anBnIj48L0E+PFNQQU4gDQogIGNsYXNzPSJ0aXRsZSI+PEEgaHJlZj0iaHR0cDovL2cuY3Nkbi5u
ZXQvNTI3Mjg2NCIgDQogIHRhcmdldD0iX2JsYW5rIj7lrrnogZTkupHpgJrorq/lvIDlj5HogIXm
ioDmnK/kuJPljLo8L0E+PC9TUEFOPjwvTEk+DQogIDxMST48QSBocmVmPSJodHRwOi8vZy5jc2Ru
Lm5ldC81MjcyODYzIiB0YXJnZXQ9Il9ibGFuayI+PElNRyBhbHQ9IiIgc3JjPSJodHRwOi8vaW1h
Z2VzLmNzZG4ubmV0LzIwMTQwNzMxL3Rlbmd4LmpwZyI+PC9BPjxTUEFOIA0KICBjbGFzcz0idGl0
bGUiPjxBIGhyZWY9Imh0dHA6Ly9nLmNzZG4ubmV0LzUyNzI4NjMiIA0KICB0YXJnZXQ9Il9ibGFu
ayI+6IW+6K6v5LqR5oqA5pyv56S+5Yy6PC9BPjwvU1BBTj48L0xJPg0KICA8TEk+PEEgaHJlZj0i
aHR0cDovL2cuY3Nkbi5uZXQvNTI1MzMyMCIgdGFyZ2V0PSJfYmxhbmsiPjxJTUcgYWx0PSIiIHNy
Yz0iaHR0cDovL2ltYWdlcy5jc2RuLm5ldC8yMDEzMDgxMi9JQk0lMjBQTUkwMy5qcGciPjwvQT48
U1BBTiANCiAgY2xhc3M9InRpdGxlIj48QSBocmVmPSJodHRwOi8vZy5jc2RuLm5ldC81MjUzMzIw
IiANCiAgdGFyZ2V0PSJfYmxhbmsiPklCTeaWsOWFtOaKgOacr+Wkp+WtpjwvQT48L1NQQU4+PC9M
ST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9nLmNzZG4ubmV0LzUyNzE2ODciIHRhcmdldD0iX2Js
YW5rIj48SU1HIGFsdD0iIiBzcmM9Imh0dHA6Ly9pbWFnZXMuY3Nkbi5uZXQvMjAxNDA3MDQvQXRs
YXNzaWFuLmpwZyI+PC9BPjxTUEFOIA0KICBjbGFzcz0idGl0bGUiPjxBIGhyZWY9Imh0dHA6Ly9n
LmNzZG4ubmV0LzUyNzE2ODciIA0KICB0YXJnZXQ9Il9ibGFuayI+6auY5pWI6IO95Zui6Zif6Kej
5Yaz5pa55qGIPC9BPjwvU1BBTj48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL2cuY3Nkbi5u
ZXQvNTI2MTIzMSIgdGFyZ2V0PSJfYmxhbmsiPjxJTUcgYWx0PSIiIHNyYz0iaHR0cDovL2ltYWdl
cy5jc2RuLm5ldC8yMDEzMTIxOS8xNjB4MTIwKDEpMDEuanBnIj48L0E+PFNQQU4gDQogIGNsYXNz
PSJ0aXRsZSI+PEEgaHJlZj0iaHR0cDovL2cuY3Nkbi5uZXQvNTI2MTIzMSIgdGFyZ2V0PSJfYmxh
bmsiPumrmOmAmuW8gOWPkeiAheS4k+WMuiANCiAgPC9BPjwvU1BBTj48L0xJPjwvVUw+PC9ESVY+
DQo8U0NSSVBUIHNyYz0iaHR0cDovL3B0Y21zLmNzZG4ubmV0L2xpa2UvanMvbGlrZS5qcyIgdHlw
ZT0idGV4dC9qYXZhc2NyaXB0Ij48L1NDUklQVD4NCgkgDQo8U0NSSVBUPgogIHdpbmRvdy5XZWJT
b2NrZXQgPSB3aW5kb3cuV2ViU29ja2V0IHx8IHdpbmRvdy5Nb3pXZWJTb2NrZXQ7CiAgaWYoIHdp
bmRvdy5XZWJTb2NrZXQgKSB7CiAgICB2YXIgIHdzU2VydmVyID0gJ3dzOi8vZ2Vla3Rlc3QuY3Nk
bi5uZXQvJzsgCiAgICB2YXIgd2Vic29ja2V0ID0gbmV3IHdpbmRvdy5XZWJTb2NrZXQod3NTZXJ2
ZXIsICdjbXNsaWtlJyk7CgogICAgd2Vic29ja2V0Lm9ub3BlbiA9IGZ1bmN0aW9uIChldnQpIHsg
b25PcGVuKGV2dCkgfTsgCiAgICB3ZWJzb2NrZXQub25jbG9zZSA9IGZ1bmN0aW9uIChldnQpIHsg
b25DbG9zZShldnQpIH07IAogICAgd2Vic29ja2V0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldnQp
IHsgb25NZXNzYWdlKGV2dCkgfTsgCiAgICB3ZWJzb2NrZXQub25lcnJvciA9IGZ1bmN0aW9uIChl
dnQpIHsgb25FcnJvcihldnQpIH07IAogICAgZnVuY3Rpb24gb25PcGVuKGV2dCkgewogICAgfSAK
ICAgIGZ1bmN0aW9uIG9uQ2xvc2UoZXZ0KSB7IAogICAgfSAKICAgIGZ1bmN0aW9uIG9uTWVzc2Fn
ZShldnQpIHsKICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGV2dC5kYXRhKTsKICAgICAgdmFy
IGRpbmcgPSAkKCcuc3VwcG9ydCBkZCcpLnRleHQoKTsKICAgICAgaWYoZGluZyAhPSAnJyAmJiBk
YXRhLnN1cHBvcnQgPiBkaW5nKXsKICAgICAgICAkKCcuc3VwcG9ydCBkZCcpLnRleHQoZGF0YS5z
dXBwb3J0KTsKICAgICAgfTsKICAgICAgdmFyIGNhaSA9ICQoJy5vcHBvc2UgZGQnKS50ZXh0KCk7
CiAgICAgIGlmIChjYWkgIT0gJycgJiYgZGF0YS5vcHBvc2UgPiBjYWkpIHsKICAgICAgICAkKCcu
b3Bwb3NlIGRkJykudGV4dChkYXRhLm9wcG9zZSk7CiAgICAgIH07CiAgICB9IAogICAgZnVuY3Rp
b24gb25FcnJvcihldnQpIHsgCiAgICB9CiAgfQoJCSQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9u
KCl7CgkJCXZhciBkaWdnX2lkPSQoIiNkaWdnX2lkIikudmFsKCk7CgkJCSQoJy5kaWdnJykubGlr
ZSh7CgkJCQlhcnRpY2xlX2lkOiBkaWdnX2lkLCAvLyDmlofnq6BpZAoJCQkJZGluZ19jbGFzczog
J3N1cHBvcnQnLCAvLyDpobbnmoRjbGFzcwoJCQkJY2FpX2NsYXNzOiAnb3Bwb3NlJywgLy8g6Lip
55qEY2xhc3MKICAgICAgICBkb21haW46ICduZXdzLmNzZG4ubmV0JywKCQkJCWNhbGxiYWNrOiBm
dW5jdGlvbihkYXRhKSAvL+WkhOeQhuaVsOaNruaWueazlQoJCQkJewogICAgICAgICAgaWYoZGF0
YS5zdWNjID09IDEpCiAgICAgICAgICB7CiAgICAgICAgICAgICQoJy5zdXBwb3J0IGRkJykudGV4
dChkYXRhLmluZm8uZGluZyk7CiAgICAgICAgICAgICQoJy5vcHBvc2UgZGQnKS50ZXh0KGRhdGEu
aW5mby5kaW5nKTsKICAgICAgICAgIH0KCQkJCQlpZihkYXRhLnN1Y2MgPT0gLTIpCgkJCQkJewoJ
CQkJCQlpZihjb25maXJtKGRhdGEubXNnKSl7CgkJCQkJCQl3aW5kb3cubG9jYXRpb24uaHJlZiA9
ICJodHRwczovL3Bhc3Nwb3J0LmNzZG4ubmV0L1VzZXJMb2dpbi5hc3B4P2Zyb209aHR0cDovL25l
d3MuY3Nkbi5uZXQlMkZhcnRpY2xlJTJGMjAxNC0xMi0xNSUyRjI4MjMxMzIiOwoJCQkJCQkJcmV0
dXJuIGZhbHNlOwoJCQkJCQl9CgkJCQkJfQoJCQkJCWlmKGRhdGEuc3VjYyA9PSAtMSkKCQkJCQl7
CgkJCQkJCWFsZXJ0KGRhdGEubXNnKTsKCQkJCQl9CgkJCQl9CgkJCX0pOwoJCX0pOwoJPC9TQ1JJ
UFQ+DQoJIA0KPFNDUklQVCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoJCSQoZG9jdW1lbnQpLnJl
YWR5KGZ1bmN0aW9uKCl7IAoJCQl2YXIgaHJlZj1kb2N1bWVudC5sb2NhdGlvbi5ocmVmOwkKCgkJ
CWlmKGhyZWYuc3BsaXQoIi8iKVs2XSA9PSB1bmRlZmluZWQpewoJCQkJJCgiI2NsaWNrXyIrMSku
YWRkQ2xhc3MoIm9uIik7CgkJCX1lbHNlewoJCQkJdmFyIGhyZWZwYWdlbm89aHJlZi5zcGxpdCgi
LyIpWzZdOwkJCgkJCQkkKCIjY2xpY2tfIitocmVmcGFnZW5vKS5hZGRDbGFzcygib24iKTsKCQkJ
fQkKCgkJCW5ldyAkLkF1dG9TY3JvbGwoewoJCQkJd3JhcDokKCcjam9iX3VsJyksc2Nyb2xsQ291
bnQ6MSxpbnRlcnZhbDoxNTAwCgkJCX0pOwoJCWV4cGFuZGNvbnRlbnQoJ3NjMycsIHRhYm9iamxp
bmtzWzJdKTsKCQkkLmdldEpTT04oJ2h0dHA6Ly9wdGNtcy5jc2RuLm5ldC9hcnRpY2xlL3NlcnZp
Y2UvYXJ0aWNsZV9jb3VudD9wcmV2aWV3PTEmYWlkPTI4MjMxMzImanNvbnBjYWxsYmFjaz0/Jyxm
dW5jdGlvbihkYXRhKXsKCQkJCSQoJy52aWV3X3RpbWUnKS5odG1sKGRhdGErJ+asoemYheivuycp
OwoJCQl9KTsKCgkJfSk7CgkJZnVuY3Rpb24gbGlua2ZpcnN0KGFyY2lkKXsKCQkJJCgiI2xpbmtm
aXJzdCIpLmF0dHIoImhyZWYiLCJhcnRpY2xlLmh0bWw/YXJjaWQ9IithcmNpZCsiJnBhZ2Vubz0x
Iik7CQkJCgkJfQoJCWZ1bmN0aW9uIHByZWNsaWNrKGFyY2lkKXsKCQkJdmFyIGhyZWY9d2luZG93
LmxvY2F0aW9uLmhyZWY7CQkKCQkJdmFyIGhyZWZwYWdlbm89aHJlZi5zcGxpdCgiJiIpWzFdOwkJ
CgkJCXZhciBwYWdlbm89aHJlZnBhZ2Vuby5zcGxpdCgiPSIpWzFdOwoJCQl2YXIgaHJlZm5vPXBh
Z2Vuby0xOwoJCQlpZihocmVmbm8gPDEpewoJCQkJaHJlZm5vID0gMTsKCQkJfQoJCQkkKCIjcHJl
Y2xpY2siKS5hdHRyKCJocmVmIiwiYXJ0aWNsZS5odG1sP2FyY2lkPSIrYXJjaWQrIiZwYWdlbm89
IitocmVmbm8pOwoJCX0KCQoJCWZ1bmN0aW9uIG5leHRjbGljayh0b3RhbCxhcmNpZCl7CgkJCXZh
ciBocmVmPXdpbmRvdy5sb2NhdGlvbi5ocmVmOwkJCgkJCXZhciBocmVmcGFnZW5vPWhyZWYuc3Bs
aXQoIiYiKVsxXTsJCQoJCQl2YXIgcGFnZW5vPWhyZWZwYWdlbm8uc3BsaXQoIj0iKVsxXTsKCQkJ
dmFyIGhyZWZubz1wYXJzZUludChwYWdlbm8pKzE7CgkJCWlmKGhyZWZubyA+dG90YWwpewoJCQkJ
aHJlZm5vID0gdG90YWw7CgkJCX0KCQkJJCgiI25leHRjbGljayIpLmF0dHIoImhyZWYiLCJhcnRp
Y2xlLmh0bWw/YXJjaWQ9IithcmNpZCsiJnBhZ2Vubz0iK2hyZWZubyk7CgkJfQoJCgkJZnVuY3Rp
b24gZmlyc3RjbGljayhhcmNpZCl7CgkJCSQoIiNmaXJzdGNsaWNrIikuYXR0cigiaHJlZiIsImFy
dGljbGUuaHRtbD9hcmNpZD0iK2FyY2lkKyImcGFnZW5vPTEiKTsJCgkJfQoJCQoJCWZ1bmN0aW9u
IGxhc3RjbGljayh0b3RhbCxhcmNpZCl7CgkJCSQoIiNsYXN0Y2xpY2siKS5hdHRyKCJocmVmIiwi
YXJ0aWNsZS5odG1sP2FyY2lkPSIrYXJjaWQrIiZwYWdlbm89Iit0b3RhbCk7CgkJfQoJCWZ1bmN0
aW9uIGxpbmt0aXRsZShudW0sYXJjaWQpewoJCQl2YXIgbnVtaWQ9cGFyc2VJbnQobnVtKSsxOwoJ
CQkkKCIjbGlua3RpdGxlXyIrbnVtKS5hdHRyKCJocmVmIiwiYXJ0aWNsZS5odG1sP2FyY2lkPSIr
YXJjaWQrIiZwYWdlbm89IitudW1pZCk7CgkJfQoJCWZ1bmN0aW9uIHBvbmdvYWQyKHZhbCl7CgkJ
CSQoIiNqb2JfdWwiKS5odG1sKHZhbCk7CgkJfQoJCXZhciBjYWxsYmFja2Z1bj0icG9uZ29hZDIi
OwoJCWRvY3VtZW50LndyaXRlKHVuZXNjYXBlKCclM0NzY3JpcHQgc3JjPSJodHRwOi8vYS5wb25n
by5jbi9Kb2IvR2V0QWRGb3JDYWxsQmFjayUzRmlkJTNEMiUyNlVybEFkUGFyYW0lM0QnK2VuY29k
ZVVSSUNvbXBvbmVudChsb2NhdGlvbi5ocmVmKSsnJTI2JkNhbGxCYWNrJTNEJytjYWxsYmFja2Z1
bisnIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiJTNFJTNDL3NjcmlwdCUzRScpKTsKCTwvU0NSSVBU
Pg0KCSANCjxTQ1JJUFQ+CgkgICAkKGZ1bmN0aW9uICgpIHsKCSAgICB2YXIgd3JhcCA9IGZ1bmN0
aW9uICgpIHsKCSAgICAgICAgdmFyIGVsZW1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNz
TmFtZSgnc3ludGF4aGlnaGxpZ2h0ZXInKTsKCSAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBl
bGVtcy5sZW5ndGg7ICsraikgewoJICAgICAgICAgICAgdmFyIHNoID0gZWxlbXNbal07CgkgICAg
ICAgICAgICB2YXIgZ0xpbmVzID0gc2guZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZ3V0dGVyJylb
MF0uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbGluZScpOwoJICAgICAgICAgICAgdmFyIGNMaW5l
cyA9IHNoLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvZGUnKVswXS5nZXRFbGVtZW50c0J5Q2xh
c3NOYW1lKCdsaW5lJyk7CgkgICAgICAgICAgICB2YXIgc3RhbmQgPSAxNTsKCSAgICAgICAgICAg
IGZvciAodmFyIGkgPSAwOyBpIDwgZ0xpbmVzLmxlbmd0aDsgKytpKSB7CgkgICAgICAgICAgICAg
ICAgdmFyIGggPSAkKGNMaW5lc1tpXSkuaGVpZ2h0KCk7CgkgICAgICAgICAgICAgICAgaWYgKGgg
IT0gc3RhbmQpIHsKCSAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhpKTsKCSAgICAg
ICAgICAgICAgICAgICAgZ0xpbmVzW2ldLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnaGVpZ2h0OiAn
ICsgaCArICdweCAhaW1wb3J0YW50OycpOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAg
IH0KCSAgICAgICAgfQoJICAgICB9OwoJICAgIHZhciB3aGVuUmVhZHkgPSBmdW5jdGlvbiAoKSB7
CgkgICAgICAgIGlmICgkKCcuc3ludGF4aGlnaGxpZ2h0ZXInKS5sZW5ndGggPT09IDApIHsKCSAg
ICAgICAgICAgIHNldFRpbWVvdXQod2hlblJlYWR5LCAwKTsKCSAgICAgICAgfSBlbHNlIHsKCSAg
ICAgICAgICAgIHdyYXAoKTsKCSAgICAgICAgfQoJICAgIH07CgkgICAgd2hlblJlYWR5KCk7Cgl9
KTsKCTwvU0NSSVBUPg0KCSANCjxTQ1JJUFQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KIAkgZG9j
dW1lbnQud3JpdGUoJzxzY3JpcHQgc3JjPSJodHRwJyArICgvXmh0dHBzLy50ZXN0KGxvY2F0aW9u
LmhyZWYpID8gJ3MnIDogJycpICsgJzovL2MuY3NkbmltZy5jbi9wdWJsaWMvaGlnaGxpZ2h0ZXIv
anMvaGlnaGxpZ2h0ZXIuanM/JyArIChuZXcgRGF0ZSgpLzMwMDAwMHwwKSArICciPjwvJysnc2Ny
aXB0PicpOwoJPC9TQ1JJUFQ+DQoJCSA8IS0tIOW5v+WRiuS9je+8muWvjOWqkuS9k+W5v+WRiiAt
LT4JIA0KPFNDUklQVCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkJBSURVX0NMQl9maWxsU2xvdCgi
MTE5ODM1Iik7PC9TQ1JJUFQ+DQogIAkgPCEtLSBwdWJsaWMgZm9vdGVyIC0tPiAgICAgICANCjxT
Q1JJUFQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZG9jdW1lbnQud3JpdGUoJzxzY3Jp
cHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHA6Ly9jLmNzZG5pbWcuY24vcHViZm9v
dGVyL2pzL3B1YmxpYl9mb290ZXIuanM/JyArIE1hdGguZmxvb3IobmV3IERhdGUoKS8xMjAwMDAp
LnRvU3RyaW5nKDM2KSArICc9Ij48LycrJ3NjcmlwdD4nKTsKICAgICAgPC9TQ1JJUFQ+DQoJIDwh
LS0gLy9wdWJsaWMgZm9vdGVyIC0tPiA8L0RJVj48IS0tIHRhYiBqcyAtLT4gDQo8U0NSSVBUIHR5
cGU9InRleHQvamF2YXNjcmlwdCI+CjwhLS0KLyrnrKzkuIDnp43lvaLlvI8g56ys5LqM56eN5b2i
5byPIOabtOaNouaYvuekuuagt+W8jyovCmZ1bmN0aW9uIHNldFRhYihuYW1lLGN1cnNlbCxuKXsK
CWZvcihpPTE7aTw9bjtpKyspewoJCXZhciBtZW51PWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG5h
bWUraSk7CgkJdmFyIGNvbj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY29uXyIrbmFtZSsiXyIr
aSk7CgkJbWVudS5jbGFzc05hbWU9aT09Y3Vyc2VsPyJob3ZlciI6IiI7CgkJY29uLnN0eWxlLmRp
c3BsYXk9aT09Y3Vyc2VsPyJibG9jayI6Im5vbmUiOwoJfQp9Ci8vLS0+CjwvU0NSSVBUPg0KIA0K
PFNDUklQVCBzcmM9Imh0dHA6Ly93d3cuY3Nkbi5uZXQvdWkvc2NyaXB0cy9Dc2RuL2NvdW50ZXIu
anMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQogDQo8U0NSSVBUIHNyYz0iaHR0
cDovL2NyZWF0aW0ucXRtb2pvLmNuL3RkL0FsbHllc0RlbGl2ZXIubWluLmpzIiB0eXBlPSJ0ZXh0
L2phdmFzY3JpcHQiIGNoYXJzZXQ9ImdiayIgYWRzLXNyYz0iaHR0cDovL2NzZG5pbS5xdG1vam8u
Y29tL21haW4vcz91c2VyPWNzZG58aG9tZXBhZ2V8V2ViSU1fMSZhbXA7ZGI9Y3NkbmltJmFtcDti
b3JkZXI9MCZhbXA7bG9jYWw9eWVzJmFtcDtqcz1pZSI+PC9TQ1JJUFQ+DQogPCEtLTxzY3JpcHQg
aWQ9Im5vdGljZVNjcmlwdCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCIg
YnRuSWQ9ImhlYWRlcl9ub3RpY2VfbnVtIiB3cmFwSWQ9Im5vdGUxIiBjb3VudD0iNSIgc3ViQ291
bnQ9IjUiIHNyYz0iaHR0cDovL3N0YXRpYy5jc2RuLm5ldC9wdWJsaWMvY29tbW9uL3Rvb2xiYXIv
anMvbm90aWZ5LmpzIj48L3NjcmlwdD4tLT4gDQo8U0NSSVBUIGlkPSJjc2RuLXRvb2xiYXItaWQi
IHNyYz0iaHR0cDovL3N0YXRpYy5jc2RuLm5ldC9wdWJsaWMvY29tbW9uL3Rvb2xiYXIvanMvdG9v
bGJhci5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzdWJjb3VudD0iNSIgY291bnQ9IjUiIHdy
YXBpZD0ibm90ZTEiIGJ0bmlkPSJoZWFkZXJfbm90aWNlX251bSI+PC9TQ1JJUFQ+DQogPExJTksg
aHJlZj0iaHR0cDovL2MuY3NkbmltZy5jbi9jb21tX2Fzay9jc3MvYXNrX2Zsb2F0X2Jsb2NrLmNz
cyIgcmVsPSJzdHlsZXNoZWV0IiANCnR5cGU9InRleHQvY3NzIj4gDQo8U0NSSVBUIHNyYz0iaHR0
cDovL2MuY3NkbmltZy5jbi9jb21tX2Fzay9qcy9saWJzL3dtZC5qcyIgdHlwZT0idGV4dC9qYXZh
c2NyaXB0Ij48L1NDUklQVD4NCiANCjxTQ1JJUFQgc3JjPSJodHRwOi8vYy5jc2RuaW1nLmNuL2Nv
bW1fYXNrL2pzL2xpYnMvc2hvd2Rvd24uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJ
UFQ+DQogDQo8U0NSSVBUIHNyYz0iaHR0cDovL2MuY3NkbmltZy5jbi9jb21tX2Fzay9qcy9saWJz
L3ByZXR0aWZ5LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvU0NSSVBUPg0KIA0KPFNDUklQ
VCBzcmM9Imh0dHA6Ly9jLmNzZG5pbWcuY24vY29tbV9hc2svanMvYXBwcy9hc2tfZmxvYXRfYmxv
Y2suanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9TQ1JJUFQ+DQogIDwvQk9EWT48IS0tIGFz
ayDlhajlsYDmgqzmta7mjInpkq4gIC0tPjwvSFRNTD4NCg==

------=_NextPart_001_003B_01D1170A.858FF150
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: res://ieframe.dll/navcancl.htm

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3.org/TR/html4/loose.dtd"><HTML><HEAD><META=20
content=3D"IE=3D11.0000" http-equiv=3D"X-UA-Compatible">
         <LINK href=3D"res://ieframe.dll/ErrorPageTemplate.css" =
rel=3D"stylesheet"=20
type=3D"text/css">        =20
<META http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3DUTF-8">        =20
<TITLE>=E5=AF=BC=E8=88=AA=E5=B7=B2=E5=8F=96=E6=B6=88</TITLE>        =20
<SCRIPT language=3D"javascript" =
src=3D"res://ieframe.dll/errorPageStrings.js" =
type=3D"text/javascript"></SCRIPT>
        =20
<SCRIPT language=3D"javascript" =
src=3D"res://ieframe.dll/httpErrorPagesScripts.js" =
type=3D"text/javascript"></SCRIPT>
    =20
<META name=3D"GENERATOR" content=3D"MSHTML 11.00.9600.17496"></HEAD>     =

<BODY onload=3D"javascript:navCancelInit(); ">
<TABLE width=3D"730" border=3D"0" cellspacing=3D"0" =
cellpadding=3D"0"><!-- Error title -->=20
             =20
  <TBODY>
  <TR>
    <TD width=3D"60" align=3D"left" id=3D"infoIconAlign" valign=3D"top"=20
      rowspan=3D"2"><IMG id=3D"infoIcon" =
alt=3D"=E4=BF=A1=E6=81=AF=E5=9B=BE=E6=A0=87" =
src=3D"res://ieframe.dll/info_48.png">=20
                      </TD>
    <TD width=3D"*" align=3D"left" id=3D"mainTitleAlign" =
valign=3D"middle">
      <H1 =
id=3D"mainTitle">=E5=B7=B2=E5=8F=96=E6=B6=88=E7=BD=91=E9=A1=B5=E5=AF=BC=E8=
=88=AA</H1></TD></TR>
  <TR><!-- This row is for HTTP status code, as well as the divider-->   =
     =20
           =20
    <TD align=3D"right" class=3D"errorCodeAndDivider" =
id=3D"errorCodeAlign">&nbsp;  =20
                      =20
      <DIV class=3D"divider"></DIV></TD></TR><!-- Error Body -->         =
<!-- What you can do -->=20
             =20
  <TR>
    <TD>                    &nbsp;                </TD>
    <TD align=3D"left" id=3D"whatToTryAlign" valign=3D"top">
      <H2 =
id=3D"whatToTry">=E4=BD=A0=E5=8F=AF=E4=BB=A5=E5=B0=9D=E8=AF=95=E4=BB=A5=E4=
=B8=8B=E6=93=8D=E4=BD=9C:</H2></TD></TR><!-- refresh page -->            =
=20
  <TR>
    <TD>                    &nbsp;                </TD>
    <TD align=3D"left" id=3D"refreshPageAlign" valign=3D"middle">
      <H4>
      <TABLE>
        <TBODY>
        <TR>
          <TD valign=3D"top"><IMG class=3D"actionIcon" alt=3D"" =
src=3D"res://ieframe.dll/bullet.png"=20
            border=3D"0">                               </TD>
          <TD valign=3D"top"><SPAN =
id=3D"navCancelContainer"></SPAN><NOSCRIPT =
id=3D"refreshPage">=E5=88=B7=E6=96=B0=E8=AF=A5=E9=A1=B5=E9=9D=A2=E3=80=82=
</NOSCRIPT>=20
                                         =20
</TD></TR></TBODY></TABLE></H4></TD></TR></TBODY></TABLE></BODY></HTML>

------=_NextPart_001_003B_01D1170A.858FF150--

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js

/*! jQuery v1.9.1 | (c) 2005, 2012 jQuery Foundation, Inc. | =
jquery.org/license
//@ sourceMappingURL=3Djquery.min.map
*/(function(e,t){var n,r,i=3Dtypeof =
t,o=3De.document,a=3De.location,s=3De.jQuery,u=3De.$,l=3D{},c=3D[],p=3D"1=
.9.1",f=3Dc.concat,d=3Dc.push,h=3Dc.slice,g=3Dc.indexOf,m=3Dl.toString,y=3D=
l.hasOwnProperty,v=3Dp.trim,b=3Dfunction(e,t){return new =
b.fn.init(e,t,r)},x=3D/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,w=3D/\=
S+/g,T=3D/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,N=3D/^(?:(<[\w\W]+>)[^>]*|#=
([\w-]*))$/,C=3D/^<(\w+)\s*\/?>(?:<\/\1>|)$/,k=3D/^[\],:{}\s]*$/,E=3D/(?:=
^|:|,)(?:\s*\[)+/g,S=3D/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,A=3D/"[^"\\\r=
\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,j=3D/^-ms-/,D=3D=
/-([\da-z])/gi,L=3Dfunction(e,t){return =
t.toUpperCase()},H=3Dfunction(e){(o.addEventListener||"load"=3D=3D=3De.ty=
pe||"complete"=3D=3D=3Do.readyState)&&(q(),b.ready())},q=3Dfunction(){o.a=
ddEventListener?(o.removeEventListener("DOMContentLoaded",H,!1),e.removeE=
ventListener("load",H,!1)):(o.detachEvent("onreadystatechange",H),e.detac=
hEvent("onload",H))};b.fn=3Db.prototype=3D{jquery:p,constructor:b,init:fu=
nction(e,n,r){var i,a;if(!e)return this;if("string"=3D=3Dtypeof =
e){if(i=3D"<"=3D=3D=3De.charAt(0)&&">"=3D=3D=3De.charAt(e.length-1)&&e.le=
ngth>=3D3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).=
find(e):this.constructor(n).find(e);if(i[1]){if(n=3Dn instanceof =
b?n[0]:n,b.merge(this,b.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:o=
,!0)),C.test(i[1])&&b.isPlainObject(n))for(i in =
n)b.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return =
this}if(a=3Do.getElementById(i[2]),a&&a.parentNode){if(a.id!=3D=3Di[2])re=
turn r.find(e);this.length=3D1,this[0]=3Da}return =
this.context=3Do,this.selector=3De,this}return =
e.nodeType?(this.context=3Dthis[0]=3De,this.length=3D1,this):b.isFunction=
(e)?r.ready(e):(e.selector!=3D=3Dt&&(this.selector=3De.selector,this.cont=
ext=3De.context),b.makeArray(e,this))},selector:"",length:0,size:function=
(){return this.length},toArray:function(){return =
h.call(this)},get:function(e){return =
null=3D=3De?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:fun=
ction(e){var t=3Db.merge(this.constructor(),e);return =
t.prevObject=3Dthis,t.context=3Dthis.context,t},each:function(e,t){return=
 b.each(this,e,t)},ready:function(e){return =
b.ready.promise().done(e),this},slice:function(){return =
this.pushStack(h.apply(this,arguments))},first:function(){return =
this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var =
t=3Dthis.length,n=3D+e+(0>e?t:0);return =
this.pushStack(n>=3D0&&t>n?[this[n]]:[])},map:function(e){return =
this.pushStack(b.map(this,function(t,n){return =
e.call(t,n,t)}))},end:function(){return =
this.prevObject||this.constructor(null)},push:d,sort:[].sort,splice:[].sp=
lice},b.fn.init.prototype=3Db.fn,b.extend=3Db.fn.extend=3Dfunction(){var =
e,n,r,i,o,a,s=3Darguments[0]||{},u=3D1,l=3Darguments.length,c=3D!1;for("b=
oolean"=3D=3Dtypeof =
s&&(c=3Ds,s=3Darguments[1]||{},u=3D2),"object"=3D=3Dtypeof =
s||b.isFunction(s)||(s=3D{}),l=3D=3D=3Du&&(s=3Dthis,--u);l>u;u++)if(null!=
=3D(o=3Darguments[u]))for(i in =
o)e=3Ds[i],r=3Do[i],s!=3D=3Dr&&(c&&r&&(b.isPlainObject(r)||(n=3Db.isArray=
(r)))?(n?(n=3D!1,a=3De&&b.isArray(e)?e:[]):a=3De&&b.isPlainObject(e)?e:{}=
,s[i]=3Db.extend(c,a,r)):r!=3D=3Dt&&(s[i]=3Dr));return =
s},b.extend({noConflict:function(t){return =
e.$=3D=3D=3Db&&(e.$=3Du),t&&e.jQuery=3D=3D=3Db&&(e.jQuery=3Ds),b},isReady=
:!1,readyWait:1,holdReady:function(e){e?b.readyWait++:b.ready(!0)},ready:=
function(e){if(e=3D=3D=3D!0?!--b.readyWait:!b.isReady){if(!o.body)return =
setTimeout(b.ready);b.isReady=3D!0,e!=3D=3D!0&&--b.readyWait>0||(n.resolv=
eWith(o,[b]),b.fn.trigger&&b(o).trigger("ready").off("ready"))}},isFuncti=
on:function(e){return"function"=3D=3D=3Db.type(e)},isArray:Array.isArray|=
|function(e){return"array"=3D=3D=3Db.type(e)},isWindow:function(e){return=
 =
null!=3De&&e=3D=3De.window},isNumeric:function(e){return!isNaN(parseFloat=
(e))&&isFinite(e)},type:function(e){return =
null=3D=3De?e+"":"object"=3D=3Dtypeof e||"function"=3D=3Dtypeof =
e?l[m.call(e)]||"object":typeof =
e},isPlainObject:function(e){if(!e||"object"!=3D=3Db.type(e)||e.nodeType|=
|b.isWindow(e))return!1;try{if(e.constructor&&!y.call(e,"constructor")&&!=
y.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!=
1}var r;for(r in e);return =
r=3D=3D=3Dt||y.call(e,r)},isEmptyObject:function(e){var t;for(t in =
e)return!1;return!0},error:function(e){throw =
Error(e)},parseHTML:function(e,t,n){if(!e||"string"!=3Dtypeof e)return =
null;"boolean"=3D=3Dtypeof t&&(n=3Dt,t=3D!1),t=3Dt||o;var =
r=3DC.exec(e),i=3D!n&&[];return =
r?[t.createElement(r[1])]:(r=3Db.buildFragment([e],t,i),i&&b(i).remove(),=
b.merge([],r.childNodes))},parseJSON:function(n){return =
e.JSON&&e.JSON.parse?e.JSON.parse(n):null=3D=3D=3Dn?n:"string"=3D=3Dtypeo=
f =
n&&(n=3Db.trim(n),n&&k.test(n.replace(S,"@").replace(A,"]").replace(E,"")=
))?Function("return "+n)():(b.error("Invalid JSON: =
"+n),t)},parseXML:function(n){var r,i;if(!n||"string"!=3Dtypeof n)return =
null;try{e.DOMParser?(i=3Dnew =
DOMParser,r=3Di.parseFromString(n,"text/xml")):(r=3Dnew =
ActiveXObject("Microsoft.XMLDOM"),r.async=3D"false",r.loadXML(n))}catch(o=
){r=3Dt}return =
r&&r.documentElement&&!r.getElementsByTagName("parsererror").length||b.er=
ror("Invalid XML: =
"+n),r},noop:function(){},globalEval:function(t){t&&b.trim(t)&&(e.execScr=
ipt||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return =
e.replace(j,"ms-").replace(D,L)},nodeName:function(e,t){return =
e.nodeName&&e.nodeName.toLowerCase()=3D=3D=3Dt.toLowerCase()},each:functi=
on(e,t,n){var =
r,i=3D0,o=3De.length,a=3DM(e);if(n){if(a){for(;o>i;i++)if(r=3Dt.apply(e[i=
],n),r=3D=3D=3D!1)break}else for(i in =
e)if(r=3Dt.apply(e[i],n),r=3D=3D=3D!1)break}else =
if(a){for(;o>i;i++)if(r=3Dt.call(e[i],i,e[i]),r=3D=3D=3D!1)break}else =
for(i in e)if(r=3Dt.call(e[i],i,e[i]),r=3D=3D=3D!1)break;return =
e},trim:v&&!v.call("\ufeff\u00a0")?function(e){return =
null=3D=3De?"":v.call(e)}:function(e){return =
null=3D=3De?"":(e+"").replace(T,"")},makeArray:function(e,t){var =
n=3Dt||[];return null!=3De&&(M(Object(e))?b.merge(n,"string"=3D=3Dtypeof =
e?[e]:e):d.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(g)return =
g.call(t,e,n);for(r=3Dt.length,n=3Dn?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n=
 in t&&t[n]=3D=3D=3De)return n}return-1},merge:function(e,n){var =
r=3Dn.length,i=3De.length,o=3D0;if("number"=3D=3Dtypeof =
r)for(;r>o;o++)e[i++]=3Dn[o];else =
while(n[o]!=3D=3Dt)e[i++]=3Dn[o++];return =
e.length=3Di,e},grep:function(e,t,n){var =
r,i=3D[],o=3D0,a=3De.length;for(n=3D!!n;a>o;o++)r=3D!!t(e[o],o),n!=3D=3Dr=
&&i.push(e[o]);return i},map:function(e,t,n){var =
r,i=3D0,o=3De.length,a=3DM(e),s=3D[];if(a)for(;o>i;i++)r=3Dt(e[i],i,n),nu=
ll!=3Dr&&(s[s.length]=3Dr);else for(i in =
e)r=3Dt(e[i],i,n),null!=3Dr&&(s[s.length]=3Dr);return =
f.apply([],s)},guid:1,proxy:function(e,n){var =
r,i,o;return"string"=3D=3Dtypeof =
n&&(o=3De[n],n=3De,e=3Do),b.isFunction(e)?(r=3Dh.call(arguments,2),i=3Dfu=
nction(){return =
e.apply(n||this,r.concat(h.call(arguments)))},i.guid=3De.guid=3De.guid||b=
.guid++,i):t},access:function(e,n,r,i,o,a,s){var =
u=3D0,l=3De.length,c=3Dnull=3D=3Dr;if("object"=3D=3D=3Db.type(r)){o=3D!0;=
for(u in r)b.access(e,n,u,r[u],!0,a,s)}else =
if(i!=3D=3Dt&&(o=3D!0,b.isFunction(i)||(s=3D!0),c&&(s?(n.call(e,i),n=3Dnu=
ll):(c=3Dn,n=3Dfunction(e,t,n){return =
c.call(b(e),n)})),n))for(;l>u;u++)n(e[u],r,s?i:i.call(e[u],u,n(e[u],r)));=
return o?e:c?n.call(e):l?n(e[0],r):a},now:function(){return(new =
Date).getTime()}}),b.ready.promise=3Dfunction(t){if(!n)if(n=3Db.Deferred(=
),"complete"=3D=3D=3Do.readyState)setTimeout(b.ready);else =
if(o.addEventListener)o.addEventListener("DOMContentLoaded",H,!1),e.addEv=
entListener("load",H,!1);else{o.attachEvent("onreadystatechange",H),e.att=
achEvent("onload",H);var =
r=3D!1;try{r=3Dnull=3D=3De.frameElement&&o.documentElement}catch(i){}r&&r=
.doScroll&&function =
a(){if(!b.isReady){try{r.doScroll("left")}catch(e){return =
setTimeout(a,50)}q(),b.ready()}}()}return n.promise(t)},b.each("Boolean =
Number String Function Array Date RegExp Object Error".split(" =
"),function(e,t){l["[object "+t+"]"]=3Dt.toLowerCase()});function =
M(e){var t=3De.length,n=3Db.type(e);return =
b.isWindow(e)?!1:1=3D=3D=3De.nodeType&&t?!0:"array"=3D=3D=3Dn||"function"=
!=3D=3Dn&&(0=3D=3D=3Dt||"number"=3D=3Dtypeof t&&t>0&&t-1 in =
e)}r=3Db(o);var _=3D{};function F(e){var t=3D_[e]=3D{};return =
b.each(e.match(w)||[],function(e,n){t[n]=3D!0}),t}b.Callbacks=3Dfunction(=
e){e=3D"string"=3D=3Dtypeof e?_[e]||F(e):b.extend({},e);var =
n,r,i,o,a,s,u=3D[],l=3D!e.once&&[],c=3Dfunction(t){for(r=3De.memory&&t,i=3D=
!0,a=3Ds||0,s=3D0,o=3Du.length,n=3D!0;u&&o>a;a++)if(u[a].apply(t[0],t[1])=
=3D=3D=3D!1&&e.stopOnFalse){r=3D!1;break}n=3D!1,u&&(l?l.length&&c(l.shift=
()):r?u=3D[]:p.disable())},p=3D{add:function(){if(u){var =
t=3Du.length;(function i(t){b.each(t,function(t,n){var =
r=3Db.type(n);"function"=3D=3D=3Dr?e.unique&&p.has(n)||u.push(n):n&&n.len=
gth&&"string"!=3D=3Dr&&i(n)})})(arguments),n?o=3Du.length:r&&(s=3Dt,c(r))=
}return this},remove:function(){return =
u&&b.each(arguments,function(e,t){var =
r;while((r=3Db.inArray(t,u,r))>-1)u.splice(r,1),n&&(o>=3Dr&&o--,a>=3Dr&&a=
--)}),this},has:function(e){return =
e?b.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return =
u=3D[],this},disable:function(){return =
u=3Dl=3Dr=3Dt,this},disabled:function(){return!u},lock:function(){return =
l=3Dt,r||p.disable(),this},locked:function(){return!l},fireWith:function(=
e,t){return =
t=3Dt||[],t=3D[e,t.slice?t.slice():t],!u||i&&!l||(n?l.push(t):c(t)),this}=
,fire:function(){return =
p.fireWith(this,arguments),this},fired:function(){return!!i}};return =
p},b.extend({Deferred:function(e){var =
t=3D[["resolve","done",b.Callbacks("once =
memory"),"resolved"],["reject","fail",b.Callbacks("once =
memory"),"rejected"],["notify","progress",b.Callbacks("memory")]],n=3D"pe=
nding",r=3D{state:function(){return n},always:function(){return =
i.done(arguments).fail(arguments),this},then:function(){var =
e=3Darguments;return b.Deferred(function(n){b.each(t,function(t,o){var =
a=3Do[0],s=3Db.isFunction(e[t])&&e[t];i[o[1]](function(){var =
e=3Ds&&s.apply(this,arguments);e&&b.isFunction(e.promise)?e.promise().don=
e(n.resolve).fail(n.reject).progress(n.notify):n[a+"With"](this=3D=3D=3Dr=
?n.promise():this,s?[e]:arguments)})}),e=3Dnull}).promise()},promise:func=
tion(e){return null!=3De?b.extend(e,r):r}},i=3D{};return =
r.pipe=3Dr.then,b.each(t,function(e,o){var =
a=3Do[2],s=3Do[3];r[o[1]]=3Da.add,s&&a.add(function(){n=3Ds},t[1^e][2].di=
sable,t[2][2].lock),i[o[0]]=3Dfunction(){return =
i[o[0]+"With"](this=3D=3D=3Di?r:this,arguments),this},i[o[0]+"With"]=3Da.=
fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var =
t=3D0,n=3Dh.call(arguments),r=3Dn.length,i=3D1!=3D=3Dr||e&&b.isFunction(e=
.promise)?r:0,o=3D1=3D=3D=3Di?e:b.Deferred(),a=3Dfunction(e,t,n){return =
function(r){t[e]=3Dthis,n[e]=3Darguments.length>1?h.call(arguments):r,n=3D=
=3D=3Ds?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,u,l;if(r>1)for(s=3D=
Array(r),u=3DArray(r),l=3DArray(r);r>t;t++)n[t]&&b.isFunction(n[t].promis=
e)?n[t].promise().done(a(t,l,n)).fail(o.reject).progress(a(t,u,s)):--i;re=
turn i||o.resolveWith(l,n),o.promise()}}),b.support=3Dfunction(){var =
t,n,r,a,s,u,l,c,p,f,d=3Do.createElement("div");if(d.setAttribute("classNa=
me","t"),d.innerHTML=3D"  <link/><table></table><a =
href=3D'/a'>a</a><input =
type=3D'checkbox'/>",n=3Dd.getElementsByTagName("*"),r=3Dd.getElementsByT=
agName("a")[0],!n||!r||!n.length)return{};s=3Do.createElement("select"),l=
=3Ds.appendChild(o.createElement("option")),a=3Dd.getElementsByTagName("i=
nput")[0],r.style.cssText=3D"top:1px;float:left;opacity:.5",t=3D{getSetAt=
tribute:"t"!=3D=3Dd.className,leadingWhitespace:3=3D=3D=3Dd.firstChild.no=
deType,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.ge=
tElementsByTagName("link").length,style:/top/.test(r.getAttribute("style"=
)),hrefNormalized:"/a"=3D=3D=3Dr.getAttribute("href"),opacity:/^0.5/.test=
(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:!!a.value,optSelect=
ed:l.selected,enctype:!!o.createElement("form").enctype,html5Clone:"<:nav=
></:nav>"!=3D=3Do.createElement("nav").cloneNode(!0).outerHTML,boxModel:"=
CSS1Compat"=3D=3D=3Do.compatMode,deleteExpando:!0,noCloneEvent:!0,inlineB=
lockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingRe=
liable:!0,pixelPosition:!1},a.checked=3D!0,t.noCloneChecked=3Da.cloneNode=
(!0).checked,s.disabled=3D!0,t.optDisabled=3D!l.disabled;try{delete =
d.test}catch(h){t.deleteExpando=3D!1}a=3Do.createElement("input"),a.setAt=
tribute("value",""),t.input=3D""=3D=3D=3Da.getAttribute("value"),a.value=3D=
"t",a.setAttribute("type","radio"),t.radioValue=3D"t"=3D=3D=3Da.value,a.s=
etAttribute("checked","t"),a.setAttribute("name","t"),u=3Do.createDocumen=
tFragment(),u.appendChild(a),t.appendChecked=3Da.checked,t.checkClone=3Du=
.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEv=
ent("onclick",function(){t.noCloneEvent=3D!1}),d.cloneNode(!0).click());f=
or(f =
in{submit:!0,change:!0,focusin:!0})d.setAttribute(c=3D"on"+f,"t"),t[f+"Bu=
bbles"]=3Dc in e||d.attributes[c].expando=3D=3D=3D!1;return =
d.style.backgroundClip=3D"content-box",d.cloneNode(!0).style.backgroundCl=
ip=3D"",t.clearCloneStyle=3D"content-box"=3D=3D=3Dd.style.backgroundClip,=
b(function(){var =
n,r,a,s=3D"padding:0;margin:0;border:0;display:block;box-sizing:content-b=
ox;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",u=3Do.get=
ElementsByTagName("body")[0];u&&(n=3Do.createElement("div"),n.style.cssTe=
xt=3D"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;marg=
in-top:1px",u.appendChild(n).appendChild(d),d.innerHTML=3D"<table><tr><td=
></td><td>t</td></tr></table>",a=3Dd.getElementsByTagName("td"),a[0].styl=
e.cssText=3D"padding:0;margin:0;border:0;display:none",p=3D0=3D=3D=3Da[0]=
.offsetHeight,a[0].style.display=3D"",a[1].style.display=3D"none",t.relia=
bleHiddenOffsets=3Dp&&0=3D=3D=3Da[0].offsetHeight,d.innerHTML=3D"",d.styl=
e.cssText=3D"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box=
-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-=
top:1%;position:absolute;top:1%;",t.boxSizing=3D4=3D=3D=3Dd.offsetWidth,t=
.doesNotIncludeMarginInBodyOffset=3D1!=3D=3Du.offsetTop,e.getComputedStyl=
e&&(t.pixelPosition=3D"1%"!=3D=3D(e.getComputedStyle(d,null)||{}).top,t.b=
oxSizingReliable=3D"4px"=3D=3D=3D(e.getComputedStyle(d,null)||{width:"4px=
"}).width,r=3Dd.appendChild(o.createElement("div")),r.style.cssText=3Dd.s=
tyle.cssText=3Ds,r.style.marginRight=3Dr.style.width=3D"0",d.style.width=3D=
"1px",t.reliableMarginRight=3D!parseFloat((e.getComputedStyle(r,null)||{}=
).marginRight)),typeof =
d.style.zoom!=3D=3Di&&(d.innerHTML=3D"",d.style.cssText=3Ds+"width:1px;pa=
dding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=3D3=3D=3D=3Dd.o=
ffsetWidth,d.style.display=3D"block",d.innerHTML=3D"<div></div>",d.firstC=
hild.style.width=3D"5px",t.shrinkWrapBlocks=3D3!=3D=3Dd.offsetWidth,t.inl=
ineBlockNeedsLayout&&(u.style.zoom=3D1)),u.removeChild(n),n=3Dd=3Da=3Dr=3D=
null)}),n=3Ds=3Du=3Dl=3Dr=3Da=3Dnull,t}();var =
O=3D/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,B=3D/([A-Z])/g;function =
P(e,n,r,i){if(b.acceptData(e)){var =
o,a,s=3Db.expando,u=3D"string"=3D=3Dtypeof =
n,l=3De.nodeType,p=3Dl?b.cache:e,f=3Dl?e[s]:e[s]&&s;if(f&&p[f]&&(i||p[f].=
data)||!u||r!=3D=3Dt)return =
f||(l?e[s]=3Df=3Dc.pop()||b.guid++:f=3Ds),p[f]||(p[f]=3D{},l||(p[f].toJSO=
N=3Db.noop)),("object"=3D=3Dtypeof n||"function"=3D=3Dtypeof =
n)&&(i?p[f]=3Db.extend(p[f],n):p[f].data=3Db.extend(p[f].data,n)),o=3Dp[f=
],i||(o.data||(o.data=3D{}),o=3Do.data),r!=3D=3Dt&&(o[b.camelCase(n)]=3Dr=
),u?(a=3Do[n],null=3D=3Da&&(a=3Do[b.camelCase(n)])):a=3Do,a}}function =
R(e,t,n){if(b.acceptData(e)){var =
r,i,o,a=3De.nodeType,s=3Da?b.cache:e,u=3Da?e[b.expando]:b.expando;if(s[u]=
){if(t&&(o=3Dn?s[u]:s[u].data)){b.isArray(t)?t=3Dt.concat(b.map(t,b.camel=
Case)):t in o?t=3D[t]:(t=3Db.camelCase(t),t=3Dt in o?[t]:t.split(" =
"));for(r=3D0,i=3Dt.length;i>r;r++)delete =
o[t[r]];if(!(n?$:b.isEmptyObject)(o))return}(n||(delete =
s[u].data,$(s[u])))&&(a?b.cleanData([e],!0):b.support.deleteExpando||s!=3D=
s.window?delete =
s[u]:s[u]=3Dnull)}}}b.extend({cache:{},expando:"jQuery"+(p+Math.random())=
.replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8=
-444553540000",applet:!0},hasData:function(e){return =
e=3De.nodeType?b.cache[e[b.expando]]:e[b.expando],!!e&&!$(e)},data:functi=
on(e,t,n){return P(e,t,n)},removeData:function(e,t){return =
R(e,t)},_data:function(e,t,n){return =
P(e,t,n,!0)},_removeData:function(e,t){return =
R(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!=3D=3De.nodeType&&9!=3D=
=3De.nodeType)return!1;var =
t=3De.nodeName&&b.noData[e.nodeName.toLowerCase()];return!t||t!=3D=3D!0&&=
e.getAttribute("classid")=3D=3D=3Dt}}),b.fn.extend({data:function(e,n){va=
r =
r,i,o=3Dthis[0],a=3D0,s=3Dnull;if(e=3D=3D=3Dt){if(this.length&&(s=3Db.dat=
a(o),1=3D=3D=3Do.nodeType&&!b._data(o,"parsedAttrs"))){for(r=3Do.attribut=
es;r.length>a;a++)i=3Dr[a].name,i.indexOf("data-")||(i=3Db.camelCase(i.sl=
ice(5)),W(o,i,s[i]));b._data(o,"parsedAttrs",!0)}return =
s}return"object"=3D=3Dtypeof =
e?this.each(function(){b.data(this,e)}):b.access(this,function(n){return =
n=3D=3D=3Dt?o?W(o,e,b.data(o,e)):null:(this.each(function(){b.data(this,e=
,n)}),t)},null,n,arguments.length>1,null,!0)},removeData:function(e){retu=
rn this.each(function(){b.removeData(this,e)})}});function =
W(e,n,r){if(r=3D=3D=3Dt&&1=3D=3D=3De.nodeType){var =
i=3D"data-"+n.replace(B,"-$1").toLowerCase();if(r=3De.getAttribute(i),"st=
ring"=3D=3Dtypeof =
r){try{r=3D"true"=3D=3D=3Dr?!0:"false"=3D=3D=3Dr?!1:"null"=3D=3D=3Dr?null=
:+r+""=3D=3D=3Dr?+r:O.test(r)?b.parseJSON(r):r}catch(o){}b.data(e,n,r)}el=
se r=3Dt}return r}function $(e){var t;for(t in =
e)if(("data"!=3D=3Dt||!b.isEmptyObject(e[t]))&&"toJSON"!=3D=3Dt)return!1;=
return!0}b.extend({queue:function(e,n,r){var i;return =
e?(n=3D(n||"fx")+"queue",i=3Db._data(e,n),r&&(!i||b.isArray(r)?i=3Db._dat=
a(e,n,b.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=3Dt||"=
fx";var =
n=3Db.queue(e,t),r=3Dn.length,i=3Dn.shift(),o=3Db._queueHooks(e,t),a=3Dfu=
nction(){b.dequeue(e,t)};"inprogress"=3D=3D=3Di&&(i=3Dn.shift(),r--),o.cu=
r=3Di,i&&("fx"=3D=3D=3Dt&&n.unshift("inprogress"),delete =
o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){va=
r n=3Dt+"queueHooks";return =
b._data(e,n)||b._data(e,n,{empty:b.Callbacks("once =
memory").add(function(){b._removeData(e,t+"queue"),b._removeData(e,n)})})=
}}),b.fn.extend({queue:function(e,n){var r=3D2;return"string"!=3Dtypeof =
e&&(n=3De,e=3D"fx",r--),r>arguments.length?b.queue(this[0],e):n=3D=3D=3Dt=
?this:this.each(function(){var =
t=3Db.queue(this,e,n);b._queueHooks(this,e),"fx"=3D=3D=3De&&"inprogress"!=
=3D=3Dt[0]&&b.dequeue(this,e)})},dequeue:function(e){return =
this.each(function(){b.dequeue(this,e)})},delay:function(e,t){return =
e=3Db.fx?b.fx.speeds[e]||e:e,t=3Dt||"fx",this.queue(t,function(t,n){var =
r=3DsetTimeout(t,e);n.stop=3Dfunction(){clearTimeout(r)}})},clearQueue:fu=
nction(e){return this.queue(e||"fx",[])},promise:function(e,n){var =
r,i=3D1,o=3Db.Deferred(),a=3Dthis,s=3Dthis.length,u=3Dfunction(){--i||o.r=
esolveWith(a,[a])};"string"!=3Dtypeof =
e&&(n=3De,e=3Dt),e=3De||"fx";while(s--)r=3Db._data(a[s],e+"queueHooks"),r=
&&r.empty&&(i++,r.empty.add(u));return u(),o.promise(n)}});var =
I,z,X=3D/[\t\r\n]/g,U=3D/\r/g,V=3D/^(?:input|select|textarea|button|objec=
t)$/i,Y=3D/^(?:a|area)$/i,J=3D/^(?:checked|selected|autofocus|autoplay|as=
ync|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|s=
coped)$/i,G=3D/^(?:checked|selected)$/i,Q=3Db.support.getSetAttribute,K=3D=
b.support.input;b.fn.extend({attr:function(e,t){return =
b.access(this,b.attr,e,t,arguments.length>1)},removeAttr:function(e){retu=
rn =
this.each(function(){b.removeAttr(this,e)})},prop:function(e,t){return =
b.access(this,b.prop,e,t,arguments.length>1)},removeProp:function(e){retu=
rn e=3Db.propFix[e]||e,this.each(function(){try{this[e]=3Dt,delete =
this[e]}catch(n){}})},addClass:function(e){var =
t,n,r,i,o,a=3D0,s=3Dthis.length,u=3D"string"=3D=3Dtypeof =
e&&e;if(b.isFunction(e))return =
this.each(function(t){b(this).addClass(e.call(this,t,this.className))});i=
f(u)for(t=3D(e||"").match(w)||[];s>a;a++)if(n=3Dthis[a],r=3D1=3D=3D=3Dn.n=
odeType&&(n.className?(" "+n.className+" ").replace(X," "):" =
")){o=3D0;while(i=3Dt[o++])0>r.indexOf(" "+i+" ")&&(r+=3Di+" =
");n.className=3Db.trim(r)}return this},removeClass:function(e){var =
t,n,r,i,o,a=3D0,s=3Dthis.length,u=3D0=3D=3D=3Darguments.length||"string"=3D=
=3Dtypeof e&&e;if(b.isFunction(e))return =
this.each(function(t){b(this).removeClass(e.call(this,t,this.className))}=
);if(u)for(t=3D(e||"").match(w)||[];s>a;a++)if(n=3Dthis[a],r=3D1=3D=3D=3D=
n.nodeType&&(n.className?(" "+n.className+" ").replace(X," =
"):"")){o=3D0;while(i=3Dt[o++])while(r.indexOf(" "+i+" =
")>=3D0)r=3Dr.replace(" "+i+" "," ");n.className=3De?b.trim(r):""}return =
this},toggleClass:function(e,t){var n=3Dtypeof =
e,r=3D"boolean"=3D=3Dtypeof t;return =
b.isFunction(e)?this.each(function(n){b(this).toggleClass(e.call(this,n,t=
his.className,t),t)}):this.each(function(){if("string"=3D=3D=3Dn){var =
o,a=3D0,s=3Db(this),u=3Dt,l=3De.match(w)||[];while(o=3Dl[a++])u=3Dr?u:!s.=
hasClass(o),s[u?"addClass":"removeClass"](o)}else(n=3D=3D=3Di||"boolean"=3D=
=3D=3Dn)&&(this.className&&b._data(this,"__className__",this.className),t=
his.className=3Dthis.className||e=3D=3D=3D!1?"":b._data(this,"__className=
__")||"")})},hasClass:function(e){var t=3D" "+e+" =
",n=3D0,r=3Dthis.length;for(;r>n;n++)if(1=3D=3D=3Dthis[n].nodeType&&(" =
"+this[n].className+" ").replace(X," =
").indexOf(t)>=3D0)return!0;return!1},val:function(e){var =
n,r,i,o=3Dthis[0];{if(arguments.length)return =
i=3Db.isFunction(e),this.each(function(n){var =
o,a=3Db(this);1=3D=3D=3Dthis.nodeType&&(o=3Di?e.call(this,n,a.val()):e,nu=
ll=3D=3Do?o=3D"":"number"=3D=3Dtypeof =
o?o+=3D"":b.isArray(o)&&(o=3Db.map(o,function(e){return =
null=3D=3De?"":e+""})),r=3Db.valHooks[this.type]||b.valHooks[this.nodeNam=
e.toLowerCase()],r&&"set"in =
r&&r.set(this,o,"value")!=3D=3Dt||(this.value=3Do))});if(o)return =
r=3Db.valHooks[o.type]||b.valHooks[o.nodeName.toLowerCase()],r&&"get"in =
r&&(n=3Dr.get(o,"value"))!=3D=3Dt?n:(n=3Do.value,"string"=3D=3Dtypeof =
n?n.replace(U,""):null=3D=3Dn?"":n)}}}),b.extend({valHooks:{option:{get:f=
unction(e){var =
t=3De.attributes.value;return!t||t.specified?e.value:e.text}},select:{get=
:function(e){var =
t,n,r=3De.options,i=3De.selectedIndex,o=3D"select-one"=3D=3D=3De.type||0>=
i,a=3Do?null:[],s=3Do?i+1:r.length,u=3D0>i?s:o?i:0;for(;s>u;u++)if(n=3Dr[=
u],!(!n.selected&&u!=3D=3Di||(b.support.optDisabled?n.disabled:null!=3D=3D=
n.getAttribute("disabled"))||n.parentNode.disabled&&b.nodeName(n.parentNo=
de,"optgroup"))){if(t=3Db(n).val(),o)return t;a.push(t)}return =
a},set:function(e,t){var n=3Db.makeArray(t);return =
b(e).find("option").each(function(){this.selected=3Db.inArray(b(this).val=
(),n)>=3D0}),n.length||(e.selectedIndex=3D-1),n}}},attr:function(e,n,r){v=
ar o,a,s,u=3De.nodeType;if(e&&3!=3D=3Du&&8!=3D=3Du&&2!=3D=3Du)return =
typeof =
e.getAttribute=3D=3D=3Di?b.prop(e,n,r):(a=3D1!=3D=3Du||!b.isXMLDoc(e),a&&=
(n=3Dn.toLowerCase(),o=3Db.attrHooks[n]||(J.test(n)?z:I)),r=3D=3D=3Dt?o&&=
a&&"get"in o&&null!=3D=3D(s=3Do.get(e,n))?s:(typeof =
e.getAttribute!=3D=3Di&&(s=3De.getAttribute(n)),null=3D=3Ds?t:s):null!=3D=
=3Dr?o&&a&&"set"in =
o&&(s=3Do.set(e,r,n))!=3D=3Dt?s:(e.setAttribute(n,r+""),r):(b.removeAttr(=
e,n),t))},removeAttr:function(e,t){var =
n,r,i=3D0,o=3Dt&&t.match(w);if(o&&1=3D=3D=3De.nodeType)while(n=3Do[i++])r=
=3Db.propFix[n]||n,J.test(n)?!Q&&G.test(n)?e[b.camelCase("default-"+n)]=3D=
e[r]=3D!1:e[r]=3D!1:b.attr(e,n,""),e.removeAttribute(Q?n:r)},attrHooks:{t=
ype:{set:function(e,t){if(!b.support.radioValue&&"radio"=3D=3D=3Dt&&b.nod=
eName(e,"input")){var n=3De.value;return =
e.setAttribute("type",t),n&&(e.value=3Dn),t}}}},propFix:{tabindex:"tabInd=
ex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"ma=
xLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"row=
Span",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",content=
editable:"contentEditable"},prop:function(e,n,r){var =
i,o,a,s=3De.nodeType;if(e&&3!=3D=3Ds&&8!=3D=3Ds&&2!=3D=3Ds)return =
a=3D1!=3D=3Ds||!b.isXMLDoc(e),a&&(n=3Db.propFix[n]||n,o=3Db.propHooks[n])=
,r!=3D=3Dt?o&&"set"in =
o&&(i=3Do.set(e,r,n))!=3D=3Dt?i:e[n]=3Dr:o&&"get"in =
o&&null!=3D=3D(i=3Do.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(=
e){var n=3De.getAttributeNode("tabindex");return =
n&&n.specified?parseInt(n.value,10):V.test(e.nodeName)||Y.test(e.nodeName=
)&&e.href?0:t}}}}),z=3D{get:function(e,n){var =
r=3Db.prop(e,n),i=3D"boolean"=3D=3Dtypeof =
r&&e.getAttribute(n),o=3D"boolean"=3D=3Dtypeof =
r?K&&Q?null!=3Di:G.test(n)?e[b.camelCase("default-"+n)]:!!i:e.getAttribut=
eNode(n);return =
o&&o.value!=3D=3D!1?n.toLowerCase():t},set:function(e,t,n){return =
t=3D=3D=3D!1?b.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&b.prop=
Fix[n]||n,n):e[b.camelCase("default-"+n)]=3De[n]=3D!0,n}},K&&Q||(b.attrHo=
oks.value=3D{get:function(e,n){var r=3De.getAttributeNode(n);return =
b.nodeName(e,"input")?e.defaultValue:r&&r.specified?r.value:t},set:functi=
on(e,n,r){return =
b.nodeName(e,"input")?(e.defaultValue=3Dn,t):I&&I.set(e,n,r)}}),Q||(I=3Db=
.valHooks.button=3D{get:function(e,n){var =
r=3De.getAttributeNode(n);return =
r&&("id"=3D=3D=3Dn||"name"=3D=3D=3Dn||"coords"=3D=3D=3Dn?""!=3D=3Dr.value=
:r.specified)?r.value:t},set:function(e,n,r){var =
i=3De.getAttributeNode(r);return =
i||e.setAttributeNode(i=3De.ownerDocument.createAttribute(r)),i.value=3Dn=
+=3D"","value"=3D=3D=3Dr||n=3D=3D=3De.getAttribute(r)?n:t}},b.attrHooks.c=
ontenteditable=3D{get:I.get,set:function(e,t,n){I.set(e,""=3D=3D=3Dt?!1:t=
,n)}},b.each(["width","height"],function(e,n){b.attrHooks[n]=3Db.extend(b=
.attrHooks[n],{set:function(e,r){return""=3D=3D=3Dr?(e.setAttribute(n,"au=
to"),r):t}})})),b.support.hrefNormalized||(b.each(["href","src","width","=
height"],function(e,n){b.attrHooks[n]=3Db.extend(b.attrHooks[n],{get:func=
tion(e){var r=3De.getAttribute(n,2);return =
null=3D=3Dr?t:r}})}),b.each(["href","src"],function(e,t){b.propHooks[t]=3D=
{get:function(e){return =
e.getAttribute(t,4)}}})),b.support.style||(b.attrHooks.style=3D{get:funct=
ion(e){return e.style.cssText||t},set:function(e,t){return =
e.style.cssText=3Dt+""}}),b.support.optSelected||(b.propHooks.selected=3D=
b.extend(b.propHooks.selected,{get:function(e){var =
t=3De.parentNode;return =
t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),b.=
support.enctype||(b.propFix.enctype=3D"encoding"),b.support.checkOn||b.ea=
ch(["radio","checkbox"],function(){b.valHooks[this]=3D{get:function(e){re=
turn =
null=3D=3D=3De.getAttribute("value")?"on":e.value}}}),b.each(["radio","ch=
eckbox"],function(){b.valHooks[this]=3Db.extend(b.valHooks[this],{set:fun=
ction(e,n){return =
b.isArray(n)?e.checked=3Db.inArray(b(e).val(),n)>=3D0:t}})});var =
Z=3D/^(?:input|select|textarea)$/i,et=3D/^key/,tt=3D/^(?:mouse|contextmen=
u)|click/,nt=3D/^(?:focusinfocus|focusoutblur)$/,rt=3D/^([^.]*)(?:\.(.+)|=
)$/;function it(){return!0}function =
ot(){return!1}b.event=3D{global:{},add:function(e,n,r,o,a){var =
s,u,l,c,p,f,d,h,g,m,y,v=3Db._data(e);if(v){r.handler&&(c=3Dr,r=3Dc.handle=
r,a=3Dc.selector),r.guid||(r.guid=3Db.guid++),(u=3Dv.events)||(u=3Dv.even=
ts=3D{}),(f=3Dv.handle)||(f=3Dv.handle=3Dfunction(e){return typeof =
b=3D=3D=3Di||e&&b.event.triggered=3D=3D=3De.type?t:b.event.dispatch.apply=
(f.elem,arguments)},f.elem=3De),n=3D(n||"").match(w)||[""],l=3Dn.length;w=
hile(l--)s=3Drt.exec(n[l])||[],g=3Dy=3Ds[1],m=3D(s[2]||"").split(".").sor=
t(),p=3Db.event.special[g]||{},g=3D(a?p.delegateType:p.bindType)||g,p=3Db=
.event.special[g]||{},d=3Db.extend({type:g,origType:y,data:o,handler:r,gu=
id:r.guid,selector:a,needsContext:a&&b.expr.match.needsContext.test(a),na=
mespace:m.join(".")},c),(h=3Du[g])||(h=3Du[g]=3D[],h.delegateCount=3D0,p.=
setup&&p.setup.call(e,o,m,f)!=3D=3D!1||(e.addEventListener?e.addEventList=
ener(g,f,!1):e.attachEvent&&e.attachEvent("on"+g,f))),p.add&&(p.add.call(=
e,d),d.handler.guid||(d.handler.guid=3Dr.guid)),a?h.splice(h.delegateCoun=
t++,0,d):h.push(d),b.event.global[g]=3D!0;e=3Dnull}},remove:function(e,t,=
n,r,i){var =
o,a,s,u,l,c,p,f,d,h,g,m=3Db.hasData(e)&&b._data(e);if(m&&(c=3Dm.events)){=
t=3D(t||"").match(w)||[""],l=3Dt.length;while(l--)if(s=3Drt.exec(t[l])||[=
],d=3Dg=3Ds[1],h=3D(s[2]||"").split(".").sort(),d){p=3Db.event.special[d]=
||{},d=3D(r?p.delegateType:p.bindType)||d,f=3Dc[d]||[],s=3Ds[2]&&RegExp("=
(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),u=3Do=3Df.length;while(o--)a=3D=
f[o],!i&&g!=3D=3Da.origType||n&&n.guid!=3D=3Da.guid||s&&!s.test(a.namespa=
ce)||r&&r!=3D=3Da.selector&&("**"!=3D=3Dr||!a.selector)||(f.splice(o,1),a=
.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));u&&!f.length&&=
(p.teardown&&p.teardown.call(e,h,m.handle)!=3D=3D!1||b.removeEvent(e,d,m.=
handle),delete c[d])}else for(d in =
c)b.event.remove(e,d+t[l],n,r,!0);b.isEmptyObject(c)&&(delete =
m.handle,b._removeData(e,"events"))}},trigger:function(n,r,i,a){var =
s,u,l,c,p,f,d,h=3D[i||o],g=3Dy.call(n,"type")?n.type:n,m=3Dy.call(n,"name=
space")?n.namespace.split("."):[];if(l=3Df=3Di=3Di||o,3!=3D=3Di.nodeType&=
&8!=3D=3Di.nodeType&&!nt.test(g+b.event.triggered)&&(g.indexOf(".")>=3D0&=
&(m=3Dg.split("."),g=3Dm.shift(),m.sort()),u=3D0>g.indexOf(":")&&"on"+g,n=
=3Dn[b.expando]?n:new b.Event(g,"object"=3D=3Dtypeof =
n&&n),n.isTrigger=3D!0,n.namespace=3Dm.join("."),n.namespace_re=3Dn.names=
pace?RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,n.result=3D=
t,n.target||(n.target=3Di),r=3Dnull=3D=3Dr?[n]:b.makeArray(r,[n]),p=3Db.e=
vent.special[g]||{},a||!p.trigger||p.trigger.apply(i,r)!=3D=3D!1)){if(!a&=
&!p.noBubble&&!b.isWindow(i)){for(c=3Dp.delegateType||g,nt.test(c+g)||(l=3D=
l.parentNode);l;l=3Dl.parentNode)h.push(l),f=3Dl;f=3D=3D=3D(i.ownerDocume=
nt||o)&&h.push(f.defaultView||f.parentWindow||e)}d=3D0;while((l=3Dh[d++])=
&&!n.isPropagationStopped())n.type=3Dd>1?c:p.bindType||g,s=3D(b._data(l,"=
events")||{})[n.type]&&b._data(l,"handle"),s&&s.apply(l,r),s=3Du&&l[u],s&=
&b.acceptData(l)&&s.apply&&s.apply(l,r)=3D=3D=3D!1&&n.preventDefault();if=
(n.type=3Dg,!(a||n.isDefaultPrevented()||p._default&&p._default.apply(i.o=
wnerDocument,r)!=3D=3D!1||"click"=3D=3D=3Dg&&b.nodeName(i,"a")||!b.accept=
Data(i)||!u||!i[g]||b.isWindow(i))){f=3Di[u],f&&(i[u]=3Dnull),b.event.tri=
ggered=3Dg;try{i[g]()}catch(v){}b.event.triggered=3Dt,f&&(i[u]=3Df)}retur=
n n.result}},dispatch:function(e){e=3Db.event.fix(e);var =
n,r,i,o,a,s=3D[],u=3Dh.call(arguments),l=3D(b._data(this,"events")||{})[e=
.type]||[],c=3Db.event.special[e.type]||{};if(u[0]=3De,e.delegateTarget=3D=
this,!c.preDispatch||c.preDispatch.call(this,e)!=3D=3D!1){s=3Db.event.han=
dlers.call(this,e,l),n=3D0;while((o=3Ds[n++])&&!e.isPropagationStopped())=
{e.currentTarget=3Do.elem,a=3D0;while((i=3Do.handlers[a++])&&!e.isImmedia=
tePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace)=
)&&(e.handleObj=3Di,e.data=3Di.data,r=3D((b.event.special[i.origType]||{}=
).handle||i.handler).apply(o.elem,u),r!=3D=3Dt&&(e.result=3Dr)=3D=3D=3D!1=
&&(e.preventDefault(),e.stopPropagation()))}return =
c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(=
e,n){var =
r,i,o,a,s=3D[],u=3Dn.delegateCount,l=3De.target;if(u&&l.nodeType&&(!e.but=
ton||"click"!=3D=3De.type))for(;l!=3Dthis;l=3Dl.parentNode||this)if(1=3D=3D=
=3Dl.nodeType&&(l.disabled!=3D=3D!0||"click"!=3D=3De.type)){for(o=3D[],a=3D=
0;u>a;a++)i=3Dn[a],r=3Di.selector+" =
",o[r]=3D=3D=3Dt&&(o[r]=3Di.needsContext?b(r,this).index(l)>=3D0:b.find(r=
,this,null,[l]).length),o[r]&&o.push(i);o.length&&s.push({elem:l,handlers=
:o})}return =
n.length>u&&s.push({elem:this,handlers:n.slice(u)}),s},fix:function(e){if=
(e[b.expando])return e;var =
t,n,r,i=3De.type,a=3De,s=3Dthis.fixHooks[i];s||(this.fixHooks[i]=3Ds=3Dtt=
.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=3Ds.props?this.pr=
ops.concat(s.props):this.props,e=3Dnew =
b.Event(a),t=3Dr.length;while(t--)n=3Dr[t],e[n]=3Da[n];return =
e.target||(e.target=3Da.srcElement||o),3=3D=3D=3De.target.nodeType&&(e.ta=
rget=3De.target.parentNode),e.metaKey=3D!!e.metaKey,s.filter?s.filter(e,a=
):e},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase =
metaKey relatedTarget shiftKey target timeStamp view which".split(" =
"),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" =
"),filter:function(e,t){return =
null=3D=3De.which&&(e.which=3Dnull!=3Dt.charCode?t.charCode:t.keyCode),e}=
},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX =
offsetY pageX pageY screenX screenY toElement".split(" =
"),filter:function(e,n){var r,i,a,s=3Dn.button,u=3Dn.fromElement;return =
null=3D=3De.pageX&&null!=3Dn.clientX&&(i=3De.target.ownerDocument||o,a=3D=
i.documentElement,r=3Di.body,e.pageX=3Dn.clientX+(a&&a.scrollLeft||r&&r.s=
crollLeft||0)-(a&&a.clientLeft||r&&r.clientLeft||0),e.pageY=3Dn.clientY+(=
a&&a.scrollTop||r&&r.scrollTop||0)-(a&&a.clientTop||r&&r.clientTop||0)),!=
e.relatedTarget&&u&&(e.relatedTarget=3Du=3D=3D=3De.target?n.toElement:u),=
e.which||s=3D=3D=3Dt||(e.which=3D1&s?1:2&s?3:4&s?2:0),e}},special:{load:{=
noBubble:!0},click:{trigger:function(){return =
b.nodeName(this,"input")&&"checkbox"=3D=3D=3Dthis.type&&this.click?(this.=
click(),!1):t}},focus:{trigger:function(){if(this!=3D=3Do.activeElement&&=
this.focus)try{return =
this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:functio=
n(){return =
this=3D=3D=3Do.activeElement&&this.blur?(this.blur(),!1):t},delegateType:=
"focusout"},beforeunload:{postDispatch:function(e){e.result!=3D=3Dt&&(e.o=
riginalEvent.returnValue=3De.result)}}},simulate:function(e,t,n,r){var =
i=3Db.extend(new =
b.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?b.event.trigger(i,n=
ull,t):b.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefaul=
t()}},b.removeEvent=3Do.removeEventListener?function(e,t,n){e.removeEvent=
Listener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var =
r=3D"on"+t;e.detachEvent&&(typeof =
e[r]=3D=3D=3Di&&(e[r]=3Dnull),e.detachEvent(r,n))},b.Event=3Dfunction(e,n=
){return this instanceof =
b.Event?(e&&e.type?(this.originalEvent=3De,this.type=3De.type,this.isDefa=
ultPrevented=3De.defaultPrevented||e.returnValue=3D=3D=3D!1||e.getPrevent=
Default&&e.getPreventDefault()?it:ot):this.type=3De,n&&b.extend(this,n),t=
his.timeStamp=3De&&e.timeStamp||b.now(),this[b.expando]=3D!0,t):new =
b.Event(e,n)},b.Event.prototype=3D{isDefaultPrevented:ot,isPropagationSto=
pped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var =
e=3Dthis.originalEvent;this.isDefaultPrevented=3Dit,e&&(e.preventDefault?=
e.preventDefault():e.returnValue=3D!1)},stopPropagation:function(){var =
e=3Dthis.originalEvent;this.isPropagationStopped=3Dit,e&&(e.stopPropagati=
on&&e.stopPropagation(),e.cancelBubble=3D!0)},stopImmediatePropagation:fu=
nction(){this.isImmediatePropagationStopped=3Dit,this.stopPropagation()}}=
,b.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){b.ev=
ent.special[e]=3D{delegateType:t,bindType:t,handle:function(e){var =
n,r=3Dthis,i=3De.relatedTarget,o=3De.handleObj;
return(!i||i!=3D=3Dr&&!b.contains(r,i))&&(e.type=3Do.origType,n=3Do.handl=
er.apply(this,arguments),e.type=3Dt),n}}}),b.support.submitBubbles||(b.ev=
ent.special.submit=3D{setup:function(){return =
b.nodeName(this,"form")?!1:(b.event.add(this,"click._submit =
keypress._submit",function(e){var =
n=3De.target,r=3Db.nodeName(n,"input")||b.nodeName(n,"button")?n.form:t;r=
&&!b._data(r,"submitBubbles")&&(b.event.add(r,"submit._submit",function(e=
){e._submit_bubble=3D!0}),b._data(r,"submitBubbles",!0))}),t)},postDispat=
ch:function(e){e._submit_bubble&&(delete =
e._submit_bubble,this.parentNode&&!e.isTrigger&&b.event.simulate("submit"=
,this.parentNode,e,!0))},teardown:function(){return =
b.nodeName(this,"form")?!1:(b.event.remove(this,"._submit"),t)}}),b.suppo=
rt.changeBubbles||(b.event.special.change=3D{setup:function(){return =
Z.test(this.nodeName)?(("checkbox"=3D=3D=3Dthis.type||"radio"=3D=3D=3Dthi=
s.type)&&(b.event.add(this,"propertychange._change",function(e){"checked"=
=3D=3D=3De.originalEvent.propertyName&&(this._just_changed=3D!0)}),b.even=
t.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&=
(this._just_changed=3D!1),b.event.simulate("change",this,e,!0)})),!1):(b.=
event.add(this,"beforeactivate._change",function(e){var =
t=3De.target;Z.test(t.nodeName)&&!b._data(t,"changeBubbles")&&(b.event.ad=
d(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTri=
gger||b.event.simulate("change",this.parentNode,e,!0)}),b._data(t,"change=
Bubbles",!0))}),t)},handle:function(e){var n=3De.target;return =
this!=3D=3Dn||e.isSimulated||e.isTrigger||"radio"!=3D=3Dn.type&&"checkbox=
"!=3D=3Dn.type?e.handleObj.handler.apply(this,arguments):t},teardown:func=
tion(){return =
b.event.remove(this,"._change"),!Z.test(this.nodeName)}}),b.support.focus=
inBubbles||b.each({focus:"focusin",blur:"focusout"},function(e,t){var =
n=3D0,r=3Dfunction(e){b.event.simulate(t,e.target,b.event.fix(e),!0)};b.e=
vent.special[t]=3D{setup:function(){0=3D=3D=3Dn++&&o.addEventListener(e,r=
,!0)},teardown:function(){0=3D=3D=3D--n&&o.removeEventListener(e,r,!0)}}}=
),b.fn.extend({on:function(e,n,r,i,o){var a,s;if("object"=3D=3Dtypeof =
e){"string"!=3Dtypeof n&&(r=3Dr||n,n=3Dt);for(a in =
e)this.on(a,n,r,e[a],o);return =
this}if(null=3D=3Dr&&null=3D=3Di?(i=3Dn,r=3Dn=3Dt):null=3D=3Di&&("string"=
=3D=3Dtypeof =
n?(i=3Dr,r=3Dt):(i=3Dr,r=3Dn,n=3Dt)),i=3D=3D=3D!1)i=3Dot;else =
if(!i)return this;return 1=3D=3D=3Do&&(s=3Di,i=3Dfunction(e){return =
b().off(e),s.apply(this,arguments)},i.guid=3Ds.guid||(s.guid=3Db.guid++))=
,this.each(function(){b.event.add(this,e,i,r,n)})},one:function(e,t,n,r){=
return this.on(e,t,n,r,1)},off:function(e,n,r){var =
i,o;if(e&&e.preventDefault&&e.handleObj)return =
i=3De.handleObj,b(e.delegateTarget).off(i.namespace?i.origType+"."+i.name=
space:i.origType,i.selector,i.handler),this;if("object"=3D=3Dtypeof =
e){for(o in e)this.off(o,n,e[o]);return =
this}return(n=3D=3D=3D!1||"function"=3D=3Dtypeof =
n)&&(r=3Dn,n=3Dt),r=3D=3D=3D!1&&(r=3Dot),this.each(function(){b.event.rem=
ove(this,e,r,n)})},bind:function(e,t,n){return =
this.on(e,null,t,n)},unbind:function(e,t){return =
this.off(e,null,t)},delegate:function(e,t,n,r){return =
this.on(t,e,n,r)},undelegate:function(e,t,n){return =
1=3D=3D=3Darguments.length?this.off(e,"**"):this.off(t,e||"**",n)},trigge=
r:function(e,t){return =
this.each(function(){b.event.trigger(e,t,this)})},triggerHandler:function=
(e,n){var r=3Dthis[0];return =
r?b.event.trigger(e,n,r,!0):t}}),function(e,t){var =
n,r,i,o,a,s,u,l,c,p,f,d,h,g,m,y,v,x=3D"sizzle"+-new =
Date,w=3De.document,T=3D{},N=3D0,C=3D0,k=3Dit(),E=3Dit(),S=3Dit(),A=3Dtyp=
eof =
t,j=3D1<<31,D=3D[],L=3DD.pop,H=3DD.push,q=3DD.slice,M=3DD.indexOf||functi=
on(e){var t=3D0,n=3Dthis.length;for(;n>t;t++)if(this[t]=3D=3D=3De)return =
t;return-1},_=3D"[\\x20\\t\\r\\n\\f]",F=3D"(?:\\\\.|[\\w-]|[^\\x00-\\xa0]=
)+",O=3DF.replace("w","w#"),B=3D"([*^$|!~]?=3D)",P=3D"\\["+_+"*("+F+")"+_=
+"*(?:"+B+_+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+O+")|)|)"+_+"*\\]",R=3D=
":("+F+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"=
+P.replace(3,8)+")*)|.*)\\)|)",W=3DRegExp("^"+_+"+|((?:^|[^\\\\])(?:\\\\.=
)*)"+_+"+$","g"),$=3DRegExp("^"+_+"*,"+_+"*"),I=3DRegExp("^"+_+"*([\\x20\=
\t\\r\\n\\f>+~])"+_+"*"),z=3DRegExp(R),X=3DRegExp("^"+O+"$"),U=3D{ID:RegE=
xp("^#("+F+")"),CLASS:RegExp("^\\.("+F+")"),NAME:RegExp("^\\[name=3D['\"]=
?("+F+")['\"]?\\]"),TAG:RegExp("^("+F.replace("w","w*")+")"),ATTR:RegExp(=
"^"+P),PSEUDO:RegExp("^"+R),CHILD:RegExp("^:(only|first|last|nth|nth-last=
)-(child|of-type)(?:\\("+_+"*(even|odd|(([+-]|)(\\d*)n|)"+_+"*(?:([+-]|)"=
+_+"*(\\d+)|))"+_+"*\\)|)","i"),needsContext:RegExp("^"+_+"*[>+~]|:(even|=
odd|eq|gt|lt|nth|first|last)(?:\\("+_+"*((?:-\\d)?\\d*)"+_+"*\\)|)(?=3D[^=
-]|$)","i")},V=3D/[\x20\t\r\n\f]*[+~]/,Y=3D/^[^{]+\{\s*\[native =
code/,J=3D/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,G=3D/^(?:input|select|textar=
ea|button)$/i,Q=3D/^h\d$/i,K=3D/'|\\/g,Z=3D/\=3D[\x20\t\r\n\f]*([^'"\]]*)=
[\x20\t\r\n\f]*\]/g,et=3D/\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g,tt=3Dfun=
ction(e,t){var n=3D"0x"+t-65536;return =
n!=3D=3Dn?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(55296|n>=
>10,56320|1023&n)};try{q.call(w.documentElement.childNodes,0)[0].nodeType=
}catch(nt){q=3Dfunction(e){var =
t,n=3D[];while(t=3Dthis[e++])n.push(t);return n}}function rt(e){return =
Y.test(e+"")}function it(){var e,t=3D[];return e=3Dfunction(n,r){return =
t.push(n+=3D" ")>i.cacheLength&&delete e[t.shift()],e[n]=3Dr}}function =
ot(e){return e[x]=3D!0,e}function at(e){var =
t=3Dp.createElement("div");try{return =
e(t)}catch(n){return!1}finally{t=3Dnull}}function st(e,t,n,r){var =
i,o,a,s,u,l,f,g,m,v;if((t?t.ownerDocument||t:w)!=3D=3Dp&&c(t),t=3Dt||p,n=3D=
n||[],!e||"string"!=3Dtypeof e)return =
n;if(1!=3D=3D(s=3Dt.nodeType)&&9!=3D=3Ds)return[];if(!d&&!r){if(i=3DJ.exe=
c(e))if(a=3Di[1]){if(9=3D=3D=3Ds){if(o=3Dt.getElementById(a),!o||!o.paren=
tNode)return n;if(o.id=3D=3D=3Da)return n.push(o),n}else =
if(t.ownerDocument&&(o=3Dt.ownerDocument.getElementById(a))&&y(t,o)&&o.id=
=3D=3D=3Da)return n.push(o),n}else{if(i[2])return =
H.apply(n,q.call(t.getElementsByTagName(e),0)),n;if((a=3Di[3])&&T.getByCl=
assName&&t.getElementsByClassName)return =
H.apply(n,q.call(t.getElementsByClassName(a),0)),n}if(T.qsa&&!h.test(e)){=
if(f=3D!0,g=3Dx,m=3Dt,v=3D9=3D=3D=3Ds&&e,1=3D=3D=3Ds&&"object"!=3D=3Dt.no=
deName.toLowerCase()){l=3Dft(e),(f=3Dt.getAttribute("id"))?g=3Df.replace(=
K,"\\$&"):t.setAttribute("id",g),g=3D"[id=3D'"+g+"'] =
",u=3Dl.length;while(u--)l[u]=3Dg+dt(l[u]);m=3DV.test(e)&&t.parentNode||t=
,v=3Dl.join(",")}if(v)try{return =
H.apply(n,q.call(m.querySelectorAll(v),0)),n}catch(b){}finally{f||t.remov=
eAttribute("id")}}}return =
wt(e.replace(W,"$1"),t,n,r)}a=3Dst.isXML=3Dfunction(e){var =
t=3De&&(e.ownerDocument||e).documentElement;return =
t?"HTML"!=3D=3Dt.nodeName:!1},c=3Dst.setDocument=3Dfunction(e){var =
n=3De?e.ownerDocument||e:w;return =
n!=3D=3Dp&&9=3D=3D=3Dn.nodeType&&n.documentElement?(p=3Dn,f=3Dn.documentE=
lement,d=3Da(n),T.tagNameNoComments=3Dat(function(e){return =
e.appendChild(n.createComment("")),!e.getElementsByTagName("*").length}),=
T.attributes=3Dat(function(e){e.innerHTML=3D"<select></select>";var =
t=3Dtypeof =
e.lastChild.getAttribute("multiple");return"boolean"!=3D=3Dt&&"string"!=3D=
=3Dt}),T.getByClassName=3Dat(function(e){return e.innerHTML=3D"<div =
class=3D'hidden e'></div><div =
class=3D'hidden'></div>",e.getElementsByClassName&&e.getElementsByClassNa=
me("e").length?(e.lastChild.className=3D"e",2=3D=3D=3De.getElementsByClas=
sName("e").length):!1}),T.getByName=3Dat(function(e){e.id=3Dx+0,e.innerHT=
ML=3D"<a name=3D'"+x+"'></a><div =
name=3D'"+x+"'></div>",f.insertBefore(e,f.firstChild);var =
t=3Dn.getElementsByName&&n.getElementsByName(x).length=3D=3D=3D2+n.getEle=
mentsByName(x+0).length;return =
T.getIdNotName=3D!n.getElementById(x),f.removeChild(e),t}),i.attrHandle=3D=
at(function(e){return e.innerHTML=3D"<a =
href=3D'#'></a>",e.firstChild&&typeof =
e.firstChild.getAttribute!=3D=3DA&&"#"=3D=3D=3De.firstChild.getAttribute(=
"href")})?{}:{href:function(e){return =
e.getAttribute("href",2)},type:function(e){return =
e.getAttribute("type")}},T.getIdNotName?(i.find.ID=3Dfunction(e,t){if(typ=
eof t.getElementById!=3D=3DA&&!d){var n=3Dt.getElementById(e);return =
n&&n.parentNode?[n]:[]}},i.filter.ID=3Dfunction(e){var =
t=3De.replace(et,tt);return function(e){return =
e.getAttribute("id")=3D=3D=3Dt}}):(i.find.ID=3Dfunction(e,n){if(typeof =
n.getElementById!=3D=3DA&&!d){var r=3Dn.getElementById(e);return =
r?r.id=3D=3D=3De||typeof =
r.getAttributeNode!=3D=3DA&&r.getAttributeNode("id").value=3D=3D=3De?[r]:=
t:[]}},i.filter.ID=3Dfunction(e){var t=3De.replace(et,tt);return =
function(e){var n=3Dtypeof =
e.getAttributeNode!=3D=3DA&&e.getAttributeNode("id");return =
n&&n.value=3D=3D=3Dt}}),i.find.TAG=3DT.tagNameNoComments?function(e,n){re=
turn typeof =
n.getElementsByTagName!=3D=3DA?n.getElementsByTagName(e):t}:function(e,t)=
{var =
n,r=3D[],i=3D0,o=3Dt.getElementsByTagName(e);if("*"=3D=3D=3De){while(n=3D=
o[i++])1=3D=3D=3Dn.nodeType&&r.push(n);return r}return =
o},i.find.NAME=3DT.getByName&&function(e,n){return typeof =
n.getElementsByName!=3D=3DA?n.getElementsByName(name):t},i.find.CLASS=3DT=
.getByClassName&&function(e,n){return typeof =
n.getElementsByClassName=3D=3D=3DA||d?t:n.getElementsByClassName(e)},g=3D=
[],h=3D[":focus"],(T.qsa=3Drt(n.querySelectorAll))&&(at(function(e){e.inn=
erHTML=3D"<select><option =
selected=3D''></option></select>",e.querySelectorAll("[selected]").length=
||h.push("\\["+_+"*(?:checked|disabled|ismap|multiple|readonly|selected|v=
alue)"),e.querySelectorAll(":checked").length||h.push(":checked")}),at(fu=
nction(e){e.innerHTML=3D"<input type=3D'hidden' =
i=3D''/>",e.querySelectorAll("[i^=3D'']").length&&h.push("[*^$]=3D"+_+"*(=
?:\"\"|'')"),e.querySelectorAll(":enabled").length||h.push(":enabled",":d=
isabled"),e.querySelectorAll("*,:x"),h.push(",.*:")})),(T.matchesSelector=
=3Drt(m=3Df.matchesSelector||f.mozMatchesSelector||f.webkitMatchesSelecto=
r||f.oMatchesSelector||f.msMatchesSelector))&&at(function(e){T.disconnect=
edMatch=3Dm.call(e,"div"),m.call(e,"[s!=3D'']:x"),g.push("!=3D",R)}),h=3D=
RegExp(h.join("|")),g=3DRegExp(g.join("|")),y=3Drt(f.contains)||f.compare=
DocumentPosition?function(e,t){var =
n=3D9=3D=3D=3De.nodeType?e.documentElement:e,r=3Dt&&t.parentNode;return =
e=3D=3D=3Dr||!(!r||1!=3D=3Dr.nodeType||!(n.contains?n.contains(r):e.compa=
reDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t=
)while(t=3Dt.parentNode)if(t=3D=3D=3De)return!0;return!1},v=3Df.compareDo=
cumentPosition?function(e,t){var r;return =
e=3D=3D=3Dt?(u=3D!0,0):(r=3Dt.compareDocumentPosition&&e.compareDocumentP=
osition&&e.compareDocumentPosition(t))?1&r||e.parentNode&&11=3D=3D=3De.pa=
rentNode.nodeType?e=3D=3D=3Dn||y(w,e)?-1:t=3D=3D=3Dn||y(w,t)?1:0:4&r?-1:1=
:e.compareDocumentPosition?-1:1}:function(e,t){var =
r,i=3D0,o=3De.parentNode,a=3Dt.parentNode,s=3D[e],l=3D[t];if(e=3D=3D=3Dt)=
return u=3D!0,0;if(!o||!a)return =
e=3D=3D=3Dn?-1:t=3D=3D=3Dn?1:o?-1:a?1:0;if(o=3D=3D=3Da)return =
ut(e,t);r=3De;while(r=3Dr.parentNode)s.unshift(r);r=3Dt;while(r=3Dr.paren=
tNode)l.unshift(r);while(s[i]=3D=3D=3Dl[i])i++;return =
i?ut(s[i],l[i]):s[i]=3D=3D=3Dw?-1:l[i]=3D=3D=3Dw?1:0},u=3D!1,[0,0].sort(v=
),T.detectDuplicates=3Du,p):p},st.matches=3Dfunction(e,t){return =
st(e,null,null,t)},st.matchesSelector=3Dfunction(e,t){if((e.ownerDocument=
||e)!=3D=3Dp&&c(e),t=3Dt.replace(Z,"=3D'$1']"),!(!T.matchesSelector||d||g=
&&g.test(t)||h.test(t)))try{var =
n=3Dm.call(e,t);if(n||T.disconnectedMatch||e.document&&11!=3D=3De.documen=
t.nodeType)return n}catch(r){}return =
st(t,p,null,[e]).length>0},st.contains=3Dfunction(e,t){return(e.ownerDocu=
ment||e)!=3D=3Dp&&c(e),y(e,t)},st.attr=3Dfunction(e,t){var =
n;return(e.ownerDocument||e)!=3D=3Dp&&c(e),d||(t=3Dt.toLowerCase()),(n=3D=
i.attrHandle[t])?n(e):d||T.attributes?e.getAttribute(t):((n=3De.getAttrib=
uteNode(t))||e.getAttribute(t))&&e[t]=3D=3D=3D!0?t:n&&n.specified?n.value=
:null},st.error=3Dfunction(e){throw Error("Syntax error, unrecognized =
expression: "+e)},st.uniqueSort=3Dfunction(e){var =
t,n=3D[],r=3D1,i=3D0;if(u=3D!T.detectDuplicates,e.sort(v),u){for(;t=3De[r=
];r++)t=3D=3D=3De[r-1]&&(i=3Dn.push(r));while(i--)e.splice(n[i],1)}return=
 e};function ut(e,t){var =
n=3Dt&&e,r=3Dn&&(~t.sourceIndex||j)-(~e.sourceIndex||j);if(r)return =
r;if(n)while(n=3Dn.nextSibling)if(n=3D=3D=3Dt)return-1;return =
e?1:-1}function lt(e){return function(t){var =
n=3Dt.nodeName.toLowerCase();return"input"=3D=3D=3Dn&&t.type=3D=3D=3De}}f=
unction ct(e){return function(t){var =
n=3Dt.nodeName.toLowerCase();return("input"=3D=3D=3Dn||"button"=3D=3D=3Dn=
)&&t.type=3D=3D=3De}}function pt(e){return ot(function(t){return =
t=3D+t,ot(function(n,r){var =
i,o=3De([],n.length,t),a=3Do.length;while(a--)n[i=3Do[a]]&&(n[i]=3D!(r[i]=
=3Dn[i]))})})}o=3Dst.getText=3Dfunction(e){var =
t,n=3D"",r=3D0,i=3De.nodeType;if(i){if(1=3D=3D=3Di||9=3D=3D=3Di||11=3D=3D=
=3Di){if("string"=3D=3Dtypeof e.textContent)return =
e.textContent;for(e=3De.firstChild;e;e=3De.nextSibling)n+=3Do(e)}else =
if(3=3D=3D=3Di||4=3D=3D=3Di)return e.nodeValue}else =
for(;t=3De[r];r++)n+=3Do(t);return =
n},i=3Dst.selectors=3D{cacheLength:50,createPseudo:ot,match:U,find:{},rel=
ative:{">":{dir:"parentNode",first:!0}," =
":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previ=
ousSibling"}},preFilter:{ATTR:function(e){return =
e[1]=3De[1].replace(et,tt),e[3]=3D(e[4]||e[5]||"").replace(et,tt),"~=3D"=3D=
=3D=3De[2]&&(e[3]=3D" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return =
e[1]=3De[1].toLowerCase(),"nth"=3D=3D=3De[1].slice(0,3)?(e[3]||st.error(e=
[0]),e[4]=3D+(e[4]?e[5]+(e[6]||1):2*("even"=3D=3D=3De[3]||"odd"=3D=3D=3De=
[3])),e[5]=3D+(e[7]+e[8]||"odd"=3D=3D=3De[3])):e[3]&&st.error(e[0]),e},PS=
EUDO:function(e){var t,n=3D!e[5]&&e[2];return =
U.CHILD.test(e[0])?null:(e[4]?e[2]=3De[4]:n&&z.test(n)&&(t=3Dft(n,!0))&&(=
t=3Dn.indexOf(")",n.length-t)-n.length)&&(e[0]=3De[0].slice(0,t),e[2]=3Dn=
.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){return"*"=3D=3D=3De?=
function(){return!0}:(e=3De.replace(et,tt).toLowerCase(),function(t){retu=
rn =
t.nodeName&&t.nodeName.toLowerCase()=3D=3D=3De})},CLASS:function(e){var =
t=3Dk[e+" "];return =
t||(t=3DRegExp("(^|"+_+")"+e+"("+_+"|$)"))&&k(e,function(e){return =
t.test(e.className||typeof =
e.getAttribute!=3D=3DA&&e.getAttribute("class")||"")})},ATTR:function(e,t=
,n){return function(r){var i=3Dst.attr(r,e);return =
null=3D=3Di?"!=3D"=3D=3D=3Dt:t?(i+=3D"","=3D"=3D=3D=3Dt?i=3D=3D=3Dn:"!=3D=
"=3D=3D=3Dt?i!=3D=3Dn:"^=3D"=3D=3D=3Dt?n&&0=3D=3D=3Di.indexOf(n):"*=3D"=3D=
=3D=3Dt?n&&i.indexOf(n)>-1:"$=3D"=3D=3D=3Dt?n&&i.slice(-n.length)=3D=3D=3D=
n:"~=3D"=3D=3D=3Dt?(" "+i+" =
").indexOf(n)>-1:"|=3D"=3D=3D=3Dt?i=3D=3D=3Dn||i.slice(0,n.length+1)=3D=3D=
=3Dn+"-":!1):!0}},CHILD:function(e,t,n,r,i){var =
o=3D"nth"!=3D=3De.slice(0,3),a=3D"last"!=3D=3De.slice(-4),s=3D"of-type"=3D=
=3D=3Dt;return =
1=3D=3D=3Dr&&0=3D=3D=3Di?function(e){return!!e.parentNode}:function(t,n,u=
){var =
l,c,p,f,d,h,g=3Do!=3D=3Da?"nextSibling":"previousSibling",m=3Dt.parentNod=
e,y=3Ds&&t.nodeName.toLowerCase(),v=3D!u&&!s;if(m){if(o){while(g){p=3Dt;w=
hile(p=3Dp[g])if(s?p.nodeName.toLowerCase()=3D=3D=3Dy:1=3D=3D=3Dp.nodeTyp=
e)return!1;h=3Dg=3D"only"=3D=3D=3De&&!h&&"nextSibling"}return!0}if(h=3D[a=
?m.firstChild:m.lastChild],a&&v){c=3Dm[x]||(m[x]=3D{}),l=3Dc[e]||[],d=3Dl=
[0]=3D=3D=3DN&&l[1],f=3Dl[0]=3D=3D=3DN&&l[2],p=3Dd&&m.childNodes[d];while=
(p=3D++d&&p&&p[g]||(f=3Dd=3D0)||h.pop())if(1=3D=3D=3Dp.nodeType&&++f&&p=3D=
=3D=3Dt){c[e]=3D[N,d,f];break}}else =
if(v&&(l=3D(t[x]||(t[x]=3D{}))[e])&&l[0]=3D=3D=3DN)f=3Dl[1];else =
while(p=3D++d&&p&&p[g]||(f=3Dd=3D0)||h.pop())if((s?p.nodeName.toLowerCase=
()=3D=3D=3Dy:1=3D=3D=3Dp.nodeType)&&++f&&(v&&((p[x]||(p[x]=3D{}))[e]=3D[N=
,f]),p=3D=3D=3Dt))break;return =
f-=3Di,f=3D=3D=3Dr||0=3D=3D=3Df%r&&f/r>=3D0}}},PSEUDO:function(e,t){var =
n,r=3Di.pseudos[e]||i.setFilters[e.toLowerCase()]||st.error("unsupported =
pseudo: "+e);return =
r[x]?r(t):r.length>1?(n=3D[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowe=
rCase())?ot(function(e,n){var =
i,o=3Dr(e,t),a=3Do.length;while(a--)i=3DM.call(e,o[a]),e[i]=3D!(n[i]=3Do[=
a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ot(function(e){var =
t=3D[],n=3D[],r=3Ds(e.replace(W,"$1"));return =
r[x]?ot(function(e,t,n,i){var =
o,a=3Dr(e,null,i,[]),s=3De.length;while(s--)(o=3Da[s])&&(e[s]=3D!(t[s]=3D=
o))}):function(e,i,o){return =
t[0]=3De,r(t,null,o,n),!n.pop()}}),has:ot(function(e){return =
function(t){return st(e,t).length>0}}),contains:ot(function(e){return =
function(t){return(t.textContent||t.innerText||o(t)).indexOf(e)>-1}}),lan=
g:ot(function(e){return X.test(e||"")||st.error("unsupported lang: =
"+e),e=3De.replace(et,tt).toLowerCase(),function(t){var n;do =
if(n=3Dd?t.getAttribute("xml:lang")||t.getAttribute("lang"):t.lang)return=
 =
n=3Dn.toLowerCase(),n=3D=3D=3De||0=3D=3D=3Dn.indexOf(e+"-");while((t=3Dt.=
parentNode)&&1=3D=3D=3Dt.nodeType);return!1}}),target:function(t){var =
n=3De.location&&e.location.hash;return =
n&&n.slice(1)=3D=3D=3Dt.id},root:function(e){return =
e=3D=3D=3Df},focus:function(e){return =
e=3D=3D=3Dp.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href=
||~e.tabIndex)},enabled:function(e){return =
e.disabled=3D=3D=3D!1},disabled:function(e){return =
e.disabled=3D=3D=3D!0},checked:function(e){var =
t=3De.nodeName.toLowerCase();return"input"=3D=3D=3Dt&&!!e.checked||"optio=
n"=3D=3D=3Dt&&!!e.selected},selected:function(e){return =
e.parentNode&&e.parentNode.selectedIndex,e.selected=3D=3D=3D!0},empty:fun=
ction(e){for(e=3De.firstChild;e;e=3De.nextSibling)if(e.nodeName>"@"||3=3D=
=3D=3De.nodeType||4=3D=3D=3De.nodeType)return!1;return!0},parent:function=
(e){return!i.pseudos.empty(e)},header:function(e){return =
Q.test(e.nodeName)},input:function(e){return =
G.test(e.nodeName)},button:function(e){var =
t=3De.nodeName.toLowerCase();return"input"=3D=3D=3Dt&&"button"=3D=3D=3De.=
type||"button"=3D=3D=3Dt},text:function(e){var =
t;return"input"=3D=3D=3De.nodeName.toLowerCase()&&"text"=3D=3D=3De.type&&=
(null=3D=3D(t=3De.getAttribute("type"))||t.toLowerCase()=3D=3D=3De.type)}=
,first:pt(function(){return[0]}),last:pt(function(e,t){return[t-1]}),eq:p=
t(function(e,t,n){return[0>n?n+t:n]}),even:pt(function(e,t){var =
n=3D0;for(;t>n;n+=3D2)e.push(n);return e}),odd:pt(function(e,t){var =
n=3D1;for(;t>n;n+=3D2)e.push(n);return e}),lt:pt(function(e,t,n){var =
r=3D0>n?n+t:n;for(;--r>=3D0;)e.push(r);return =
e}),gt:pt(function(e,t,n){var r=3D0>n?n+t:n;for(;t>++r;)e.push(r);return =
e})}};for(n =
in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[n]=3Dlt(n=
);for(n in{submit:!0,reset:!0})i.pseudos[n]=3Dct(n);function ft(e,t){var =
n,r,o,a,s,u,l,c=3DE[e+" "];if(c)return =
t?0:c.slice(0);s=3De,u=3D[],l=3Di.preFilter;while(s){(!n||(r=3D$.exec(s))=
)&&(r&&(s=3Ds.slice(r[0].length)||s),u.push(o=3D[])),n=3D!1,(r=3DI.exec(s=
))&&(n=3Dr.shift(),o.push({value:n,type:r[0].replace(W," =
")}),s=3Ds.slice(n.length));for(a in =
i.filter)!(r=3DU[a].exec(s))||l[a]&&!(r=3Dl[a](r))||(n=3Dr.shift(),o.push=
({value:n,type:a,matches:r}),s=3Ds.slice(n.length));if(!n)break}return =
t?s.length:s?st.error(e):E(e,u).slice(0)}function dt(e){var =
t=3D0,n=3De.length,r=3D"";for(;n>t;t++)r+=3De[t].value;return r}function =
ht(e,t,n){var i=3Dt.dir,o=3Dn&&"parentNode"=3D=3D=3Di,a=3DC++;return =
t.first?function(t,n,r){while(t=3Dt[i])if(1=3D=3D=3Dt.nodeType||o)return =
e(t,n,r)}:function(t,n,s){var u,l,c,p=3DN+" =
"+a;if(s){while(t=3Dt[i])if((1=3D=3D=3Dt.nodeType||o)&&e(t,n,s))return!0}=
else =
while(t=3Dt[i])if(1=3D=3D=3Dt.nodeType||o)if(c=3Dt[x]||(t[x]=3D{}),(l=3Dc=
[i])&&l[0]=3D=3D=3Dp){if((u=3Dl[1])=3D=3D=3D!0||u=3D=3D=3Dr)return =
u=3D=3D=3D!0}else =
if(l=3Dc[i]=3D[p],l[1]=3De(t,n,s)||r,l[1]=3D=3D=3D!0)return!0}}function =
gt(e){return e.length>1?function(t,n,r){var =
i=3De.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function =
mt(e,t,n,r,i){var =
o,a=3D[],s=3D0,u=3De.length,l=3Dnull!=3Dt;for(;u>s;s++)(o=3De[s])&&(!n||n=
(o,r,i))&&(a.push(o),l&&t.push(s));return a}function =
yt(e,t,n,r,i,o){return =
r&&!r[x]&&(r=3Dyt(r)),i&&!i[x]&&(i=3Dyt(i,o)),ot(function(o,a,s,u){var =
l,c,p,f=3D[],d=3D[],h=3Da.length,g=3Do||xt(t||"*",s.nodeType?[s]:s,[]),m=3D=
!e||!o&&t?g:mt(g,f,e,s,u),y=3Dn?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,u),r){=
l=3Dmt(y,d),r(l,[],s,u),c=3Dl.length;while(c--)(p=3Dl[c])&&(y[d[c]]=3D!(m=
[d[c]]=3Dp))}if(o){if(i||e){if(i){l=3D[],c=3Dy.length;while(c--)(p=3Dy[c]=
)&&l.push(m[c]=3Dp);i(null,y=3D[],l,u)}c=3Dy.length;while(c--)(p=3Dy[c])&=
&(l=3Di?M.call(o,p):f[c])>-1&&(o[l]=3D!(a[l]=3Dp))}}else =
y=3Dmt(y=3D=3D=3Da?y.splice(h,y.length):y),i?i(null,a,y,u):H.apply(a,y)})=
}function vt(e){var =
t,n,r,o=3De.length,a=3Di.relative[e[0].type],s=3Da||i.relative[" =
"],u=3Da?1:0,c=3Dht(function(e){return =
e=3D=3D=3Dt},s,!0),p=3Dht(function(e){return =
M.call(t,e)>-1},s,!0),f=3D[function(e,n,r){return!a&&(r||n!=3D=3Dl)||((t=3D=
n).nodeType?c(e,n,r):p(e,n,r))}];for(;o>u;u++)if(n=3Di.relative[e[u].type=
])f=3D[ht(gt(f),n)];else{if(n=3Di.filter[e[u].type].apply(null,e[u].match=
es),n[x]){for(r=3D++u;o>r;r++)if(i.relative[e[r].type])break;return =
yt(u>1&&gt(f),u>1&&dt(e.slice(0,u-1)).replace(W,"$1"),n,r>u&&vt(e.slice(u=
,r)),o>r&&vt(e=3De.slice(r)),o>r&&dt(e))}f.push(n)}return gt(f)}function =
bt(e,t){var =
n=3D0,o=3Dt.length>0,a=3De.length>0,s=3Dfunction(s,u,c,f,d){var =
h,g,m,y=3D[],v=3D0,b=3D"0",x=3Ds&&[],w=3Dnull!=3Dd,T=3Dl,C=3Ds||a&&i.find=
.TAG("*",d&&u.parentNode||u),k=3DN+=3Dnull=3D=3DT?1:Math.random()||.1;for=
(w&&(l=3Du!=3D=3Dp&&u,r=3Dn);null!=3D(h=3DC[b]);b++){if(a&&h){g=3D0;while=
(m=3De[g++])if(m(h,u,c)){f.push(h);break}w&&(N=3Dk,r=3D++n)}o&&((h=3D!m&&=
h)&&v--,s&&x.push(h))}if(v+=3Db,o&&b!=3D=3Dv){g=3D0;while(m=3Dt[g++])m(x,=
y,u,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=3DL.call(f));y=3Dmt(y)}H.=
apply(f,y),w&&!s&&y.length>0&&v+t.length>1&&st.uniqueSort(f)}return =
w&&(N=3Dk,l=3DT),x};return o?ot(s):s}s=3Dst.compile=3Dfunction(e,t){var =
n,r=3D[],i=3D[],o=3DS[e+" =
"];if(!o){t||(t=3Dft(e)),n=3Dt.length;while(n--)o=3Dvt(t[n]),o[x]?r.push(=
o):i.push(o);o=3DS(e,bt(i,r))}return o};function xt(e,t,n){var =
r=3D0,i=3Dt.length;for(;i>r;r++)st(e,t[r],n);return n}function =
wt(e,t,n,r){var =
o,a,u,l,c,p=3Dft(e);if(!r&&1=3D=3D=3Dp.length){if(a=3Dp[0]=3Dp[0].slice(0=
),a.length>2&&"ID"=3D=3D=3D(u=3Da[0]).type&&9=3D=3D=3Dt.nodeType&&!d&&i.r=
elative[a[1].type]){if(t=3Di.find.ID(u.matches[0].replace(et,tt),t)[0],!t=
)return =
n;e=3De.slice(a.shift().value.length)}o=3DU.needsContext.test(e)?0:a.leng=
th;while(o--){if(u=3Da[o],i.relative[l=3Du.type])break;if((c=3Di.find[l])=
&&(r=3Dc(u.matches[0].replace(et,tt),V.test(a[0].type)&&t.parentNode||t))=
){if(a.splice(o,1),e=3Dr.length&&dt(a),!e)return =
H.apply(n,q.call(r,0)),n;break}}}return =
s(e,p)(r,t,d,n,V.test(e)),n}i.pseudos.nth=3Di.pseudos.eq;function =
Tt(){}i.filters=3DTt.prototype=3Di.pseudos,i.setFilters=3Dnew =
Tt,c(),st.attr=3Db.attr,b.find=3Dst,b.expr=3Dst.selectors,b.expr[":"]=3Db=
.expr.pseudos,b.unique=3Dst.uniqueSort,b.text=3Dst.getText,b.isXMLDoc=3Ds=
t.isXML,b.contains=3Dst.contains}(e);var =
at=3D/Until$/,st=3D/^(?:parents|prev(?:Until|All))/,ut=3D/^.[^:#\[\.,]*$/=
,lt=3Db.expr.match.needsContext,ct=3D{children:!0,contents:!0,next:!0,pre=
v:!0};b.fn.extend({find:function(e){var =
t,n,r,i=3Dthis.length;if("string"!=3Dtypeof e)return =
r=3Dthis,this.pushStack(b(e).filter(function(){for(t=3D0;i>t;t++)if(b.con=
tains(r[t],this))return!0}));for(n=3D[],t=3D0;i>t;t++)b.find(e,this[t],n)=
;return =
n=3Dthis.pushStack(i>1?b.unique(n):n),n.selector=3D(this.selector?this.se=
lector+" ":"")+e,n},has:function(e){var =
t,n=3Db(e,this),r=3Dn.length;return =
this.filter(function(){for(t=3D0;r>t;t++)if(b.contains(this,n[t]))return!=
0})},not:function(e){return =
this.pushStack(ft(this,e,!1))},filter:function(e){return =
this.pushStack(ft(this,e,!0))},is:function(e){return!!e&&("string"=3D=3Dt=
ypeof =
e?lt.test(e)?b(e,this.context).index(this[0])>=3D0:b.filter(e,this).lengt=
h>0:this.filter(e).length>0)},closest:function(e,t){var =
n,r=3D0,i=3Dthis.length,o=3D[],a=3Dlt.test(e)||"string"!=3Dtypeof =
e?b(e,t||this.context):0;for(;i>r;r++){n=3Dthis[r];while(n&&n.ownerDocume=
nt&&n!=3D=3Dt&&11!=3D=3Dn.nodeType){if(a?a.index(n)>-1:b.find.matchesSele=
ctor(n,e)){o.push(n);break}n=3Dn.parentNode}}return =
this.pushStack(o.length>1?b.unique(o):o)},index:function(e){return =
e?"string"=3D=3Dtypeof =
e?b.inArray(this[0],b(e)):b.inArray(e.jquery?e[0]:e,this):this[0]&&this[0=
].parentNode?this.first().prevAll().length:-1},add:function(e,t){var =
n=3D"string"=3D=3Dtypeof =
e?b(e,t):b.makeArray(e&&e.nodeType?[e]:e),r=3Db.merge(this.get(),n);retur=
n this.pushStack(b.unique(r))},addBack:function(e){return =
this.add(null=3D=3De?this.prevObject:this.prevObject.filter(e))}}),b.fn.a=
ndSelf=3Db.fn.addBack;function pt(e,t){do =
e=3De[t];while(e&&1!=3D=3De.nodeType);return =
e}b.each({parent:function(e){var t=3De.parentNode;return =
t&&11!=3D=3Dt.nodeType?t:null},parents:function(e){return =
b.dir(e,"parentNode")},parentsUntil:function(e,t,n){return =
b.dir(e,"parentNode",n)},next:function(e){return =
pt(e,"nextSibling")},prev:function(e){return =
pt(e,"previousSibling")},nextAll:function(e){return =
b.dir(e,"nextSibling")},prevAll:function(e){return =
b.dir(e,"previousSibling")},nextUntil:function(e,t,n){return =
b.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return =
b.dir(e,"previousSibling",n)},siblings:function(e){return =
b.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return =
b.sibling(e.firstChild)},contents:function(e){return =
b.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:b.merg=
e([],e.childNodes)}},function(e,t){b.fn[e]=3Dfunction(n,r){var =
i=3Db.map(this,t,n);return at.test(e)||(r=3Dn),r&&"string"=3D=3Dtypeof =
r&&(i=3Db.filter(r,i)),i=3Dthis.length>1&&!ct[e]?b.unique(i):i,this.lengt=
h>1&&st.test(e)&&(i=3Di.reverse()),this.pushStack(i)}}),b.extend({filter:=
function(e,t,n){return =
n&&(e=3D":not("+e+")"),1=3D=3D=3Dt.length?b.find.matchesSelector(t[0],e)?=
[t[0]]:[]:b.find.matches(e,t)},dir:function(e,n,r){var =
i=3D[],o=3De[n];while(o&&9!=3D=3Do.nodeType&&(r=3D=3D=3Dt||1!=3D=3Do.node=
Type||!b(o).is(r)))1=3D=3D=3Do.nodeType&&i.push(o),o=3Do[n];return =
i},sibling:function(e,t){var =
n=3D[];for(;e;e=3De.nextSibling)1=3D=3D=3De.nodeType&&e!=3D=3Dt&&n.push(e=
);return n}});function ft(e,t,n){if(t=3Dt||0,b.isFunction(t))return =
b.grep(e,function(e,r){var i=3D!!t.call(e,r,e);return =
i=3D=3D=3Dn});if(t.nodeType)return b.grep(e,function(e){return =
e=3D=3D=3Dt=3D=3D=3Dn});if("string"=3D=3Dtypeof t){var =
r=3Db.grep(e,function(e){return =
1=3D=3D=3De.nodeType});if(ut.test(t))return =
b.filter(t,r,!n);t=3Db.filter(t,r)}return b.grep(e,function(e){return =
b.inArray(e,t)>=3D0=3D=3D=3Dn})}function dt(e){var =
t=3Dht.split("|"),n=3De.createDocumentFragment();if(n.createElement)while=
(t.length)n.createElement(t.pop());return n}var =
ht=3D"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaptio=
n|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summ=
ary|time|video",gt=3D/ =
jQuery\d+=3D"(?:null|\d+)"/g,mt=3DRegExp("<(?:"+ht+")[\\s/>]","i"),yt=3D/=
^\s+/,vt=3D/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[=
^>]*)\/>/gi,bt=3D/<([\w:]+)/,xt=3D/<tbody/i,wt=3D/<|&#?\w+;/,Tt=3D/<(?:sc=
ript|style|link)/i,Nt=3D/^(?:checkbox|radio)$/i,Ct=3D/checked\s*(?:[^=3D]=
|=3D\s*.checked.)/i,kt=3D/^$|\/(?:java|ecma)script/i,Et=3D/^true\/(.*)/,S=
t=3D/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,At=3D{option:[1,"<select =
multiple=3D'multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"=
],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<t=
able>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<ta=
ble><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbod=
y><tr>","</tr></tbody></table>"],_default:b.support.htmlSerialize?[0,"","=
"]:[1,"X<div>","</div>"]},jt=3Ddt(o),Dt=3Djt.appendChild(o.createElement(=
"div"));At.optgroup=3DAt.option,At.tbody=3DAt.tfoot=3DAt.colgroup=3DAt.ca=
ption=3DAt.thead,At.th=3DAt.td,b.fn.extend({text:function(e){return =
b.access(this,function(e){return =
e=3D=3D=3Dt?b.text(this):this.empty().append((this[0]&&this[0].ownerDocum=
ent||o).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e)=
{if(b.isFunction(e))return =
this.each(function(t){b(this).wrapAll(e.call(this,t))});if(this[0]){var =
t=3Db(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.inse=
rtBefore(this[0]),t.map(function(){var =
e=3Dthis;while(e.firstChild&&1=3D=3D=3De.firstChild.nodeType)e=3De.firstC=
hild;return e}).append(this)}return this},wrapInner:function(e){return =
b.isFunction(e)?this.each(function(t){b(this).wrapInner(e.call(this,t))})=
:this.each(function(){var =
t=3Db(this),n=3Dt.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:fu=
nction(e){var t=3Db.isFunction(e);return =
this.each(function(n){b(this).wrapAll(t?e.call(this,n):e)})},unwrap:funct=
ion(){return =
this.parent().each(function(){b.nodeName(this,"body")||b(this).replaceWit=
h(this.childNodes)}).end()},append:function(){return =
this.domManip(arguments,!0,function(e){(1=3D=3D=3Dthis.nodeType||11=3D=3D=
=3Dthis.nodeType||9=3D=3D=3Dthis.nodeType)&&this.appendChild(e)})},prepen=
d:function(){return =
this.domManip(arguments,!0,function(e){(1=3D=3D=3Dthis.nodeType||11=3D=3D=
=3Dthis.nodeType||9=3D=3D=3Dthis.nodeType)&&this.insertBefore(e,this.firs=
tChild)})},before:function(){return =
this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.i=
nsertBefore(e,this)})},after:function(){return =
this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.i=
nsertBefore(e,this.nextSibling)})},remove:function(e,t){var =
n,r=3D0;for(;null!=3D(n=3Dthis[r]);r++)(!e||b.filter(e,[n]).length>0)&&(t=
||1!=3D=3Dn.nodeType||b.cleanData(Ot(n)),n.parentNode&&(t&&b.contains(n.o=
wnerDocument,n)&&Mt(Ot(n,"script")),n.parentNode.removeChild(n)));return =
this},empty:function(){var =
e,t=3D0;for(;null!=3D(e=3Dthis[t]);t++){1=3D=3D=3De.nodeType&&b.cleanData=
(Ot(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&b.no=
deName(e,"select")&&(e.options.length=3D0)}return =
this},clone:function(e,t){return =
e=3Dnull=3D=3De?!1:e,t=3Dnull=3D=3Dt?e:t,this.map(function(){return =
b.clone(this,e,t)})},html:function(e){return =
b.access(this,function(e){var =
n=3Dthis[0]||{},r=3D0,i=3Dthis.length;if(e=3D=3D=3Dt)return =
1=3D=3D=3Dn.nodeType?n.innerHTML.replace(gt,""):t;if(!("string"!=3Dtypeof=
 =
e||Tt.test(e)||!b.support.htmlSerialize&&mt.test(e)||!b.support.leadingWh=
itespace&&yt.test(e)||At[(bt.exec(e)||["",""])[1].toLowerCase()])){e=3De.=
replace(vt,"<$1></$2>");try{for(;i>r;r++)n=3Dthis[r]||{},1=3D=3D=3Dn.node=
Type&&(b.cleanData(Ot(n,!1)),n.innerHTML=3De);n=3D0}catch(o){}}n&&this.em=
pty().append(e)},null,e,arguments.length)},replaceWith:function(e){var =
t=3Db.isFunction(e);return t||"string"=3D=3Dtypeof =
e||(e=3Db(e).not(this).detach()),this.domManip([e],!0,function(e){var =
t=3Dthis.nextSibling,n=3Dthis.parentNode;n&&(b(this).remove(),n.insertBef=
ore(e,t))})},detach:function(e){return =
this.remove(e,!0)},domManip:function(e,n,r){e=3Df.apply([],e);var =
i,o,a,s,u,l,c=3D0,p=3Dthis.length,d=3Dthis,h=3Dp-1,g=3De[0],m=3Db.isFunct=
ion(g);if(m||!(1>=3Dp||"string"!=3Dtypeof =
g||b.support.checkClone)&&Ct.test(g))return this.each(function(i){var =
o=3Dd.eq(i);m&&(e[0]=3Dg.call(this,i,n?o.html():t)),o.domManip(e,n,r)});i=
f(p&&(l=3Db.buildFragment(e,this[0].ownerDocument,!1,this),i=3Dl.firstChi=
ld,1=3D=3D=3Dl.childNodes.length&&(l=3Di),i)){for(n=3Dn&&b.nodeName(i,"tr=
"),s=3Db.map(Ot(l,"script"),Ht),a=3Ds.length;p>c;c++)o=3Dl,c!=3D=3Dh&&(o=3D=
b.clone(o,!0,!0),a&&b.merge(s,Ot(o,"script"))),r.call(n&&b.nodeName(this[=
c],"table")?Lt(this[c],"tbody"):this[c],o,c);if(a)for(u=3Ds[s.length-1].o=
wnerDocument,b.map(s,qt),c=3D0;a>c;c++)o=3Ds[c],kt.test(o.type||"")&&!b._=
data(o,"globalEval")&&b.contains(u,o)&&(o.src?b.ajax({url:o.src,type:"GET=
",dataType:"script",async:!1,global:!1,"throws":!0}):b.globalEval((o.text=
||o.textContent||o.innerHTML||"").replace(St,"")));l=3Di=3Dnull}return =
this}});function Lt(e,t){return =
e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement=
(t))}function Ht(e){var t=3De.getAttributeNode("type");return =
e.type=3D(t&&t.specified)+"/"+e.type,e}function qt(e){var =
t=3DEt.exec(e.type);return =
t?e.type=3Dt[1]:e.removeAttribute("type"),e}function Mt(e,t){var =
n,r=3D0;for(;null!=3D(n=3De[r]);r++)b._data(n,"globalEval",!t||b._data(t[=
r],"globalEval"))}function =
_t(e,t){if(1=3D=3D=3Dt.nodeType&&b.hasData(e)){var =
n,r,i,o=3Db._data(e),a=3Db._data(t,o),s=3Do.events;if(s){delete =
a.handle,a.events=3D{};for(n in =
s)for(r=3D0,i=3Ds[n].length;i>r;r++)b.event.add(t,n,s[n][r])}a.data&&(a.d=
ata=3Db.extend({},a.data))}}function Ft(e,t){var =
n,r,i;if(1=3D=3D=3Dt.nodeType){if(n=3Dt.nodeName.toLowerCase(),!b.support=
.noCloneEvent&&t[b.expando]){i=3Db._data(t);for(r in =
i.events)b.removeEvent(t,r,i.handle);t.removeAttribute(b.expando)}"script=
"=3D=3D=3Dn&&t.text!=3D=3De.text?(Ht(t).text=3De.text,qt(t)):"object"=3D=3D=
=3Dn?(t.parentNode&&(t.outerHTML=3De.outerHTML),b.support.html5Clone&&e.i=
nnerHTML&&!b.trim(t.innerHTML)&&(t.innerHTML=3De.innerHTML)):"input"=3D=3D=
=3Dn&&Nt.test(e.type)?(t.defaultChecked=3Dt.checked=3De.checked,t.value!=3D=
=3De.value&&(t.value=3De.value)):"option"=3D=3D=3Dn?t.defaultSelected=3Dt=
.selected=3De.defaultSelected:("input"=3D=3D=3Dn||"textarea"=3D=3D=3Dn)&&=
(t.defaultValue=3De.defaultValue)}}b.each({appendTo:"append",prependTo:"p=
repend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith=
"},function(e,t){b.fn[e]=3Dfunction(e){var =
n,r=3D0,i=3D[],o=3Db(e),a=3Do.length-1;for(;a>=3Dr;r++)n=3Dr=3D=3D=3Da?th=
is:this.clone(!0),b(o[r])[t](n),d.apply(i,n.get());return =
this.pushStack(i)}});function Ot(e,n){var r,o,a=3D0,s=3Dtypeof =
e.getElementsByTagName!=3D=3Di?e.getElementsByTagName(n||"*"):typeof =
e.querySelectorAll!=3D=3Di?e.querySelectorAll(n||"*"):t;if(!s)for(s=3D[],=
r=3De.childNodes||e;null!=3D(o=3Dr[a]);a++)!n||b.nodeName(o,n)?s.push(o):=
b.merge(s,Ot(o,n));return =
n=3D=3D=3Dt||n&&b.nodeName(e,n)?b.merge([e],s):s}function =
Bt(e){Nt.test(e.type)&&(e.defaultChecked=3De.checked)}b.extend({clone:fun=
ction(e,t,n){var =
r,i,o,a,s,u=3Db.contains(e.ownerDocument,e);if(b.support.html5Clone||b.is=
XMLDoc(e)||!mt.test("<"+e.nodeName+">")?o=3De.cloneNode(!0):(Dt.innerHTML=
=3De.outerHTML,Dt.removeChild(o=3DDt.firstChild)),!(b.support.noCloneEven=
t&&b.support.noCloneChecked||1!=3D=3De.nodeType&&11!=3D=3De.nodeType||b.i=
sXMLDoc(e)))for(r=3DOt(o),s=3DOt(e),a=3D0;null!=3D(i=3Ds[a]);++a)r[a]&&Ft=
(i,r[a]);if(t)if(n)for(s=3Ds||Ot(e),r=3Dr||Ot(o),a=3D0;null!=3D(i=3Ds[a])=
;a++)_t(i,r[a]);else _t(e,o);return =
r=3DOt(o,"script"),r.length>0&&Mt(r,!u&&Ot(e,"script")),r=3Ds=3Di=3Dnull,=
o},buildFragment:function(e,t,n,r){var =
i,o,a,s,u,l,c,p=3De.length,f=3Ddt(t),d=3D[],h=3D0;for(;p>h;h++)if(o=3De[h=
],o||0=3D=3D=3Do)if("object"=3D=3D=3Db.type(o))b.merge(d,o.nodeType?[o]:o=
);else =
if(wt.test(o)){s=3Ds||f.appendChild(t.createElement("div")),u=3D(bt.exec(=
o)||["",""])[1].toLowerCase(),c=3DAt[u]||At._default,s.innerHTML=3Dc[1]+o=
.replace(vt,"<$1></$2>")+c[2],i=3Dc[0];while(i--)s=3Ds.lastChild;if(!b.su=
pport.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0=
])),!b.support.tbody){o=3D"table"!=3D=3Du||xt.test(o)?"<table>"!=3D=3Dc[1=
]||xt.test(o)?0:s:s.firstChild,i=3Do&&o.childNodes.length;while(i--)b.nod=
eName(l=3Do.childNodes[i],"tbody")&&!l.childNodes.length&&o.removeChild(l=
)
}b.merge(d,s.childNodes),s.textContent=3D"";while(s.firstChild)s.removeCh=
ild(s.firstChild);s=3Df.lastChild}else =
d.push(t.createTextNode(o));s&&f.removeChild(s),b.support.appendChecked||=
b.grep(Ot(d,"input"),Bt),h=3D0;while(o=3Dd[h++])if((!r||-1=3D=3D=3Db.inAr=
ray(o,r))&&(a=3Db.contains(o.ownerDocument,o),s=3DOt(f.appendChild(o),"sc=
ript"),a&&Mt(s),n)){i=3D0;while(o=3Ds[i++])kt.test(o.type||"")&&n.push(o)=
}return s=3Dnull,f},cleanData:function(e,t){var =
n,r,o,a,s=3D0,u=3Db.expando,l=3Db.cache,p=3Db.support.deleteExpando,f=3Db=
.event.special;for(;null!=3D(n=3De[s]);s++)if((t||b.acceptData(n))&&(o=3D=
n[u],a=3Do&&l[o])){if(a.events)for(r in =
a.events)f[r]?b.event.remove(n,r):b.removeEvent(n,r,a.handle);l[o]&&(dele=
te l[o],p?delete n[u]:typeof =
n.removeAttribute!=3D=3Di?n.removeAttribute(u):n[u]=3Dnull,c.push(o))}}})=
;var =
Pt,Rt,Wt,$t=3D/alpha\([^)]*\)/i,It=3D/opacity\s*=3D\s*([^)]*)/,zt=3D/^(to=
p|right|bottom|left)$/,Xt=3D/^(none|table(?!-c[ea]).+)/,Ut=3D/^margin/,Vt=
=3DRegExp("^("+x+")(.*)$","i"),Yt=3DRegExp("^("+x+")(?!px)[a-z%]+$","i"),=
Jt=3DRegExp("^([+-])=3D("+x+")","i"),Gt=3D{BODY:"block"},Qt=3D{position:"=
absolute",visibility:"hidden",display:"block"},Kt=3D{letterSpacing:0,font=
Weight:400},Zt=3D["Top","Right","Bottom","Left"],en=3D["Webkit","O","Moz"=
,"ms"];function tn(e,t){if(t in e)return t;var =
n=3Dt.charAt(0).toUpperCase()+t.slice(1),r=3Dt,i=3Den.length;while(i--)if=
(t=3Den[i]+n,t in e)return t;return r}function nn(e,t){return =
e=3Dt||e,"none"=3D=3D=3Db.css(e,"display")||!b.contains(e.ownerDocument,e=
)}function rn(e,t){var =
n,r,i,o=3D[],a=3D0,s=3De.length;for(;s>a;a++)r=3De[a],r.style&&(o[a]=3Db.=
_data(r,"olddisplay"),n=3Dr.style.display,t?(o[a]||"none"!=3D=3Dn||(r.sty=
le.display=3D""),""=3D=3D=3Dr.style.display&&nn(r)&&(o[a]=3Db._data(r,"ol=
ddisplay",un(r.nodeName)))):o[a]||(i=3Dnn(r),(n&&"none"!=3D=3Dn||!i)&&b._=
data(r,"olddisplay",i?n:b.css(r,"display"))));for(a=3D0;s>a;a++)r=3De[a],=
r.style&&(t&&"none"!=3D=3Dr.style.display&&""!=3D=3Dr.style.display||(r.s=
tyle.display=3Dt?o[a]||"":"none"));return =
e}b.fn.extend({css:function(e,n){return =
b.access(this,function(e,n,r){var =
i,o,a=3D{},s=3D0;if(b.isArray(n)){for(o=3DRt(e),i=3Dn.length;i>s;s++)a[n[=
s]]=3Db.css(e,n[s],!1,o);return a}return =
r!=3D=3Dt?b.style(e,n,r):b.css(e,n)},e,n,arguments.length>1)},show:functi=
on(){return rn(this,!0)},hide:function(){return =
rn(this)},toggle:function(e){var t=3D"boolean"=3D=3Dtypeof e;return =
this.each(function(){(t?e:nn(this))?b(this).show():b(this).hide()})}}),b.=
extend({cssHooks:{opacity:{get:function(e,t){if(t){var =
n=3DWt(e,"opacity");return""=3D=3D=3Dn?"1":n}}}},cssNumber:{columnCount:!=
0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows=
:!0,zIndex:!0,zoom:!0},cssProps:{"float":b.support.cssFloat?"cssFloat":"s=
tyleFloat"},style:function(e,n,r,i){if(e&&3!=3D=3De.nodeType&&8!=3D=3De.n=
odeType&&e.style){var =
o,a,s,u=3Db.camelCase(n),l=3De.style;if(n=3Db.cssProps[u]||(b.cssProps[u]=
=3Dtn(l,u)),s=3Db.cssHooks[n]||b.cssHooks[u],r=3D=3D=3Dt)return =
s&&"get"in s&&(o=3Ds.get(e,!1,i))!=3D=3Dt?o:l[n];if(a=3Dtypeof =
r,"string"=3D=3D=3Da&&(o=3DJt.exec(r))&&(r=3D(o[1]+1)*o[2]+parseFloat(b.c=
ss(e,n)),a=3D"number"),!(null=3D=3Dr||"number"=3D=3D=3Da&&isNaN(r)||("num=
ber"!=3D=3Da||b.cssNumber[u]||(r+=3D"px"),b.support.clearCloneStyle||""!=3D=
=3Dr||0!=3D=3Dn.indexOf("background")||(l[n]=3D"inherit"),s&&"set"in =
s&&(r=3Ds.set(e,r,i))=3D=3D=3Dt)))try{l[n]=3Dr}catch(c){}}},css:function(=
e,n,r,i){var o,a,s,u=3Db.camelCase(n);return =
n=3Db.cssProps[u]||(b.cssProps[u]=3Dtn(e.style,u)),s=3Db.cssHooks[n]||b.c=
ssHooks[u],s&&"get"in =
s&&(a=3Ds.get(e,!0,r)),a=3D=3D=3Dt&&(a=3DWt(e,n,i)),"normal"=3D=3D=3Da&&n=
 in =
Kt&&(a=3DKt[n]),""=3D=3D=3Dr||r?(o=3DparseFloat(a),r=3D=3D=3D!0||b.isNume=
ric(o)?o||0:a):a},swap:function(e,t,n,r){var i,o,a=3D{};for(o in =
t)a[o]=3De.style[o],e.style[o]=3Dt[o];i=3Dn.apply(e,r||[]);for(o in =
t)e.style[o]=3Da[o];return =
i}}),e.getComputedStyle?(Rt=3Dfunction(t){return =
e.getComputedStyle(t,null)},Wt=3Dfunction(e,n,r){var =
i,o,a,s=3Dr||Rt(e),u=3Ds?s.getPropertyValue(n)||s[n]:t,l=3De.style;return=
 =
s&&(""!=3D=3Du||b.contains(e.ownerDocument,e)||(u=3Db.style(e,n)),Yt.test=
(u)&&Ut.test(n)&&(i=3Dl.width,o=3Dl.minWidth,a=3Dl.maxWidth,l.minWidth=3D=
l.maxWidth=3Dl.width=3Du,u=3Ds.width,l.width=3Di,l.minWidth=3Do,l.maxWidt=
h=3Da)),u}):o.documentElement.currentStyle&&(Rt=3Dfunction(e){return =
e.currentStyle},Wt=3Dfunction(e,n,r){var =
i,o,a,s=3Dr||Rt(e),u=3Ds?s[n]:t,l=3De.style;return =
null=3D=3Du&&l&&l[n]&&(u=3Dl[n]),Yt.test(u)&&!zt.test(n)&&(i=3Dl.left,o=3D=
e.runtimeStyle,a=3Do&&o.left,a&&(o.left=3De.currentStyle.left),l.left=3D"=
fontSize"=3D=3D=3Dn?"1em":u,u=3Dl.pixelLeft+"px",l.left=3Di,a&&(o.left=3D=
a)),""=3D=3D=3Du?"auto":u});function on(e,t,n){var r=3DVt.exec(t);return =
r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function an(e,t,n,r,i){var =
o=3Dn=3D=3D=3D(r?"border":"content")?4:"width"=3D=3D=3Dt?1:0,a=3D0;for(;4=
>o;o+=3D2)"margin"=3D=3D=3Dn&&(a+=3Db.css(e,n+Zt[o],!0,i)),r?("content"=3D=
=3D=3Dn&&(a-=3Db.css(e,"padding"+Zt[o],!0,i)),"margin"!=3D=3Dn&&(a-=3Db.c=
ss(e,"border"+Zt[o]+"Width",!0,i))):(a+=3Db.css(e,"padding"+Zt[o],!0,i),"=
padding"!=3D=3Dn&&(a+=3Db.css(e,"border"+Zt[o]+"Width",!0,i)));return =
a}function sn(e,t,n){var =
r=3D!0,i=3D"width"=3D=3D=3Dt?e.offsetWidth:e.offsetHeight,o=3DRt(e),a=3Db=
.support.boxSizing&&"border-box"=3D=3D=3Db.css(e,"boxSizing",!1,o);if(0>=3D=
i||null=3D=3Di){if(i=3DWt(e,t,o),(0>i||null=3D=3Di)&&(i=3De.style[t]),Yt.=
test(i))return =
i;r=3Da&&(b.support.boxSizingReliable||i=3D=3D=3De.style[t]),i=3DparseFlo=
at(i)||0}return i+an(e,t,n||(a?"border":"content"),r,o)+"px"}function =
un(e){var t=3Do,n=3DGt[e];return =
n||(n=3Dln(e,t),"none"!=3D=3Dn&&n||(Pt=3D(Pt||b("<iframe =
frameborder=3D'0' width=3D'0' =
height=3D'0'/>").css("cssText","display:block =
!important")).appendTo(t.documentElement),t=3D(Pt[0].contentWindow||Pt[0]=
.contentDocument).document,t.write("<!doctype =
html><html><body>"),t.close(),n=3Dln(e,t),Pt.detach()),Gt[e]=3Dn),n}funct=
ion ln(e,t){var =
n=3Db(t.createElement(e)).appendTo(t.body),r=3Db.css(n[0],"display");retu=
rn =
n.remove(),r}b.each(["height","width"],function(e,n){b.cssHooks[n]=3D{get=
:function(e,r,i){return =
r?0=3D=3D=3De.offsetWidth&&Xt.test(b.css(e,"display"))?b.swap(e,Qt,functi=
on(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var =
i=3Dr&&Rt(e);return =
on(e,t,r?an(e,n,r,b.support.boxSizing&&"border-box"=3D=3D=3Db.css(e,"boxS=
izing",!1,i),i):0)}}}),b.support.opacity||(b.cssHooks.opacity=3D{get:func=
tion(e,t){return =
It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01=
*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var =
n=3De.style,r=3De.currentStyle,i=3Db.isNumeric(t)?"alpha(opacity=3D"+100*=
t+")":"",o=3Dr&&r.filter||n.filter||"";n.zoom=3D1,(t>=3D1||""=3D=3D=3Dt)&=
&""=3D=3D=3Db.trim(o.replace($t,""))&&n.removeAttribute&&(n.removeAttribu=
te("filter"),""=3D=3D=3Dt||r&&!r.filter)||(n.filter=3D$t.test(o)?o.replac=
e($t,i):o+" =
"+i)}}),b(function(){b.support.reliableMarginRight||(b.cssHooks.marginRig=
ht=3D{get:function(e,n){return =
n?b.swap(e,{display:"inline-block"},Wt,[e,"marginRight"]):t}}),!b.support=
.pixelPosition&&b.fn.position&&b.each(["top","left"],function(e,n){b.cssH=
ooks[n]=3D{get:function(e,r){return =
r?(r=3DWt(e,n),Yt.test(r)?b(e).position()[n]+"px":r):t}}})}),b.expr&&b.ex=
pr.filters&&(b.expr.filters.hidden=3Dfunction(e){return =
0>=3De.offsetWidth&&0>=3De.offsetHeight||!b.support.reliableHiddenOffsets=
&&"none"=3D=3D=3D(e.style&&e.style.display||b.css(e,"display"))},b.expr.f=
ilters.visible=3Dfunction(e){return!b.expr.filters.hidden(e)}),b.each({ma=
rgin:"",padding:"",border:"Width"},function(e,t){b.cssHooks[e+t]=3D{expan=
d:function(n){var r=3D0,i=3D{},o=3D"string"=3D=3Dtypeof n?n.split(" =
"):[n];for(;4>r;r++)i[e+Zt[r]+t]=3Do[r]||o[r-2]||o[0];return =
i}},Ut.test(e)||(b.cssHooks[e+t].set=3Don)});var =
cn=3D/%20/g,pn=3D/\[\]$/,fn=3D/\r?\n/g,dn=3D/^(?:submit|button|image|rese=
t|file)$/i,hn=3D/^(?:input|select|textarea|keygen)/i;b.fn.extend({seriali=
ze:function(){return =
b.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){var e=3Db.prop(this,"elements");return =
e?b.makeArray(e):this}).filter(function(){var e=3Dthis.type;return =
this.name&&!b(this).is(":disabled")&&hn.test(this.nodeName)&&!dn.test(e)&=
&(this.checked||!Nt.test(e))}).map(function(e,t){var =
n=3Db(this).val();return =
null=3D=3Dn?null:b.isArray(n)?b.map(n,function(e){return{name:t.name,valu=
e:e.replace(fn,"\r\n")}}):{name:t.name,value:n.replace(fn,"\r\n")}}).get(=
)}}),b.param=3Dfunction(e,n){var =
r,i=3D[],o=3Dfunction(e,t){t=3Db.isFunction(t)?t():null=3D=3Dt?"":t,i[i.l=
ength]=3DencodeURIComponent(e)+"=3D"+encodeURIComponent(t)};if(n=3D=3D=3D=
t&&(n=3Db.ajaxSettings&&b.ajaxSettings.traditional),b.isArray(e)||e.jquer=
y&&!b.isPlainObject(e))b.each(e,function(){o(this.name,this.value)});else=
 for(r in e)gn(r,e[r],n,o);return i.join("&").replace(cn,"+")};function =
gn(e,t,n,r){var =
i;if(b.isArray(t))b.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+"["+("=
object"=3D=3Dtypeof i?t:"")+"]",i,n,r)});else =
if(n||"object"!=3D=3Db.type(t))r(e,t);else for(i in =
t)gn(e+"["+i+"]",t[i],n,r)}b.each("blur focus focusin focusout load =
resize scroll unload click dblclick mousedown mouseup mousemove =
mouseover mouseout mouseenter mouseleave change select submit keydown =
keypress keyup error contextmenu".split(" =
"),function(e,t){b.fn[t]=3Dfunction(e,n){return =
arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),b.fn.hover=3Dfu=
nction(e,t){return this.mouseenter(e).mouseleave(t||e)};var =
mn,yn,vn=3Db.now(),bn=3D/\?/,xn=3D/#.*$/,wn=3D/([?&])_=3D[^&]*/,Tn=3D/^(.=
*?):[ =
\t]*([^\r\n]*)\r?$/gm,Nn=3D/^(?:about|app|app-storage|.+-extension|file|r=
es|widget):$/,Cn=3D/^(?:GET|HEAD)$/,kn=3D/^\/\//,En=3D/^([\w.+-]+:)(?:\/\=
/([^\/?#:]*)(?::(\d+)|)|)/,Sn=3Db.fn.load,An=3D{},jn=3D{},Dn=3D"*/".conca=
t("*");try{yn=3Da.href}catch(Ln){yn=3Do.createElement("a"),yn.href=3D"",y=
n=3Dyn.href}mn=3DEn.exec(yn.toLowerCase())||[];function Hn(e){return =
function(t,n){"string"!=3Dtypeof t&&(n=3Dt,t=3D"*");var =
r,i=3D0,o=3Dt.toLowerCase().match(w)||[];if(b.isFunction(n))while(r=3Do[i=
++])"+"=3D=3D=3Dr[0]?(r=3Dr.slice(1)||"*",(e[r]=3De[r]||[]).unshift(n)):(=
e[r]=3De[r]||[]).push(n)}}function qn(e,n,r,i){var =
o=3D{},a=3De=3D=3D=3Djn;function s(u){var l;return =
o[u]=3D!0,b.each(e[u]||[],function(e,u){var =
c=3Du(n,r,i);return"string"!=3Dtypeof =
c||a||o[c]?a?!(l=3Dc):t:(n.dataTypes.unshift(c),s(c),!1)}),l}return =
s(n.dataTypes[0])||!o["*"]&&s("*")}function Mn(e,n){var =
r,i,o=3Db.ajaxSettings.flatOptions||{};for(i in =
n)n[i]!=3D=3Dt&&((o[i]?e:r||(r=3D{}))[i]=3Dn[i]);return =
r&&b.extend(!0,e,r),e}b.fn.load=3Dfunction(e,n,r){if("string"!=3Dtypeof =
e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=3Dthis,u=3De.indexOf(" =
");return =
u>=3D0&&(i=3De.slice(u,e.length),e=3De.slice(0,u)),b.isFunction(n)?(r=3Dn=
,n=3Dt):n&&"object"=3D=3Dtypeof =
n&&(a=3D"POST"),s.length>0&&b.ajax({url:e,type:a,dataType:"html",data:n})=
.done(function(e){o=3Darguments,s.html(i?b("<div>").append(b.parseHTML(e)=
).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e]=
)}),this},b.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajax=
Success","ajaxSend"],function(e,t){b.fn[t]=3Dfunction(e){return =
this.on(t,e)}}),b.each(["get","post"],function(e,n){b[n]=3Dfunction(e,r,i=
,o){return =
b.isFunction(r)&&(o=3Do||i,i=3Dr,r=3Dt),b.ajax({url:e,type:n,dataType:o,d=
ata:r,success:i})}}),b.extend({active:0,lastModified:{},etag:{},ajaxSetti=
ngs:{url:yn,type:"GET",isLocal:Nn.test(mn[1]),global:!0,processData:!0,as=
ync:!0,contentType:"application/x-www-form-urlencoded; =
charset=3DUTF-8",accepts:{"*":Dn,text:"text/plain",html:"text/html",xml:"=
application/xml, text/xml",json:"application/json, =
text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFi=
elds:{xml:"responseXML",text:"responseText"},converters:{"* =
text":e.String,"text html":!0,"text json":b.parseJSON,"text =
xml":b.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t)=
{return =
t?Mn(Mn(e,b.ajaxSettings),t):Mn(b.ajaxSettings,e)},ajaxPrefilter:Hn(An),a=
jaxTransport:Hn(jn),ajax:function(e,n){"object"=3D=3Dtypeof =
e&&(n=3De,e=3Dt),n=3Dn||{};var =
r,i,o,a,s,u,l,c,p=3Db.ajaxSetup({},n),f=3Dp.context||p,d=3Dp.context&&(f.=
nodeType||f.jquery)?b(f):b.event,h=3Db.Deferred(),g=3Db.Callbacks("once =
memory"),m=3Dp.statusCode||{},y=3D{},v=3D{},x=3D0,T=3D"canceled",N=3D{rea=
dyState:0,getResponseHeader:function(e){var =
t;if(2=3D=3D=3Dx){if(!c){c=3D{};while(t=3DTn.exec(a))c[t[1].toLowerCase()=
]=3Dt[2]}t=3Dc[e.toLowerCase()]}return =
null=3D=3Dt?null:t},getAllResponseHeaders:function(){return =
2=3D=3D=3Dx?a:null},setRequestHeader:function(e,t){var =
n=3De.toLowerCase();return =
x||(e=3Dv[n]=3Dv[n]||e,y[e]=3Dt),this},overrideMimeType:function(e){retur=
n x||(p.mimeType=3De),this},statusCode:function(e){var =
t;if(e)if(2>x)for(t in e)m[t]=3D[m[t],e[t]];else =
N.always(e[N.status]);return this},abort:function(e){var t=3De||T;return =
l&&l.abort(t),k(0,t),this}};if(h.promise(N).complete=3Dg.add,N.success=3D=
N.done,N.error=3DN.fail,p.url=3D((e||p.url||yn)+"").replace(xn,"").replac=
e(kn,mn[1]+"//"),p.type=3Dn.method||n.type||p.method||p.type,p.dataTypes=3D=
b.trim(p.dataType||"*").toLowerCase().match(w)||[""],null=3D=3Dp.crossDom=
ain&&(r=3DEn.exec(p.url.toLowerCase()),p.crossDomain=3D!(!r||r[1]=3D=3D=3D=
mn[1]&&r[2]=3D=3D=3Dmn[2]&&(r[3]||("http:"=3D=3D=3Dr[1]?80:443))=3D=3D(mn=
[3]||("http:"=3D=3D=3Dmn[1]?80:443)))),p.data&&p.processData&&"string"!=3D=
typeof =
p.data&&(p.data=3Db.param(p.data,p.traditional)),qn(An,p,n,N),2=3D=3D=3Dx=
)return =
N;u=3Dp.global,u&&0=3D=3D=3Db.active++&&b.event.trigger("ajaxStart"),p.ty=
pe=3Dp.type.toUpperCase(),p.hasContent=3D!Cn.test(p.type),o=3Dp.url,p.has=
Content||(p.data&&(o=3Dp.url+=3D(bn.test(o)?"&":"?")+p.data,delete =
p.data),p.cache=3D=3D=3D!1&&(p.url=3Dwn.test(o)?o.replace(wn,"$1_=3D"+vn+=
+):o+(bn.test(o)?"&":"?")+"_=3D"+vn++)),p.ifModified&&(b.lastModified[o]&=
&N.setRequestHeader("If-Modified-Since",b.lastModified[o]),b.etag[o]&&N.s=
etRequestHeader("If-None-Match",b.etag[o])),(p.data&&p.hasContent&&p.cont=
entType!=3D=3D!1||n.contentType)&&N.setRequestHeader("Content-Type",p.con=
tentType),N.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTyp=
es[0]]?p.accepts[p.dataTypes[0]]+("*"!=3D=3Dp.dataTypes[0]?", "+Dn+"; =
q=3D0.01":""):p.accepts["*"]);for(i in =
p.headers)N.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSe=
nd.call(f,N,p)=3D=3D=3D!1||2=3D=3D=3Dx))return =
N.abort();T=3D"abort";for(i =
in{success:1,error:1,complete:1})N[i](p[i]);if(l=3Dqn(jn,p,n,N)){N.readyS=
tate=3D1,u&&d.trigger("ajaxSend",[N,p]),p.async&&p.timeout>0&&(s=3DsetTim=
eout(function(){N.abort("timeout")},p.timeout));try{x=3D1,l.send(y,k)}cat=
ch(C){if(!(2>x))throw C;k(-1,C)}}else k(-1,"No Transport");function =
k(e,n,r,i){var =
c,y,v,w,T,C=3Dn;2!=3D=3Dx&&(x=3D2,s&&clearTimeout(s),l=3Dt,a=3Di||"",N.re=
adyState=3De>0?4:0,r&&(w=3D_n(p,N,r)),e>=3D200&&300>e||304=3D=3D=3De?(p.i=
fModified&&(T=3DN.getResponseHeader("Last-Modified"),T&&(b.lastModified[o=
]=3DT),T=3DN.getResponseHeader("etag"),T&&(b.etag[o]=3DT)),204=3D=3D=3De?=
(c=3D!0,C=3D"nocontent"):304=3D=3D=3De?(c=3D!0,C=3D"notmodified"):(c=3DFn=
(p,w),C=3Dc.state,y=3Dc.data,v=3Dc.error,c=3D!v)):(v=3DC,(e||!C)&&(C=3D"e=
rror",0>e&&(e=3D0))),N.status=3De,N.statusText=3D(n||C)+"",c?h.resolveWit=
h(f,[y,C,N]):h.rejectWith(f,[N,C,v]),N.statusCode(m),m=3Dt,u&&d.trigger(c=
?"ajaxSuccess":"ajaxError",[N,p,c?y:v]),g.fireWith(f,[N,C]),u&&(d.trigger=
("ajaxComplete",[N,p]),--b.active||b.event.trigger("ajaxStop")))}return =
N},getScript:function(e,n){return =
b.get(e,t,n,"script")},getJSON:function(e,t,n){return =
b.get(e,t,n,"json")}});function _n(e,n,r){var =
i,o,a,s,u=3De.contents,l=3De.dataTypes,c=3De.responseFields;for(s in c)s =
in =
r&&(n[c[s]]=3Dr[s]);while("*"=3D=3D=3Dl[0])l.shift(),o=3D=3D=3Dt&&(o=3De.=
mimeType||n.getResponseHeader("Content-Type"));if(o)for(s in =
u)if(u[s]&&u[s].test(o)){l.unshift(s);break}if(l[0]in =
r)a=3Dl[0];else{for(s in r){if(!l[0]||e.converters[s+" =
"+l[0]]){a=3Ds;break}i||(i=3Ds)}a=3Da||i}return =
a?(a!=3D=3Dl[0]&&l.unshift(a),r[a]):t}function Fn(e,t){var =
n,r,i,o,a=3D{},s=3D0,u=3De.dataTypes.slice(),l=3Du[0];if(e.dataFilter&&(t=
=3De.dataFilter(t,e.dataType)),u[1])for(i in =
e.converters)a[i.toLowerCase()]=3De.converters[i];for(;r=3Du[++s];)if("*"=
!=3D=3Dr){if("*"!=3D=3Dl&&l!=3D=3Dr){if(i=3Da[l+" "+r]||a["* =
"+r],!i)for(n in a)if(o=3Dn.split(" "),o[1]=3D=3D=3Dr&&(i=3Da[l+" =
"+o[0]]||a["* =
"+o[0]])){i=3D=3D=3D!0?i=3Da[n]:a[n]!=3D=3D!0&&(r=3Do[0],u.splice(s--,0,r=
));break}if(i!=3D=3D!0)if(i&&e["throws"])t=3Di(t);else =
try{t=3Di(t)}catch(c){return{state:"parsererror",error:i?c:"No =
conversion from "+l+" to =
"+r}}}l=3Dr}return{state:"success",data:t}}b.ajaxSetup({accepts:{script:"=
text/javascript, application/javascript, application/ecmascript, =
application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},conver=
ters:{"text script":function(e){return =
b.globalEval(e),e}}}),b.ajaxPrefilter("script",function(e){e.cache=3D=3D=3D=
t&&(e.cache=3D!1),e.crossDomain&&(e.type=3D"GET",e.global=3D!1)}),b.ajaxT=
ransport("script",function(e){if(e.crossDomain){var =
n,r=3Do.head||b("head")[0]||o.documentElement;return{send:function(t,i){n=
=3Do.createElement("script"),n.async=3D!0,e.scriptCharset&&(n.charset=3De=
.scriptCharset),n.src=3De.url,n.onload=3Dn.onreadystatechange=3Dfunction(=
e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=3D=
n.onreadystatechange=3Dnull,n.parentNode&&n.parentNode.removeChild(n),n=3D=
null,t||i(200,"success"))},r.insertBefore(n,r.firstChild)},abort:function=
(){n&&n.onload(t,!0)}}}});var =
On=3D[],Bn=3D/(=3D)\?(?=3D&|$)|\?\?/;b.ajaxSetup({jsonp:"callback",jsonpC=
allback:function(){var e=3DOn.pop()||b.expando+"_"+vn++;return =
this[e]=3D!0,e}}),b.ajaxPrefilter("json jsonp",function(n,r,i){var =
o,a,s,u=3Dn.jsonp!=3D=3D!1&&(Bn.test(n.url)?"url":"string"=3D=3Dtypeof =
n.data&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")=
&&Bn.test(n.data)&&"data");return =
u||"jsonp"=3D=3D=3Dn.dataTypes[0]?(o=3Dn.jsonpCallback=3Db.isFunction(n.j=
sonpCallback)?n.jsonpCallback():n.jsonpCallback,u?n[u]=3Dn[u].replace(Bn,=
"$1"+o):n.jsonp!=3D=3D!1&&(n.url+=3D(bn.test(n.url)?"&":"?")+n.jsonp+"=3D=
"+o),n.converters["script json"]=3Dfunction(){return s||b.error(o+" was =
not =
called"),s[0]},n.dataTypes[0]=3D"json",a=3De[o],e[o]=3Dfunction(){s=3Darg=
uments},i.always(function(){e[o]=3Da,n[o]&&(n.jsonpCallback=3Dr.jsonpCall=
back,On.push(o)),s&&b.isFunction(a)&&a(s[0]),s=3Da=3Dt}),"script"):t});va=
r Pn,Rn,Wn=3D0,$n=3De.ActiveXObject&&function(){var e;for(e in =
Pn)Pn[e](t,!0)};function In(){try{return new =
e.XMLHttpRequest}catch(t){}}function zn(){try{return new =
e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}b.ajaxSettings.xhr=3De.Ac=
tiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=3Db.ajaxSet=
tings.xhr(),b.support.cors=3D!!Rn&&"withCredentials"in =
Rn,Rn=3Db.support.ajax=3D!!Rn,Rn&&b.ajaxTransport(function(n){if(!n.cross=
Domain||b.support.cors){var r;return{send:function(i,o){var =
a,s,u=3Dn.xhr();if(n.username?u.open(n.type,n.url,n.async,n.username,n.pa=
ssword):u.open(n.type,n.url,n.async),n.xhrFields)for(s in =
n.xhrFields)u[s]=3Dn.xhrFields[s];n.mimeType&&u.overrideMimeType&&u.overr=
ideMimeType(n.mimeType),n.crossDomain||i["X-Requested-With"]||(i["X-Reque=
sted-With"]=3D"XMLHttpRequest");try{for(s in =
i)u.setRequestHeader(s,i[s])}catch(l){}u.send(n.hasContent&&n.data||null)=
,r=3Dfunction(e,i){var =
s,l,c,p;try{if(r&&(i||4=3D=3D=3Du.readyState))if(r=3Dt,a&&(u.onreadystate=
change=3Db.noop,$n&&delete =
Pn[a]),i)4!=3D=3Du.readyState&&u.abort();else{p=3D{},s=3Du.status,l=3Du.g=
etAllResponseHeaders(),"string"=3D=3Dtypeof =
u.responseText&&(p.text=3Du.responseText);try{c=3Du.statusText}catch(f){c=
=3D""}s||!n.isLocal||n.crossDomain?1223=3D=3D=3Ds&&(s=3D204):s=3Dp.text?2=
00:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,l)},n.async?4=3D=3D=3Du.readyState=
?setTimeout(r):(a=3D++Wn,$n&&(Pn||(Pn=3D{},b(e).unload($n)),Pn[a]=3Dr),u.=
onreadystatechange=3Dr):r()},abort:function(){r&&r(t,!0)}}}});var =
Xn,Un,Vn=3D/^(?:toggle|show|hide)$/,Yn=3DRegExp("^(?:([+-])=3D|)("+x+")([=
a-z%]*)$","i"),Jn=3D/queueHooks$/,Gn=3D[nr],Qn=3D{"*":[function(e,t){var =
n,r,i=3Dthis.createTween(e,t),o=3DYn.exec(t),a=3Di.cur(),s=3D+a||0,u=3D1,=
l=3D20;if(o){if(n=3D+o[2],r=3Do[3]||(b.cssNumber[e]?"":"px"),"px"!=3D=3Dr=
&&s){s=3Db.css(i.elem,e,!0)||n||1;do =
u=3Du||".5",s/=3Du,b.style(i.elem,e,s+r);while(u!=3D=3D(u=3Di.cur()/a)&&1=
!=3D=3Du&&--l)}i.unit=3Dr,i.start=3Ds,i.end=3Do[1]?s+(o[1]+1)*n:n}return =
i}]};function Kn(){return =
setTimeout(function(){Xn=3Dt}),Xn=3Db.now()}function =
Zn(e,t){b.each(t,function(t,n){var =
r=3D(Qn[t]||[]).concat(Qn["*"]),i=3D0,o=3Dr.length;for(;o>i;i++)if(r[i].c=
all(e,t,n))return})}function er(e,t,n){var =
r,i,o=3D0,a=3DGn.length,s=3Db.Deferred().always(function(){delete =
u.elem}),u=3Dfunction(){if(i)return!1;var =
t=3DXn||Kn(),n=3DMath.max(0,l.startTime+l.duration-t),r=3Dn/l.duration||0=
,o=3D1-r,a=3D0,u=3Dl.tweens.length;for(;u>a;a++)l.tweens[a].run(o);return=
 =
s.notifyWith(e,[l,o,n]),1>o&&u?n:(s.resolveWith(e,[l]),!1)},l=3Ds.promise=
({elem:e,props:b.extend({},t),opts:b.extend(!0,{specialEasing:{}},n),orig=
inalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration=
,tweens:[],createTween:function(t,n){var =
r=3Db.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return =
l.tweens.push(r),r},stop:function(t){var =
n=3D0,r=3Dt?l.tweens.length:0;if(i)return =
this;for(i=3D!0;r>n;n++)l.tweens[n].run(1);return =
t?s.resolveWith(e,[l,t]):s.rejectWith(e,[l,t]),this}}),c=3Dl.props;for(tr=
(c,l.opts.specialEasing);a>o;o++)if(r=3DGn[o].call(l,e,c,l.opts))return =
r;return =
Zn(l,c),b.isFunction(l.opts.start)&&l.opts.start.call(e,l),b.fx.timer(b.e=
xtend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).=
done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)=
}function tr(e,t){var n,r,i,o,a;for(i in =
e)if(r=3Db.camelCase(i),o=3Dt[r],n=3De[i],b.isArray(n)&&(o=3Dn[1],n=3De[i=
]=3Dn[0]),i!=3D=3Dr&&(e[r]=3Dn,delete =
e[i]),a=3Db.cssHooks[r],a&&"expand"in a){n=3Da.expand(n),delete =
e[r];for(i in n)i in e||(e[i]=3Dn[i],t[i]=3Do)}else =
t[r]=3Do}b.Animation=3Db.extend(er,{tweener:function(e,t){b.isFunction(e)=
?(t=3De,e=3D["*"]):e=3De.split(" ");var =
n,r=3D0,i=3De.length;for(;i>r;r++)n=3De[r],Qn[n]=3DQn[n]||[],Qn[n].unshif=
t(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function =
nr(e,t,n){var =
r,i,o,a,s,u,l,c,p,f=3Dthis,d=3De.style,h=3D{},g=3D[],m=3De.nodeType&&nn(e=
);n.queue||(c=3Db._queueHooks(e,"fx"),null=3D=3Dc.unqueued&&(c.unqueued=3D=
0,p=3Dc.empty.fire,c.empty.fire=3Dfunction(){c.unqueued||p()}),c.unqueued=
++,f.always(function(){f.always(function(){c.unqueued--,b.queue(e,"fx").l=
ength||c.empty.fire()})})),1=3D=3D=3De.nodeType&&("height"in =
t||"width"in =
t)&&(n.overflow=3D[d.overflow,d.overflowX,d.overflowY],"inline"=3D=3D=3Db=
.css(e,"display")&&"none"=3D=3D=3Db.css(e,"float")&&(b.support.inlineBloc=
kNeedsLayout&&"inline"!=3D=3Dun(e.nodeName)?d.zoom=3D1:d.display=3D"inlin=
e-block")),n.overflow&&(d.overflow=3D"hidden",b.support.shrinkWrapBlocks|=
|f.always(function(){d.overflow=3Dn.overflow[0],d.overflowX=3Dn.overflow[=
1],d.overflowY=3Dn.overflow[2]}));for(i in =
t)if(a=3Dt[i],Vn.exec(a)){if(delete =
t[i],u=3Du||"toggle"=3D=3D=3Da,a=3D=3D=3D(m?"hide":"show"))continue;g.pus=
h(i)}if(o=3Dg.length){s=3Db._data(e,"fxshow")||b._data(e,"fxshow",{}),"hi=
dden"in =
s&&(m=3Ds.hidden),u&&(s.hidden=3D!m),m?b(e).show():f.done(function(){b(e)=
.hide()}),f.done(function(){var t;b._removeData(e,"fxshow");for(t in =
h)b.style(e,t,h[t])});for(i=3D0;o>i;i++)r=3Dg[i],l=3Df.createTween(r,m?s[=
r]:0),h[r]=3Ds[r]||b.style(e,r),r in =
s||(s[r]=3Dl.start,m&&(l.end=3Dl.start,l.start=3D"width"=3D=3D=3Dr||"heig=
ht"=3D=3D=3Dr?1:0))}}function rr(e,t,n,r,i){return new =
rr.prototype.init(e,t,n,r,i)}b.Tween=3Drr,rr.prototype=3D{constructor:rr,=
init:function(e,t,n,r,i,o){this.elem=3De,this.prop=3Dn,this.easing=3Di||"=
swing",this.options=3Dt,this.start=3Dthis.now=3Dthis.cur(),this.end=3Dr,t=
his.unit=3Do||(b.cssNumber[n]?"":"px")},cur:function(){var =
e=3Drr.propHooks[this.prop];return =
e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var=
 t,n=3Drr.propHooks[this.prop];return =
this.pos=3Dt=3Dthis.options.duration?b.easing[this.easing](e,this.options=
.duration*e,0,1,this.options.duration):e,this.now=3D(this.end-this.start)=
*t+this.start,this.options.step&&this.options.step.call(this.elem,this.no=
w,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.pr=
ototype.init.prototype=3Drr.prototype,rr.propHooks=3D{_default:{get:funct=
ion(e){var t;return =
null=3D=3De.elem[e.prop]||e.elem.style&&null!=3De.elem.style[e.prop]?(t=3D=
b.css(e.elem,e.prop,""),t&&"auto"!=3D=3Dt?t:0):e.elem[e.prop]},set:functi=
on(e){b.fx.step[e.prop]?b.fx.step[e.prop](e):e.elem.style&&(null!=3De.ele=
m.style[b.cssProps[e.prop]]||b.cssHooks[e.prop])?b.style(e.elem,e.prop,e.=
now+e.unit):e.elem[e.prop]=3De.now}}},rr.propHooks.scrollTop=3Drr.propHoo=
ks.scrollLeft=3D{set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.e=
lem[e.prop]=3De.now)}},b.each(["toggle","show","hide"],function(e,t){var =
n=3Db.fn[t];b.fn[t]=3Dfunction(e,r,i){return =
null=3D=3De||"boolean"=3D=3Dtypeof =
e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),b.fn.extend({fa=
deTo:function(e,t,n,r){return =
this.filter(nn).css("opacity",0).show().end().animate({opacity:t},e,n,r)}=
,animate:function(e,t,n,r){var =
i=3Db.isEmptyObject(e),o=3Db.speed(t,n,r),a=3Dfunction(){var =
t=3Der(this,b.extend({},e),o);a.finish=3Dfunction(){t.stop(!0)},(i||b._da=
ta(this,"finish"))&&t.stop(!0)};return =
a.finish=3Da,i||o.queue=3D=3D=3D!1?this.each(a):this.queue(o.queue,a)},st=
op:function(e,n,r){var i=3Dfunction(e){var t=3De.stop;delete =
e.stop,t(r)};return"string"!=3Dtypeof =
e&&(r=3Dn,n=3De,e=3Dt),n&&e!=3D=3D!1&&this.queue(e||"fx",[]),this.each(fu=
nction(){var =
t=3D!0,n=3Dnull!=3De&&e+"queueHooks",o=3Db.timers,a=3Db._data(this);if(n)=
a[n]&&a[n].stop&&i(a[n]);else for(n in =
a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=3Do.length;n--;)o[n].elem!=3D=
=3Dthis||null!=3De&&o[n].queue!=3D=3De||(o[n].anim.stop(r),t=3D!1,o.splic=
e(n,1));(t||!r)&&b.dequeue(this,e)})},finish:function(e){return =
e!=3D=3D!1&&(e=3De||"fx"),this.each(function(){var =
t,n=3Db._data(this),r=3Dn[e+"queue"],i=3Dn[e+"queueHooks"],o=3Db.timers,a=
=3Dr?r.length:0;for(n.finish=3D!0,b.queue(this,e,[]),i&&i.cur&&i.cur.fini=
sh&&i.cur.finish.call(this),t=3Do.length;t--;)o[t].elem=3D=3D=3Dthis&&o[t=
].queue=3D=3D=3De&&(o[t].anim.stop(!0),o.splice(t,1));for(t=3D0;a>t;t++)r=
[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function =
ir(e,t){var =
n,r=3D{height:e},i=3D0;for(t=3Dt?1:0;4>i;i+=3D2-t)n=3DZt[i],r["margin"+n]=
=3Dr["padding"+n]=3De;return =
t&&(r.opacity=3Dr.width=3De),r}b.each({slideDown:ir("show"),slideUp:ir("h=
ide"),slideToggle:ir("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"=
hide"},fadeToggle:{opacity:"toggle"}},function(e,t){b.fn[e]=3Dfunction(e,=
n,r){return this.animate(t,e,n,r)}}),b.speed=3Dfunction(e,t,n){var =
r=3De&&"object"=3D=3Dtypeof =
e?b.extend({},e):{complete:n||!n&&t||b.isFunction(e)&&e,duration:e,easing=
:n&&t||t&&!b.isFunction(t)&&t};return =
r.duration=3Db.fx.off?0:"number"=3D=3Dtypeof =
r.duration?r.duration:r.duration in =
b.fx.speeds?b.fx.speeds[r.duration]:b.fx.speeds._default,(null=3D=3Dr.que=
ue||r.queue=3D=3D=3D!0)&&(r.queue=3D"fx"),r.old=3Dr.complete,r.complete=3D=
function(){b.isFunction(r.old)&&r.old.call(this),r.queue&&b.dequeue(this,=
r.queue)},r},b.easing=3D{linear:function(e){return =
e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},b.timers=3D[],b.fx=3D=
rr.prototype.init,b.fx.tick=3Dfunction(){var =
e,n=3Db.timers,r=3D0;for(Xn=3Db.now();n.length>r;r++)e=3Dn[r],e()||n[r]!=3D=
=3De||n.splice(r--,1);n.length||b.fx.stop(),Xn=3Dt},b.fx.timer=3Dfunction=
(e){e()&&b.timers.push(e)&&b.fx.start()},b.fx.interval=3D13,b.fx.start=3D=
function(){Un||(Un=3DsetInterval(b.fx.tick,b.fx.interval))},b.fx.stop=3Df=
unction(){clearInterval(Un),Un=3Dnull},b.fx.speeds=3D{slow:600,fast:200,_=
default:400},b.fx.step=3D{},b.expr&&b.expr.filters&&(b.expr.filters.anima=
ted=3Dfunction(e){return b.grep(b.timers,function(t){return =
e=3D=3D=3Dt.elem}).length}),b.fn.offset=3Dfunction(e){if(arguments.length=
)return =
e=3D=3D=3Dt?this:this.each(function(t){b.offset.setOffset(this,e,t)});var=
 n,r,o=3D{top:0,left:0},a=3Dthis[0],s=3Da&&a.ownerDocument;if(s)return =
n=3Ds.documentElement,b.contains(n,a)?(typeof =
a.getBoundingClientRect!=3D=3Di&&(o=3Da.getBoundingClientRect()),r=3Dor(s=
),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r=
.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},b.offset=3D{setOffset:=
function(e,t,n){var =
r=3Db.css(e,"position");"static"=3D=3D=3Dr&&(e.style.position=3D"relative=
");var =
i=3Db(e),o=3Di.offset(),a=3Db.css(e,"top"),s=3Db.css(e,"left"),u=3D("abso=
lute"=3D=3D=3Dr||"fixed"=3D=3D=3Dr)&&b.inArray("auto",[a,s])>-1,l=3D{},c=3D=
{},p,f;u?(c=3Di.position(),p=3Dc.top,f=3Dc.left):(p=3DparseFloat(a)||0,f=3D=
parseFloat(s)||0),b.isFunction(t)&&(t=3Dt.call(e,n,o)),null!=3Dt.top&&(l.=
top=3Dt.top-o.top+p),null!=3Dt.left&&(l.left=3Dt.left-o.left+f),"using"in=
 =
t?t.using.call(e,l):i.css(l)}},b.fn.extend({position:function(){if(this[0=
]){var =
e,t,n=3D{top:0,left:0},r=3Dthis[0];return"fixed"=3D=3D=3Db.css(r,"positio=
n")?t=3Dr.getBoundingClientRect():(e=3Dthis.offsetParent(),t=3Dthis.offse=
t(),b.nodeName(e[0],"html")||(n=3De.offset()),n.top+=3Db.css(e[0],"border=
TopWidth",!0),n.left+=3Db.css(e[0],"borderLeftWidth",!0)),{top:t.top-n.to=
p-b.css(r,"marginTop",!0),left:t.left-n.left-b.css(r,"marginLeft",!0)}}},=
offsetParent:function(){return this.map(function(){var =
e=3Dthis.offsetParent||o.documentElement;while(e&&!b.nodeName(e,"html")&&=
"static"=3D=3D=3Db.css(e,"position"))e=3De.offsetParent;return =
e||o.documentElement})}}),b.each({scrollLeft:"pageXOffset",scrollTop:"pag=
eYOffset"},function(e,n){var =
r=3D/Y/.test(n);b.fn[e]=3Dfunction(i){return =
b.access(this,function(e,i,o){var a=3Dor(e);return o=3D=3D=3Dt?a?n in =
a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?b(a).scrollLeft=
():o,r?o:b(a).scrollTop()):e[i]=3Do,t)},e,i,arguments.length,null)}});fun=
ction or(e){return =
b.isWindow(e)?e:9=3D=3D=3De.nodeType?e.defaultView||e.parentWindow:!1}b.e=
ach({Height:"height",Width:"width"},function(e,n){b.each({padding:"inner"=
+e,content:n,"":"outer"+e},function(r,i){b.fn[i]=3Dfunction(i,o){var =
a=3Darguments.length&&(r||"boolean"!=3Dtypeof =
i),s=3Dr||(i=3D=3D=3D!0||o=3D=3D=3D!0?"margin":"border");return =
b.access(this,function(n,r,i){var o;return =
b.isWindow(n)?n.document.documentElement["client"+e]:9=3D=3D=3Dn.nodeType=
?(o=3Dn.documentElement,Math.max(n.body["scroll"+e],o["scroll"+e],n.body[=
"offset"+e],o["offset"+e],o["client"+e])):i=3D=3D=3Dt?b.css(n,r,s):b.styl=
e(n,r,i,s)},n,a?i:t,a,null)}})}),e.jQuery=3De.$=3Db,"function"=3D=3Dtypeo=
f =
define&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){retu=
rn b})})(window);
------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://creatim.qtmojo.cn/td/AllyesDeliver.min.js

/*!=0A=
*description: is to deliver third party ads on imedia platform=0A=
*callback: <script src=3D"cdn/ADcallback.min.js"></script>=0A=
*refer:2.0->imedia2.7, 2.1->imedia2.7.1, 2.2->imedia2.8, =
2.2.1->imedia2.8.1=0A=
*date:2014.3.26=0A=
*version:2.2.1=0A=
*email:lei_ding@allyes.com=0A=
*/=0A=
!function(a){var =
b=3Da.document,c=3D"delay.min.js",d=3D"close.gif",e=3Dfunction(a){var =
b=3Da[a.length-1];return"?"!=3Db&&"&"!=3Db&&(a+=3D-1=3D=3Da.lastIndexOf("=
?")?"?":"&"),a},f=3Dfunction(a){var b=3D/(chrome)[ =
\/]([\w.]+)/.exec(a)||/(webkit)[ =
\/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ =
\/]([\w.]+)/.exec(a)||/(msie) =
([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? =
rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}}(na=
vigator.userAgent.toLowerCase()),g=3D"msie"=3D=3D=3Df.browser,h=3Dg&&"6.0=
"=3D=3D=3Df.version,i=3Dfunction(a){return =
parseInt(a)},j=3Dfunction(){var =
a=3D!0;try{a=3DAllyesDeliver.ins,a=3Da?a.getAttribute("ads-debug"):null,a=
=3D"1"=3D=3D=3Da||"true"=3D=3D=3Da}catch(b){}return =
a},k=3Dfunction(b){if(j()){try{b=3D"string"=3D=3Dtypeof b?b:b instanceof =
Error?b.message:JSON&&JSON.stringify(b)}catch(c){b=3D"JSON =
undefined!"}a.console&&console.log(b)}},l=3Dfunction(){return =
Math.ceil(1e10*Math.random()).toString(16)},m=3Dfunction(a){var c;return =
a=3Da||b,c=3Da.getElementsByTagName("script"),c.length?c[c.length-1]:!1},=
n=3Dfunction(a,b){var c=3Dnull;for(c in =
b)b.hasOwnProperty(c)&&(a[c]=3Db[c]);return =
a},o=3D"js=3Die",p=3D"lsid=3D",q=3D"sid=3D",r=3D{Head:"javascript",Void:"=
void"},s=3Dfunction(a){k("start callback checking...");var =
b=3Dfunction(){e&&(clearInterval(e),e=3Dnull),f&&(clearTimeout(f),f=3Dnul=
l),k("clear callback checking.")},c=3D8,d=3Dfunction(a){var =
e,f,g,h=3Dfunction(){b(),AllyesDeliver.next("mm")};try{if(a.frames.length=
>=3Dc)return void =
h()}catch(i){}for(f=3D0,g=3Da.length;g>f;f++){e=3Da[f];try{if(e.frames.le=
ngth>=3Dc)return void =
h();e.frames.length&&d(e.frames)}catch(i){}}},e=3DsetInterval(function(){=
d(a)},50),f=3DsetTimeout(function(){b()},5e3);return =
b},t=3Dfunction(a,b){return k("start =
settimeout..."),setTimeout(function(a){var =
b=3Du("#"+a),c=3Db.getAttribute("ads-tid");return =
function(){k("timeout"),w(c)?k("has =
ads."):AllyesDeliver.next("mm",a)}}(a),b)},u=3Dfunction(a,c){var =
d=3Dnull;return =
c=3Dc||b,0=3D=3D=3Da.indexOf("#")?(a=3Da.substr(1),d=3Dc.getElementById(a=
)):(d=3Dc.getElementsByTagName(a),d=3Dd.length?d:null),d},v=3D["a","img",=
"object","embed","div","ins","span","iframe","canvas","vedio","svg","vml"=
],w=3Dfunction(a){var =
b=3D0,c=3Dv.length,d=3Du("#"+a);if(!d)return!0;for(;c>b;b++)if(u(v[b],d))=
return!0;return!1},x=3Dfunction(a){return =
a.parent!=3D=3Da.self},y=3Dfunction(a){var =
b;try{a.document,b=3D!0}catch(c){b=3D!1}return =
b},z=3Dfunction(){return"undefined"!=3Dtypeof =
allyes_wrap_201314&&allyes_wrap_201314},A=3Dfunction(a){return =
z()?!1:x(a)&&y(a.parent)&&a.parent.AllyesDeliver&&a.location.href=3D=3D=3D=
a.parent.location.href},B=3Dfunction(a){for(;y(a.parent)&&x(a);)a=3Da.par=
ent;return{win:a}},C=3Dfunction(){var b,c=3D"",d=3Da;return =
x(d)?(b=3DB(d),c=3Db.win=3D=3D=3Dd.top?b.win.location.href:b.win.document=
.referrer):c=3Dd.location.href,c},D=3D{add:function(b,c,d){a.addEventList=
ener?b.addEventListener(c,d,!1):a.attachEvent&&b.attachEvent("on"+c,d)},c=
lear:function(b,c,d){a.removeEventListener?b.removeEventListener(c,d,!1):=
a.detachEvent&&b.detachEvent("on"+c,d)},once:function(a,b,c){var =
d=3Dthis,e=3Dfunction(){c.apply(a,arguments),d.clear(a,b,e)};d.add(a,b,e)=
}},E=3Dfunction(a,c,d,e){var f;if("string"=3D=3Dtypeof =
a&&(a=3D0=3D=3D=3Da.indexOf("#")?u(a):b.createElement(a)),!a)return =
null;c=3Dc||{},d=3Dd||{};for(f in =
c)c.hasOwnProperty(f)&&a.setAttribute(f,c[f]);if(f=3Dnull,"string"=3D=3Dt=
ypeof d)a.style.cssText=3Dd;else for(f in =
d)d.hasOwnProperty(f)&&(a.style[f]=3Dd[f]);return =
e=3De||null,e&&(a.innerHTML=3De),a},F=3Dfunction(a,b){var =
c,e,f,g=3Du("#"+a),h=3Dg.getAttribute("ads-outer"),i=3Dg.getAttribute("ad=
s-close"),j=3Du("#wrap_"+a),k=3Du("#pos_"+a),l=3D19,m=3D["margin:0;border=
:0;padding:0;position:fixed;_position:absolute;z-index:9999;"],n=3DAllyes=
Deliver.cdnSrc(d,g),o=3D"display:block;cursor:pointer;width:34px;height:1=
9px;border:none;margin:0;padding:0;position:absolute;top:0;right:0;z-inde=
x:99999;background:transparent url("+n+") =
no-repeat;",p=3Du("#close_"+a);switch(p&&p.parentNode.removeChild(p),"1"=3D=
=3D=3Di?(e=3Db[1]+l,m.push("width:"+b[0]+"px;height:"+e+"px;"),p=3DE("div=
",{id:["close","_",a].join("")},"position:relative;margin:0;border:0;padd=
ing:0;height:"+l+"px;"),j.parentNode.insertBefore(p,j),f=3DE("span",null,=
o),p.appendChild(f),p=3Df):(e=3Db[1],m.push("width:"+b[0]+"px;height:"+b[=
1]+"px;"),p=3DE("div",{id:["close","_",a].join("")},o),j.parentNode.inser=
tBefore(p,j)),D.add(p,"click",function(){return =
k.style.display=3D"none",!1}),"0"=3D=3D=3Di&&(p.style.display=3D"none"),h=
){case"1":m.push("left:0;top:0;"),m.push("_left:expression(eval(document.=
documentElement.scrollLeft||document.body.scrollLeft));_top:expression(ev=
al(document.documentElement.scrollTop||document.body.scrollTop));");break=
;case"2":m.push("right:0;top:0;"),m.push("_left:expression(eval((document=
.documentElement.scrollLeft||document.body.scrollLeft)+(document.document=
Element.clientWidth||document.body.clientWidth)-"+b[0]+"));_top:expressio=
n(eval(document.documentElement.scrollTop||document.body.scrollTop));");b=
reak;case"3":m.push("right:0;bottom:0;"),m.push("_left:expression(eval((d=
ocument.documentElement.scrollLeft||document.body.scrollLeft)+(document.d=
ocumentElement.clientWidth||document.body.clientWidth)-"+b[0]+"));_top:ex=
pression(eval((document.documentElement.scrollTop||document.body.scrollTo=
p)+(document.documentElement.clientHeight||document.body.clientHeight)-"+=
e+"));");break;case"4":m.push("left:0;bottom:0;"),m.push("_left:expressio=
n(eval(document.documentElement.scrollLeft||document.body.scrollLeft));_t=
op:expression(eval((document.documentElement.scrollTop||document.body.scr=
ollTop)+(document.documentElement.clientHeight||document.body.clientHeigh=
t)-"+e+"));");break;default:c=3D/^\d+,\d+$/.test(h)?h.split(","):[0,0],m.=
push("left:"+c[0]+"px;top:"+c[1]+"px;"),m.push("_left:expression(eval((do=
cument.documentElement.scrollLeft||document.body.scrollLeft)+"+c[0]+"));_=
top:expression(eval((document.documentElement.scrollTop||document.body.sc=
rollTop)+"+c[1]+"));")}m=3Dm.join(""),E(k,null,m)},G=3Dfunction(a,b){var =
c=3D[],d=3D[],e=3D[];if("0"=3D=3D=3Da)return{tdiv:"",talign:"",body:""};s=
witch(b){case"1":break;case"2":c.push("position:absolute;right:0;top:0;")=
,d.push("text-align:right;"),e.push('align=3D"right"');break;case"3":c.pu=
sh("position:absolute;right:0;bottom:0;"),d.push("text-align:right;"),e.p=
ush('align=3D"right"');break;case"4":c.push("position:absolute;left:0;bot=
tom:0;"),d.push("text-align:left;"),e.push('align=3D"left"');break;defaul=
t:d.push("text-align:center;"),e.push('align=3D"center"')}return =
c=3Dc.join(""),d=3Dd.join(""),e=3De.join(""),{tdiv:c,talign:e,body:d}},H=3D=
{WIDTH:300,HEIGHT:250};"undefined"=3D=3Dtypeof =
a.AllyesGlobal&&(a.AllyesGlobal=3D{}),a.AllyesDeliver=3D{_hideForNext:fun=
ction(a){a=3Da||null,a&&(u("#"+a).style.display=3D"none")},_createScript:=
function(){var =
c,d,e=3DAllyesDeliver.ins,f=3De.getAttribute("id"),h=3De.getAttribute("ad=
s-cid"),i=3DAllyesGlobal[h],j=3Di.ads,l=3Dfunction(){A(a)&&!g&&b.write("<=
/div>")};if(/google_ad_/i.test(j)){if(d=3DC(),k("adx add google_page_url =
=3D =
"+d),i.ads=3Dj.replace(/google_ad_\w+\s*=3D\s*\S+;/i,function(a){return["=
google_page_url =3D ",'"',d,'"',";",a].join("")}),k("check adx =
px..."),c=3DMath.max(a.screen.width,a.document.body.offsetWidth),c-2*i.wi=
dth<1024)return l(),k("adx px wrong."),void =
AllyesDeliver.next("mm");k("adx px =
right.")}k(i),b.write(i.ads),l(),A(a)&&(i._clearCheck=3Ds(a)),e.setAttrib=
ute("ads-thandle",t(f,i.levelTimeout))},_init:function(){var =
d,f,h,j,r,s,t,u,v,w,x,y,z,B=3DAllyesDeliver.ins?AllyesDeliver.ins:m();if(=
B){if(z=3DB.getAttribute("id")||0,z||(z=3D["allyes_ins_",l()].join(""),B.=
setAttribute("id",z)),u=3DB.getAttribute("ads-output"),u=3D/^[1-2]{1}$/.t=
est(u)?u:"0",B.setAttribute("ads-output",u),"iframe"=3D=3D=3DB.getAttribu=
te("ads-type")&&"0"=3D=3D=3Du&&(B.setAttribute("ads-output","1"),B.setAtt=
ribute("ads-inner","1"),B.setAttribute("ads-type","0"),B.removeAttribute(=
"ads-type")),u=3DB.getAttribute("ads-output"),v=3DB.getAttribute("ads-out=
puts")||"-1","-1"=3D=3D=3Dv&&(B.setAttribute("ads-outputs",u),B.setAttrib=
ute("ads-output",0),B.removeAttribute("ads-output")),"0"!=3D=3Du)return =
this._wrapIfm(B),!1;AllyesDeliver.ins=3DB,j=3DB.getAttribute("ads-src")||=
"",j.lastIndexOf(o)<0&&(j=3De(j),j+=3Do),j=3Dj.replace(new =
RegExp("&"+p+"\\S+"),""),f=3DB.getAttribute("ads-sids")||"",f&&(j=3De(j),=
f=3Df.split(","),j+=3D[p,f].join("")),y=3DB.getAttribute("ads-msid"),y=3D=
null=3D=3D=3Dy?0:y,y=3Di(y),y>0&&(j=3Dj.replace(new =
RegExp("&"+q+"\\S+"),""),j=3De(j),j+=3D[q,y].join("")),d=3DB.getAttribute=
("ads-times")||0,h=3D[l(),d].join("_"),B.setAttribute("ads-tid",h),w=3DB.=
getAttribute("ads-inner")||"5",v=3DB.getAttribute("ads-outputs"),x=3DG(v,=
w),b.write('<div id=3D"'+h+'" '+x.talign+' =
style=3D"padding:0;margin:0;border:0;'+x.tdiv+'">');try{"undefined"!=3Dty=
peof =
allyes_cid?(s=3Dparent.AllyesGlobal[allyes_cid],r=3DAllyesGlobal[allyes_c=
id]=3Dn({},s),allyes_cid=3Dvoid 0,this._createScript()):b.write('<script =
type=3D"text/javascript" data-belong=3D"allyes" =
src=3D"'+j+'"></script>')}catch(C){k(C)}(!A(a)||g)&&(t=3Dthis.cdnSrc(c),b=
.write('<script type=3D"text/javascript" data-belong=3D"allyes" =
src=3D"'+t+'"></script>'))}},_wrapIfm:function(a){var =
c,d,e=3Da.getAttribute("ads-outputs"),f=3Da.getAttribute("ads-inner"),j=3D=
a.getAttribute("ads-outer")||"3",k=3Da.getAttribute("ads-close")||"1",l=3D=
a.getAttribute("id"),m=3Da.getAttribute("ads-width")||H.WIDTH,n=3Da.getAt=
tribute("ads-height")||H.HEIGHT,o=3Db.createElement("iframe"),p=3D[],q=3D=
function(){var =
b=3D[],c=3Da.getAttribute("src"),d=3Da.getAttribute("ads-src"),g=3Da.getA=
ttribute("ads-debug")||"0",h=3DG(e,f);return b.push("<!DOCTYPE =
html><html><head>"),b.push('<meta http-equiv=3D"Content-Type" =
content=3D"text/html; =
charset=3Dutf-8">'),b.push("<style>html,body{padding:0;margin:0;border:0;=
overflow:hidden;background-color:transparent;"+h.body+"}</style>"),b.push=
("</head><body>"),b.push('<script type=3D"text/javascript">var =
allyes_wrap_201314 =3D true;</script>'),b.push('<script id=3D"'+l+'" =
ads-debug=3D"'+g+'" ads-outputs=3D"'+e+'" ads-inner=3D"'+f+'" =
ads-outer=3D"'+j+'" ads-close=3D"'+k+'" type=3D"text/javascript" =
src=3D"'+c+'" =
ads-src=3D"'+d+'"></script>'),b.push("</body></html>"),b.join("")};m=3Di(=
m),n=3Di(n),f=3D/^[1-5]{1}$/.test(f)?f:0,f||(f=3D"2"=3D=3D=3De?"2":"5"),o=
.setAttribute("id",["wrap","_",l].join("")),a.setAttribute("ads-outer",j)=
,a.setAttribute("ads-inner",f),a.setAttribute("ads-close",k),o.frameBorde=
r=3D0,"2"=3D=3D=3De?(h&&b.write("<style>*html,*html,body{background-image=
:url(about:blank);background-attachment:fixed;}</style>"),c=3DE("div",{id=
:["pos","_",l].join("")}),a.parentNode.insertBefore(c,a),c.appendChild(o)=
):a.parentNode.insertBefore(o,a),this._updateOuter(e,l,[m,n]);try{d=3Do.c=
ontentWindow,d.document.open(),d.document.write(q())}catch(s){p.push([r.H=
ead,":",r.Void].join("")+"((function(){"),p.push(" =
document.open();"),p.push(' document.domain=3D"'+b.domain+'";'),p.push(" =
document.write('"+q()+"');"),p.push("})())"),o.src=3Dp.join("")}finally{g=
?setTimeout(function(){try{o.contentWindow.document.close()}catch(a){}},5=
e3):d.document.close()}o.style.cssText=3D"margin:0;padding:0;border:0;",E=
(o,{width:m,height:n}),o.scrolling=3D"no",o.setAttribute("allowtransparen=
cy",!0)},cdnSrc:function(a,b){return"undefined"=3D=3Dtypeof =
AllyesDeliver?[r.Head,":",r.Void,"(0)"].join(""):this._cdnSrc(a,b)},_cdnS=
rc:function(a,b){var =
c=3DAllyesDeliver.ins||b,d=3Dc.getAttribute("src"),e=3Dd.lastIndexOf("/")=
;return =
d=3D0>e?a:[d.substring(0,e),a].join("/")},_updateOuter:function(a,b,c){va=
r =
d,e,f=3Du("#wrap_"+b);E(f,{width:c[0],height:c[1]}),"1"!=3D=3Da&&(d=3Du("=
#pos_"+b),e=3Dd.getAttribute("data-update")||0,e=3Di(e),e>=3D2||(F(b,c),d=
.setAttribute("data-update",e+1)))},init:function(b){var =
c,d,e=3DAllyesDeliver.ins,f=3Db.cid,g=3De.getAttribute("ads-tid");b.ads=3D=
"string"=3D=3Dtypeof =
b.ads?b.ads:b.ads.thirdCode,b.maxLevels=3Di(b.maxLevels),b.levelTimeout=3D=
i(b.levelTimeout)||5,b.levelTimeout*=3D1e3,b.width=3Di(b.width)||H.WIDTH,=
b.height=3Di(b.height)||H.HEIGHT,d=3De.getAttribute("ads-cid")||0,d||e.se=
tAttribute("ads-cid",f),b=3Da.AllyesGlobal[f]=3Dn({},b),c=3Db.type,"scrip=
t"=3D=3D=3Dc?this._createScript():A(a)?this._createScript():(this._hideFo=
rNext(g),this._createMM())},_createMM:function(a){var =
c,d,e=3Da&&u("#"+a)||AllyesDeliver.ins,f=3D!!a,h=3De.getAttribute("ads-ci=
d"),i=3DAllyesGlobal[h],j=3Di.width||H.WIDTH,k=3Di.height||H.HEIGHT,l=3Db=
.createElement("iframe"),m=3De.getAttribute("ads-times")||0,n=3D[],o=3Dfu=
nction(){var =
b=3D[],d=3De.getAttribute("src"),g=3De.getAttribute("ads-src"),i=3De.getA=
ttribute("ads-sids")||"",j=3De.getAttribute("ads-outputs")||"0",k=3De.get=
Attribute("ads-debug")||"0",l=3De.getAttribute("ads-inner")||"5",n=3De.ge=
tAttribute("ads-outer")||"3",o=3De.getAttribute("ads-close")||"1",p=3DG(j=
,l);return b.push("<!DOCTYPE html><html><head>"),b.push('<meta =
http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3Dutf-8">'),b.push("<style>html,body{padding:0;margin:0;border:0;=
overflow:hidden;background-color:transparent;"+p.body+"}</style>"),b.push=
("</head><body>"),f||b.push('<script type=3D"text/javascript">var =
allyes_cid =3D "'+h+'";</script>'),b.push('<script id=3D"'+a+'" =
ads-msid=3D"'+c+'" ads-debug=3D"'+k+'" ads-outputs=3D"'+j+'" =
ads-inner=3D"'+l+'" ads-outer=3D"'+n+'" ads-close=3D"'+o+'" =
ads-cid=3D"'+h+'" type=3D"text/javascript" src=3D"'+d+'" =
ads-times=3D"'+m+'" ads-sids=3D"'+i+'" =
ads-src=3D"'+g+'"></script>'),b.push("</body></html>"),b.join("")};c=3De.=
getAttribute("ads-msid"),c=3Dnull=3D=3D=3Dc?0:c,l.frameBorder=3D0,a=3De.g=
etAttribute("id"),e.parentNode.insertBefore(l,e),l.setAttribute("id",["if=
m","_",m,"_",a].join(""));try{d=3Dl.contentWindow,d.document.open(),d.doc=
ument.write(o())}catch(p){n.push([r.Head,":",r.Void].join("")+"((function=
(){"),n.push(" document.open();"),n.push(' =
document.domain=3D"'+b.domain+'";'),n.push(" =
document.write('"+o()+"');"),n.push("})())"),l.src=3Dn.join("")}finally{g=
?setTimeout(function(){try{l.contentWindow.document.close()}catch(a){}},5=
e3):d.document.close()}l.style.cssText=3D"margin:0;padding:0;border:0;wid=
th:"+j+"px;height:"+k+"px;",l.scrolling=3D"no",l.setAttribute("allowtrans=
parency",!0)},checking:function(){var =
a,b=3DAllyesDeliver.ins,c=3Db.getAttribute("ads-cid"),d=3DAllyesGlobal[c]=
;d&&(a=3Dd.back,a&&(d.back=3D!1,this._init()))},next:function(b,c){var =
d,e,f,g,h,l,m,n=3Dc&&u("#"+c)||AllyesDeliver.ins,o=3Dn.getAttribute("ads-=
cid"),p=3Dn.getAttribute("ads-tid"),q=3DAllyesGlobal[o],r=3Dn.getAttribut=
e("ads-thandle")||0;return =
c=3Dn.getAttribute("id"),f=3Dn.getAttribute("ads-times")||0,f=3Di(f),g=3D=
f,r&&(clearTimeout(i(r)),n.removeAttribute("ads-thandle"),r=3Dnull,k("can=
cel timeout.")),q._clearCheck&&(q._clearCheck(),delete =
q._clearCheck),f>q.maxLevels?void k("to max =
levels:"+q.maxLevels):(this._hideForNext(p),f+=3D1,n.setAttribute("ads-ti=
mes",f),l=3Dq.sid,h=3Dn.getAttribute("ads-sids")||"",h=3Dh?h.split(",").c=
oncat(l):[l],h=3Dh.join(","),n.setAttribute("ads-sids",h),m=3D"undefined"=
=3D=3Dtypeof =
q.mm_sid?0:q.mm_sid,n.setAttribute("ads-msid",m),k("next..."),void(A(a)?(=
e=3Dparent.document.getElementById(c),e.setAttribute("ads-times",f),e.set=
Attribute("ads-sids",h),e.setAttribute("ads-msid",m),q.back=3D!1,d=3D["if=
m","_",g,"_",c].join(""),parent.AllyesDeliver._hideForNext(d),parent.Ally=
esDeliver._createMM(c),j()||parent.AllyesDeliver._clearLast(d)):"script"=3D=
=3D=3Db?q.back=3D!0:(q.back=3D!1,AllyesDeliver._createMM(c))))},_clearLas=
t:function(a){var =
b,c=3Du("#"+a);try{c.src=3D"about:blank",b=3Dc.contentDocument||c.content=
Window.document,b.write(""),b.close(),c.parentNode.removeChild(c),g&&"fun=
ction"=3D=3Dtypeof CollectGarbage&&CollectGarbage()}catch(d){k("relase =
last iframe error...")}}},AllyesDeliver._init()}(window);
------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.csdn.net/public/common/toolbar/js/html.js

var _gaq =3D [];
var userAgent =3D navigator.userAgent.toLowerCase();
if(userAgent =3D=3D null || userAgent =3D=3D ''){
//
}else{
    if(userAgent.indexOf("android") !=3D -1 || userAgent.indexOf("ios") =
!=3D -1 || userAgent.indexOf("iphone") !=3D -1 || =
userAgent.indexOf("ipad") !=3D -1 || userAgent.indexOf("windows phone") =
!=3D -1 ){
    //
	}else{
	  //google =E7=BB=9F=E8=AE=A1start
	  =
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=3Dr;i[r]=3Di[r]||func=
tion(){
		  (i[r].q=3Di[r].q||[]).push(arguments)},i[r].l=3D1*new =
Date();a=3Ds.createElement(o),
		  =
m=3Ds.getElementsByTagName(o)[0];a.async=3D1;a.src=3Dg;m.parentNode.inser=
tBefore(a,m)
		  =
})(window,document,'script','//www.google-analytics.com/analytics.js','ga=
');
	=09
		  ga('create', 'UA-64962204-1', 'auto');
		  ga('send', 'pageview');
      //google =E7=BB=9F=E8=AE=A1end
 }
}

//tag=E6=8E=A8=E8=8D=90=E5=BC=B9=E7=AA=97
(function(){
var protocol =3D location.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
$.getScript(protocol + =
'//csdnimg.cn/public/common/tag-suggest-pop/js/main.js?'+(new =
Date()/120000|0));
})();

!(function(){
  var currUser=3D{
      userName:"",
      userNick:'<a class=3D"set-nick" =
href=3D"https://passport.csdn.net/account/profile">=E8=AE=BE=E7=BD=AE=E6=98=
=B5=E7=A7=B0<span class=3D"write-icon"></span></a>',
      userInfo:"",
      desc : '<a class=3D"fill-dec" href=3D"//my.csdn.net" =
target=3D"_blank">=E7=BC=96=E8=BE=91=E8=87=AA=E6=88=91=E4=BB=8B=E7=BB=8D=EF=
=BC=8C=E8=AE=A9=E6=9B=B4=E5=A4=9A=E4=BA=BA=E4=BA=86=E8=A7=A3=E4=BD=A0<spa=
n class=3D"write-icon"></span></a>',
      =
avatar:"//static.csdn.net/public/common/toolbar/images/100x100.jpg"
    };
  var prodLogo =3D "none";
  var $oScriptTag =3D$("#toolbar-tpl-scriptId");
  var skin =3D$oScriptTag.attr("skin")=3D=3D"black"?" =
csdn-toolbar-skin-black ":"";
  var fixed =3D $oScriptTag.attr("fixed")=3D=3D"top"?" navbar-fixed-top =
":"";
  var prodIndex=3D =
$oScriptTag.attr("domain")?$oScriptTag.attr("domain"):window.location.pro=
tocol+"//"+window.location.host;
      prodIndex+=3D'?ref=3Dtoolbar_logo';
  var getCookie =3Dfunction =
(objName){//=E8=8E=B7=E5=8F=96=E6=8C=87=E5=AE=9A=E5=90=8D=E7=A7=B0=E7=9A=84=
cookie=E7=9A=84=E5=80=BC
      var arrStr =3D document.cookie.split("; ");
      for(var i =3D 0;i < arrStr.length;i ++){
      var temp =3D arrStr[i].split("=3D");
      if(temp[0] =3D=3D objName) return decodeURI(temp[1]);
      }
  }
  var setCookie =3D function (name,value) {
    var Days =3D 30;
    var exp =3D new Date();
    exp.setTime(exp.getTime() + Days*24*60*60*1000);
    document.cookie =3D name + "=3D"+ escape (value) + ";expires=3D" + =
exp.toGMTString();// + ";domain=3D.csdn.net;path=3D/";
  }
  var HTMLEncode =3Dfunction(str) {
      var s =3D "";
      if(str.length =3D=3D 0) return "";
      s =3D str.replace(/&/g, "&amp;").replace(/</g, =
"&lt;").replace(/>/g, "&gt;").replace(/\'/g, "&#39;").replace(/\"/g, =
"&quot;");
      return s;
    }
  var AUtoAvatar =3D function(AU){
    if(!AU||!currUser.userName){
      return false;
    }
    var _AUPath =3D AU.split("").join("/");
    var userName =3D currUser.userName&&currUser.userName.toLowerCase();
    return "http://avatar.csdn.net/"+_AUPath+"/2_"+userName+".jpg";
  }
  var hasLogin =3D false;
  var loginMark =3D"unlogin";
  function checkLogin(callback) {
          currUser.userNick =3D getCookie("UserNick") =
||currUser.userNick;
          currUser.userName =3D getCookie("UserName") || =
currUser.userName;
          currUser.userInfo =3D getCookie("UserInfo") || =
currUser.userInfo;
          currUser.avatar =3D AUtoAvatar(getCookie("AU")) || =
currUser.avatar;
          currUser.desc =3D getCookie("UD") || currUser.desc;
          if(getCookie("UD")){
            currUser.desc =3D =
HTMLEncode(decodeURIComponent(currUser.desc).replace(/\+/g," "));
          }
          callback(currUser);
    }
  checkLogin(function(currUser){
    if(currUser.userName&&currUser.userInfo){
        hasLogin =3D true;
    }
    loginMark =3D hasLogin?"":"unlogin";
  })

  /*
  * init pord logo
  */
  var prodJSON =3D {
      "blog" : "blog-icon",
      "download" : "down-icon",
      "bbs" : "bbs-icon",
      "my" :"space-icon",
      "code" : "code-icon",
      "share" : "share-icon",
      "tag" : "tag-icon",
      "dashboard":"dashboard-icon",
      "news" : "news-icon",
      "tag" : "tag-icon",
      "ask" : "ask-icon",
      "notify" : "notify-icon"
  }
  if(prodJSON[$oScriptTag.attr("prod")]){
    =
prodLogo=3DprodJSON[$oScriptTag.attr("prod")]||$oScriptTag.attr("prod");
  }

  // $( 'head' ).append( '<link rel=3D"stylesheet" =
href=3D"//csdnimg.cn/public/common/toolbar/css/font-awesome.min.css">' =
);
  // =
=E6=B3=A8=E5=86=8Curl=EF=BC=8Chttps://passport.csdn.net/account/register?=
ref=3Dtoolbar

  var tpl =3D'\<div class=3D"csdn-toolbar'+skin+fixed+'">\
        <div class=3D"container row center-block ">\
          <div class=3D"col-md-3 pull-left logo clearfix"><a =
href=3D"http://www.csdn.net?ref=3Dtoolbar" =
title=3D"CSDN=E9=A6=96=E9=A1=B5" target=3D"_blank" class=3D"icon"></a><a =
title=3D"=E9=A2=91=E9=81=93=E9=A6=96=E9=A1=B5" href=3D"'+prodIndex+'" =
class=3D"img '+prodLogo+'"></a></div>\
          <div class=3D"pull-right login-wrap '+loginMark+'">\
            <ul class=3D"btns">\
              <li class=3D"loginlink"><a =
href=3D"https://passport.csdn.net/account/login?ref=3Dtoolbar" =
target=3D"_top">=E7=99=BB=E5=BD=95&nbsp;</a>|<a  target=3D"_top" =
href=3D"http://passport.csdn.net/account/mobileregister?ref=3Dtoolbar&act=
ion=3DmobileRegister">&nbsp;=E6=B3=A8=E5=86=8C</a></li>\
              <li class=3D"search">\
                <div class=3D"icon on-search-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <form action=3D"http://so.csdn.net/search" =
method=3D"get" target=3D"_blank">\
                      <input type=3D"hidden" value=3D"toolbar" =
name=3D"ref" accesskey=3D"2">\
                      <div class=3D"border">\
                        <input placeholder=3D"=E6=90=9C=E7=B4=A2" =
type=3D"text" value=3D"" name=3D"q" accesskey=3D"2"><span =
class=3D"icon-enter-sm"></span>\
                      </div>\
                    </form>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"favor">\
                <div class=3D"icon on-favor-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div style=3D"display:none;" =
class=3D"favor-success"><span =
class=3D"msg">=E6=94=B6=E8=97=8F=E6=88=90=E5=8A=9F</span>\
                      <div class=3D"btns"><span class=3D"btn btn-primary =
ok">=E7=A1=AE=E5=AE=9A</span></div>\
                    </div>\
                    <div style=3D"display:none;" =
class=3D"favor-failed"><span class=3D"icon-danger-lg"></span><span =
class=3D"msg">=E6=94=B6=E8=97=8F=E5=A4=B1=E8=B4=A5=EF=BC=8C=E8=AF=B7=E9=87=
=8D=E6=96=B0=E6=94=B6=E8=97=8F</span>\
                      <div class=3D"btns"><span class=3D"btn btn-primary =
ok">=E7=A1=AE=E5=AE=9A</span></div>\
                    </div>\
                    <form role=3D"form" class=3D"form-horizontal =
favor-form">\
                      <div class=3D"form-group">\
                        <div class=3D"clearfix">\
                          <label for=3D"input-title" class=3D"col-sm-2 =
control-label">=E6=A0=87=E9=A2=98</label>\
                          <div class=3D"col-sm-10">\
                            <input id=3D"inputTitle" type=3D"text" =
placeholder=3D"" class=3D"title form-control">\
                          </div>\
                        </div>\
                        <div class=3D"alert =
alert-danger"><strong></strong>=E6=A0=87=E9=A2=98=E4=B8=8D=E8=83=BD=E4=B8=
=BA=E7=A9=BA</div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-url" class=3D"col-sm-2 =
control-label">=E7=BD=91=E5=9D=80</label>\
                        <div class=3D"col-sm-10">\
                          <input id=3D"input-url" type=3D"text" =
placeholder=3D"" class=3D"url form-control">\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-tag" class=3D"col-sm-2 tag =
control-label">=E6=A0=87=E7=AD=BE</label>\
                        <div class=3D"col-sm-10">\
                          <input id=3D"input-tag" type=3D"text" =
class=3D"form-control tag">\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-description" =
class=3D"description col-sm-2 control-label">=E6=91=98=E8=A6=81</label>\
                        <div class=3D"col-sm-10">\
                          <textarea id=3D"input-description" =
class=3D"form-control description"></textarea>\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <div class=3D"col-sm-offset-2 col-sm-10 ft">\
                          <div class=3D"col-sm-4 pull-left">\
                            <div class=3D"checkbox">\
                              <label>\
                                <input type=3D"checkbox" name=3D"share" =
checked=3D"checked" class=3D"share">=E5=85=AC=E5=BC=80\
                              </label>\
                            </div>\
                          </div>\
                          <div class=3D"col-sm-8 pull-right =
favor-btns">\
                            <button type=3D"button" class=3D"cancel btn =
btn-default">=E5=8F=96=E6=B6=88</button>\
                            <button type=3D"submit" class=3D"submit btn =
btn-primary">=E6=94=B6=E8=97=8F</button>\
                          </div>\
                        </div>\
                      </div>\
                    </form>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"notify">\
                <div style=3D"display:none" class=3D"number"></div>\
                <div style=3D"display:none" =
class=3D"icon-hasnotes-sm"></div>\
                <div id=3D"header_notice_num"></div>\
                <div class=3D"icon on-notify-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div id=3D"note1" class=3D"csdn_note">\
                      <div class=3D"box"></div>\
                    </div>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"ugc">\
                <div class=3D"icon on-ugc-icon">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <dl>\
                      <dt><a =
href=3D"http://geek.csdn.net/news/expert?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-news clearfix" style=3D"display:none;"><em =
class=3D"icon"></em><span>=E5=88=86=E4=BA=AB=E8=B5=84=E8=AE=AF</span></a>=
</dt>\
                      <dt><a =
href=3D"http://u.download.csdn.net/upload?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-doc clearfix"><em =
class=3D"icon"></em><span>=E4=BC=A0PPT/=E6=96=87=E6=A1=A3</span></a></dt>=
\
                      <dt><a =
href=3D"http://bbs.csdn.net/topics/new?ref=3Dtoolbar" target=3D"_blank" =
class=3D"p-ask clearfix"><em =
class=3D"icon"></em><span>=E6=8F=90=E9=97=AE=E9=A2=98</span></a></dt>\
                      <dt><a =
href=3D"http://write.blog.csdn.net/postedit?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-blog clearfix"><em =
class=3D"icon"></em><span>=E5=86=99=E5=8D=9A=E5=AE=A2</span></a></dt>\
                      <dt><a =
href=3D"http://u.download.csdn.net/upload?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-src clearfix"><em =
class=3D"icon"></em><span>=E4=BC=A0=E8=B5=84=E6=BA=90</span></a></dt>\
                      <dt><a =
href=3D"https://code.csdn.net/projects/new?ref=3Dtoolbar" =
target=3D"_blank" class=3D"c-obj clearfix"><em =
class=3D"icon"></em><span>=E5=88=9B=E5=BB=BA=E9=A1=B9=E7=9B=AE</span></a>=
</dt>\
                      <dt><a =
href=3D"https://code.csdn.net/snippets/new?ref=3Dtoolbar" =
target=3D"_blank" class=3D"c-code clearfix"><em =
class=3D"icon"></em><span>=E5=88=9B=E5=BB=BA=E4=BB=A3=E7=A0=81=E7=89=87</=
span></a></dt>\
                    </dl>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"profile">\
                <div class=3D"icon on-profile-icon"><img =
src=3D"'+currUser.avatar+'" class=3D"curr-icon-img">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div class=3D"bd">\
                      <dl class=3D"clearfix">\
                        <dt class=3D"pull-left img"><a target=3D"_blank" =
href=3D"http://my.csdn.net?ref=3Dtoolbar" class=3D"avatar"><img =
src=3D"'+currUser.avatar+'"></a></dt>\
                        <dd class=3D"info" style=3D"border: none;"><a =
target=3D"_blank" href=3D"http://my.csdn.net?ref=3Dtoolbar" =
class=3D"nickname">'+currUser.userNick+'</a><span =
class=3D"dec">'+currUser.desc+'</span></dd>\
                      </dl>\
                    </div>\
                    <div class=3D"ft clearfix"><a target=3D"_blank" =
href=3D"http://my.csdn.net/my/account/changepwd?ref=3Dtoolbar" =
class=3D"pull-left"><span =
class=3D"icon-cog"></span>=E5=B8=90=E5=8F=B7=E8=AE=BE=E7=BD=AE</a><a =
href=3D"https://passport.csdn.net/account/logout?ref=3Dtoolbar"  =
target=3D"_top" class=3D"pull-left" style=3D"margin-left:132px; =
width:18px; height:27px; white-space:nowrap; overflow:hidden;"><span =
class=3D"icon-signout"></span><span =
class=3D"out">=E9=80=80=E5=87=BA</span></a></div>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"apps">\
                <div id=3D"chasnew123" class=3D"hasnew"></div>\
                <div id=3D"cappsarea123" class=3D"icon on-apps-icon">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                  <div class=3D"detail">\
                    <dl>\
                      <dt>\
                        <h5>=E7=A4=BE=E5=8C=BA</h5>\
                      </dt>\
                      <dd> <a =
href=3D"http://blog.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E5=8D=9A=E5=AE=A2</a></dd>\
                      <dd> <a href=3D"http://bbs.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E8=AE=BA=E5=9D=9B</a></dd>\
                      <dd> <a =
href=3D"http://download.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E4=B8=8B=E8=BD=BD</a></dd>\
                      <dd><a href=3D"http://ask.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94</a></dd>\
                      <dd><a href=3D"http://geek.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E6=9E=81=E5=AE=A2=E5=A4=B4=E6=9D=A1</a></dd>\
                      <dd style=3D"display:none"> <a =
href=3D"http://hero.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E8=8B=B1=E9=9B=84=E4=BC=9A</a></dd>\
                    </dl>\
                  </div>\
                  <div class=3D"detail">\
                    <dl>\
                      <dt>\
                        <h5>=E6=9C=8D=E5=8A=A1</h5>\
                      </dt>\
                      <dd style=3D"display:none"> <a =
href=3D"http://job.csdn.net?ref=3Dtoolbar" target=3D"_blank">JOB<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                      <dd> <a href=3D"http://edu.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E5=AD=A6=E9=99=A2<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                      <dd> <a =
href=3D"https://code.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">CODE</a></dd>\
                      <dd> <a =
href=3D"http://huiyi.csdn.net/?ref=3Dtoolbar" =
target=3D"_blank">=E6=B4=BB=E5=8A=A8</a></dd>\
                      <dd> <a href=3D"http://www.csto.com?ref=3Dtoolbar" =
target=3D"_blank">CSTO</a></dd>\
                      <dd> <a =
href=3D"http://mall.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">C=E5=B8=81=E5=85=91=E6=8D=A2<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                    </dl>\
                  </div>\
                  <div class=3D"detail last">\
                    <dl>\
                      <dt>\
                        <h5>=E4=BF=B1=E4=B9=90=E9=83=A8</h5>\
                      </dt>\
                      <dd> <a href=3D"http://cto.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">CTO=E4=BF=B1=E4=B9=90=E9=83=A8</a></dd>\
                      <dd> <a =
href=3D"http://student.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E9=AB=98=E6=A0=A1=E4=BF=B1=E4=B9=90=E9=83=A8</a></dd>\=

                    </dl>\
                  </div>\
                </div>\
              </div>\
            </li>\
            </ul>\
          </div>\
        </div>\
    </div>';
  $(document.body).append($(tpl));
  $("#chasnew123").hide();
  //var newTag =3D true;
  //if (newTag) {
  //  var hasNew =3D getCookie("csdn_has_new_product");
  //  if (hasNew =3D=3D "2")
  //    $("#chasnew123").hide();
  //  else {
  //    $("#cappsarea123").one("mouseover", function () {
  //      setCookie("csdn_has_new_product", "2");
  //      $("#chasnew123").hide();
  //    });
  //  }
  //}
})();

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://cbjs.baidu.com/js/m.js

/*! Copyright 2015 Baidu Inc. All Rights Reserved. */;(function(){var =
m=3Dvoid 0,n=3D!0,q=3Dnull,r=3D!1;function s(a){return function(){return =
a}}var u=3D{t1:+new =
Date,t2:0,t3:0,t4:0},y=3D["search!"],ga=3D3,ha=3D"BAIDU_DUP_replacement",=
ia=3D"http://dup.baidustatic.com/painter/",z=3Ddocument,C=3D{},ja=3D0,ka=3D=
1,D=3D2,E=3D3,F=3D4,la=3D5;function ma(a){var =
b=3Dna(a),d=3Db[0],b=3Db[1];this.id=3Da;this.name=3Db;this.uri=3DG(b);thi=
s.Fa=3D!b;this.status=3Dja;d&&b&&(this.La=3DJ(K(d+"!"))||{load:function()=
{}});this.v=3D[]}=0A=
var Q=3Dwindow.BAIDU_DUP_require||function(a,b,d){L(a,function(){for(var =
c=3D[],d=3D0;d<a.length;d++)c[d]=3DJ(K(a[d]));P(b)&&b.apply(window,c)},d)=
};=0A=
function L(a,b,d){var c=3Da.length;if(0=3D=3D=3Dc)b();else for(var =
k=3Dc,g=3D0;g<c;g++)(function(a){function =
h(){if(a.status<D)j();else{for(var =
h=3Da.v,c=3D[],b=3D0;b<h.length;b++){var =
i=3Dh[b];i&&K(i).status<E&&c.push(i)}0=3D=3D=3Dc.length?j():L(c,j,d)}}fun=
ction j(){a&&a.status<E&&(a.status=3DE);0=3D=3D=3D--k&&b()}var =
c=3Da.La;c&&(c.normalize&&(a.name=3Dc.normalize(a.name,G)),c.name2url&&(a=
.uri=3Dc.name2url(a.name)));a.status<D?c&&P(c.load)?c.load(a.name,Q,funct=
ion(h){R(a.id,[],function(){return h});j()}):oa(a,h,d):h()})(K(a[g]))}=0A=
var S=3D{},T=3D{},U=3D{};function =
oa(a,b,d){a.status=3Dka;U[a.id]?b():T[a.id]?S[a.id].push(b):(T[a.id]=3Dn,=
S[a.id]=3D[b],0=3D=3D=3Da.uri.indexOf("http://cb.baidu.com/ecom?")&&(u.t2=
=3D+new =
Date),d?(b=3Da.uri,a=3Dz.createElement("script"),a.charset=3D"utf-8",a.as=
ync=3Dn,a.src=3Db,b=3Dz.getElementsByTagName("head")[0]||z.body,b.insertB=
efore(a,b.firstChild)):z.write('<script charset=3D"utf-8" =
src=3D"'+a.uri+'"><\/script>'))}=0A=
var =
R=3Dwindow.BAIDU_DUP_define||function(a,b,d){8<a.length&&0=3D=3D=3Da.inde=
xOf("request!")&&(u.t3=3D+new Date);var =
c=3DK(a);c.status<D&&(c.v=3Db,c.factory=3Dd,c.status=3Dc.Fa?E:D);if(T[a])=
{delete T[a];U[a]=3Dn;b=3DS[a];for(delete =
S[a];a=3Db.shift();)a()}};function J(a){if(!a)return =
q;if(a.status>=3DF)return a.Y;if(a.status<E&&a.Y=3D=3D=3Dm)return =
q;a.status=3DF;for(var =
b=3D[],d=3D0;d<a.v.length;d++)b[d]=3DJ(K(a.v[d]));var =
c=3Dd=3Da.factory;P(d)&&(c=3Dd.apply(window,b));a.status=3Dla;return =
a.Y=3Dc}=0A=
function G(a){return/^https?:\/\//.test(a)?a:ia+a+".js"}function =
K(a){return C[a]||(C[a]=3Dnew ma(a))}function na(a){var =
b,d=3Da?a.indexOf("!"):-1;-1<d&&(b=3Da.slice(0,d),a=3Da.slice(d+1,a.lengt=
h));return[b,a]}function P(a){return"[object =
Function]"=3D=3D=3DObject.prototype.toString.call(a)}=0A=
R("util/lang",[],function(){function a(a){for(var c=3D{},b=3D"Array =
Boolean Date Error Function Number RegExp String".split(" =
"),g=3D0,f=3Db.length;g<f;g++)c["[object =
"+b[g]+"]"]=3Db[g].toLowerCase();return =
a=3D=3Dq?"null":c[Object.prototype.toString.call(a)]||"object"}var =
b=3DObject.prototype.hasOwnProperty;return{B:b,b:a,getAttribute:function(=
a,c){for(var =
b=3Da,g=3Dc.split(".");g.length;){if(b=3D=3D=3Dm||b=3D=3D=3Dq)return;b=3D=
b[g.shift()]}return =
b},ja:function(d){if("object"!=3D=3Da(d))return"";var c=3D[],k;for(k in =
d)b.call(d,k)&&c.push(k+=0A=
"=3D"+encodeURIComponent(d[k]));return c.join("&")},l:function(b){var =
c=3D[];switch(a(b)){case =
"object":c=3DArray.prototype.slice.call(b);break;case =
"array":c=3Db;break;case "number":case "string":c.push(b)}return =
c},unique:function(a){for(var =
c=3D[],b=3D{},g=3Da.length,f=3D0;f<g;f++){var =
h=3Da[f];b[h]||(c[c.length]=3Dh,b[h]=3Dn)}return =
c},removeItem:function(a,c){for(var =
b=3D[].slice.call(a),g=3Db.length-1;0<=3Dg;g--)b[g]=3D=3D=3Dc&&b.splice(g=
,1);return b},ga:function(){}}});=0A=
R("util/browser",["util/lang"],function(a){var =
b=3D{},d=3Dnavigator.userAgent,c=3Dwindow.RegExp;/msie =
(\d+\.\d)/i.test(d)&&(b.s=3Ddocument.documentMode||+c.$1);/opera\/(\d+\.\=
d)/i.test(d)&&(b.opera=3D+c.$1);/firefox\/(\d+\.\d)/i.test(d)&&(b.Ya=3D+c=
.$1);/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(d)&&!/chrome/i.te=
st(d)&&(b.ib=3D+(c.$1||c.$2));if(/chrome\/(\d+\.\d)/i.test(d)){b.X=3D+c.$=
1;var k;try{k=3D"scoped"in =
document.createElement("style")}catch(g){k=3Dr}k&&(b.Qa=3Dn)}try{/(\d+\.\=
d)/.test(a.getAttribute(window,=0A=
"external.max_version"))&&(b.cb=3D+c.$1)}catch(f){}a=3D"Android iPad =
iPhone Linux Macintosh Windows".split(" =
");c=3D"";for(k=3D0;k<a.length&&!(c=3Da[k],d.match(RegExp(c.toLowerCase()=
,"i")));k++);b.platform=3Dc;return b});=0A=
R("util/dom",["util/lang"],function(a){function =
b(a){try{if(a&&"object"=3D=3D=3Dtypeof a&&a.document&&"setInterval"in =
a)return n}catch(h){}return r}function =
d(a,h){h=3D2=3D=3D=3Darguments.length?h:a.parent;return =
a!=3Dh||!b(a)}function c(a,h){for(var =
h=3D2=3D=3D=3Darguments.length?h:a.parent,j=3D0;10>j++&&d(a,h);){var =
c;try{c=3D!!a.parent.location.toString()}catch(b){c=3Dr}if(!c)return =
n;a=3Da.parent}return 10<=3Dj}function k(a){return =
9=3D=3D=3Da.nodeType?a:a.ownerDocument||a.document}function =
g(b,h){1=3D=3D=3Darguments.length&&"number"=3D=3D=3Da.b(arguments[0])&&=0A=
(h=3Darguments[0],b=3Dm);for(var =
h=3Dh||10,j=3Dwindow,i=3D0;i++<h&&d(j)&&!c(j)&&(!b||!b(j));)j=3Dj.parent;=
return =
j}return{c:function(c,h){return"string"=3D=3D=3Da.b(c)&&0<c.length?(h||wi=
ndow).document.getElementById(c):c.nodeName&&(1=3D=3D=3Dc.nodeType||9=3D=3D=
=3Dc.nodeType)?c:q},Ga:b,t:d,C:c,va:k,$:function(){var =
a=3Dg().document.title;60<a.length&&(a=3Da.substr(0,60));return =
a},A:function(a){a=3Dk(a);return =
a.parentWindow||a.defaultView||q},j:function(a){a=3Db(a)?a.document:k(a);=
return"CSS1Compat"=3D=3D=3Da.compatMode?a.documentElement:a.body},=0A=
M:g}});=0A=
R("util/style",["util/lang","util/dom","util/browser"],function(a,b,d){fu=
nction c(a,j){if(!a)return"";var =
c=3D"",c=3D-1<j.indexOf("-")?j.replace(/[-][^-]{1}/g,function(a){return =
a.charAt(1).toUpperCase()}):j.replace(/[A-Z]{1}/g,function(a){return"-"+a=
.charAt(0).toLowerCase()}),e=3Db.A(a);if(e&&e.getComputedStyle){if(e=3De.=
getComputedStyle(a,q))return =
e.getPropertyValue(j)||e.getPropertyValue(c)}else =
if(a.currentStyle)return e=3Da.currentStyle,e[j]||e[c];return""}function =
k(a){var j=3D{top:0,left:0};if(a=3D=3D=3Db.j(a))return j;=0A=
var =
d=3Db.va(a),e=3Dd.body,d=3Dd.documentElement;a.getBoundingClientRect&&(a=3D=
a.getBoundingClientRect(),j.left=3DMath.floor(a.left)+Math.max(d.scrollLe=
ft,e.scrollLeft),j.top=3DMath.floor(a.top)+Math.max(d.scrollTop,e.scrollT=
op),j.left-=3Dd.clientLeft,j.top-=3Dd.clientTop,a=3Dc(e,"borderLeftWidth"=
),e=3Dc(e,"borderTopWidth"),a=3DparseInt(a,10),e=3DparseInt(e,10),j.left-=
=3DisNaN(a)?2:a,j.top-=3DisNaN(e)?2:e);return j}function g(a,j){var =
b=3Dc(a,"margin"+j).toString().toLowerCase().replace("px","").replace("au=
to","0");return parseInt(b,=0A=
10)||0}function f(c){for(var j=3Db.A(c),i=3D100;c&&c.tagName;){var =
e=3D100;if(d.s){if(5<d.s)try{e=3DparseInt(a.getAttribute(c,"filters.alpha=
.opacity"),10)||100}catch(g){}i=3Di>e?e:i}else{try{e=3D100*(j.getComputed=
Style(c,q).opacity||1)}catch(l){}i*=3De/100}c=3Dc.parentNode}return =
0=3D=3D=3Di?0:i||100}return{bb:c,ab:k,r:function(a){var =
c=3Db.c(a);if(!c)return r;a=3Dk(c);c=3Db.A(c);if(!c)return a;for(var =
d=3D0;c!=3D=3Dc.parent&&10>d++&&!b.C(c)&&c.frameElement;){var =
e=3Dk(c.frameElement);a.left+=3De.left;a.top+=3De.top;c=3Dc.parent}return=
 a},=0A=
Za:g,O:function(a,c){var =
d=3Db.c(a),e=3Dd.offsetWidth;c&&(e+=3Dg(d,"Left")+g(d,"Right"));return =
e},N:function(a,c){var =
d=3Db.c(a),e=3Dd.offsetHeight;c&&(e+=3Dg(d,"Top")+g(d,"Bottom"));return =
e},$a:f,xa:function(a){for(var =
c=3Db.c(a),a=3Db.A(c),c=3Df(c),d=3D0;10>d++&&b.t(a)&&!b.C(a);){var =
e=3Da.frameElement?f(a.frameElement):100,c=3Dc*(e/100);a=3Da.parent}retur=
n c},da:function(a){try{var =
c=3Db.j(a||window).scrollWidth;if(c||0=3D=3D=3Dc)return =
c}catch(d){}return-1},ca:function(a){try{var =
c=3Db.j(a||window).scrollHeight;if(c||0=3D=3D=3Dc)return =
c}catch(d){}return-1},=0A=
p:function(a){try{var =
c=3Db.j(a||window).clientWidth;if(c||0=3D=3D=3Dc)return =
c}catch(d){}return-1},o:function(a){try{var =
c=3Db.j(a||window).clientHeight;if(c||0=3D=3D=3Dc)return =
c}catch(d){}return-1},Ba:function(a){var c=3Db.j(a);return =
a.pageYOffset||c.scrollTop},Aa:function(a){var c=3Db.j(a);return =
a.pageXOffset||c.scrollLeft}}});=0A=
R("util/url",["util/dom"],function(a){return{ba:function(a,d,c){a=3Da.mat=
ch(RegExp("(\\?|&|#)"+d+"=3D([^&#]*)(&|#)?"));d=3D"";a&&(d=3Da[2]);c&&(d=3D=
decodeURIComponent(d));return d},P:function(b){var =
b=3Da.M(b),d=3D"";a.t(b)&&(d=3Db.document.referrer);return =
d=3Dd||b.location.href}}});=0A=
R("util/event",["util/dom"],function(a){return{bind:function(b,d,c){if(b=3D=
a.Ga(b)?b:a.c(b))if(b.addEventListener)b.addEventListener(d,c,r);else =
if(b.attachEvent)b.attachEvent("on"+d,c);else{var =
k=3Db["on"+d];b["on"+d]=3Dfunction(){k&&k.apply(this,arguments);c.apply(t=
his,arguments)}}return b}}});=0A=
R("util/cookie",["util/lang"],function(a){return{get:function(a,d){var =
c=3DRegExp("(^| )"+a+"=3D([^;]*)(;|$)").exec(document.cookie);return =
c?d?decodeURIComponent(c[2]):c[2]:""},set:function(b,d,c,k){var =
g=3Dc.expires;"number"=3D=3D=3Da.b(g)&&(g=3Dnew =
Date,g.setTime(+g+c.expires));document.cookie=3Db+"=3D"+(k?encodeURICompo=
nent(d):d)+(c.path?"; path=3D"+c.path:"")+(g?"; =
expires=3D"+g.toGMTString():"")+(c.domain?"; domain=3D"+c.domain:"")}}});=0A=
R("util/data",["util/lang","util/dom"],function(a,b){function =
d(c,b,d){var =
d=3Dd?h:g,f;if("string"=3D=3D=3Da.b(c)){for(c=3Dc.split(".");c.length;)f=3D=
c.shift(),d[f]=3Dc.length?d[f]!=3D=3Dm?d[f]:{}:b,d=3Dd[f];f=3Db}return =
f}function c(c,b){var =
d=3Db?h:g,f;"string"=3D=3D=3Da.b(c)&&(f=3Da.getAttribute(d,c));return =
f}function k(a,b,e){if(!a||!b)return r;var h=3Dc(a)||{};switch(e){case =
"+1":e=3Dh[b]||0;h[b]=3D++e;break;default:h[b]=3DparseInt(e,10)}d(a,h);re=
turn h[b]}var =
g=3D{},f=3Db.M(),h=3Df.BAIDU_DUP_info||(f.BAIDU_DUP_info=3D{});return{m:f=
unction(a,=0A=
c){var b=3Dwindow;return b[a]?b[a]:b[a]=3Dc},q:function(a){var =
c=3Dwindow,b=3Dc[a];c[a]=3Dm;return b},f:d,d:c,ia:function(c,b){var =
d=3Db?h:g;switch(a.b(c)){case "string":for(var =
f=3Dc.split(".");f.length;){var =
l=3Df.shift();if(f.length&&d[l]!=3D=3Dm)d=3Dd[l];else return delete =
d[l],n}}return r},V:function(a,c,b){return =
b?(this.e=3Dthis.e||{},this.e[b]=3Dthis.e[b]||0,!this.e[b]&&document.getE=
lementById(b)&&(this.e[b]=3D1),this.e[b]):k(a,c,"+1")},fb:function(a,c,b)=
{return k(a,c,b)},count:k,ua:function(a,b,d){return d?(this.e=3D=0A=
this.e||{},this.e[d]=3Dthis.e[d]||0,document.getElementById(d)||delete =
this.e[d],this.e[d]||0):!a||!b?r:(c(a)||{})[b]||0},Pa:function(a,b){if(!a=
||!b)return r;var =
h=3Dc("pageConfig")||{};h[a]=3Db;d("pageConfig",h);return =
n},ta:function(a){return!a?r:(c("pageConfig")||{})[a]}}});=0A=
R("util/storage",[],function(){function =
a(a,c,b){if(d)try{d.setItem(a,b?encodeURIComponent(c):c)}catch(h){}}funct=
ion b(a,c){if(d){var b=3Dd.getItem(a);return =
c&&b?decodeURIComponent(b):b}return q}var =
d;try{d=3Dwindow.localStorage}catch(c){}return{qa:function(){var =
c=3Dr;try{d.removeItem("BAIDU_DUP_storage_available"),a("BAIDU_DUP_storag=
e_available","1"),b("BAIDU_DUP_storage_available")&&(c=3Dn),d.removeItem(=
"BAIDU_DUP_storage_available")}catch(g){}return =
c},setItem:a,getItem:b,ma:function(c,g,f){if(d){g=3D=0A=
f?encodeURIComponent(g):g;f=3Db(c)||"";try{a(c,f+((f&&"|")+g))}catch(h){}=
}},la:function(c,g,f){if(d)if(g=3Df?encodeURIComponent(g):g,f=3Db(c)||"",=
f=3Df.replace(RegExp(g+"\\|?","g"),"").replace(/\|$/,""))try{a(c,f)}catch=
(h){}else d.removeItem(c)}}});=0A=
R("util/log",["util/lang","util/event","util/storage"],function(a,b,d){fu=
nction c(a,c){var b=3Dnew =
Image,d=3D"BAIDU_DUP_log_"+Math.floor(2147483648*Math.random()).toString(=
36);window[d]=3Db;b.onload=3Db.onerror=3Db.onabort=3Dfunction(){b.onload=3D=
b.onerror=3Db.onabort=3Dq;b=3Dwindow[d]=3Dq;c&&c(k,a,n)};b.src=3Da}var =
k=3D"BAIDU_DUP_log_storage";return{Ha:c,gb:function(){var =
a=3Dd.getItem(k);if(a)for(var =
a=3Da.split("|"),b=3D0,h=3Da.length;b<h;b++)c(decodeURIComponent(a[b]),d.=
la)},H:function(g){var g=3D"object"=3D=3D=3Da.b(g)?g:{},f=3Dg.url||=0A=
"http://cbjslog.baidu.com/log",h=3Dg.option||"now",g=3Da.ja(g.data||{}),f=
=3Df+((0<=3Df.indexOf("?")?"&":"?")+g+(g?"&":"")+"rdm=3D"+ +new =
Date);switch(h){case "now":c(f);break;case =
"block":break;default:d.ma(k,f,n),b.bind(window,"unload",function(){c(f,d=
.la)})}}}});R("util","util/lang,util/dom,util/style,util/url,util/event,u=
til/cookie,util/data,util/storage,util/log,util/browser".split(","),funct=
ion(a,b,d,c,k,g,f,h,j,i){return{lang:a,a:b,style:d,url:c,event:k,cookie:g=
,data:f,jb:h,log:j,J:i}});=0A=
R("biz",["util","slot"],function(a,b){function d(c,b){var =
d=3D/^[0-9a-zA-Z]+$/;return!c||!d.test(c)||!b?[]:b=3D"array"=3D=3D=3Da.la=
ng.b(b)?b:Array.prototype.slice.call(arguments,1)}function =
c(c,b,d){if(!b||!b.length)return r;var =
d=3Dd||{U:r,fa:r,ha:r},i=3Dd.fa?a.data.d(k):{},e=3Dd.U?g:k,i=3Dd.ha?{}:a.=
data.d(e)||i,d=3D{},o;for(o in =
i)a.lang.B.call(i,o)&&(d[o]=3D"array"=3D=3D=3Da.lang.b(i[o])?i[o].slice()=
:i[o]);var i=3Dd[c]||[],l=3Db.length;for(o=3D0;o<l;o++){var =
p=3Db[o];"string"=3D=3D=3Dtypeof =
p&&(p=3DencodeURIComponent(p),100>=3Dp.length&&(i[i.length]=3D=0A=
p))}if(!i.length)return r;d[c]=3Da.lang.unique(i);a.data.f(e,d);return =
n}var =
k=3D"bizOrientations",g=3D"bizUrgentOrientations";return{W:function(a,b){=
var j=3Dd.apply(this,arguments);return c(a,j)},na:function(a,b){var =
j=3Dd.apply(this,arguments);return =
c(a,j,{U:n,fa:n})},Sa:function(a,b){var =
j=3Dd.apply(this,arguments);return c(a,j,{U:n,ha:n})},ya:function(c){var =
c=3DMath.max(0,Math.min(c||500,500)),b=3D[],d=3Da.data.d(g)||a.data.d(k)|=
|{};if("object"=3D=3D=3Da.lang.b(d))for(var i in =
d)a.lang.B.call(d,i)&&(b[b.length]=3Di+=0A=
"=3D"+d[i].join(","));a.data.f(g,m);b.sort(function(a,c){return =
a.length-c.length});d=3D"";i=3Db.length;for(var =
e=3D0;e<i&&!(d.length+b[e].length>=3Dc);e++)d+=3D(e?"&":"")+b[e];return =
d},oa:function(a,c){b.Ta(a);b.pa(c)}}});=0A=
R("preview",["biz","util"],function(a,b){function d(){function a(c){var =
d=3Db.url.ba;return =
d(k,"baidu_clb_preview_"+c)||d(k,"baidu_dup_preview_"+c)}var =
k=3Db.url.P(),g=3Da("sid"),f=3Da("mid"),h=3Da("vc"),j=3D+a("ts"),i=3Dq;3E=
4>=3D+new Date-j&&(i=3D{ka:g,Ja:f,Va:h});d=3Dfunction(){return i};return =
i}return{Ca:function(a){var =
b=3D[],g=3Dd();g&&a=3D=3Dg.ka&&(b.push("mid=3D"+g.Ja),b.push("sid=3D"+g.V=
a));return b.join("&")},d:function(){return d()},ea:function(a){var =
d=3Dr;a?/cpro_template=3D/gi.test(a)&&(b.data.f("#unionPreviewSwitch",=0A=
n),d=3Dn):d=3D!!b.data.d("#unionPreviewSwitch");return =
d},Da:function(){var a=3Db.data.d("#unionPreviewData");return =
a?"prev=3D"+encodeURIComponent(a)+"&pt=3Dunion":""},Ua:function(a){b.data=
.f("#unionPreviewData",a)},Xa:function(){b.data.ia("#unionPreviewSwitch")=
;b.data.ia("#unionPreviewData")}}});=0A=
R("slot",["util"],function(a){function b(){for(var =
a=3D{response:{},holder:"",stack:[],errors:[],status:{}},c=3Dj.length-1;0=
<=3Dc;c--)a.status[j[c]]=3D0;return a}function d(a,c){var =
b=3Dr;"fillAsync"=3D=3D=3Dc&&(b=3Dn);o[a]&&-1!=3D=3Do[a].stack.join(" =
").toLowerCase().indexOf("async")&&(b=3Dn);return b}function =
c(a,c){if(!a)return"";var b=3Dt+a;c&&(b+=3D"_"+c);return b}function =
k(a,c,b){if(!a||!c)return r;b=3D=3D=3Dm&&(b=3D+new =
Date);if(o[a]){o[a].status[c]=3Db;if("finish"=3D=3D=3Dc){var =
c=3D{},b=3Dr,d;for(d in p)if(d&&p.hasOwnProperty(d)&&p[d]&&=0A=
0=3D=3D=3D(""+a).indexOf(""+d)&&o[a].response){var =
b=3Do[a].response.data,h=3Db._h||b.sh||b.height||0;c[a]=3D0=3D=3D=3D(b._w=
||b.sw||b.width||0)||0=3D=3D=3Dh?r:n;b=3Dn}b&&l.apply(window,[c])}return =
n}return r}function g(a,c){f(a,"errors",c)}function =
f(c,b,d){c&&b&&d&&(c=3Do[c])&&"array"=3D=3D=3Da.lang.b(c[b])&&c[b].push(d=
)}function h(a){return!a?o:o[a]||r}var =
j=3D"add,create,request,response,render,finish".split(","),i=3D[],e=3D{},=
o=3D{},l,p=3D{},t=3D"BAIDU_DUP_wrapper_";return{add:function(){var =
c=3D{ids:[],preloadIds:[]},d=3Da.lang.l(arguments);=0A=
if(!d.length)return c;for(var =
d=3Dd.join(",").split(","),l=3D[],p=3D[],j=3Dd.length,g=3D0;g<j;g++){var =
f=3Dd[g];if(e.hasOwnProperty(f)){var =
t=3Df+"_"+e[f],V=3Dh(t).stack||[];if("preload"=3D=3D=3DV[V.length-1]){c.p=
reloadIds.push(t);continue}e[f]+=3D1}else =
e[f]=3D0;f=3Df+"_"+e[f];o[f]=3Dnew =
b;k(f,"add");p.push(f);l.push(f)}i=3Di.concat(p);c.ids=3Dl;return =
c},create:function(b,l,p){if(!b||!l)return r;var =
h=3Dc(b),e=3Dn;if(a.a.c(h))return =
o[b].holder=3Dh,e;if(d(b,l)){p=3Dp||"";o[b].holder=3Dp;p=3Da.a.c(p);try{p=
&&(p.innerHTML=3D'<div id=3D"'+h+'"></div>',=0A=
o[b].holder=3Dh)}catch(f){g(b,"Failed to insert wrapper"),e=3Dr}}else =
if(document.write('<div id=3D"'+h+'"></div>'),!a.a.c(h))try{var =
j=3Ddocument.getElementsByTagName("script"),t=3Dj[j.length-1];if(t){var =
i=3Dt.parentNode;if(i){var =
W=3Ddocument.createElement("div");W.id=3Dc(b,"b");i.insertBefore(W,t)}}}c=
atch(qa){g(b,"Failed to create backup wrapper")}k(b,"create");return =
e},sa:d,wa:function(a){return =
d(a)?"async":"sync"},aa:function(b){return!b?"":(b=3Da.a.c(o[b].holder)||=
a.a.c(c(b))||a.a.c(c(b,"b")))&&b.id||""},=0A=
z:h,T:function(a,c){if(!a||!c)return r;return =
o[a]?(o[a].response=3Dc,k(a,"response"),n):r},u:k,k:g,I:function(a,c){f(a=
,"stack",c)},L:function(c){c=3Da.lang.l(c);if(!c.length)return r;var =
b=3D[],d=3D{},l;for(l=3D0;l<i.length;l++)d[i[l]]=3Dl+1;for(l=3D0;l<c.leng=
th;l++){var p=3Dd[""+c[l]];p=3D=3D=3Dm&&(p=3D0);b.push(p)}return =
b},Ta:function(a){l=3Da},pa:function(a){p[a]=3Dn},r:function(b){b=3Da.lan=
g.l(b);if(!b.length)return["-1x-1"];for(var =
d=3D[],l=3D0;l<b.length;l++){var p=3Db[l],h;try{var =
e=3Da.a.c(c(p))||a.a.c(c(p,"b"));if(e){var f=3D=0A=
a.style.r(e);f&&(h=3D[f.top,f.left])}}catch(j){g(p,"Unable to get =
ps")}h=3Dh?h:[-1,-1];d.push(h.join("x"))}return =
d}}});R("api",["slot","util"],function(a,b){return{getDai:a.L,getSlots:a.=
z,getFillType:a.wa,getFillWrapperId:a.aa,setStatus:a.u,addErrorItem:a.k,a=
ddStackItem:a.I,bind:b.event.bind,getType:b.lang.b,sendLog:b.log.H,putInf=
o:b.data.f,getInfo:b.data.d,defineOnce:b.data.m,addCount:b.data.V,getCoun=
t:b.data.ua,getConfig:b.data.ta,getDocumentTitle:b.a.$}});=0A=
R("param",["slot","preview","biz","util"],function(a,b,d,c){function =
k(a,c){for(var =
c=3Dc||0,b=3D[],d=3D0,h=3Da.length;d<h;d++)b.push(a[d].split("_")[c]);ret=
urn b.join(",")}function =
g(a){a=3Da||window.document.domain;0=3D=3D=3Da.indexOf("www.")&&(a=3Da.su=
bstr(4));"."=3D=3D=3Da.charAt(a.length-1)&&(a=3Da.substring(0,a.length-1)=
);var =
c=3Da.match(RegExp("([a-z0-9][a-z0-9\\-]*?\\.(?:com|cn|net|org|gov|info|l=
a|cc|co|jp|us|hk|tv|me|biz|in|be|io|tk|cm|li|ru|ws|hn|fm|tw|ma|in|vn|name=
|mx|gd|im)(?:\\.(?:cn|jp|tw|ru|th))?)$","i"));return c?=0A=
c[0]:a}var =
f=3Dwindow,h=3Df.document,j=3Df.screen,i=3Df.navigator,e=3D+new =
Date,o=3D[{key:"di",value:function(a){return =
k(a.id)}},{key:"dcb",value:s("BAIDU_DUP_define")},{key:"dtm",value:s("BAI=
DU_DUP2_SETJSONADSLOT")},{key:"dbv",value:function(){var a=3Dc.J;return =
a.Qa?"1":a.X?"2":"0"}},{key:"dci",value:function(c){for(var =
b=3D"-1",d=3D{fill:"0",fillOnePiece:"1",fillAsync:"2",preload:"3"},h=3D0;=
h<c.id.length;h++){var e=3Da.z(c.id[h]);if(e){var =
e=3De.stack,f=3De.length;if(1<=3Df){b=3Dd[e[f-1]];break}}}return =
b}},{key:"dri",value:function(a){return k(a.id,=0A=
1)}},{key:"dis",value:function(){var =
a=3D0;c.a.t(f)&&(a+=3D1);c.a.C(f,f.top)&&(a+=3D2);var =
b=3Dc.style.p(),d=3Dc.style.o();if(40>b||10>d)a+=3D4;return =
a}},{key:"dai",value:function(c){return =
a.L(c.id).join(",")}},{key:"dds",value:function(){var =
a=3Dc.data.d("dds");return =
c.lang.ja(a)}},{key:"drs",value:function(){var =
a=3D{uninitialized:0,loading:1,loaded:2,interactive:3,complete:4};try{ret=
urn =
a[h.readyState]}catch(c){return-1}}},{key:"dvi",value:s("1442225175")},{k=
ey:"ltu",n:n,value:function(){var a=3Dc.url.P(function(a){var b=3D=0A=
c.style.p(a),a=3Dc.style.o(a);return =
400<b&&120<a?n:r});0<a.indexOf("cpro_prev")&&(a=3Da.slice(0,a.indexOf("?"=
)));return a}},{key:"liu",n:n,value:function(){return =
c.a.t(f)?h.URL:""}},{key:"ltr",n:n,value:function(){var =
a=3Dc.a.M(),b=3D"";try{b=3Da.opener?a.opener.document.location.href:""}ca=
tch(d){}b=3Db||a.document.referrer;return =
0<=3Db.indexOf("http://pos.baidu.com")||1E3<=3Db.length?"":b}},{key:"lcr"=
,n:n,value:function(a){if(a&&0!=3D=3Da.id.length&&-1<a.id[0].indexOf("u")=
)return"";var a=3Dh.referrer,b=3Da.replace(/^https?:\/\//,=0A=
""),b=3Db.split("/")[0],b=3Db.split(":")[0],b=3Dg(b),d=3Dg(),e=3Dc.cookie=
.get("BAIDU_DUP_lcr");if(e&&d=3D=3D=3Db)return e;return =
d!=3D=3Db?(c.cookie.set("BAIDU_DUP_lcr",a,{domain:d}),a):""}},{key:"ps",v=
alue:function(c){return =
a.r(c.id).join(",")}},{key:"psr",value:function(){return[j.width,j.height=
].join("x")}},{key:"par",value:function(){return[j.availWidth,j.availHeig=
ht].join("x")}},{key:"pcs",value:function(){return[c.style.p(),c.style.o(=
)].join("x")}},{key:"pss",value:function(){return[c.style.da(),c.style.ca=
()].join("x")}},=0A=
{key:"pis",value:function(){return(c.a.t(f)?[c.style.p(),c.style.o()]:[-1=
,-1]).join("x")}},{key:"cfv",value:function(){var =
a=3D0;if(45<=3Dc.J.X)return 0;if(i.plugins&&i.mimeTypes.length){var =
b=3Di.plugins["Shockwave =
Flash"];b&&b.description&&(a=3Db.description.replace(/([a-zA-Z]|\s)+/,"")=
.replace(/(\s)+r/,".")+".0")}if(0=3D=3D=3Da&&(f.ActiveXObject||f.hasOwnPr=
operty("ActiveXObject"))&&!f.opera)for(b=3D30;2<=3Db;b--)try{var d=3Dnew =
ActiveXObject("ShockwaveFlash.ShockwaveFlash."+b);d&&(a=3Dd.GetVariable("=
$version").replace(/WIN/g,=0A=
"").replace(/,/g,"."))}catch(h){}return =
parseInt(a,10)}},{key:"ccd",value:function(){return =
j.colorDepth||0}},{key:"chi",value:function(){return =
f.history.length||0}},{key:"cja",value:function(){return =
i.javaEnabled().toString()}},{key:"cpl",value:function(){return =
i.plugins.length||0}},{key:"cmi",value:function(){return =
i.mimeTypes.length||0}},{key:"cce",value:function(){return =
i.cookieEnabled||0}},{key:"col",value:function(){return(i.language||i.bro=
wserLanguage||i.systemLanguage).replace(/[^a-zA-Z0-9\-]/g,=0A=
"")}},{key:"cec",value:function(){return(h.characterSet?h.characterSet:h.=
charset)||""}},{key:"cdo",value:function(){var =
a=3Dwindow.orientation;a=3D=3D=3Dm&&(a=3D-1);return =
a}},{key:"tsr",value:function(){var a=3D0,c=3D+new =
Date;e&&(a=3Dc-e);return a}},{key:"tlm",value:function(){return =
Date.parse(h.lastModified)/1E3}},{key:"tcn",value:function(){return =
Math.round(+new Date/1E3)}},{key:"tpr",value:function(a){var =
a=3Da&&a.max_age?a.max_age:24E4,c=3D(new =
Date).getTime(),b,d;try{b=3D!!window.top.location.toString()}catch(h){b=3D=0A=
r}d=3Db?window.top:window;(b=3Dd.BAIDU_DUP2_pageFirstRequestTime)?c-b>=3D=
a&&(b=3Dd.BAIDU_DUP2_pageFirstRequestTime=3Dc):b=3Dd.BAIDU_DUP2_pageFirst=
RequestTime=3Dc;return b||""}},{key:"_preview",value:function(a){return =
b.Ca(k(a.id))}},{key:"dpt",value:function(){var =
a=3D"none";b.ea()&&(a=3D"union");return =
a}},{key:"coa",n:n,value:function(a){var =
a=3Da.id,b=3D{cpro_w:"rsi0",cpro_h:"rsi1"},a=3Da[0].split("_")[0],d=3D{},=
h=3Dr,e=3Dc.data.d("#novaOpenApi");if(e&&a&&e[a]){var =
h=3Dn,e=3De[a],f;for(f in e)f&&e.hasOwnProperty(f)&&"undefined"!=3D=3D=0A=
typeof =
e[f]&&(d[f]=3DencodeURIComponent(e[f]).toString())}h&&(d.c01=3D1);var =
h=3Df=3D"",j;for(j in d)j&&d.hasOwnProperty(j)&&"undefined"!=3D=3Dtypeof =
d[j]&&(h=3Dd[j],"cpro_h"=3D=3D=3Dj&&(c.data.f(a+"_setCoaHeight",n),h=3Dpa=
rseInt(h,10)||125),"cpro_w"=3D=3D=3Dj&&(c.data.f(a+"_setCoaWidth",n),h=3D=
parseInt(h,10)||125),f+=3D"&"+(b[j]?b[j]:j)+"=3D"+h);return =
f=3Df.slice(1)}},{key:"dpr",value:function(){return =
window.devicePixelRatio||1}},{key:"ti",n:n,value:function(){return =
c.a.$()}},{key:"_unionpreview",value:function(){return b.Da()}},=0A=
{key:"baidu_id",value:s("")},{key:"_orientation",value:function(){return =
d.ya()}}];return{get:function(a,b){for(var =
c=3D[],d=3D0,h=3Do.length;d<h;d++){var e;try{var =
f=3Do[d],j=3Df.key,g=3Df.n,i=3Df.value,i=3D"function"=3D=3D=3Dtypeof =
i?i(a):i,i=3Dg?encodeURIComponent(i):i;if(b&&b=3D=3D=3Dj)return =
i;e=3Dj&&0!=3D=3Dj.indexOf("_")?j+"=3D"+i:i}catch(k){e=3DencodeURICompone=
nt(k.toString()),e=3De.slice(0,100)}e&&c.push(e)}c=3Dc.join("&");return =
c.slice(0,2048)}}});=0A=
R("request",["param","slot","util"],function(a,b,d){R("request!",[],{name=
2url:function(b){return"http://cb.baidu.com/ecom?"+a.get({id:b.split(",")=
})}});R("batch!",[],{name2url:function(b){return"http://cb.baidu.com/ecom=
?"+a.get({id:b.split(",")})}});return{send:function(a,k,g){if(!a||!k||g=3D=
=3D=3Dm)return r;var =
f=3D[];if("array"!=3D=3Dd.lang.b(a))b.u(a,"request"),f=3D["request!"+a];e=
lse{for(f=3D0;f<a.length;f++)b.u(a[f],"request");f=3D1=3D=3D=3Da.length?[=
"request!"+a[0]]:["batch!"+a.join(",")]}Q(f,k,g);return n}}});=0A=
R("control",["slot","request","preview","util"],function(a,b,d,c){functio=
n k(b,d,f){var =
e=3Dd.deps,g=3Dd.data;g&&g.hasOwnProperty("_html")&&"baidujson_patch"=3D=3D=
=3Dg._html.tn&&(e=3D["union/patch"]);var =
k=3Da.aa(b);f&&!k?a.k(b,"HolderNotFound"):e&&(0>e[0].indexOf("clb/")&&a.u=
(b,"finish"),Q(e,function(d){if("object"=3D=3D=3Dc.lang.b(g)){g.id=3Db;if=
(d.hasOwnProperty("validate"))try{var =
f=3Dd.validate(g);f!=3D=3Dn&&c.log.H({data:{type:f||"ResponseError",error=
Painter:e[0],id:b,slotType:g._stype,materialType:g._isMlt,html:!!g._html}=
})}catch(j){a.k(b,=0A=
"validateException")}if(d.hasOwnProperty("render"))try{a.u(b,"render"),d.=
render(g,k)}catch(i){a.k(b,"RenderException")}else =
a.k(b,"RenderNotFound")}else a.k(b,"ResponseFormatError")},f))}function =
g(d,f,g){if(!d)return r;var =
g=3Dg||"",e=3Da.add(d),d=3De.ids[0]||e.preloadIds[0];c.data.f("timestampW=
athcer"+d,u);if(!d)return r;var =
o=3Da.sa(d,f);a.I(d,f);a.create(d,f,g);e.ids.length?b.send(d,function(b){=
a.T(d,b);k(d,b,o)},o):e.preloadIds.length&&(f=3Da.z(d).response,k(d,f,o))=
;return n}function f(b){for(var c=3D0,=0A=
d=3Db+"_"+c;0!=3D=3Da.L([d])[0];){var =
e=3Da.z(d);if((e=3De&&e.response)&&0=3D=3D=3De.deps[0].indexOf("clb/")){v=
ar =
f=3De.data,e=3Df._isMlt;(0=3D=3D=3De&&""!=3D=3Df._html||e=3D=3D=3Dr&&f._f=
xp)&&a.u(d,"finish",0)}d=3Db+"_"+ =
++c}if(b!=3D=3Dm&&(b=3D(c=3Dwindow.BAIDU_CLB_SLOTS_MAP)&&c[b],b!=3D=3Dm&&=
(e=3Db._isMlt,0=3D=3D=3De&&""!=3D=3Db._html||e=3D=3D=3Dr&&b._fxp)))b._don=
e=3Dr}window.BAIDU_CLB_prepareMoveSlot=3Df;return{fill:function(a){return=
 g(a,"fill")},K:function(a,b){return =
g(a,"fillAsync",b)},Ma:function(){function =
f(d){b.send(d,function(b){if("array"=3D=3D=3Dc.lang.b(b)){if(b&&=0A=
b.length=3D=3D=3Dd.length)for(var =
e=3D0;e<d.length;e++)a.T(d[e],b[e])}else"object"=3D=3D=3Dc.lang.b(b)&&b&&=
1=3D=3D=3Dd.length&&a.T(d[0],b)},r)}var =
g=3Dc.lang.l(arguments),g=3Dc.lang.unique(g),i=3Dd.d();if(i)for(var =
e=3D0,k=3Dg.length;e<k;e++)g[e]=3D=3D=3Di.ka&&(g.splice(e,1),e--);for(g=3D=
a.add(g).ids;g.length;){i=3Dg.splice(0,16);for(e=3D0;e<i.length;e++)a.I(i=
[e],"preload");f(i)}},Na:f}});=0A=
R("global",["control","biz","util","preview"],function(a,b,d,c){function =
k(a){a=3Da.split(".");return i[a[0]]+a[1]}function g(){var =
a=3Dj.BAIDU_DUP;if(!("object"=3D=3D=3Dd.lang.b(a)&&a.push)){if("array"=3D=
=3D=3Dd.lang.b(a)&&a.length)for(var =
b=3D0;b<a.length;b++)f(a[b]);j.BAIDU_DUP=3Dm;d.data.m("BAIDU_DUP",{push:f=
});d.data.m("BAIDU_DUP_proxy",function(a){if(a)return =
function(){try{return =
f([a].concat(d.lang.l(arguments)))}catch(b){0<ga--&&d.log.H({data:{type:"=
ExecuteException",errorName:a,args:d.lang.l(arguments).join("|"),=0A=
isQuirksMode:"CSS1Compat"!=3D=3Ddocument.compatMode,documentMode:document=
.documentMode||"",readyState:document.readyState||"",message:b.message}})=
}}});for(b in =
o)b&&d.lang.B.call(o,b)&&d.data.m(b,j.BAIDU_DUP_proxy(b));h()}}function =
f(a){if("array"!=3D=3Dd.lang.b(a))return r;var =
b=3Da.shift();d.data.V("apiCount",b);return(b=3Do[b]||l[b]||r)&&b.apply(q=
,a)}function h(){function a(b){for(var =
c=3D0,d=3Dy.length;c<d;c++)if(0=3D=3D=3Db.indexOf(y[c]))return n;return =
r}d.data.m("BAIDU_DUP_require",function(b){for(var c=3D0,d=3Db.length;c<=0A=
d;c++)if(a(b[c]))return;Q.apply(q,arguments)});d.data.m("BAIDU_DUP_define=
",function(b,c){for(var =
d=3D0,e=3Dc.length;d<e;d++)if(a(c[d]))return;R.apply(q,arguments)})}var =
j=3Dwindow,i=3D{clb:"BAIDU_CLB_",dan:"BAIDU_DAN_",nova:"cpro",dup:"BAIDU_=
DUP_"},e=3D[{h:["clb.fillSlot","clb.singleFillSlot","clb.fillSlotWithSize=
"],i:["fill"],g:a.fill},{h:["clb.fillSlotAsync"],i:["fillAsync"],g:a.K},{=
h:["clb.preloadSlots"],i:["preload"],g:a.Ma},{h:["clb.prepareMoveSlot"],i=
:["prepareMove"],g:a.Na},{h:["clb.addOrientation"],=0A=
i:["addOrientation"],g:b.W},{h:["clb.addOrientationOnce"],i:["addOrientat=
ionOnce"],g:b.na},{h:["clb.setOrientationOnce"],i:["setOrientationOnce"],=
g:b.Sa},{h:["clb.setConfig"],i:["putConfig"],g:d.data.Pa},{h:["clb.addSlo=
t","clb.enableAllSlots","clb.SETHTMLSLOT"],i:[],g:d.lang.ga},{h:["dup.add=
SlotStatusCallback"],i:[],g:b.oa}],e=3Dfunction(a){for(var =
b=3D{},c=3D{},d=3D0;d<a.length;d++){for(var =
e=3Da[d],f=3De.h,g=3De.i,e=3De.g;f.length;)b[k(f.shift())]=3De;for(;g.len=
gth;)c[g.shift()]=3De}return{Ka:b,Oa:c}}(e),o=3De.Ka,l=3D=0A=
e.Oa;return{Ea:function(){var =
e=3Dd.data.q(k("clb.ORIENTATIONS"));if(e)for(var f in =
e)Object.prototype.hasOwnProperty.call(e,f)&&b.W(f,e[f]);d.data.f("#novaO=
penApi",d.data.q("cproStyleApi"));var =
h=3Dd.data.q("cproArray");if(h)for(var =
e=3D0,j=3Dh.length;e<j;e++)h[e]&&h[e].id&&a.K(h[e].id,"cpro_"+h[e].id);if=
(h=3Dd.data.q("cpro_mobile_slot")){e=3D0;for(j=3Dh.length;e<j;e++){var =
i=3Dh[e],o=3Di.id,l=3Dd.data.d("#novaOpenApi")||{};l[o]||(l[o]=3D{});for(=
f in =
i)f&&"id"!=3D=3Df&&i.hasOwnProperty(f)&&(l[o][f]=3Di[f]);d.data.f("#novaO=
penApi",=0A=
l);h[e]&&h[e].id&&a.K(h[e].id,"cpro_"+h[e].id)}}if(f=3Dd.data.q("cpro_id"=
))c.ea(f)&&(c.Ua(f),f=3D"u0"),a.fill(f);a.fill(d.data.q(k("clb.SLOT_ID"))=
);g()}}});R("logService",["util/lang","util/event"],function(a,b){b.bind(=
window,"load",function(){Q(["detect"],a.ga,n)})});=0A=
R("fingerprint","util/log,util/storage,util/event,util/browser,util/data,=
param".split(","),function(a,b,d,c,k,g){var =
f=3Dwindow,h=3Dr;c.s?6<=3Dc.s&&(h=3Dn):b.qa()&&(h=3Dn);0<=3Df.location.hr=
ef.indexOf("wa.kuwo.cn")||(h&&(k.d("isFPLoaded",n)=3D=3D=3Dn?h=3Dr:k.f("i=
sFPLoaded",n,n)),h&&d.bind(f,"load",function(){var =
a=3Df.document,b=3Da.body,c=3D"http://pos.baidu.com/wh/o.htm?ltr=3D"+g.ge=
t({},"ltr"),d=3Da.createElement("div");d.id=3D"BAIDU_DUP_fp_wrapper";d.st=
yle.position=3D"absolute";d.style.left=3D"-1px";d.style.bottom=3D"-1px";d=
.style.zIndex=3D=0A=
0;d.style.width=3D0;d.style.height=3D0;d.style.overflow=3D"hidden";d.styl=
e.visibility=3D"hidden";d.style.display=3D"none";a=3Da.createElement("ifr=
ame");a.id=3D"BAIDU_DUP_fp_iframe";a.src=3Dc;a.style.width=3D0;a.style.he=
ight=3D0;a.style.visibility=3D"hidden";a.style.display=3D"none";try{d.ins=
ertBefore(a,d.firstChild),b&&b.insertBefore(d,b.firstChild)}catch(h){}}),=
1E3>1E5*Math.random()&&a.Ha("http://release.baidu.com/coverage"))});=0A=
R("replacement",["util"],function(a){function b(){var =
d=3Da.url.P(),c=3Da.url.ba(d,ha,n);b=3Dfunction(){return c};return =
c}return{za:function(){return =
b()}}});Q(["replacement"],function(a){(a=3Da.za())?Q([a]):(Q(["global"],f=
unction(a){a.Ea()}),Q(["logService"]),Q(["fingerprint"]))});=0A=
window.BAIDU_DUP_define&&window.BAIDU_DUP_define("detect",["api"],functio=
n(a){function =
b(b){b.url=3D"";b.host=3Dwindow.location.hostname;b.from=3D"DUP";a.sendLo=
g({data:b,eb:"now"})}try{setTimeout(function(){var =
c=3Da.getSlots(),d;for(d in c){var =
g=3Dc[d],f=3Dg.response,h=3Dr;if("object"!=3D=3Da.getType(f))h=3Dn;else{v=
ar h=3Dn,j;for(j in =
f)if(Object.prototype.hasOwnProperty.call(f,j)){h=3Dr;break}}var =
i=3Dg.status,g=3Dg.stack;h?b({type:"preload"=3D=3D=3Dg[0]?"preloadFail":"=
loadFail",id:d}):!i.render&&!i.finish&&b({type:"renderFail",=0A=
id:d,error:"preload"=3D=3D=3Dg[0]?"PreloadNotFilled":"NotFilled",empty:!(=
!f.data||!f.data._html)})}},0)}catch(d){}});=0A=
window.BAIDU_DUP_define&&window.BAIDU_DUP_define("viewWatch",["util","par=
am"],function(a,b){function d(){var b=3D+new =
Date,d=3D500;x=3D=3D=3Dh&&M&&(d=3Db-M);M=3Db;for(var j in =
l)if(o.call(l,j)){x=3D=3D=3Dg&&(x=3Df);var =
i=3Dl[j];i.G&&(i.R+=3Dd);i.F&&(i.Q+=3Dd);i.S=3Db-i.timestamp;if(x=3D=3D=3D=
h)H&&(i.w+=3Db-i.D);else if(72E5<=3Di.S)c(r);else{var =
k=3Di=3Dm,p=3Dm;for(p in l)if(o.call(l,p)){var w=3Dl[p];if(H){var =
v=3Da.a.c(w.Wa);if(!v)break;try{var =
t=3De.p(B),A=3De.o(B),I=3De.r(v);w.top=3DI.top;w.left=3DI.left;var =
X=3De.Ba(B),Y=3De.Aa(B),Z=3De.O(v),$=3De.N(v),aa=3DI.top-=0A=
X+0.35*$,ba=3DI.left-Y+0.35*Z;w.G=3D0<aa&&aa<A&&0<ba&&ba<t;var =
pa=3DZ*$,ca=3De.r(v),N=3Dca.top-X,O=3Dca.left-Y,da=3De.O(v),ea=3De.N(v),f=
a=3Dv=3D0,v=3D0>N?Math.max(N+ea,0):Math.min(ea,Math.max(A-N,0)),fa=3D0>O?=
Math.max(O+da,0):Math.min(da,Math.max(t-O,0));i=3Dfa;k=3Dv;w.F=3Dk*i>0.5*=
pa}catch(ra){w.G=3Dr,w.F=3Dr}}else w.G=3Dr,w.F=3Dr}}}}function =
c(b){clearInterval(t);var =
c=3Ddocument.domain.toLowerCase();if(!(-1<c.indexOf("autohome.com.cn")||-=
1<c.indexOf("sina.com.cn")||-1<c.indexOf("pconline.com.cn")||-1<c.indexOf=
("pcauto.com.cn")||-1<c.indexOf("pclady.com.cn")||=0A=
-1<c.indexOf("pcgames.com.cn")||-1<c.indexOf("pcbaby.com.cn")||-1<c.index=
Of("pchouse.com.cn")||-1<c.indexOf("xcar.com.cn")))if(x!=3D=3Df)x=3Dh;els=
e{x=3Dh;d();var c=3Dr,e;for(e in l)if(e&&l.hasOwnProperty(e)&&l[e]){var =
g=3Dl[e];"block"=3D=3D=3Dg.Ia&&(c=3Dn);g.total=3Dp;a.log.H({url:k(g)})}if=
(b&&c)if(b=3D+new Date,j.s)for(c=3Db+200;c>+new =
Date;);else{e=3D1E5;for(c=3D0;c<e;c++);c=3D+new =
Date;e=3DMath.min(200*e/(c-b),1E7);for(c=3D0;c<e;c++);}}}function =
k(a){var =
c=3D["tu=3D"+a.id,"word=3D"+b.get(m,"ltu"),"if=3D"+b.get(m,"dis"),"aw=3D"=
+a.width,"ah=3D"+=0A=
a.height,"pt=3D"+a.S,"it=3D"+a.R,"vt=3D"+a.Q,"csp=3D"+A,"bcl=3D"+a.ra,"po=
f=3D"+a.Ra,"top=3D"+a.top,"left=3D"+a.left,"total=3D"+a.total];return =
a.url+(a.Z?a.Z+"&":"")+c.join("&")}var =
g=3D1,f=3D2,h=3D3,j=3Da.J,i=3Da.event.bind,e=3Da.style,o=3Da.lang.B,l=3D[=
],p=3D0,t=3D0,x=3Dg,H=3Dn,M=3D0,A=3D[1E4<screen.availWidth?0:screen.avail=
Width,1E4<screen.availHeight?0:screen.availHeight].join(),B=3Dwindow;a.a.=
t(window)&&!a.a.C(window)&&(B=3Dwindow.top);t=3DsetInterval(d,500);(funct=
ion(){function a(){var b=3D+new Date,c;for(c in l)if(o.call(l,c)){var =
d=3Dl[c];d.w+=3D=0A=
b-d.D;d.D=3Db}H=3Dr}function b(){var a=3D+new Date,c;for(c in =
l)o.call(l,c)&&(l[c].D=3Da);H=3Dn}j.s?(i(document,"focusin",b),i(document=
,"focusout",a)):(i(window,"focus",b),i(window,"blur",a))})();i(window,"be=
foreunload",c);return{register:function(b){var c=3D+new =
Date,d=3Db.id,f=3Db.wrapperId,g=3Db.url||"http://eclick.baidu.com/a.js?",=
h=3Db.logType||"storage",b=3Db.extra||"";if(f&&!l[f]){var =
i=3Da.a.c(f);if(i){var =
j=3De.r(i);l[f]=3D{id:d,Wa:f,url:g,Ia:h,Z:b,timestamp:c,R:0,G:r,Q:0,F:r,S=
:0,w:0,D:c,top:j.top,left:j.left,hb:A,=0A=
opacity:e.xa(i),ra:[e.p(),e.o()].join(),Ra:[e.da(),e.ca()].join(),width:e=
.O(i),height:e.N(i)};p++}}},getWatchCount:function(){return p}}});})();=0A=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://news.csdn.net/js/jquery.autoscroll.js

LyoqCiArIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKwogKyBBdXRv
U2Nyb2xs57uE5Lu2djEuMAogKyBBdXRob3I6IHp6ZgogKwlUT0RPOiDpgJrnlKjmgKfkuI3lpJ/v
vIzku4Xku4Xlrp7njrDkuoblnoLnm7TlkozmsLTlubPnmoTmu5rliqjjgILmgKfog73pl67popjv
vJ/vvJ8KICsgRGF0ZTogMjAxMi0zLTI5CiArIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0gKwoqKi8KLyoqCiAqCUF1dG9TY3JvbOiHquWKqOa7muWKqOaViOaenAogKiBA
bmFtZSBqUXVlcnkuQXV0b1Njcm9sbAogKiBAcGFyYW0ge29iamVjdH0gb2JqIOWvueixoeW9ouW8
j+eahOWPguaVsAogKiBAY2xhc3MKICogQHJldHVybiAgalF1ZXJ5LkF1dG9TY3JvbGwgaW5zdGFu
Y2UKICovCgokLkF1dG9TY3JvbGwgPSBmdW5jdGlvbihvcHRzKSB7IAoJLy/lpoLmnpzlnKjmnoTp
gKDlrp7kvovnmoTml7blgJnlv5jkuoZuZXcs5bCx6YeN5paw5a6e5L6L5YyWCglpZiAoISAodGhp
cyBpbnN0YW5jZW9mIGFyZ3VtZW50cy5jYWxsZWUpKSB7CgkJcmV0dXJuIG5ldyBhcmd1bWVudHMu
Y2FsbGVlKG9wdHMpOwoJfQoJLy/miafooYznsbvkvLzlhbbku5bor63oqIDnmoTliJ3lp4vljJbl
h73mlbDvvIzliKnnlKhhcHBseeaMh+WumuS4iuS4i+aWhyhjb250ZXh0KeS4uuivpeWunuS+i++8
jOW5tuS4lOS8oOWFpeWPguaVsAoJdGhpcy5pbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0K
CiQuQXV0b1Njcm9sbC5wcm90b3R5cGUgPXsKCWNvbnN0cnVjdG9yOiAkLkF1dG9TY3JvbGwsCglp
bml0OiBmdW5jdGlvbihvcHRzKSB7CgkJdmFyIHNlbGY9dGhpczsKCQkvL+mFjee9ruWxnuaApwoJ
CSQuZXh0ZW5kKHRoaXMsIHsKCQkJd3JhcDpudWxsLAoJCQlzZWxlY3RvcjonPmxpJywJCgkJCXNj
cm9sbENvdW50OjEsCgkJCWRpcjondicsICAgICAgICAgICAgICAvL+a7muWKqOaWueWQkSwndifl
noLnm7QsJ2gn5rC05bmzCgkJCWludGVydmFsOjMwMDAsCgkJCWZ4VGltZToxMDAwCgkJfSxvcHRz
IHx8IHt9KTsKCQl0aGlzLnRpbWVyPW51bGw7CgkJdGhpcy5ydW4oKTsKCX0sCglydW46ZnVuY3Rp
b24gKCl7CgkJdmFyIHNlbGY9dGhpcywKCQkJY291bnQ9dGhpcy5kaXI9PT0ndic/J2hlaWdodCc6
J3dpZHRoJywKCQkJbT1zZWxmLmRpcj09PSd2Jz8nbWFyZ2luVG9wJzonbWFyZ2luTGVmdCc7CgkJ
c2VsZi53cmFwLmhvdmVyKGZ1bmN0aW9uICgpewoJCQljbGVhckludGVydmFsKHNlbGYudGltZXIp
OwoJCQlzZWxmLnRpbWVyPW51bGw7CgkJfSxmdW5jdGlvbiAoKXsKCQkJc2VsZi50aW1lcj1zZXRJ
bnRlcnZhbChmdW5jdGlvbigpIHsKCQkJCXZhciBzY3JvbGxudW0gPXBhcnNlRmxvYXQoc2VsZi53
cmFwLmZpbmQoc2VsZi5zZWxlY3RvcisnOmZpcnN0JylbY291bnRdKCkpKnNlbGYuc2Nyb2xsQ291
bnQsb3B0PXt9OwoJCQkJb3B0W21dPS1zY3JvbGxudW0gKyAncHgnOwoJCQkJc2VsZi53cmFwLmFu
aW1hdGUob3B0LHNlbGYuZnhUaW1lLGZ1bmN0aW9uKCkgewoJCQkJCXNlbGYud3JhcC5jc3MobSww
KS5maW5kKHNlbGYuc2VsZWN0b3IrJzpsdCgnK3NlbGYuc2Nyb2xsQ291bnQrJyknKS5hcHBlbmRU
byhzZWxmLndyYXApOwoJCQkJfSk7CgkJCX0sc2VsZi5pbnRlcnZhbCk7CgkJfSkudHJpZ2dlcign
bW91c2VsZWF2ZScpOwoJfQp9Cg==

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/pig/pubjs/cnick.js

var __hasProp=3D{}.hasOwnProperty;!function(a){var =
b,c,d,e;d=3Dthis,b=3Dd.jQuery,c=3D{},a(d,c,b),void =
0=3D=3D=3Dd.csdn&&(d.csdn=3Dc);for(e in =
c)__hasProp.call(c,e)&&(d[e]=3Dd.csdn[e]=3Dc[e])}(function(a,b,c){var =
d,e,f,g,h;if(!(a.CNick instanceof Function&&a.cnick instanceof =
Function&&(null!=3D(h=3Da.csdn)?h.cnick:void 0)instanceof =
Function))return void =
0=3D=3D=3DString.prototype.trim&&(String.prototype.trim=3Dfunction(){retu=
rn this.replace(/^\s+|\s+$/g,"")}),g=3D{},e=3Dfunction(b,c){var =
d,e;return =
arguments.length>1?(g[b]=3Dc,null!=3D(d=3Da.localStorage)?d["cnick_"+b]=3D=
+new Date+","+c:void 0):null!=3Db?g[b]||function(a){var =
b,c,d,e;if(null!=3Da)return =
d=3Da.split(","),b=3Dd[0],c=3Dd[1],0<(e=3Dnew Date-new =
Date(parseInt(b,10)))&&1728e5>e?c:void =
0}(null!=3D(e=3Da.localStorage)?e["cnick_"+b]:void 0):void =
0},b.cnick=3Df=3Dfunction(b,d,f){var =
g,h,i,j,k,l,m,n,o,p;for(null=3D=3Db&&(b=3D"a.user_name"),null=3D=3Dd&&(d=3D=
a.document),null=3D=3Df&&(f=3D!1),h=3Dc(b,d).filter(function(){return =
f||null=3D=3Dc(this).data("orig_username")}).data("orig_username",""),k=3D=
{},o=3D0,p=3Dh.length;p>o;o++)g=3Dh[o],m=3Dg.innerHTML.trim(),null!=3D(l=3D=
e(m))?c(g).data("orig_username",m).html(l):(j=3Dk.hasOwnProperty(m)?k[m]:=
k[m]=3D[],j.push(g));for(n=3Dfunction(){var a;a=3D[];for(i in =
k)__hasProp.call(k,i)&&a.push(i);return =
a}();n.length>0;)c.getJSON("https://passport.csdn.net/get/nick?callback=3D=
?",{users:n.splice(0,100).join()},function(a){var =
b,d,f,g,h;if(d=3Da.status,b=3Da.data,d&&b)for(f=3D0,g=3Db.length;g>f;f++)=
h=3Db[f],m=3Dh.u,i=3Dh.n,"null"=3D=3D=3Di&&(i=3Dm),c(k[m]).data("orig_use=
rname",m).html(function(a,b){return i||b}),e(m,i)})},c(function(){return =
f()}),a.CNick=3Dd=3Dfunction(){function a(a){this.selector=3Da}return =
a.prototype.showNickname=3Dfunction(){return f(this.selector)},a}()});
------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://ptcms.csdn.net/comment/js/comments.js

/*=0A=
 * =
=E3=80=90=E8=AF=84=E8=AE=BA=E9=A1=B5=E3=80=91=E4=B8=93=E7=94=A8=E4=BA=8E=E8=
=AF=84=E8=AE=BA=E9=A1=B5=E7=B1=BB=E3=80=82=0A=
 *  by: zhaoxin@csdn.net=0A=
 *  2012-10-05 AM=0A=
 */=0A=
(function (window) {=0A=
=0A=
    var csdn =3D window.csdn || {},=0A=
=0A=
    //=E9=A1=B5=E9=9D=A2=E6=A8=A1=E6=9D=BF=0A=
        tpl =3D '\=0A=
    <h2 class=3D"comments_tit">\=0A=
        =
<p>=E5=B7=B2=E6=9C=89<span>0</span>=E6=9D=A1=E8=AF=84=E8=AE=BA</p>\=0A=
    </h2>\=0A=
    <div class=3D"reply topreply"></div>\=0A=
    <div id=3D"csdnTab" class=3D"comments_reply">\=0A=
        <h3 class=3D"tit tab_1">\=0A=
            <ul>\=0A=
                <li  =
class=3D"hover">=E6=9C=80=E6=96=B0=E8=AF=84=E8=AE=BA</li>\=0A=
                <li >=E6=9C=80=E7=83=AD=E8=AF=84=E8=AE=BA</li>\=0A=
            </ul>\=0A=
        </h3>\=0A=
        <div class=3D"con last"></div>\=0A=
        <div class=3D"con hot" style=3D"display:none"></div>\=0A=
        <div>=E8=AF=B7=E6=82=A8=E6=B3=A8=E6=84=8F\=0A=
        <ul class=3D"note_grey">\=0A=
            =
<li>=C2=B7=E8=87=AA=E8=A7=89=E9=81=B5=E5=AE=88=EF=BC=9A=E7=88=B1=E5=9B=BD=
=E3=80=81=E5=AE=88=E6=B3=95=E3=80=81=E8=87=AA=E5=BE=8B=E3=80=81=E7=9C=9F=E5=
=AE=9E=E3=80=81=E6=96=87=E6=98=8E=E7=9A=84=E5=8E=9F=E5=88=99</li>\=0A=
            =
<li>=C2=B7=E5=B0=8A=E9=87=8D=E7=BD=91=E4=B8=8A=E9=81=93=E5=BE=B7=EF=BC=8C=
=E9=81=B5=E5=AE=88=E3=80=8A=E5=85=A8=E5=9B=BD=E4=BA=BA=E5=A4=A7=E5=B8=B8=E5=
=A7=94=E4=BC=9A=E5=85=B3=E4=BA=8E=E7=BB=B4=E6=8A=A4=E4=BA=92=E8=81=94=E7=BD=
=91=E5=AE=89=E5=85=A8=E7=9A=84=E5=86=B3=E5=AE=9A=E3=80=8B=E5=8F=8A=E4=B8=AD=
=E5=8D=8E=E4=BA=BA=E6=B0=91=E5=85=B1=E5=92=8C=E5=9B=BD=E5=85=B6=E4=BB=96=E5=
=90=84=E9=A1=B9=E6=9C=89=E5=85=B3=E6=B3=95=E5=BE=8B=E6=B3=95=E8=A7=84</li=
>\=0A=
             =
<li>=C2=B7=E4=B8=A5=E7=A6=81=E5=8F=91=E8=A1=A8=E5=8D=B1=E5=AE=B3=E5=9B=BD=
=E5=AE=B6=E5=AE=89=E5=85=A8=EF=BC=8C=E7=A0=B4=E5=9D=8F=E6=B0=91=E6=97=8F=E5=
=9B=A2=E7=BB=93=E3=80=81=E5=9B=BD=E5=AE=B6=E5=AE=97=E6=95=99=E6=94=BF=E7=AD=
=96=E5=92=8C=E7=A4=BE=E4=BC=9A=E7=A8=B3=E5=AE=9A=EF=BC=8C=E5=90=AB=E4=BE=AE=
=E8=BE=B1=E3=80=81=E8=AF=BD=E8=B0=A4=E3=80=81=E6=95=99=E5=94=86=E3=80=81=E6=
=B7=AB=E7=A7=BD=E7=AD=89=E5=86=85=E5=AE=B9=E7=9A=84=E4=BD=9C=E5=93=81</li=
>\=0A=
             =
<li>=C2=B7=E6=89=BF=E6=8B=85=E4=B8=80=E5=88=87=E5=9B=A0=E6=82=A8=E7=9A=84=
=E8=A1=8C=E4=B8=BA=E8=80=8C=E7=9B=B4=E6=8E=A5=E6=88=96=E9=97=B4=E6=8E=A5=E5=
=AF=BC=E8=87=B4=E7=9A=84=E6=B0=91=E4=BA=8B=E6=88=96=E5=88=91=E4=BA=8B=E6=B3=
=95=E5=BE=8B=E8=B4=A3=E4=BB=BB</li>\=0A=
             =
<li>=C2=B7=E6=82=A8=E5=9C=A8CSDN=E6=96=B0=E9=97=BB=E8=AF=84=E8=AE=BA=E5=8F=
=91=E8=A1=A8=E7=9A=84=E4=BD=9C=E5=93=81=EF=BC=8CCSDN=E6=9C=89=E6=9D=83=E5=
=9C=A8=E7=BD=91=E7=AB=99=E5=86=85=E4=BF=9D=E7=95=99=E3=80=81=E8=BD=AC=E8=BD=
=BD=E3=80=81=E5=BC=95=E7=94=A8=E6=88=96=E8=80=85=E5=88=A0=E9=99=A4</li>\=0A=
             =
<li>=C2=B7=E5=8F=82=E4=B8=8E=E6=9C=AC=E8=AF=84=E8=AE=BA=E5=8D=B3=E8=A1=A8=
=E6=98=8E=E6=82=A8=E5=B7=B2=E7=BB=8F=E9=98=85=E8=AF=BB=E5=B9=B6=E6=8E=A5=E5=
=8F=97=E4=B8=8A=E8=BF=B0=E6=9D=A1=E6=AC=BE</li>\=0A=
        </ul>\=0A=
        </div>\=0A=
    </div>';=0A=
    var LOCALHOST =3D "comments.csdn.net";=0A=
    //=E6=95=B0=E6=8D=AE=E6=8E=A5=E5=8F=A3host=0A=
    var HOST =3D "http://test.ptcms.csdn.net";=0A=
    if (location.host.indexOf(LOCALHOST) < 0) {=0A=
        HOST =3D "http://ptcms.csdn.net";=0A=
    }=0A=
    //=E5=AD=97=E6=95=B0=E9=99=90=E5=88=B6=0A=
    var TEXTLIMIT =3D 500,=0A=
=0A=
    =
//=E6=8A=95=E7=A5=A8=E8=80=85=E7=AE=80=E7=9F=AD=E6=98=BE=E7=A4=BA=E9=99=90=
=E5=88=B6=E4=B8=AA=E6=95=B0=0A=
        limitNum =3D 3,=0A=
=0A=
    =
//=E5=88=86=E9=A1=B5=E7=B2=92=E5=BA=A6=EF=BC=88=E6=AF=8F=E9=A1=B5=E5=A4=9A=
=E5=B0=91=E6=9D=A1=E8=AF=84=E8=AE=BA=EF=BC=89=0A=
        PAGESIZE =3D 50,=0A=
=0A=
    =
//=E5=88=86=E9=A1=B5=E6=98=BE=E7=A4=BA=E4=B8=AA=E6=95=B0=EF=BC=88=E6=98=BE=
=E7=A4=BA=E5=A4=9A=E5=B0=91=E9=A1=B5=EF=BC=89=0A=
        SHOWPAGES =3D 10,=0A=
=0A=
    //=E5=BD=93=E5=89=8D=E9=A1=B5=0A=
        PATH =3D "",=0A=
=0A=
    //=E5=BD=93=E5=89=8DTITLE=0A=
        TITLE =3D "",=0A=
=0A=
    //=E6=96=87=E7=AB=A0=E6=95=B0=E6=8D=AE=E6=8E=A5=E5=8F=A3URL=0A=
        URL =3D "",=0A=
=0A=
    //=E7=A9=BA=E9=97=B4=E5=9C=B0=E5=9D=80URL=0A=
        SPACEURL =3D "http://my.csdn.net/",=0A=
=0A=
    //cssURL=0A=
        CSSURL =3D "",=0A=
=0A=
    //=E6=98=AF=E5=90=A6=E7=99=BB=E5=BD=95=0A=
        ISLOGINED =3D false;=0A=
=0A=
    //=E6=98=AF=E5=90=A6=E5=9C=A8csdn.net=E5=9F=9F=E5=90=8D=E4=B8=8B=0A=
    ISCSDNDOMAIN =3D window.location.host.lastIndexOf("csdn.net")>0;=0A=
    //=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=AF=B9=E8=B1=A1=0A=
    var currUser =3D {};=0A=
    currUser.username =3D "";=0A=
=0A=
    csdn.comments =3D function (conf) {=0A=
=0A=
        //=E9=85=8D=E7=BD=AE=E9=A1=B9=0A=
        this.conf =3D conf;=0A=
=0A=
        //=E5=BD=93=E5=89=8D=E6=80=BB=E8=AF=84=E8=AE=BA=E6=95=B0=0A=
        this.total =3D "";=0A=
=0A=
        //=E6=9C=80=E6=96=B0=E8=AF=84=E8=AE=BA=E6=95=B0=E6=8D=AE=0A=
        this.dataLastComm =3D {};=0A=
=0A=
        //=E6=80=BB=E5=9B=9E=E5=A4=8D=E6=95=B0=0A=
        this.replyCount =3D 0;=0A=
=0A=
        =
//=E5=BD=93=E5=89=8D=E6=89=80=E6=9C=89=E8=AF=84=E8=AE=BA=E6=95=B0=E6=8D=AE=0A=
        this.currData =3D this.dataLastComm;=0A=
=0A=
        //=E5=88=86=E9=A1=B5=E9=85=8D=E7=BD=AE=0A=
        if (conf.pagination) {=0A=
            PAGESIZE =3D conf.pagination.pagesize || PAGESIZE;=0A=
            SHOWPAGES =3D conf.pagination.showpages || SHOWPAGES;=0A=
        }=0A=
=0A=
        //=E5=BD=93=E5=89=8D=E9=A1=B5=0A=
        PATH =3D conf.path || PATH;=0A=
=0A=
        //=E6=96=87=E7=AB=A0=E9=A1=B5URL=0A=
=0A=
        URL =3D conf.articleURL || URL;=0A=
=0A=
        CSSURL =3D conf.cssUrl || CSSURL;=0A=
=0A=
        HOST =3D conf.datapath || HOST;=0A=
=0A=
        TITLE =3D conf.title || TITLE;=0A=
=0A=
        //=E5=88=9D=E5=A7=8B=E5=8C=96=0A=
        this.init.apply(this, []);=0A=
    };=0A=
=0A=
    if(typeof String.prototype.trim !=3D=3D 'function') {=0A=
        String.prototype.trim =3D function() {=0A=
            return this.replace(/^\s+|\s+$/g, '');=0A=
        }=0A=
    }=0A=
=0A=
    function getScript(url, callback){=0A=
        $.ajax({=0A=
            url: url + (~url.indexOf('?') ? '&' : '?') + (new =
Date()/300000|0) + '=3D',=0A=
            cache: true,=0A=
            dataType: 'script',=0A=
            success: callback=0A=
        });=0A=
    }=0A=
=0A=
    function parallelLoad(ctx, tasks, success){=0A=
        var bit =3D parseInt(Array(tasks.length + 1).join('1'), 2),=0A=
            cb =3D function(n){=0A=
                return function(){=0A=
                    bit &=3D ~(1 << n);=0A=
                    if(bit =3D=3D=3D 0) success.call(ctx);=0A=
                };=0A=
            };=0A=
        for (var i =3D 0; i < tasks.length; i++) {=0A=
            tasks[i].call(ctx, cb(i));=0A=
        };=0A=
    }=0A=
=0A=
    csdn.comments.prototype =3D {=0A=
=0A=
        /*=0A=
         *   =E5=88=9D=E5=A7=8B=E5=8C=96=E5=85=A5=E5=8F=A3=0A=
         */=0A=
        init:function () {=0A=
            var that =3D this;=0A=
            this.wrap =3D "#" + this.conf.id;=0A=
            this.currUser =3D {name:"user1"};=0A=
            parallelLoad(this, [=0A=
                this.initToolkit,=0A=
                this.initComponent,=0A=
                function(callback){=0A=
                    this.loadCss(CSSURL, "head", callback);=0A=
                },=0A=
                function(callback){=0A=
                    this.initTpl();=0A=
                    callback();=0A=
                },=0A=
                function(callback){=0A=
                    // =
=E9=A2=84=E5=8A=A0=E8=BD=BDcnick.js=EF=BC=8C=E9=81=BF=E5=85=8D=E5=8F=AF=E8=
=83=BD=E5=AD=98=E5=9C=A8=E9=87=8D=E5=A4=8D=E5=8A=A0=E8=BD=BD=E7=9A=84=E9=97=
=AE=E9=A2=98=0A=
                    getScript('http://csdnimg.cn/rabbit/cnick/cnick.js', =
callback);=0A=
                },=0A=
                this.checkLogin=0A=
            ], function(){=0A=
                that.initTxtCounter();=0A=
                that.initTab();=0A=
                that.addEvent();=0A=
                that.getLastComm({curr:1}, function (data) {=0A=
                    that.initReply();=0A=
                    that.initTitle();=0A=
                    that.initPagination({curr:1});=0A=
                }, function () {=0A=
                    that.detectEmpty($('.last', that.wrap));=0A=
                });=0A=
                that.getHotComm({curr:1}, function (data) {=0A=
                    that.initReply();=0A=
                }, function () {=0A=
                    that.detectEmpty($('.hot', that.wrap));=0A=
                });=0A=
=0A=
            });=0A=
        },=0A=
        /*=0A=
         *   =E5=88=9D=E5=A7=8B=E5=8C=96=E4=B8=BB=E6=A8=A1=E6=9D=BF=0A=
         */=0A=
        initTpl:function () {=0A=
            $(this.wrap).html(tpl);=0A=
            var topTpl =3D '\=0A=
            <div class=3D"reply topreply">\=0A=
            =
<h6>=E8=BF=98=E5=8F=AF=E4=BB=A5=E5=86=8D=E8=BE=93=E5=85=A5<span>' + =
TEXTLIMIT + '</span>=E4=B8=AA=E5=AD=97</h6>\=0A=
            <dl>\=0A=
                <dt class=3D"user_img"><img src=3D"' + PATH + =
'/images/user_01.gif" alt=3D"' + currUser.username + '"></dt>\=0A=
                <dd><textarea class=3D"reply_box" =
placeholder=3D"=E6=9C=89=E4=BB=80=E4=B9=88=E6=84=9F=E6=83=B3=EF=BC=8C=E4=BD=
=A0=E4=B9=9F=E6=9D=A5=E8=AF=B4=E8=AF=B4=E5=90=A7=EF=BC=81" name=3D"" =
rows=3D"4"></textarea>\=0A=
                    <div class=3D"reply_submit note_grey clearfix">\=0A=
                    <div class=3D"fr"><input id=3D"user"  =
value=3D"=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA" type=3D"submit" =
id=3D"topreply" class=3D"reply_btn"></div>\=0A=
                    <span class=3D"loginwrap"></span>\=0A=
                   <!-- <span =
class=3D"error">=E6=82=A8=E8=BF=98=E6=B2=A1=E6=9C=89=E7=99=BB=E5=BD=95! =
</span> =E8=AF=B7<a href=3D"#"> =E7=99=BB=E5=BD=95 </a> =E6=88=96<a =
href=3D"#">  =E6=B3=A8=E5=86=8C </a>-->\=0A=
                    </div>\=0A=
                </dd>\=0A=
            </dl>\=0A=
            </div>';=0A=
            $('.topreply').replaceWith(topTpl);=0A=
            var lEl =3D '<div id=3D"l_a_pop_win" style=3D"display:none =
;position: absolute; z-index: 10000; border: 1px solid rgb(220, 220, =
220); top: 222.5px; left: 630px; opacity: 1; background: none 0px 0px =
repeat scroll rgb(255, 255, 255);"></div>' +=0A=
                      '<div id=3D"l_a_popup_mask" style=3D"display: =
none;position: absolute;width: 100%;height: 100%;background: =
#000;z-index: 9999;left: 0px;top: 0px;opacity: 0.3;filter: =
alpha(opacity=3D30);"></div>';=0A=
            $("body").append(lEl);=0A=
        },=0A=
=0A=
        /*=0A=
         *   =E5=88=9D=E5=A7=8B=E5=8C=96=E8=AF=84=E8=AE=BA=E6=95=B0=0A=
         */=0A=
        initTitle:function (count) {=0A=
            count =3D count || this.dataLastComm.count * 1 + =
this.dataLastComm.reply_count * 1||"0";=0A=
            var el =3D $(".comments_tit p span").html(count*1);=0A=
            this.commentCount =3D count * 1;=0A=
            var oncountchange =3D this.conf.oncountchange || function () =
{=0A=
            };=0A=
            oncountchange(this.commentCount);=0A=
        },=0A=
=0A=
        /*=0A=
         *   =E5=88=9D=E5=A7=8B=E5=8C=96=E8=AF=84=E8=AE=BA=0A=
         */=0A=
        initReply:function (data) {=0A=
            data =3D data || this.currData;=0A=
            var type =3D data.type;=0A=
            if (type =3D=3D "last" || type =3D=3D "hot") {=0A=
                wrap =3D $(this.wrap + " ." + type)[0];=0A=
                wrap.innerHTML =3D "";=0A=
                this.renderReply(data.data, wrap);=0A=
=0A=
                // =
=E8=BD=AC=E5=8C=96=E8=AF=84=E8=AE=BA=E4=B8=AD=E7=94=A8=E6=88=B7=E5=90=8D=E7=
=A7=B0=E4=B8=BA=E7=9B=B8=E5=BA=94=E7=9A=84=E6=98=B5=E7=A7=B0=0A=
                this.getCNick(function(nick){=0A=
                    nick.showNickname();=0A=
                });=0A=
            }=0A=
        },=0A=
        detectEmpty: function (container) {=0A=
          if(container.children().length =3D=3D=3D 0){=0A=
            container.html('<div class=3D"empty-placeholder">\=0A=
                <div =
class=3D"empty-tip">=E8=BF=98=E6=B2=A1=E6=9C=89=E8=AF=84=E8=AE=BA=EF=BC=8C=
=E8=B5=B6=E5=BF=AB=E6=9D=A5=E6=8A=A2=E6=B2=99=E5=8F=91=E5=90=A7=E3=80=82<=
/div>\=0A=
            </div>')=0A=
          }=0A=
        },=0A=
        /*=0A=
         *   =E6=B8=B2=E6=9F=93=E5=8D=95=E4=BD=93=E8=AF=84=E8=AE=BA=0A=
         * @param <Object> =E6=95=B0=E6=8D=AE=0A=
         * @param <Object> =
=E6=B8=B2=E6=9F=93=E7=9B=AE=E6=A0=87DOM=E8=8A=82=E7=82=B9=0A=
         */=0A=
        renderReply:function (data, wrap) {=0A=
            var that =3D this;=0A=
            var childReply =3D "childReply";=0A=
            var len =3D data.length, i =3D 0, item, _conf =3D {};=0A=
            //wrap.innerHTML=3D"";=0A=
            =
//=E6=B8=B2=E6=9F=93=E6=AF=8F=E4=B8=80=E4=B8=AA=E8=AF=84=E8=AE=BA=E8=80=85=0A=
            while (i < len) {=0A=
                item =3D data[i];=0A=
                _conf =3D {=0A=
                    id:item.id,=0A=
                    time:item.create_time,=0A=
                    userName:item.username,=0A=
                    content:item.body,=0A=
                    from:item.from,=0A=
                    num:item.like_count,=0A=
                    voteUser:item.like_people,=0A=
                    dislike_count: item.dislike_count,=0A=
                    dislike_people: item.dislike_people,=0A=
                    avatar:item.avatar,=0A=
                    userPage:item.user_page,=0A=
                    parentId:item.parent_id=0A=
                };=0A=
=0A=
                //=E8=BF=BD=E5=8A=A0=E5=9B=9E=E5=A4=8D=E5=88=B0wrap=0A=
                $(that.buildReplyTpl(_conf)).appendTo(wrap);=0A=
                if (item.children && item.parent_id * 1 =3D=3D 0) {=0A=
                    //that.replyCount +=3D item.children.length * 1;=0A=
                    var el =3D $(wrap).children().eq(i);=0A=
                    var _wrap =3D el.find(".childReply")[0];=0A=
                    var dd =3D el.find("dd");=0A=
                    if (!_wrap && wrap.className !=3D "childReply") {=0A=
                        _wrap =3D $("<div =
class=3D\"childReply\"></div>").appendTo(dd)[0];=0A=
                    }=0A=
                    arguments.callee.call(this, item.children, _wrap);=0A=
                }=0A=
                i++;=0A=
            }=0A=
        },=0A=
=0A=
        /*=0A=
         *   =
=E5=88=9D=E5=A7=8B=E5=8C=96=E5=B7=A5=E5=85=B7=E7=AE=B1=EF=BC=88=E6=9D=A5=E8=
=87=AA=E4=BA=8Etookit.js=EF=BC=89=0A=
         */=0A=
        initToolkit:function (callback) {=0A=
            var that =3D this;=0A=
            var url =3D this.conf.toolkitUrl;=0A=
            getScript(url, function () {=0A=
                /*=0A=
                 var userName =3D csdn.toolkit.getUserName()=0A=
                 if(userName){=0A=
                 currUser.username =3D userName;=0A=
                 }=0A=
                 that.setLogin(userName);=0A=
                 */=0A=
                callback instanceof Function && callback();=0A=
            });=0A=
        },=0A=
=0A=
        /*=0A=
         * =E5=8A=A0=E8=BD=BD=E9=80=9A=E7=94=A8=E7=BB=84=E4=BB=B6 =
=EF=BC=88=E6=9D=A5=E8=87=AA=E4=BA=8Ecomponent.js=EF=BC=89=0A=
         *=0A=
         */=0A=
        initComponent:function (callback) {=0A=
            var that =3D this;=0A=
            var url =3D this.conf.componentsUrl;=0A=
            getScript(url, callback);=0A=
        },=0A=
=0A=
        /*=0A=
         * =E5=88=9D=E5=A7=8B=E5=8C=96tab=0A=
         *=0A=
         */=0A=
        initTab:function () {=0A=
            var that =3D this;=0A=
            var conf =3D this.conf.tab;=0A=
            conf.callback =3D function (i) {=0A=
                =
//=E5=BD=93=E7=82=B9=E5=87=BB=E6=9C=80=E6=96=B0=E8=AF=84=E8=AE=BA=0A=
                if (i =3D=3D 0) {=0A=
                    that.getLastComm({curr:1}, function (data) {=0A=
                        that.initReply();=0A=
                        that.initTitle();=0A=
                        that.initPagination({curr:1});=0A=
                    });=0A=
                    return;=0A=
                }=0A=
                =
//=E5=BD=93=E7=82=B9=E5=87=BB=E7=83=AD=E9=97=A8=E8=AF=84=E8=AE=BA=0A=
                if (i =3D=3D 1) {=0A=
                    that.getHotComm({curr:1}, function (data) {=0A=
                        that.initReply();=0A=
                    });=0A=
                }=0A=
            };=0A=
            if (csdn.comp) {=0A=
                this.tab =3D new csdn.comp.tab(conf);=0A=
            }=0A=
        },=0A=
=0A=
        /*=0A=
         * =
=E5=88=9D=E5=A7=8B=E5=8C=96=E5=AD=97=E7=AC=A6=E6=95=B0=E9=87=8F=E9=99=90=E5=
=88=B6=0A=
         *=0A=
         */=0A=
        initTxtCounter:function (conf) {=0A=
            conf =3D {=0A=
                btn:$(this.wrap).find(".topreply .reply_btn"),=0A=
                textarea:$(this.wrap).find(".topreply .reply_box"),=0A=
                tip:$(this.wrap).find(".topreply h6"),=0A=
                max:TEXTLIMIT=0A=
            };=0A=
            if(csdn.comp && csdn.comp.txtCounter){=0A=
              this.txtCounter =3D new csdn.comp.txtCounter(conf);=0A=
            }=0A=
        },=0A=
=0A=
        /*=0A=
         * =E5=88=9D=E5=A7=8B=E5=8C=96=E5=88=86=E9=A1=B5=0A=
         *=0A=
         */=0A=
        initPagination:function (data) {=0A=
            data =3D data || this.currData;=0A=
            var that =3D this, wrap,=0A=
                count =3D data.count || this.currData.count,=0A=
                curr =3D data.curr || 1;=0A=
            //if(count<PAGESIZE){ return}=0A=
            if ($(this.wrap + " .page_nav").length > 0) {=0A=
                wrap =3D $("#page_nav");=0A=
            } else {=0A=
                wrap =3D $("<div id=3D\"page_nav\" =
class=3D\"page_nav\"></div>").appendTo($(this.wrap + " =
.con").filter(".last"));=0A=
            }=0A=
=0A=
            var conf =3D {=0A=
                wrap:wrap,=0A=
                size:PAGESIZE, //=E5=88=86=E9=A1=B5=E7=B2=92=E5=BA=A6=0A=
                shownum:SHOWPAGES,=0A=
                curr:curr, //=E5=BD=93=E5=89=8D=E9=A1=B5=E7=A0=81=0A=
                total:count * 1,=0A=
                hlClass:"on", //highlight class name=0A=
                callback:function (i) {=0A=
                    that.getLastComm({curr:i}, function (data) {=0A=
                        conf.curr =3D i;=0A=
                        that.initTitle();=0A=
                        $("#page_nav").remove();=0A=
                        that.initReply();=0A=
                        conf.wrap =3D $("<div id=3D\"page_nav\" =
class=3D\"page_nav\"></div>").appendTo($(that.wrap + " =
.con").filter(".last"));=0A=
=0A=
                        =
//=E6=9C=80=E5=A4=96=E5=B1=82=E5=AE=B9=E5=99=A8=E8=B7=9D=E7=A6=BB=E9=A1=B6=
=E9=83=A8=E9=AB=98=E5=BA=A6=0A=
                        var top =3D $(".csdn_comments").offset().top - =
15;=0A=
=0A=
                        //morden browser=0A=
                        document.body.scrollTop =3D top;=0A=
=0A=
                        //ie=0A=
                        document.documentElement.scrollTop =3D top;=0A=
=0A=
                        =
//=E9=87=8D=E6=96=B0=E5=88=9B=E5=BB=BA=E5=88=86=E9=A1=B5=0A=
                        that.pagination =3D new =
csdn.comp.pagination(conf);=0A=
                    });=0A=
                }=0A=
            };=0A=
            if (csdn.comp) {=0A=
                this.pagination =3D new csdn.comp.pagination(conf);=0A=
            }=0A=
        },=0A=
=0A=
        /*=0A=
         *   =E5=88=9D=E5=A7=8B=E5=8C=96CSS=0A=
         */=0A=
        initCss:function () {=0A=
=0A=
        },=0A=
=0A=
        /*=0A=
         * =E6=B8=B2=E6=9F=93=E5=9B=9E=E5=A4=8D=E6=A8=A1=E6=9D=BF=0A=
         * @param <sring> conf.id           =E7=94=A8=E6=88=B7id=0A=
         * @param <sring> conf.avatar       =E5=A4=B4=E5=83=8F=0A=
         * @param <sring> conf.userName     =E7=94=A8=E6=88=B7=E5=90=8D=0A=
         * @param <sring> conf.paraentId    =E5=B1=82=E7=BA=A7ID=0A=
         * @param <sring> conf.time         =
=E5=8F=91=E5=B8=83=E6=97=B6=E9=97=B4=0A=
         * @param <sring> conf.from         =
=E8=AF=84=E8=AE=BA/=E5=9B=9E=E5=A4=8D=E6=9D=A5=E6=BA=90=0A=
         * @param <sring> conf.voteUser     =E6=8A=95=E7=A5=A8=E8=80=85=0A=
         * @param <sring> conf.num          =E6=8A=95=E7=A5=A8=E6=95=B0=0A=
         * @param <sring> conf.content      =E5=86=85=E5=AE=B9=0A=
         */=0A=
        buildReplyTpl:function (conf) {=0A=
            conf =3D conf || {};=0A=
            var id =3D conf.id,=0A=
            =
//=E5=9B=9E=E5=A4=8D=E8=80=85=E7=94=A8=E6=88=B7=E5=A4=B4=E5=83=8F=0A=
                avatar =3D conf.avatar || "images/user_01.gif",=0A=
            //=E5=9B=9E=E5=A4=8D=E8=80=85=E7=94=A8=E6=88=B7=E5=90=8D=0A=
                userName =3D conf.userName,=0A=
            //=E5=B1=82=E7=BA=A7=0A=
                parentId =3D conf.parentId,=0A=
            //=E5=8F=91=E5=B8=83=E6=97=B6=E9=97=B4=0A=
                time =3D conf.time,=0A=
            //=E6=9D=A5=E8=87=AA=0A=
                from =3D conf.from =3D=3D 1 ? " =E6=9D=A5=E8=87=AA =
=E6=96=B0=E6=B5=AA=E5=BE=AE=E5=8D=9A" : (conf.from =3D=3D 2 ? " =
=E6=9D=A5=E8=87=AA =E7=A7=BB=E5=8A=A8=E5=AE=A2=E6=88=B7=E7=AB=AF" : ""),=0A=
=0A=
            //=E9=A1=B6=E7=9A=84=E6=8A=95=E7=A5=A8=E6=95=B0=0A=
                num =3D conf.num * 1,=0A=
            //=E9=A1=B6=E7=9A=84=E6=8A=95=E7=A5=A8=E8=80=85=0A=
                voteUser =3D conf.voteUser,=0A=
            =
//=E6=9B=B4=E5=A4=9A=E9=A1=B6=E7=9A=84=E6=8A=95=E7=A5=A8=E8=80=85=0A=
                voteUserMore =3D "",=0A=
            //=E8=B8=A9=E7=9A=84=E6=8A=95=E7=A5=A8=E6=95=B0=0A=
                dislike_count =3D conf.dislike_count * 1 || 0,=0A=
            //=E8=B8=A9=E7=9A=84=E6=8A=95=E7=A5=A8=E8=80=85=0A=
                dislike_people =3D conf.dislike_people=0A=
            //=E7=94=A8=E6=88=B7=E4=B8=AA=E4=BA=BA=E9=A1=B5=0A=
                userPage =3D conf.userPage||"",=0A=
            //=E5=86=85=E5=AE=B9=0A=
                //content =3D this.HTMLEncode(conf.content),=0A=
                content =3D conf.content,=0A=
            content =3D this.replaceTpl(content),=0A=
=0A=
            isSpam =3D dislike_count - num >=3D 10=0A=
                // || Math.random() > .5 // TODO=0A=
                ,=0A=
            ishidden =3D num =3D=3D 0 ? 'style=3D"display:none;"' : '',=0A=
            ismorehidden =3D num <=3D limitNum ? =
'style=3D"display:none;"' : '',=0A=
            username =3D currUser.username=0A=
            isVoted =3D (function(u){=0A=
                if((u+'').trim() =3D=3D=3D "") return;=0A=
                if(~(',' + voteUser + ',').indexOf(',' + u + ',')) =
return 'like';=0A=
                if(~(',' + dislike_people + ',').indexOf(',' + u + ',')) =
return 'dislike';=0A=
                return '';=0A=
            }(currUser.username)),=0A=
            replayId =3D userName + id;=0A=
=0A=
            //=E5=B1=95=E7=8E=B0=E6=8A=95=E7=A5=A8=E4=BA=BA=0A=
            if (voteUser && typeof voteUser =3D=3D "string") {=0A=
                var voteUsers =3D voteUser.split(',');=0A=
                var len =3D voteUsers.length;=0A=
                voteUser =3D '';=0A=
                var i =3D 0;=0A=
                while (i < len && i < 20) {=0A=
                    if (i < limitNum) {=0A=
                        var _SPACEURL =3D SPACEURL + =
this.HTMLEncode(voteUsers[i]);=0A=
                        voteUser +=3D '<a target=3D"_blank" =
class=3D"user_name" href=3D"' + _SPACEURL + '">' + =
this.HTMLEncode(voteUsers[i]) + '</a>';=0A=
                    } else {=0A=
                        voteUserMore +=3D '<a target=3D"_blank" =
class=3D"user_name" href=3D"' + _SPACEURL + '">' + =
this.HTMLEncode(voteUsers[i]) + '</a>';=0A=
                    }=0A=
                    i++;=0A=
                }=0A=
            }=0A=
            return ('\=0A=
        <div lang=3D"' + id + '" class=3D"reply parentId_' + parentId + =
'">\=0A=
            <dl>\=0A=
                <dt class=3D"user_img"><a target=3D"_blank" href=3D"' + =
userPage + '"><img src=3D"' + avatar + '"></a></dt>\=0A=
                <dd>\=0A=
                    <div class=3D"note_grey"><a target=3D"_blank" =
href=3D"' + userPage + '" class=3D"user_name" realName=3D"'+ =
this.HTMLEncode(userName) +'">' + this.HTMLEncode(userName) + '</a>   =
<span class=3D"time">' + time + '</span>   <span class=3D"from =
from'+conf.from+'">' + from + '</span></div>\=0A=
                    ' + (isSpam ? '<div class=3D"spam-text">\=0A=
                        =
=E8=AF=A5=E5=86=85=E5=AE=B9=E8=AF=84=E5=88=86=E8=BE=83=E4=BD=8E=EF=BC=8C=E5=
=B7=B2=E7=BB=8F=E8=A2=AB=E9=9A=90=E8=97=8F=EF=BC=8C<a =
class=3D"spam_text_btn" href=3D"javascript:void =
0">=E7=82=B9=E5=87=BB=E5=8F=AF=E6=9F=A5=E7=9C=8B</a>\=0A=
                    </div>' : '') + '\=0A=
                    <div class=3D"reply_content"' + (isSpam ? ' =
style=3D"display: none"' : '') + '>' + content + '</div>\=0A=
                    <div class=3D"comment-btns note_grey clearfix"' + =
(isSpam ? ' style=3D"display: none"' : '') + '>\=0A=
                        <span class=3D"fr">\=0A=
                            <span class=3D"votewrap" ' + ishidden + =
'><span class=3D"num">' + num + =
'</span>=E7=A5=A8=EF=BC=8C=E6=9D=A5=E8=87=AA<span class=3D"from">' + =
voteUser + '</span></span>\=0A=
                            <a class=3D"vote vote-like' + (isVoted ? ' =
voted ' + (isVoted =3D=3D=3D 'like' ? 'voted-current' : '') : '' ) + '" =
href=3D"javascript:void(0);" id=3D"' + replayId + '_vote" title=3D"' + =
(isVoted ? isVoted =3D=3D=3D 'like' ? '=E5=B7=B2=E9=A1=B6=E8=BF=87' : '' =
: '=E9=A1=B6=E4=B8=80=E4=B8=8B') + '"> </a>\=0A=
                            <a href=3D"javascript:void(0);" =
class=3D"more more_close"  id=3D"' + replayId + '_more"  ' + =
ismorehidden + '>=E6=9B=B4=E5=A4=9A</a>\=0A=
                            <span style=3D"display:inline-block; =
width:12px;" ></span>\=0A=
                            <span class=3D"dislike_count"' + =
(dislike_count > 0 ? '' : 'style=3D"display: none"') + ' =
title=3D"=E8=A2=AB=E8=B8=A9=E4=BA=86' + dislike_count + '=E7=A5=A8">' + =
dislike_count + '=E7=A5=A8</span>\=0A=
                            <a class=3D"vote vote-dislike' + (isVoted ? =
' voted ' + (isVoted =3D=3D=3D 'dislike' ? 'voted-current' : '') : '' ) =
+ '" href=3D"javascript:void 0" id=3D"' + replayId + '_vote_dislike" =
title=3D"' + (isVoted ? isVoted =3D=3D=3D 'dislike' ? =
'=E5=B7=B2=E8=B8=A9=E8=BF=87' : '' : '=E8=B8=A9=E4=B8=80=E4=B8=8B') + =
'"> </a>\=0A=
                             <a class=3D"reply_comments" =
href=3D"javascript:void(0);">=E5=9B=9E=E5=A4=8D</a>\=0A=
                        </span>\=0A=
                    </div>\=0A=
                    <div class=3D"vote_user " style=3D"display:none;">' =
+ voteUserMore + '</div>\=0A=
                    <div class=3D"reply_reply" style=3D"display:none;">\=0A=
                        <textarea class=3D"reply_box" =
placeholder=3D"=E6=9C=89=E4=BB=80=E4=B9=88=E6=84=9F=E6=83=B3=EF=BC=8C=E4=BD=
=A0=E4=B9=9F=E6=9D=A5=E8=AF=B4=E8=AF=B4=E5=90=A7=EF=BC=81" name=3D"" =
rows=3D"3"></textarea>\=0A=
                        <div class=3D"reply_submit note_grey clearfix">\=0A=
                            <div class=3D"fr"><input id=3D"' + replayId =
+ '_btn" value=3D"=E5=9B=9E=E5=A4=8D" type=3D"submit" =
class=3D"reply_btn"></div>\=0A=
                        </div>\=0A=
                    </div>\=0A=
                </dd>\=0A=
            </dl>\=0A=
        </div>').trim();=0A=
        },=0A=
=0A=
        /*=0A=
         *  =E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A=0A=
         */=0A=
        addEvent:function () {=0A=
            var that =3D this;=0A=
            $(this.wrap).bind("mousedown", function (e) {=0A=
                var el =3D e.target;=0A=
                if(e.which !=3D=3D 1) return;=0A=
                var wrap =3D $(el).parents().filter(".reply")[0];=0A=
                that.eventHandler(wrap, e);=0A=
            })=0A=
        },=0A=
=0A=
        /*=0A=
         * =E4=BA=8B=E4=BB=B6=E5=A4=84=E7=90=86=0A=
         * @ param <object> =E5=A4=96=E5=B1=82=E8=8A=82=E7=82=B9=0A=
         * @ param <object> =E4=BA=8B=E4=BB=B6=E5=AF=B9=E8=B1=A1=0A=
         */=0A=
        eventHandler:function (wrap, e) {=0A=
            var that =3D this,=0A=
                target =3D e.target;=0A=
                hook =3D {=0A=
                    "spam_text_btn": function(){=0A=
                        $(target).parent('.spam-text').fadeOut('fast', =
function(){=0A=
                            $(this).nextAll().slice(0, 2).fadeIn();=0A=
                        });=0A=
                    },=0A=
                    "reply_btn":function () {=0A=
                        if (!ISLOGINED) {=0A=
                            that.showLoginBox(wrap, e);=0A=
                            return;=0A=
                        }=0A=
                        that.replyHandler(wrap, e, function (wrap, e) {=0A=
                            that.warning(wrap);=0A=
                        });=0A=
                    },=0A=
                    "vote":function () {=0A=
                        if (!ISLOGINED) {=0A=
                            that.showLoginBox(wrap, e);=0A=
                            return;=0A=
                        }=0A=
                        that.doVote(wrap, e);=0A=
                    },=0A=
                    "more":function () {=0A=
                        that.showMoreVoter(wrap, e);=0A=
                    },=0A=
                    "reply_comments":function () {=0A=
                        if (!ISLOGINED) {=0A=
                            that.showLoginBox(wrap, e);=0A=
                            return;=0A=
                        }=0A=
                        that.showReplyBox(wrap, e);=0A=
                    },=0A=
                    "dologin":function () {=0A=
                        that.showLoginBox(wrap, e);=0A=
                    },=0A=
                    "loginout":function () {=0A=
                        that.loginout(wrap, e);=0A=
                    }=0A=
                };=0A=
=0A=
            if ($(target).parents().filter(".topreply")[0] || =
$(target).parents().filter(".con")[0]) {=0A=
=0A=
                target =3D $(target);=0A=
                =
//=E5=BC=B9=E5=87=BA=E7=AA=97=E5=8F=A3=E7=9A=84=E9=9C=80=E8=A6=81=E7=89=B9=
=E6=AE=8A=E5=A4=84=E7=90=86=EF=BC=8C=E5=90=A6=E5=88=99=E6=8B=A6=E6=88=AA=0A=
                if (target.hasClass("weibo")) {=0A=
                    this.shareSina(wrap, e);=0A=
                } else {=0A=
                    for (i in hook) {=0A=
                        if (hook.hasOwnProperty(i) && =
target.hasClass(i)) {=0A=
                            hook[i]();=0A=
                        }=0A=
                    }=0A=
                }=0A=
            }=0A=
        },=0A=
        /*=0A=
         * =E6=8A=95=E7=A5=A8=0A=
         * @param <object> =
=E5=BD=93=E5=89=8D=E5=9B=9E=E5=A4=8D=E6=A1=86=E5=A4=96=E5=B1=82=E8=8A=82=E7=
=82=B9=0A=
         * @param <object> =E7=9B=AE=E6=A0=87=E8=8A=82=E7=82=B9=0A=
         */=0A=
        shareSina:function (wrap, e) {=0A=
            var el =3D $(e.target);=0A=
            wrap =3D $(el).parents().filter(".reply");=0A=
            var con =3D wrap.find(".reply_content").get(0).innerHTML;=0A=
            csdn.comp.shareSina({=0A=
                url:location.href,=0A=
                title:con=0A=
            })=0A=
        },=0A=
        /*=0A=
         * =E6=8A=95=E7=A5=A8=0A=
         * @param <object> =
=E5=BD=93=E5=89=8D=E5=9B=9E=E5=A4=8D=E6=A1=86=E5=A4=96=E5=B1=82=E8=8A=82=E7=
=82=B9=0A=
         * @param <object> =E7=9B=AE=E6=A0=87=E8=8A=82=E7=82=B9=0A=
         */=0A=
        showMoreVoter:function (wrap, e) {=0A=
            var el =3D $(e.target);=0A=
            wrap =3D $(el).parents().filter(".reply").get(0);=0A=
            var moreVoter =3D $(wrap).find(".vote_user").get(0);=0A=
            $(moreVoter).slideToggle("fast", function () {=0A=
                el.toggleClass("more_close");=0A=
            });=0A=
        },=0A=
=0A=
        /*=0A=
         * =E6=8A=95=E7=A5=A8=0A=
         * @param <object> =
=E5=BD=93=E5=89=8D=E5=9B=9E=E5=A4=8D=E6=A1=86=E5=A4=96=E5=B1=82=E8=8A=82=E7=
=82=B9=0A=
         * @param <object> =E7=9B=AE=E6=A0=87=E8=8A=82=E7=82=B9=0A=
         */=0A=
        doVote:function (wrap, e) {=0A=
            var id =3D wrap.getAttribute("lang");=0A=
            var msg =3D {=0A=
                =
"503":"=E6=82=A8=E5=B7=B2=E7=BB=8F=E6=8A=95=E8=BF=87=E7=A5=A8=E4=BA=86=EF=
=BC=81",=0A=
                "500":"+1"=0A=
            };=0A=
            var className =3D (' ' + e.target.className + ' ');=0A=
            if(~className.indexOf('voted')) {=0A=
                //return;=0A=
            }=0A=
            var isDislike =3D ~className.indexOf(' vote-dislike ')=0A=
=0A=
            var self =3D this;=0A=
            self.asyVote(id, isDislike, function (data) {=0A=
                if (data.status !=3D=3D 500) {=0A=
                    csdn.comp.tip(e.target, msg(data.status));=0A=
                } else {=0A=
                    csdn.comp.tip(e.target, isDislike ? '-1' : '+1');=0A=
=0A=
                	$('.comment-btns:first .vote', =
wrap).toggleClass('voted')=0A=
                        .filter(isDislike ? '.vote-dislike' : =
'.vote-like').toggleClass('voted-current');=0A=
                	if(data.type > 0){=0A=
                    	$('.comment-btns:first .vote', wrap)=0A=
                        	.filter(isDislike ? '.vote-like' : =
'.vote-dislike').removeClass('voted-current');=0A=
                    }=0A=
=0A=
                    //if(isDislike){=0A=
                        var ele_dislike_count =3D $('.comment-btns:first =
.dislike_count', wrap).html(function(i, h){=0A=
                            return h.replace(/\d+/, data.dislike_count);=0A=
                        }).attr('title', function(i, t){=0A=
                            return t.replace(/\d+/, data.dislike_count);=0A=
                        });=0A=
                        =0A=
                        if(data.dislike_count>0){=0A=
                        	if(!ele_dislike_count.is(':visible')) =
ele_dislike_count.fadeIn();=0A=
                        }else{=0A=
                        	ele_dislike_count.fadeOut();=0A=
                        }=0A=
                    //}else{=0A=
                        var voteUser =3D =
$(wrap).find(".vote_user:first");=0A=
                        var num =3D $(wrap).find(".num:first");=0A=
                        var from =3D $(wrap).find(".votewrap =
.from:first");=0A=
                        //data.like_count =3D 4;=0A=
                        //data.like_people =3D =
"1asdasd,2asdasd,3sdfsdf,4gfgfg";=0A=
                        var moreBtn =3D $(wrap).find(".more:first");     =
                  =0A=
                        if(data.like_count>0){=0A=
                        	$(wrap).find(".votewrap:first").fadeIn();=0A=
                        }else{=0A=
                        	$(wrap).find(".votewrap:first").fadeOut();=0A=
                        }=0A=
                        if (data.like_count && data.like_count > =
limitNum) {=0A=
                            voteUser.fadeIn();=0A=
                            moreBtn.fadeIn();=0A=
                        }=0A=
                        num.html(data.like_count);=0A=
                        var voters =3D data.like_people.split(",");=0A=
                        var votersShort =3D voters.slice(0, limitNum);=0A=
                        var renderVoters =3D function (data, len) {=0A=
                            len =3D data.length;=0A=
                            var i =3D 0, votersHtml =3D "";=0A=
                            while (i < len) {=0A=
                                votersHtml +=3D '<a class=3D"user_name" =
href=3D"' + SPACEURL + voters[i] + '" target=3D"_blank">' + voters[i] + =
'</a>';=0A=
                                i++;=0A=
                            }=0A=
                            return votersHtml;=0A=
                        };=0A=
=0A=
                        from.html(renderVoters(votersShort));=0A=
                        if (voters.length > limitNum) {=0A=
                            voters =3D voters.slice(limitNum);=0A=
                            voteUser.html(renderVoters(voters));=0A=
                            voteUser.slideDown('fast');=0A=
                        }=0A=
                        self.getCNick(function(nick){=0A=
                            nick.showNickname();=0A=
                        });=0A=
                        =0A=
                    //}=0A=
                }=0A=
            })=0A=
        },=0A=
=0A=
        /*=0A=
         * =E6=98=BE=E7=A4=BA=E5=9B=9E=E5=A4=8D=E6=A1=86=0A=
         * @param <object> =
=E5=BD=93=E5=89=8D=E5=9B=9E=E5=A4=8D=E6=A1=86=E5=A4=96=E5=B1=82=E8=8A=82=E7=
=82=B9=0A=
         * @param <object> =E7=9B=AE=E6=A0=87=E8=8A=82=E7=82=B9=0A=
         */=0A=
        showReplyBox:function (wrap, e) {=0A=
            $(wrap).find(".reply_reply:first").toggle("fast");=0A=
        },=0A=
=0A=
        /*=0A=
         * =E5=AD=90=E5=9B=9E=E5=A4=8D=E5=A4=84=E7=90=86=0A=
         * @param <object> =
=E5=BD=93=E5=89=8D=E5=9B=9E=E5=A4=8D=E6=A1=86=E5=A4=96=E5=B1=82=E8=8A=82=E7=
=82=B9=0A=
         * @param <object> =E7=9B=AE=E6=A0=87=E8=8A=82=E7=82=B9=0A=
         */=0A=
        replyHandler:function (wrap, e, callback) {=0A=
            if ($(wrap).find(".reply_btn").hasClass("disabled")) {=0A=
                return;=0A=
            }=0A=
            var that =3D this;=0A=
            var _userName;=0A=
            //var publisher =3D $(wrap).find('.user_name').html();=0A=
            var publisher =3D $(wrap).find('.user_name').attr( =
'realName' );=0A=
            var reply_box =3D $(wrap).find('.reply_box');=0A=
            var content =3D reply_box.val();=0A=
            if (!content) {=0A=
                if (typeof callback =3D=3D 'function') {=0A=
                    callback(wrap, e);=0A=
                }=0A=
                return;=0A=
            }=0A=
=0A=
            $(wrap).hasClass("topreply") || =
$(wrap).hasClass("parentId_0") ? content : content =3D =
"=E5=9B=9E=E5=A4=8D@{#?'" + publisher + "}:" + content;=0A=
=0A=
            //=E5=B1=82=E7=BA=A7=E9=99=90=E5=AE=9A3=0A=
            var len =3D 3;=0A=
            while (len--) {=0A=
                if (wrap.className.indexOf("parentId_" + len) > 0) {=0A=
                    parentId =3D len;=0A=
                }=0A=
            }=0A=
            if ($(wrap).hasClass("topreply")) {=0A=
                topId =3D "";=0A=
                parentId =3D '';=0A=
                _type =3D "do_comment";=0A=
            } else {=0A=
                var _type =3D '';=0A=
                //=E5=A6=82=E6=9E=9C=E4=B8=8D=E6=98=AF=E9=A1=B6=E5=B1=82=0A=
                if ($(wrap).parents().filter(".reply").length > 0) {=0A=
                    var _replys =3D $(wrap).parents().filter(".reply");=0A=
                    var topWrap =3D _replys[_replys.length - 1];=0A=
                    //_userName =3D $(topWrap).find(".user_name").html();=0A=
                    _userName =3D $(topWrap).find(".user_name").attr( =
'realName' );=0A=
                    _wrap =3D topWrap;=0A=
                } else {=0A=
                    _userName =3D publisher;=0A=
                    _wrap =3D wrap;=0A=
                }=0A=
                var topId =3D _wrap.getAttribute("lang") * 1;=0A=
            }=0A=
=0A=
            var _data =3D {=0A=
                id:topId,=0A=
                parentId:parentId,=0A=
                content:content,=0A=
                type:_type,=0A=
                username:_userName=0A=
            };=0A=
=0A=
            =
//=E4=B8=BA=E9=81=BF=E5=85=8D=E9=87=8D=E5=A4=8D=E6=8F=90=E4=BA=A4=EF=BC=8C=
=E8=AE=BE=E7=BD=AE=E5=9B=9E=E5=A4=8D=E6=8C=89=E9=92=AE=E4=B8=8D=E5=8F=AF=E7=
=94=A8=EF=BC=8C=E5=B9=B6=E6=94=B9=E5=8F=98=E5=AD=97=E6=A0=B7=E4=B8=BA"loa=
ding..."=0A=
            var rbtn =3D $(wrap).find(".reply_btn");=0A=
            var rbtnVal =3Drbtn.val();=0A=
            function showLoading(isShow){=0A=
                if(isShow){=0A=
                  rbtn.val("=E6=AD=A3=E5=9C=A8=E5=8F=91=E9=80=81");=0A=
                  rbtn.addClass("disabled");=0A=
                }else{=0A=
                  rbtn.val(rbtnVal);=0A=
                  rbtn.removeClass("disabled");=0A=
                }=0A=
            };=0A=
            showLoading(true);=0A=
=0A=
            //=E5=8F=91=E9=80=81=E5=9B=9E=E5=A4=8D=E6=95=B0=E6=8D=AE=0A=
            this.sendComm(_data, function (data) {=0A=
            =
//=E5=9B=9E=E5=A4=8D=E6=8F=90=E4=BA=A4=E6=8C=89=E9=92=AE=E5=8F=AF=E7=94=A8=0A=
            showLoading();=0A=
                var msg =3D {=0A=
                    "301":"=E8=AF=B7=E5=85=88=E7=99=BB=E5=BD=95",=0A=
                    =
"302":"=E8=AF=84=E8=AE=BA=E6=AC=A1=E6=95=B0=E8=BF=87=E5=BF=AB",=0A=
                    "303":"url=E4=B8=8D=E8=83=BD=E4=B8=BA=E7=A9=BA",=0A=
                    =
"305":"=E5=86=85=E5=AE=B9=E4=B8=8D=E8=83=BD=E4=B8=BA=E7=A9=BA",=0A=
                    "306":"=E8=AF=84=E8=AE=BA=E5=A4=B1=E8=B4=A5"=0A=
                };=0A=
                csdn.comp.tip(e.target, msg[data.status]);=0A=
                data =3D data.data || data;=0A=
                currUser.username =3D data.username || "";=0A=
                var conf =3D {=0A=
                    id:data.id,=0A=
                    avatar:data.avatar,=0A=
                    userName:data.username,=0A=
                    parentId:data.parent_id,=0A=
                    time:data.create_time,=0A=
                    from:data.from,=0A=
                    voteUser:data.like_people,=0A=
                    num:data.like_count,=0A=
                    content:data.body=0A=
                };=0A=
                that.appendReply(conf, wrap);=0A=
                //=E6=B8=85=E7=A9=BA=E5=86=85=E5=AE=B9=0A=
                reply_box.val('');=0A=
=0A=
            });=0A=
        },=0A=
=0A=
        /*=0A=
         * =E8=AF=84=E8=AE=BA=E5=A4=84=E7=90=86=0A=
         * @ param <object> =E5=A4=96=E5=B1=82=E8=8A=82=E7=82=B9=0A=
         * @ param <object> =E4=BA=8B=E4=BB=B6=E6=BA=90=E5=AF=B9=E8=B1=A1=0A=
         */=0A=
        topreplyHandler:function (wrap, target) {=0A=
            this.replyHandler(wrap, "", function () {=0A=
=0A=
            })=0A=
        },=0A=
=0A=
        /*=0A=
         * =E8=BF=BD=E5=8A=A0=E5=9B=9E=E5=A4=8D=0A=
         * @ param <object> =E9=85=8D=E7=BD=AE=0A=
         * @ param <object> =E5=A4=96=E5=B1=82=E8=8A=82=E7=82=B9=0A=
         */=0A=
        appendReply:function (conf, wrap) {=0A=
            var parentId =3D conf.parentId;=0A=
            var tpl =3D $(this.buildReplyTpl(conf));=0A=
            var _target;=0A=
            $('.last .empty-placeholder', this.wrap).fadeOut();=0A=
            if (parentId =3D=3D 0) {=0A=
                _target =3D $(this.wrap + " .con").filter(".last");=0A=
                if (_target.children().length > 0) {=0A=
                    =
tpl.insertBefore(_target.children().get(0)).hide().slideDown('slow');=0A=
                } else {=0A=
                    tpl.appendTo(_target[0]).hide().slideDown('slow');=0A=
                }=0A=
            } else if (parentId =3D=3D 1) {=0A=
                if ($(wrap).hasClass("parentId_0")) { =
//=E6=A0=B9=E8=8A=82=E7=82=B9=0A=
                    var _wrap =3D $(wrap).find(".childReply")[0];=0A=
                    if (!_wrap && wrap.className !=3D "childReply") {=0A=
                        var dd =3D $(wrap).find("dd");=0A=
                        $("<div =
class=3D\"childReply\"></div>").appendTo(dd)[0];=0A=
                    }=0A=
                    _target =3D $(wrap).find(".childReply");=0A=
                } else if ($(wrap).hasClass("parentId_1")) {=0A=
                    _target =3D wrap;=0A=
                }=0A=
                if ($(_target).children().length > 0 && parentId =3D=3D =
0) {=0A=
                    =
tpl.insertBefore($(_target).children()).hide().slideDown('slow');=0A=
                } else {=0A=
                    if ($(_target).hasClass("parentId_1")) {=0A=
                        _target =3D _target.parentNode;=0A=
                    }=0A=
                    tpl.appendTo(_target).hide().slideDown('slow');=0A=
                }=0A=
            }=0A=
=0A=
            // =
=E8=BD=AC=E5=8C=96=E8=AF=84=E8=AE=BA=E4=B8=AD=E7=94=A8=E6=88=B7=E5=90=8D=E7=
=A7=B0=E4=B8=BA=E7=9B=B8=E5=BA=94=E7=9A=84=E6=98=B5=E7=A7=B0=0A=
            this.getCNick(function(nick){=0A=
                nick.showNickname();=0A=
            });=0A=
=0A=
            this.afterReply(parentId, wrap);=0A=
        },=0A=
=0A=
        /*=0A=
         * =E5=9B=9E=E5=A4=8D/=E8=AF=84=E8=AE=BA =
=E6=93=8D=E4=BD=9C=E4=BB=A5=E5=90=8E=E7=9A=84=E8=A1=8C=E4=B8=BA=0A=
         * @ param <object> =E5=A4=96=E5=B1=82=E8=8A=82=E7=82=B9=0A=
         */=0A=
        afterReply:function (parentId, wrap) {=0A=
            if (parentId =3D=3D 0) {=0A=
                $(wrap).find("h6 span").html(TEXTLIMIT);=0A=
            } else {=0A=
                $(wrap).find(".reply_reply").slideUp("fast");=0A=
            }=0A=
            if ($(wrap).parents().filter(".last").length =3D=3D 1 || =
$(wrap).hasClass("topreply")) {=0A=
                this.initTitle(this.commentCount + 1);=0A=
            }=0A=
        },=0A=
=0A=
        /*=0A=
         * =E5=8A=A0=E8=BD=BDCSS=0A=
         * @ param <string> CSS=E5=9C=B0=E5=9D=80=0A=
         * @ param <string> =E5=8A=A0=E8=BD=BD=E7=9B=AE=E6=A0=87=0A=
         * @ param <function> =E5=9B=9E=E8=B0=83=0A=
         */=0A=
        loadCss:function (src, target, callback) {=0A=
            var node =3D document.createElement('link'), outEl;=0A=
            switch (target) {=0A=
                case 'body':=0A=
                    outEl =3D document.body;=0A=
                    break;=0A=
                case 'head':=0A=
                    outEl =3D document.getElementsByTagName('head')[0];=0A=
                    break;=0A=
                default:=0A=
                    outEl =3D document.getElementsByTagName('head')[0];=0A=
            }=0A=
            node.rel =3D "stylesheet";=0A=
            node.type =3D 'text/css';=0A=
            if (node.addEventListener) {=0A=
                node.addEventListener('load', callback, false);=0A=
                node.addEventListener('error', function () {=0A=
                    //error function=0A=
                    //callback();=0A=
                }, false);=0A=
            }=0A=
            else { // for IE6-8=0A=
                node.onreadystatechange =3D function () {=0A=
                    var rs =3D node.readyState;=0A=
                    if (rs =3D=3D=3D 'loaded' || rs =3D=3D=3D =
'complete') {=0A=
                        node.onreadystatechange =3D null;=0A=
                        callback();=0A=
                    }=0A=
                };=0A=
            }=0A=
            node.href =3D src;=0A=
            outEl.appendChild(node);=0A=
        },=0A=
        createIframe:function (el, src, callback) {=0A=
            var node =3D el || document.createElement('IFRAME'), outEl =
=3D document.body;=0A=
            if (node.addEventListener) {=0A=
                node.addEventListener('load', callback, false);=0A=
            }=0A=
            else { // for IE6-8=0A=
                node.onreadystatechange =3D function () {=0A=
                    var rs =3D node.readyState;=0A=
                    if (rs =3D=3D=3D 'loaded' || rs =3D=3D=3D =
'complete') {=0A=
                        node.onreadystatechange =3D null;=0A=
                        callback(node);=0A=
                    }=0A=
                };=0A=
            }=0A=
            node.src =3D src;=0A=
            outEl.appendChild(node);=0A=
        },=0A=
=0A=
        /*=0A=
         * =
=E3=80=90=E6=95=B0=E6=8D=AE=E5=B1=82=E3=80=91=E5=8F=91=E9=80=81=E8=AF=84=E8=
=AE=BA=0A=
         * @ param <function> =E8=AF=B7=E6=B1=82=E5=9B=9E=E8=B0=83=0A=
         */=0A=
        sendComm:function (data, callback) {=0A=
=0A=
                parentId =3D data.parentId,=0A=
                type =3D data.type || "do_reply",=0A=
                parentId =3D (type =3D=3D 'do_reply') ? 'parent_id=3D' + =
parentId : '',=0A=
                content =3D encodeURIComponent(data.content),=0A=
                TITLE =3D TITLE || document.title;=0A=
            var _url, comment_id;=0A=
=0A=
            if (type =3D=3D "do_reply") {=0A=
                comment_id =3D 'comment_id=3D' + data.id + =
'&to_user=3D'+data.username+'&';=0A=
            } else {=0A=
                comment_id =3D "";=0A=
            }=0A=
            _url =3D HOST + '/comment/comment/' + type + '?' + =
comment_id + 'url=3D' + URL + '&' + parentId + '&title=3D' + TITLE + =
'&body=3D' + content;=0A=
            $.ajax({=0A=
                url:_url,=0A=
                dataType:"jsonp",=0A=
                jsonp:"jsonpcallback",=0A=
                scriptCharset:"utf-8",=0A=
                success:function (data) {=0A=
                    if (typeof callback =3D=3D "function") {=0A=
                        callback(data);=0A=
                    }=0A=
                }=0A=
            });=0A=
=0A=
        },=0A=
=0A=
        /*=0A=
         * =
=E3=80=90=E6=95=B0=E6=8D=AE=E5=B1=82=E3=80=91=E8=8E=B7=E5=8F=96=E6=9C=80=E6=
=96=B0=E8=AF=84=E8=AE=BA=0A=
         * @ param <function> =E8=AF=B7=E6=B1=82=E5=9B=9E=E8=B0=83=0A=
         */=0A=
        getLastComm:function (data, callback, complete) {=0A=
            var that =3D this,=0A=
                curr =3D data.curr,=0A=
                _url =3D HOST + "/comment/comment/newest?url=3D" + URL + =
"&pageno=3D" + curr + "&pagesize=3D" + PAGESIZE;=0A=
            $.ajax({=0A=
                url:_url,=0A=
                dataType:"jsonp",=0A=
                jsonp:"jsonpcallback",=0A=
                scriptCharset:"utf-8",=0A=
                success:function (data) {=0A=
                    data.type =3D "last";=0A=
                    that.currData =3D that.dataLastComm =3D data;=0A=
=0A=
                    if (typeof callback =3D=3D "function" && data.status =
=3D=3D 100) {=0A=
                        callback(data);=0A=
                    }=0A=
                },=0A=
                complete: complete=0A=
            });=0A=
=0A=
        },=0A=
=0A=
        /*=0A=
         * =
=E3=80=90=E6=95=B0=E6=8D=AE=E5=B1=82=E3=80=91=E8=8E=B7=E5=8F=96=E6=9C=80=E7=
=83=AD=E8=AF=84=E8=AE=BA=0A=
         * @ param <function> =E8=AF=B7=E6=B1=82=E5=9B=9E=E8=B0=83=0A=
         */=0A=
        getHotComm:function (data, callback, complete) {=0A=
            var that =3D this,=0A=
                curr =3D data.curr,=0A=
                _url =3D HOST + "/comment/comment/hot?url=3D" + URL + =
"&pagesize=3D50";=0A=
            $.ajax({=0A=
                url:_url,=0A=
                dataType:"jsonp",=0A=
                jsonp:"jsonpcallback",=0A=
                scriptCharset:"utf-8",=0A=
                success:function (data) {=0A=
                    data.type =3D "hot";=0A=
                    that.currData =3D that.dataLastComm =3D data;=0A=
                    if (typeof callback =3D=3D "function" && data.status =
=3D=3D 200) {=0A=
                        callback(data);=0A=
                    }=0A=
                },=0A=
                complete: complete=0A=
            });=0A=
        },=0A=
=0A=
        /*=0A=
         * =
=E3=80=90=E6=95=B0=E6=8D=AE=E5=B1=82=E3=80=91=E8=8E=B7=E5=8F=96=E6=9C=80=E6=
=96=B0=E8=AF=84=E8=AE=BA=0A=
         * @ param <function> =E8=AF=B7=E6=B1=82=E5=9B=9E=E8=B0=83=0A=
         */=0A=
        getUMOnCSDNDomain:function (callback) {=0A=
            var that =3D this,=0A=
                _url =3D =
"http://ptcms.csdn.net/comment/comment/login_username";=0A=
            $.ajax({=0A=
                url:_url,=0A=
                dataType:"jsonp",=0A=
                jsonp:"jsonpcallback",=0A=
                scriptCharset:"utf-8",=0A=
                success:function (data) {=0A=
                    if (typeof callback =3D=3D "function") {=0A=
                        callback(data.username);=0A=
                    }=0A=
                }=0A=
            });=0A=
        },=0A=
=0A=
        /*=0A=
         * =
=E3=80=90=E6=95=B0=E6=8D=AE=E5=B1=82=E3=80=91=E8=8E=B7=E5=8F=96=E6=9C=80=E6=
=96=B0=E6=8A=95=E7=A5=A8=0A=
         * @ param <function> =E8=AF=B7=E6=B1=82=E5=9B=9E=E8=B0=83=0A=
         * @param {Boolean} isDislike =E6=98=AF=E5=90=A6=E6=98=AF=E8=B8=A9=0A=
         */=0A=
        asyVote:function (id, isDislike, callback) {=0A=
            var that =3D this,=0A=
                _url =3D HOST + "/comment/comment/" + (isDislike ? =
'dislike' : 'like') + "?id=3D" + id;=0A=
            $.ajax({=0A=
                url:_url,=0A=
                dataType:"jsonp",=0A=
                jsonp:"jsonpcallback",=0A=
                scriptCharset:"utf-8",=0A=
                success:function (data) {=0A=
                    if (typeof callback =3D=3D "function") {=0A=
                        callback(data);=0A=
                    }=0A=
                }=0A=
            });=0A=
        },=0A=
=0A=
        /*=0A=
         * =E6=A3=80=E6=B5=8B=E7=99=BB=E5=BD=95=0A=
         */=0A=
        checkLogin:function (callback) {=0A=
            var that =3D this;=0A=
            var url =3D this.conf.loginUrl;=0A=
            =
//=E5=A6=82=E6=9E=9C=E5=9C=A8csdn.net=E5=9F=9F=E5=90=8D=E4=B8=8B=0A=
            if(ISCSDNDOMAIN){=0A=
                $.getScript(url, function (data) {=0A=
                    var getCookie =3D =
csdn.getCookie||csdn.toolkit.getCookie;=0A=
                    currUser.username =3D getCookie("UserName") || =
currUser.username;=0A=
                    that.setLogin(currUser.username, callback);=0A=
                });=0A=
            }else{=0A=
            =
//todo=EF=BC=9A=E5=A6=82=E6=9E=9C=E6=B2=A1=E5=9C=A8csdn.net=E5=9F=9F=E5=90=
=8D=E4=B8=8B=EF=BC=8C=E9=80=9A=E8=BF=87jsonp=E6=8E=A5=E5=8F=A3=EF=BC=8C=E6=
=9D=A5=E5=8F=96=E5=BD=93=E5=89=8D=E5=9F=9Fcookie=0A=
                that.getUMOnCSDNDomain(function(username){=0A=
                    that.setLogin(username, callback);=0A=
                });=0A=
            }=0A=
        },=0A=
        /*=0A=
         * =E8=8E=B7=E5=8F=96=E7=94=A8=E6=88=B7=E5=A4=B4=E5=83=8F=0A=
         */=0A=
        getAvatar:function (un, callback) {=0A=
            var that =3D this;=0A=
            var url =3D this.conf.md5;=0A=
            getScript(url, function () {=0A=
                var m5 =3D md5(un.toLowerCase());=0A=
                var url =3D m5.substr(0, 3).split('').join('/') + '/3_' =
+ un.toLowerCase() + '.jpg';=0A=
                callback('http://avatar.csdn.net/' + url);=0A=
            });=0A=
        },=0A=
=0A=
        /*=0A=
         * =E8=AE=BE=E7=BD=AE=E7=99=BB=E5=BD=95=0A=
         *=0A=
         */=0A=
        setLogin:function (userName, callback) {=0A=
            var that =3D this;=0A=
            if (userName) {=0A=
                ISLOGINED =3D true;=0A=
                currUser.username =3D userName;=0A=
                //var loginTpl =3D '<a href=3D"javascript:;;" =
style=3D"cursor: text; color: #000" class=3D"user_name" realName=3D"'+ =
userName +'">' + userName + '</a>=E6=AC=A2=E8=BF=8E=E6=82=A8=EF=BC=81<a =
class=3D"loginout" href=3D"javascript:void(0)">=E9=80=80=E5=87=BA</a>';=0A=
                var loginTpl =3D '<a href=3D"javascript:;;" =
style=3D"cursor: text; color: #000" class=3D"user_name" realName=3D"'+ =
userName +'">' + userName + '</a>=E6=AC=A2=E8=BF=8E=E6=82=A8=EF=BC=81';=0A=
                $(".topreply").find(".loginwrap").html(loginTpl);=0A=
                this.getAvatar(userName, function (src) {=0A=
                    $(".topreply .user_img img").attr("src", src);=0A=
                });=0A=
                if (typeof callback =3D=3D "function") {=0A=
                    callback();=0A=
                }=0A=
            } else {=0A=
                ISLOGINED =3D false;=0A=
                currUser.username =3D "";=0A=
                var unLoginTpl =3D '<span =
class=3D"error">=E6=82=A8=E8=BF=98=E6=B2=A1=E6=9C=89=E7=99=BB=E5=BD=95! =
</span> =E8=AF=B7<a class=3D"dologin" href=3D"javascript:viod(0);"> =
=E7=99=BB=E5=BD=95 </a> =E6=88=96<a =
href=3D"https://passport.csdn.net/account/register">  =E6=B3=A8=E5=86=8C =
</a>';=0A=
                $(".topreply").find(".loginwrap").html(unLoginTpl);=0A=
                if (typeof callback =3D=3D "function") {=0A=
                    callback();=0A=
                }=0A=
            }=0A=
        },=0A=
=0A=
        /*=0A=
         * =E6=98=BE=E7=A4=BA=E7=99=BB=E9=99=86=E6=A1=86=0A=
         *=0A=
         */=0A=
        showLoginBox:function () {=0A=
          =
//=E4=BD=BF=E7=94=A8iframe=E9=87=8D=E6=96=B0=E5=AE=9E=E7=8E=B0=E8=AF=A5=E7=
=99=BB=E5=BD=95=E5=8A=9F=E8=83=BD=E3=80=82=0A=
          =
//=E4=B8=BA=E7=99=BB=E5=BD=95=E7=AA=97=E5=8F=A3=E5=B5=8C=E5=85=A5irame=0A=
          document.domain =3D "csdn.net";=0A=
          var $logpop =3D $("#l_a_pop_win");=0A=
          $logpop.html('<iframe =
src=3D"https://passport.csdn.net/account/loginbox?service=3Dhttp://static=
.blog.csdn.net/callback.htm" frameborder=3D"0" height=3D"600" =
width=3D"400" scrolling=3D"no"></iframe>');=0A=
          =
//=E8=AE=BE=E7=BD=AE=E7=81=B0=E8=89=B2=E9=81=AE=E7=BD=A9=E5=B1=82=E7=9A=84=
=E9=80=8F=E6=98=8E=E5=BA=A6=E5=92=8C=E9=AB=98=E5=AE=BD=0A=
          var $mask =3D $('#l_a_popup_mask');=0A=
          $mask.css({=0A=
            opacity: 0.5,=0A=
            width: $( document ).width() + 'px',=0A=
            height:  $( document ).height() + 'px'=0A=
          });=0A=
          //=E5=BC=B9=E5=87=BA=E7=81=B0=E8=89=B2=E9=81=AE=E7=BD=A9=0A=
          $mask.css("display","block");=0A=
          =
//=E8=AE=BE=E7=BD=AE=E7=99=BB=E5=BD=95=E7=AA=97=E5=8F=A3DIV=E9=A1=B5=E9=9D=
=A2=E5=B1=85=E4=B8=AD=0A=
          $logpop.css( {=0A=
            top: ($( window ).height() - $logpop.height())/ 2  + $( =
window=0A=
            ).scrollTop() + 'px',=0A=
            left:($( window ).width() - $logpop.width())/ 2=0A=
          } );=0A=
          //=E6=98=BE=E7=A4=BA=E7=99=BB=E5=BD=95=E5=BC=B9=E7=AA=97=0A=
          setTimeout( function () {=0A=
            $logpop.show();=0A=
            $logpop.css( {=0A=
              opacity: 1=0A=
            } );=0A=
          }, 200 );=0A=
          =
//=E7=BB=91=E5=AE=9A=E4=BA=8B=E4=BB=B6=EF=BC=8C=E5=BD=93=E5=87=BA=E7=8E=B0=
=E5=BC=B9=E7=AA=97=E5=90=8E=EF=BC=8C=E7=82=B9=E5=87=BB=E7=81=B0=E8=89=B2=E9=
=81=AE=E7=BD=A9=E5=8C=BA=E5=9F=9F=EF=BC=8C=E5=BC=B9=E7=AA=97=E6=B6=88=E5=A4=
=B1=0A=
          $mask.unbind("click");=0A=
          $mask.bind("click", function(){=0A=
            $mask.hide();=0A=
            var $clopop =3D $("#pop_win");=0A=
            //$("#common_ask_div_sc").css("display","none");=0A=
            $logpop.css( {=0A=
              opacity: 0=0A=
            } );=0A=
            setTimeout( function () {=0A=
              $logpop.hide();=0A=
            }, 350 );=0A=
            return false;=0A=
          });=0A=
=0A=
=0A=
=0A=
//            =
//=E5=9C=A8csdn=E5=9F=9F=E4=B8=8B=EF=BC=8C=E6=94=AF=E6=8C=81=E5=BC=82=E6=AD=
=A5=E7=99=BB=E5=BD=95=EF=BC=8C=E5=90=A6=E5=88=99=EF=BC=8C=E8=B7=B3=E5=88=B0=
=E7=99=BB=E5=BD=95=E9=A1=B5=0A=
//            if(!ISCSDNDOMAIN){=0A=
//                =
window.location.href=3D"https://passport.csdn.net/account/login";=0A=
//            }=0A=
//            var that =3D this;=0A=
//            csdn.showLogin(function (data) {=0A=
//                data =3D data.data;=0A=
//                var userName =3D data.userName || =
csdn.getCookie('UserName');=0A=
//                currUser.username =3D userName;=0A=
//                that.setLogin(userName)=0A=
//            });=0A=
        },=0A=
=0A=
        /*=0A=
         * =E6=98=BE=E7=A4=BA=E7=99=BB=E9=99=86=E6=A1=86=0A=
         *=0A=
         */=0A=
        loginout:function (wrap, e) {=0A=
            var that =3D this;=0A=
            var src =3D "https://passport.csdn.net/account/logout";=0A=
            var el =3D $("<iframe id=3D\"passport\" src=3D\"\" =
height=3D0 width=3D0 /></iframe>")[0];=0A=
            this.createIframe(el, src, function (el) {=0A=
            });=0A=
            ISLOGINED =3D false;=0A=
            this.setLogin();=0A=
            =
//csdn.comp.tip($('.dologin'),"=E9=80=80=E5=87=BA=E6=88=90=E5=8A=9F");=0A=
        },=0A=
=0A=
        /*=0A=
         * =E8=BE=93=E5=85=A5=E9=94=99=E8=AF=AF=E6=8F=90=E7=A4=BA=0A=
         * @ param <object> =E5=A4=96=E5=B1=82=E8=8A=82=E7=82=B9=0A=
         */=0A=
        warning:function (wrap) {=0A=
            csdn.toolkit && =
csdn.toolkit.shake($(wrap).find(".reply_box"), "reply_box_red", 3);=0A=
        },=0A=
=0A=
        /*=0A=
         * =E6=9B=BF=E6=8D=A2=E5=89=8D=E7=AB=AF=E6=A8=A1=E6=9D=BF=0A=
         * @ param <string> =
=E5=8C=85=E5=90=AB=E5=89=8D=E7=AB=AF=E6=A8=A1=E6=9D=BF=E7=9A=84=E5=86=85=E5=
=AE=B9=0A=
         */=0A=
        replaceTpl:function (content) {=0A=
            if (content.indexOf("=E5=9B=9E=E5=A4=8D@") < 0) {=0A=
                return content;=0A=
            }=0A=
            var reg =3D /[{\#\?'].*\}/;=0A=
            var tpl =3D content.match(reg);=0A=
=0A=
            if (tpl && tpl.length > 0) {=0A=
                var usernameTpl =3D tpl[0];=0A=
                var username =3D usernameTpl.replace(/\{#\?\'|}/g, '');=0A=
                var dom =3D '<a class=3D"user_name" href=3D"' + SPACEURL =
+ this.HTMLEncode(username) + '" target=3D"_blank">' + =
this.HTMLEncode(username) + '</a>';=0A=
                return content.replace(usernameTpl, dom);=0A=
            }else{=0A=
              return content;=0A=
            }=0A=
        },=0A=
=0A=
        /*=0A=
         * =E5=BC=82=E6=AD=A5=E5=8A=A0=E8=BD=BDjs=0A=
         */=0A=
        loadJS:function (url, success) {=0A=
            var domScript =3D document.createElement('script');=0A=
            domScript.src =3D url;=0A=
            success =3D success || function () {=0A=
            };=0A=
            domScript.onload =3D domScript.onreadystatechange =3D =
function () {=0A=
                if (!this.readyState || 'loaded' =3D=3D=3D =
this.readyState || 'complete' =3D=3D=3D this.readyState) {=0A=
                    this.onload =3D this.onreadystatechange =3D null;=0A=
                    success();=0A=
                    this.parentNode.removeChild(this);=0A=
                }=0A=
            }=0A=
            =
document.getElementsByTagName('head')[0].appendChild(domScript);=0A=
        },=0A=
        getCNick : function(callback){=0A=
            callback({=0A=
                showNickname: csdn.cnick=0A=
            });=0A=
        },=0A=
        HTMLEncode : function(str) {=0A=
          var s =3D "";=0A=
          if(str.length =3D=3D 0) return "";=0A=
          s =3D str.replace(/&/g, "&amp;").replace(/</g, =
"&lt;").replace(/>/g, "&gt;").replace(/\"/g, "&quot;");=0A=
          return s;=0A=
        }=0A=
    };=0A=
=0A=
//=E5=85=AC=E5=BC=80CSDN =E5=AF=B9=E8=B1=A1=0A=
    window["csdn"] =3D csdn;=0A=
=0A=
})(window);=0A=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/atsuggest/comment_atsuggest.js

$(function(){

	  var oComment =3D document.getElementById('comments');
	 =20
	  oComment.onclick =3D function(e)=20
      {
          var e =3D e || window.event;
          var target =3D e.srcElement || e.target;

          if (target.tagName =3D=3D'TEXTAREA')
          {
              if(target.className=3D=3D'reply_box')
              {
              	 target.className=3D'reply_box hassuggest';
              	 showsuggest(target);
              }
          }         =20
      }
})

function showsuggest(obj)
{
    //=E8=8E=B7=E5=8F=96textarea=E5=85=83=E7=B4=A0
    var oText =3D obj;
    var oBody =3D document.getElementsByTagName('body')[0];

    =
//=E5=88=9B=E5=BB=BA=E8=81=94=E6=83=B3=E8=A1=A5=E5=85=A8=E4=B8=8B=E6=8B=89=
=E5=85=83=E7=B4=A0
    var suggest =3D document.createElement('ul');   =20

    =
//=E8=8E=B7=E5=8F=96textarea=E7=9A=84=E6=9C=80=E7=BB=88=E6=A0=B7=E5=BC=8F=

    var font_Size =3D getStyle(oText,'fontSize');
    //
    var font_family =3D getStyle(oText,'fontFamily');
    var line_height =3D getStyle(oText,'lineHeight');
    var input_pad_l =3D getStyle(oText,'paddingLeft');
    var input_pad_r =3D getStyle(oText,'paddingRight');
    var input_pad_t =3D getStyle(oText,'paddingTop');
    var input_pad_b =3D getStyle(oText,'paddingBottom');

    oText.style.wordBreak =3D 'break-all';
    oText.style.wordWrap =3D 'break-word';
    oText.style.fontFamily =3D 'Helvetica';
    font_family =3D 'Helvetica';

    =
//=E8=AE=BE=E7=BD=AE=E8=81=94=E6=83=B3=E8=A1=A5=E5=85=A8=E4=B8=8B=E6=8B=89=
=E5=85=83=E7=B4=A0=E7=9A=84=E6=A0=B7=E5=BC=8F
    suggest.style.position =3D 'absolute';
    suggest.style.minWidth =3D '160px';
    suggest.style.border =3D '1px solid #d2d2d2';
    suggest.style.margin =3D 0+'px';
    suggest.style.padding =3D 0 + 'px';
    suggest.style.backgroundColor =3D '#fff';
    suggest.style.listStyle =3D 'none';
    suggest.style.display =3D 'none';
    suggest.style.boxShadow =3D '0px 0px 5px #ededed';
    oBody.appendChild(suggest);

   =20
    =
//=E8=AE=BE=E7=BD=AE=E8=81=94=E6=83=B3=E8=A1=A5=E5=85=A8=E6=95=B0=E6=8D=AE=
=E8=8E=B7=E5=8F=96=E5=9C=B0=E5=9D=80
    var URL =3D "http://msg.csdn.net/attention"
   =20
    =
//=E8=AE=BE=E7=BD=AE=E8=81=94=E6=83=B3=E8=A1=A5=E5=85=A8=E4=B8=8B=E6=8B=89=
=E5=88=97=E8=A1=A8=E7=9A=84=E5=88=9D=E5=A7=8B=E9=AB=98=E4=BA=AE=E9=A1=B9
    var iNow =3D 1; =20

    =
//=E8=AE=BE=E7=BD=AE=E8=81=94=E6=83=B3=E8=A1=A5=E5=85=A8=E4=B8=8B=E6=8B=89=
=E5=88=97=E8=A1=A8=E5=88=9D=E5=A7=8B=E6=95=B0=E6=8D=AE
    var aLi =3D '';

    var l_str =3D '';
    var r_str =3D '';   =20

    oText.onkeyup =3D function(ev)
    {
        var oEvent=3Dev || event;

        if(oEvent.keyCode=3D=3D40 || oEvent.keyCode=3D=3D38){
            return;=20
        }       =20

         if(oEvent.keyCode=3D=3D27)
        {                           =20
         =20
          suggest.style.display=3D"none";
          return false;                            =20
        }

        var str =3D oText.value;

        =
//=E6=88=AA=E5=8F=96=E5=BD=93=E5=89=8D=E5=85=89=E6=A0=87=E5=9C=A8textarea=
=E5=AD=97=E7=AC=A6=E4=B8=B2=E4=B8=AD=E7=9A=84=E4=BD=8D=E7=BD=AE
        var curCount =3D getFocus(oText);     =20
            =20
        =
//=E6=88=AA=E5=8F=96=E5=BD=93=E5=89=8D=E5=AD=97=E7=AC=A6=E4=B8=B2=E4=B8=AD=
@=E5=90=8E=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2
        var cutresult =3D str_cut(str,curCount);


        var suggest_str =3D cutresult.str.substr(1);      =20

        var issuggest =3D cutresult.issuggest;
        var curCount2 =3D cutresult.curpoint;

        l_str =3D str.substring(0,curCount);      =20

        if(issuggest){
           l_str =3D str.substring(0,curCount2);        =20
        }

        =
//=E8=8E=B7=E5=8F=96=E5=85=89=E6=A0=87=E5=B7=A6=E8=BE=B9=E7=9A=84=E5=AD=97=
=E7=AC=A6=E4=B8=B2=E7=9B=B8=E5=AF=B9=E4=BA=8E=E5=B1=8F=E5=B9=95=E5=B7=A6=E4=
=B8=8A=E8=A7=92=E7=9A=84=E4=BD=8D=E7=BD=AE
        var suggest_offset =3D _strsize(l_str); =20

        r_str =3D str.substring(curCount);

        if(issuggest)
        { =20
             jsonp(URL, {at_name: suggest_str}, function (json){
                   =20
                    var data =3D json.data;

                    if(data.length=3D=3D0)
                    {
                        suggest.style.display =3D 'block';
                        suggest.style.top =3D =
suggest_offset.top+22+'px'; =20
                        suggest.style.left =3D suggest_offset.left + =
'px';
                        suggest.innerHTML =3D '';
                        var tipLi =3D document.createElement('li');
                        tipLi.innerHTML =3D =
'=E8=BD=BB=E6=95=B2=E7=A9=BA=E6=A0=BC=E5=AE=8C=E6=88=90=E8=BE=93=E5=85=A5=
';
                        tipLi.style.padding =3D '4px 9px';
                        tipLi.style.borderBottom =3D '1px solid =
#c9c9c9';
                        tipLi.style.fontSize =3D 12 + 'px';
                        tipLi.style.fontFamily =3D 'microsoft yahei';
                        tipLi.style.color =3D '#333333';
                        tipLi.style.textAlign =3D 'left';
                        suggest.appendChild(tipLi);
                    }
                    else
                    {
                        suggest.style.display =3D 'block';
                        suggest.style.top =3D =
suggest_offset.top+22+'px'; =20
                        suggest.style.left =3D suggest_offset.left + =
'px';
                        suggest.innerHTML =3D '';
                        var topLi =3D document.createElement('li');
                        topLi.innerHTML =3D =
'=E8=BE=93=E5=85=A5=E6=98=B5=E7=A7=B0=E6=88=96=E7=94=A8=E6=88=B7=E5=90=8D=
@=E4=BB=96/=E5=A5=B9';
                        topLi.style.padding =3D '4px 9px';
                        topLi.style.borderBottom =3D '1px solid =
#c9c9c9';
                        topLi.style.fontSize =3D 12 + 'px';
                        topLi.style.fontFamily =3D 'microsoft yahei';
                        topLi.style.color =3D '#333333';
                        topLi.style.textAlign =3D 'left';
                        suggest.appendChild(topLi);

                        for(var i=3D0;i<data.length;i++)
                        {
                            var oLi =3D document.createElement('li');
                            oLi.style.position =3D 'relative';
                            var oSpan =3D =
document.createElement('span');
                            oSpan.innerHTML =3D data[i].nick_name;
                            var oEm =3D document.createElement('em');

                            if(data[i].username=3D=3Dnull)
                            {
                                oEm.innerHTML =3D 'null';
                            }
                            else
                            {                              =20
                                oEm.innerHTML =3D =
'=E7=94=A8=E6=88=B7=E5=90=8D=EF=BC=9A'+data[i].username;
                            }                           =20
                            oEm.style.position =3D 'absolute';
                            oEm.style.top =3D 20 + 'px';
                            oEm.style.left =3D 110 + 'px';
                            oEm.style.fontStyle =3D 'normal';
                            oEm.style.fontSize =3D '12px';
                            oEm.style.color =3D '#333';
                            oEm.style.textAlign =3D 'left';
                            oEm.style.display =3D 'none';
                            oEm.style.overflow =3D 'hidden';
                            oEm.style.minWidth =3D '80px';
                            oEm.style.padding =3D '0px 6px';
                            oEm.style.lineHeight =3D '16px';
                            oEm.style.whiteSpace=3D 'nowrap';
                            oEm.style.backgroundColor =3D "#f4f4f4";
                            oEm.style.border =3D "1px solid #999";
                            oLi.appendChild(oSpan);
                            oLi.appendChild(oEm);
                            oLi.style.padding =3D '4px 9px';
                            oLi.style.lineHeight =3D '20px';
                            oLi.style.fontSize =3D 12+'px';
                            oLi.style.fontFamily =3D 'microsoft yahei';
                            oLi.style.color =3D '#333';
                            oLi.style.cursor =3D 'pointer';
                            oLi.style.textAlign =3D 'left';
                            suggest.appendChild(oLi);
                        }

                        aLi =3D suggest.children;

                        iNow =3D 0;
                        /*
                        * =
=E9=BB=98=E8=AE=A4=E7=AC=AC=E4=B8=80=E6=9D=A1=E9=AB=98=E4=BA=AE
                        aLi[iNow].style.backgroundColor=3D'#ebebeb';
                        aLi[iNow].style.color =3D '#e31a00';

                        if(aLi[iNow].children[1].innerHTML=3D=3D'null')
                        {
                            aLi[iNow].children[1].style.display =3D =
'none';
                        }
                        else
                        {
                            aLi[iNow].children[1].style.display =3D =
'block';
                        }
                        */
                       =20

                        for(var i=3D1;i<aLi.length;i++)
                        {

                            aLi[i].index=3Di;       =20
                            aLi[i].onmouseover=3Dfunction(){             =
             =20

                            for(var i=3D1; i<aLi.length; i++){
                                aLi[i].style.background=3D'';
                                aLi[i].style.color=3D'';
                                aLi[i].children[1].style.display =3D =
'none';
                            }
                               =20
                                this.style.background=3D'#ebebeb';
                                this.style.color =3D '#e31a00';
                                =
if(this.children[1].innerHTML=3D=3D'null')
                                {
                                    this.children[1].style.display =3D =
'none';
                                }
                                else
                                {
                                    this.children[1].style.display =3D =
'block';
                                }                                        =
                       =20
                                iNow=3Dthis.index;                       =
=20
                            }

                            aLi[i].onmouseout=3Dfunction()
                            {
                                this.children[1].style.display =3D =
'none';
                            }

                             aLi[i].onclick=3Dfunction()
                             {
                                oText.value =3D =
l_str+aLi[this.index].children[0].innerHTML+" "+r_str;
                                suggest.style.display =3D 'none';
                                //oText.focus();                     =20
                             }=20
                        }

                       =20
                        oText.onkeydown=3Dfunction(ev)
                        { =20
                           =20
                            var oEvent=3Dev || event;

                            if(oEvent.keyCode=3D=3D40)
                            {
                                if(suggest.style.display=3D=3D'block')
                                {                                   =20
                                    iNow++;           =20
                                    if(iNow=3D=3DaLi.length){
                                        iNow=3D1;   =20
                                    }           =20
                                    for(var i=3D1; i<aLi.length; i++){
                                        aLi[i].style.background=3D'';
                                        aLi[i].style.color =3D '';
                                        aLi[i].children[1].style.display =
=3D 'none';
                                    }
                                    =
aLi[iNow].style.background=3D'#ebebeb';
                                    aLi[iNow].style.color =3D '#e31a00';
                                    =
if(aLi[iNow].children[1].innerHTML=3D=3D'null')
                                    {
                                        =
aLi[iNow].children[1].style.display =3D 'none';
                                    }
                                    else
                                    {
                                        =
aLi[iNow].children[1].style.display =3D 'block';
                                    }                                    =

                                }
                            }
                           =20
                            if(oEvent.keyCode=3D=3D38){
                             if(suggest.style.display=3D=3D'block')
                             {
                                iNow--;           =20
                                if(iNow<=3D0){
                                    iNow=3DaLi.length-1; =20
                                }
                               =20
                                for(var i=3D1; i<aLi.length; i++){
                                    aLi[i].style.background=3D'';
                                    aLi[i].style.color =3D '';
                                    aLi[i].children[1].style.display =3D =
'none';
                                }          =20
                                aLi[iNow].style.background=3D'#ebebeb';
                                aLi[iNow].style.color =3D '#e31a00';

                                =
if(aLi[iNow].children[1].innerHTML=3D=3D'null')
                                {
                                    aLi[iNow].children[1].style.display =
=3D 'none';
                                }
                                else
                                {
                                    aLi[iNow].children[1].style.display =
=3D 'block';
                                }

                                return false;
                            }              =20
                            }

                            if(oEvent.keyCode=3D=3D13){
                                if(suggest.style.display=3D=3D'block')
                                {
                                    oText.value =3D =
l_str+aLi[iNow].children[0].innerHTML+" "+r_str;
                                    suggest.style.display =3D 'none';
                                    //oText.focus(); =20
                                    return false;
                                }         =20
                            }         =20
                        }

                        document.onclick =3D function()
                        {
                            suggest.style.display =3D 'none';
                        }              =20

                    }
            }, 'callback');
        }
        else
        {     =20
            suggest.style.display =3D 'none';
        }=20
    }

   =20

    function _strsize(obj){      =20

        var oDiv =3D document.createElement('div');
        var input_width =3D getStyle(oText,'width');
        var input_height =3D getStyle(oText,'height');

        oDiv.style.height =3D input_height;
        oDiv.style.width =3D input_width;
        oDiv.style.fontFamily =3D font_family;
        oDiv.style.fontSize =3D font_Size;
        oDiv.style.lineHeight =3D line_height;
        oDiv.style.textAlign =3D 'left';
        oDiv.style.padding =3D ''+input_pad_t+' '+input_pad_r+' =
'+input_pad_b+' '+input_pad_l+'';
        oDiv.style.visibility =3D 'hidden';

        var input_text_width =3D oText.clientWidth;

        =
//=E8=8E=B7=E5=8F=96textarea=E7=9A=84=E9=A1=B5=E9=9D=A2=E4=BD=8D=E7=BD=AE=

        var p =3D getPos(oText);
      =20

        if((input_text_width-parseInt(input_width))<-3)
        {
            oDiv.style.overflow =3D 'scroll';
        }
        else
        {
            oDiv.style.overflow =3D 'auto';
        }               =20
        oDiv.style.position =3D 'absolute';
        oDiv.style.wordBreak =3D 'break-all';
        oDiv.style.wordWrap =3D 'break-word';
        oDiv.style.top =3D p.top+'px'; =20
        oDiv.style.left =3D p.left + 'px';


        var str_arr =3D obj.split(/\n/);

        for(var i=3D0;i<str_arr.length;i++)
        {
            var str_split_arr =3D str_arr[i].split('');

            for(var j=3D0;j<str_split_arr.length;j++)
            {
                var oSpan =3D document.createElement('span');
                if(str_split_arr[j]=3D=3D" ")
                {
                   oSpan.innerHTML =3D ".";=20
                }
                else
                {
                   oSpan.innerHTML =3D str_split_arr[j];=20
                }         =20
                oDiv.appendChild(oSpan);
            }

            =
//=E5=9C=A8str_split_arr=E7=9A=84=E6=AF=8F=E4=B8=AA=E5=AD=97=E7=AC=A6=E4=B8=
=B2=E7=94=9F=E6=88=90=E7=9A=84span=E7=BB=84=E7=9A=84=E5=90=8E=E9=9D=A2=E5=
=8A=A0br=E6=A0=87=E7=AD=BE=EF=BC=8C=E6=9C=80=E5=90=8E=E4=B8=80=E4=B8=AAsp=
an=E7=BB=84=E4=B8=8D=E5=8A=A0
            if(i<(str_arr.length-1))
            {
                var oBr =3D document.createElement('br');
                oDiv.appendChild(oBr);
            }
        }

        oBody.appendChild(oDiv);

        var aSpan =3D oDiv.children;
        var lastSpan =3D aSpan[aSpan.length-1];
       =20
        var lastpos =3D getPos(lastSpan);

        var scroll_top =3D oText.scrollTop;
        lastpos.top =3D lastpos.top-scroll_top;
        oBody.removeChild(oDiv);
        return lastpos;
    }
}

//=E6=88=AA=E5=8F=96=E5=BD=93=E5=89=8D=E5=AD=97=E7=AC=A6=E4=B8=B2=E4=B8=AD=
@=E5=90=8E=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2

function str_cut(strr,num)
{
    if(num=3D=3D0)
    {
        return {
            str:"",
            issuggest:false,
            curpoint:0
        };
    }

    if(!notincode(strr,num))
    {
        return {
            str:"",
            issuggest:false,
            curpoint:0
        };
    }

    if(!notinquote(strr,num))
    {
        return {
            str:"",
            issuggest:false,
            curpoint:0
        };
    }  =20

    var cutstr =3D "";
    strr =3D strr.replace(/\n/g," ").replace(/\r/g,"");
    for(var i=3Dnum;i>0;i--)
    {               =20
        cutstr =3D strr.charAt(i-1) + cutstr;

        if((strr.charAt(i-1)=3D=3D" =
")||(strr.charAt(i-1)=3D=3D"[")||(strr.charAt(i-1)=3D=3D"]"))
        {          =20
           return {
                str:"",
                issuggest:false,
                curpoint:0
            };
        }     =20

        if(strr.charAt(i-1)=3D=3D"@")
        {           =20
            return {
                str:cutstr,
                issuggest:true,
                curpoint:i
            };
        }       =20
    }
    return {
        str:"",
        issuggest:false,
        curpoint:0
    };
}

//=E5=88=A4=E6=96=AD=E5=BD=93=E5=89=8D=E5=85=89=E6=A0=87=E6=98=AF=E5=90=A6=
=E5=9C=A8[code=3Dxxx]...[/code]=E6=A0=87=E7=AD=BE=E4=B9=8B=E9=97=B4,=E5=9C=
=A8=E6=A0=87=E7=AD=BE=E4=B9=8B=E9=97=B4=E8=BF=94=E5=9B=9Efalse,=E4=B8=8D=E5=
=9C=A8=E6=A0=87=E7=AD=BE=E4=B9=8B=E9=97=B4=E8=BF=94=E5=9B=9Etrue=E3=80=82=

function notincode(strr,num)
{
    var str_l =3D strr.substring(0,num);
    var str_r =3D strr.substring(num);

    var re_code1 =3D /\[code=3D[a-z]+\]/g;
    var re_code2 =3D /\[\/code\]/g;

    var match_l1 =3D str_l.match(re_code1);
    var match_l2 =3D str_l.match(re_code2);
    var match_r1 =3D str_r.match(re_code1);
    var match_r2 =3D str_r.match(re_code2);

    var count_l1 =3D 0;
    var count_l2 =3D 0;
    var count_r1 =3D 0;
    var count_r2 =3D 0;

    if(match_l1!=3Dnull)count_l1 =3D match_l1.length;
    if(match_l2!=3Dnull)count_l2 =3D match_l2.length;
    if(match_r1!=3Dnull)count_r1 =3D match_r1.length;
    if(match_r2!=3Dnull)count_r2 =3D match_r2.length;

    if(count_l1=3D=3Dcount_l2&&count_r1=3D=3Dcount_r2)return true;

    =
if(count_l1>count_l2&&count_r1<count_r2&&((count_l1-count_l2)=3D=3D(count=
_r2-count_r1)))
    {
        return false;
    }
    else
    {
        return true;
    }
}

//=E5=88=A4=E6=96=AD=E5=BD=93=E5=89=8D=E5=85=89=E6=A0=87=E6=98=AF=E5=90=A6=
=E5=9C=A8[quote]...[/quote]=E6=A0=87=E7=AD=BE=E4=B9=8B=E9=97=B4,=E5=9C=A8=
=E6=A0=87=E7=AD=BE=E4=B9=8B=E9=97=B4=E8=BF=94=E5=9B=9Efalse,=E4=B8=8D=E5=9C=
=A8=E6=A0=87=E7=AD=BE=E4=B9=8B=E9=97=B4=E8=BF=94=E5=9B=9Etrue=E3=80=82
function notinquote(strr,num)
{
    var str_l =3D strr.substring(0,num);
    var str_r =3D strr.substring(num);

    var re_code1 =3D /\[quote\]/g;
    var re_code2 =3D /\[\/quote\]/g;

    var match_l1 =3D str_l.match(re_code1);
    var match_l2 =3D str_l.match(re_code2);
    var match_r1 =3D str_r.match(re_code1);
    var match_r2 =3D str_r.match(re_code2);

    var count_l1 =3D 0;
    var count_l2 =3D 0;
    var count_r1 =3D 0;
    var count_r2 =3D 0;

    if(match_l1!=3Dnull)count_l1 =3D match_l1.length;
    if(match_l2!=3Dnull)count_l2 =3D match_l2.length;
    if(match_r1!=3Dnull)count_r1 =3D match_r1.length;
    if(match_r2!=3Dnull)count_r2 =3D match_r2.length;

    if(count_l1=3D=3Dcount_l2&&count_r1=3D=3Dcount_r2)return true;

    =
if(count_l1>count_l2&&count_r1<count_r2&&((count_l1-count_l2)=3D=3D(count=
_r2-count_r1)))
    {
        return false;
    }
    else
    {
        return true;
    }
}


function jsonp(url, data, fnSucc, cbName)
{
    var fnName=3D'jsonp_'+Math.random();
    fnName=3DfnName.replace('.', '');
   =20
    data[cbName]=3DfnName;
   =20
    window[fnName]=3Dfunction (json)
    {       =20
        fnSucc && fnSucc(json);       =20
        oHead.removeChild(oS);
        window[fnName]=3Dnull;
    };  =20
  =20
    var arr=3D[];
    for(var i in data)
    {
        arr.push(i+'=3D'+encodeURIComponent(data[i]));
    }
   =20
    var str=3Durl+'?'+arr.join('&');
   =20
    //=E8=AF=B7=E6=B1=82
    var oS=3Ddocument.createElement('script');
   =20
    oS.src=3Dstr;
   =20
    var oHead=3Ddocument.getElementsByTagName('head')[0];
    oHead.appendChild(oS);
}


function getFocus(elem) { =20
    var index =3D 0; =20
    if (document.selection) {// IE Support =20
        elem.focus(); =20
        var Sel =3D document.selection.createRange(); =20
        if (elem.nodeName =3D=3D=3D 'TEXTAREA') {//textarea =20
            var Sel2 =3D Sel.duplicate(); =20
            Sel2.moveToElementText(elem); =20
            var index =3D -1; =20
            while (Sel2.inRange(Sel)) { =20
                Sel2.moveStart('character'); =20
                index++; =20
            }; =20
        } =20
        else if (elem.nodeName =3D=3D=3D 'INPUT') {// input =20
            Sel.moveStart('character', -elem.value.length); =20
            index =3D Sel.text.length; =20
        } =20
    } =20
    else if (elem.selectionStart || elem.selectionStart =3D=3D '0') { // =
Firefox support =20
        index =3D elem.selectionStart; =20
    } =20
    return (index); =20
}

function getStyle(obj,name)
{
    if(obj.currentStyle)
    {
        return obj.currentStyle[name];
    }
    else
    {
        return getComputedStyle(obj,false)[name];
    }
}

function getPos(obj)
{
   var l=3D0;
   var t=3D0;
   while(obj)
   {
       l+=3Dobj.offsetLeft;
       t+=3Dobj.offsetTop;
       obj=3Dobj.offsetParent;  =20
   };  =20
   return {left:l,top:t}  =20
}
------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://ptcms.csdn.net/like/js/like.js

/**=0A=
 * @author Ben=0A=
 * =0A=
 * @company CSDN=0A=
 * =0A=
 * by 2012/05/23=0A=
 */=0A=
=0A=
=0A=
(function($){=0A=
	$.fn.like =3D function(options) {=0A=
		var defaults =3D {    =0A=
		    =
get_data_url:'http://ptcms.csdn.net/like/like/get_data?jsonpcallback=3D?'=
,=0A=
		    =
do_like_url:'http://ptcms.csdn.net/like/like/do_like?jsonpcallback=3D?',=0A=
		    article_id:'',=0A=
		    ding_class:'',=0A=
		    cai_class:'',=0A=
            domain:'',=0A=
		    callback:function(data)=0A=
			{=0A=
				//console.log('a');=0A=
			}=0A=
		};=0A=
		=0A=
		=0A=
=0A=
		var options =3D $.extend(defaults,options);=0A=
		//console.log(options);=0A=
		return this.each(function(){=0A=
			var o =3D options;=0A=
=0A=
			function dothings(data)=0A=
			{=0A=
=0A=
				var url =3D location.href;=0A=
=0A=
				if(data.succ =3D=3D -3)=0A=
				{=0A=
					insert_data(data);=0A=
				}=0A=
				else=0A=
				{=0A=
					if(data.succ =3D=3D -2)=0A=
					{=0A=
						if(confirm(data.msg)){=0A=
							window.location.href =3D =
"http://passport.csdn.net/UserLogin.aspx?from=3D"+url;=0A=
							return false;=0A=
						}=0A=
					}=0A=
					if(data.succ =3D=3D -1)=0A=
					{=0A=
						return false;=0A=
					}=0A=
					if(data.succ =3D=3D -4)=0A=
					{=0A=
						$('.'+o.ding_class+' dd').text(data.info.ding);=0A=
						$('.'+o.cai_class+' dd').text(data.info.cai);=0A=
					}=0A=
					else=0A=
					{=0A=
						insert_data(data);=0A=
					}=0A=
				}=0A=
				o.callback(data);=0A=
			}=0A=
=0A=
			function insert_data(data)=0A=
			{=0A=
				$('.'+o.ding_class).addClass('disable');=0A=
				$('.'+o.cai_class).addClass('disable');=0A=
				$('.'+o.ding_class+' dd').text(data.info.ding);=0A=
				$('.'+o.cai_class+' dd').text(data.info.cai);=0A=
			}=0A=
=0A=
			=
$.getJSON(o.get_data_url,{article_id:o.article_id,domain:o.domain},dothin=
gs);=0A=
=0A=
			$('.'+o.ding_class).click(function(){=0A=
				=
$.getJSON(o.do_like_url,{article_id:o.article_id,status:1,domain:o.domain=
},dothings);=0A=
			});=0A=
			$('.'+o.cai_class).click(function(){=0A=
				=
$.getJSON(o.do_like_url,{article_id:o.article_id,status:2,domain:o.domain=
},dothings);=0A=
			});=0A=
		});=0A=
	}=0A=
})(jQuery);=0A=

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.csdn.net/ui/scripts/Csdn/counter.js

document.write('<script type=3D"text/javascript" charset=3D"UTF-8" =
src=3D"http://message.csdn.net/msg.popup.js"><'+'/script>');
------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.csdn.net/public/common/toolbar/js/toolbar.js

// Generated by CoffeeScript 1.6.3
(function () {
  !(function (window) {
    var Toolbar;
    var currUser =3D {
      //use to join avator
      AU: ""
    };
    var isNotifyShowed =3D false;
    var AUtoAvatar =3D function (AU) {
      _AUPath =3D AU.split("").join("/");
      return "http://avatar.csdn.net/" + _AUPath + "/2_" + =
currUser.userName + ".jpg";
    }
    var getActive =3D function () {
      return document.activeElement;
    }
    Toolbar =3D function (opts) {
      this.opts =3D opts;
      this.Doms =3D {};
      this.Curr =3D null;
      this.init.apply(this, [opts]);
    };
    Toolbar.prototype =3D {
      init: function (opts) {
        opts =3D opts || this.opts;
        this.getDoms(opts).bindEvent();
        this.initFavor();
        this.initNotify();
        this.initProfile();
      },

      /*
       * =E8=81=9A=E5=90=88=E6=89=80=E6=9C=89dom=E6=8A=93=E5=8F=96
       */
      getDoms: function (opts) {
        opts =3D opts || this.opts;
        this.Doms.wraper =3D opts.wraper;
        this.folded =3D true;
        this.Doms.listBtns =3D $(opts.wraper + " ul.btns>li");
        this.Doms.profile =3D $(opts.wraper + " .profile");
        return this;
      },
      bindEvent: function (opts) {
        var _this =3D this;
        var $loginWrap =3D $(this.Doms.wraper + " .login-wrap");
        opts =3D opts || this.opts;

        this.Doms.listBtns.bind('mouseover', function (event) {
          _this.Curr =3D $(this).parent().children().filter(".on")[0];

          if ($(event.target).hasClass("notify") || =
$(event.target).parents().filter(".notify").length) {

            if (!isNotifyShowed || opts.notifyInst.isHasNewMsg()) {
              $("#header_notice_num").trigger("click");
              isNotifyShowed =3D true;
            }
          }
          if (_this.Curr =3D=3D this) {
            return;
          }
          $(_this.Curr).removeClass("on");
          $(this).addClass("on");
          _this.folded =3D false;
        });
        $(this.Doms.wraper).bind('mouseout',function(e){
            =
if($(getActive()).parents().filter(_this.Doms.wraper).length>0){
              return;
            }
            $(document.body).trigger("toolbar-fold");
        });
        $(document).bind("click", function (e) {
          if ($(e.target).parents().filter(_this.Doms.wraper).length =
<=3D 0) {
            $(document.body).trigger("toolbar-fold");
          }
        });

        $(document.body).bind("toolbar-fold", function (e) {
          _this.Doms.listBtns.filter(".on").removeClass("on");
        });
        $(this.Doms.wraper + " .search form").bind("keyup", function (e) =
{
          if (e.keycode =3D=3D 13) {
            this.submit();
          }
        });
        // $(document).bind("userLogined",function(e,userData){
        //   $loginWrap.removeClass("unlogin");
        //   userData.userName&&$loginWrap.show();
        // });

        // $(document).bind("userLoginOut",function(e,username){
        //   $loginWrap.addClass("unlogin").removeClass("hide").show();
        // });


        return this;
      },
      initLogo: function (opts) {},
      initFavor: function () {
        var _wraper =3D this.Doms.wraper + " .favor"
        var _title =3D document.title;
        var _url =3D document.location.href;
        var $title =3D $(_wraper + " .title");
        var $url =3D $(_wraper + " .url");
        // var $tag =3D $(_wraper + " .tag");
        // var $description =3D $(_wraper + " .description");
        var $tag =3D $(_wraper + " #input-tag");
        var $description =3D $(_wraper + " #input-description");
        var $share =3D $(_wraper + " .share");
        var $cancel =3D $(_wraper + " .cancel");
        var $submit =3D $(_wraper + " .submit");
        var $ok =3D $(_wraper + " .ok");


        //set value
        $title.val(_title);
        $url.val(_url);
        $share.attr("checked", true);

        //bind event
        $cancel.bind("click", function (e) {
          $(document.body).trigger("toolbar-fold");
        });

        $ok.bind("click", function (e) {
          $(_wraper + " .favor-failed").hide();
          $(_wraper + " .favor-success").hide();
          $(_wraper + " .favor-form").show();
          $(document.body).trigger("toolbar-fold");
        });


        $submit.bind("click", function (e) {
          var _data =3D {
            title: $title.val(),
            //url:encodeURIComponent($url.val()),
            url: $url.val(),
            description: $description.val(),
            tag: $tag.val(),
            share: $share[0].checked ? 1 : 0
          }

            function resetForm() {
              $(_wraper + " .title").val($title.val());
              $(_wraper + " .url").val(window.location.href);
              $(_wraper + " .tag").val("");
              $(_wraper + " .description").val("");
            }

            function cbSuccess() {
              $(_wraper + " .favor-failed").show();
              $(_wraper + " .favor-success").hide();
              $(_wraper + " .favor-form").hide();
            }

            function cbError() {
              $(_wraper + " .favor-failed").hide();
              $(_wraper + " .favor-success").show();
              $(_wraper + " .favor-form").hide();
            }
          $.ajax({
            data: _data,
            jsonp: "jsonpcallback",
            dataType: "jsonp",
            url: "http://my.csdn.net/service/favorite/add_favorite",
            success: function (data) {
              if (data.success =3D=3D "-1") {
                cbSuccess();
                resetForm();
              }
              if (data.success =3D=3D "1") {
                cbError();
                resetForm();
              }
            }
          });

          return false;
        });

      },
      initNotify: function (opts) {
        var _this =3D this;
        var opts =3D opts || this.opts;
        if (!opts.notifyInst) {
          $(opts.wraper + " .notify").hide();
          throw "notify.js not loaded!";
        }
        $(document).bind("toolbar-setNotesNum", function (e, num) {
          var $number =3D $(_this.Doms.wraper + " .number");
          var $hasnotes =3D $(_this.Doms.wraper + " .icon-hasnotes-sm");
          if (num <=3D 0) {
            $hasnotes.hide();
            return;
          } else if (num > 0) {
            $hasnotes.show();
          }
        });
        if (opts.notifyInst) {
          opts.notifyInst.on("receive_unreads", function (e, data) {
            var num =3D opts.notifyInst.getlocalUnread().length;
            $(document).trigger("toolbar-setNotesNum", num);
          });
          opts.notifyInst.on("receive_setreaded", function (e, data) {
            var num =3D opts.notifyInst.getlocalUnread().length;
            $(document).trigger("toolbar-setNotesNum", num);
          });
        }
      },
      initProfile: function (userData) {
        var _this =3D this;
      }
    };
    return window["Toolbar"] =3D Toolbar;
  })(window);

  var $oScriptTag =3D $("#csdn-toolbar-id");
  var inst =3D typeof csdn_note =3D=3D 'undefined' ? null : csdn_note;
  new Toolbar({
    wraper: ".csdn-toolbar",
    notifyInst: inst
  });
}).call(this);
------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/wmd.js

/**
 * marked - a markdown parser
 * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/chjj/marked
 */

;(function() {

/**
 * Block-Level Grammar
 */

var block =3D {
  newline: /^\n+/,
  code: /^( {4}[^\n]+\n*)+/,
  fences: noop,
  hr: /^( *[-*_]){3,} *(?:\n+|$)/,
  heading: /^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,
  nptable: noop,
  lheading: /^([^\n]+)\n *(=3D|-){2,} *(?:\n+|$)/,
  blockquote: /^( *>[^\n]+(\n[^\n]+)*\n*)+/,
  list: /^( *)(bull) [\s\S]+?(?:hr|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
  html: /^ *(?:comment|closed|closing) *(?:\n{2,}|\s*$)/,
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? =
*(?:\n+|$)/,
  table: noop,
  paragraph: =
/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,
  text: /^[^\n]+/
};

block.bullet =3D /(?:[*+-]|\d+\.)/;
block.item =3D /^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;
block.item =3D replace(block.item, 'gm')
  (/bull/g, block.bullet)
  ();

block.list =3D replace(block.list)
  (/bull/g, block.bullet)
  ('hr', /\n+(?=3D(?: *[-*_]){3,} *(?:\n+|$))/)
  ();

block._tag =3D '(?!(?:'
  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'
  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'
  + '|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|@)\\b';

block.html =3D replace(block.html)
  ('comment', /<!--[\s\S]*?-->/)
  ('closed', /<(tag)[\s\S]+?<\/\1>/)
  ('closing', /<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)
  (/tag/g, block._tag)
  ();

block.paragraph =3D replace(block.paragraph)
  ('hr', block.hr)
  ('heading', block.heading)
  ('lheading', block.lheading)
  ('blockquote', block.blockquote)
  ('tag', '<' + block._tag)
  ('def', block.def)
  ();

/**
 * Normal Block Grammar
 */

block.normal =3D merge({}, block);

/**
 * GFM Block Grammar
 */

block.gfm =3D merge({}, block.normal, {
  fences: /^ *(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n+|$)/,
  paragraph: /^/
});

block.gfm.paragraph =3D replace(block.paragraph)
  ('(?!', '(?!'
    + block.gfm.fences.source.replace('\\1', '\\2') + '|'
    + block.list.source.replace('\\1', '\\3') + '|')
  ();

/**
 * GFM + Tables Block Grammar
 */

block.tables =3D merge({}, block.gfm, {
  nptable: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| =
:]*)\n((?:.*\|.*(?:\n|$))*)\n*/,
  table: /^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/
});

/**
 * Block Lexer
 */

function Lexer(options) {
  this.tokens =3D [];
  this.tokens.links =3D {};
  this.options =3D options || marked.defaults;
  this.rules =3D block.normal;

  if (this.options.gfm) {
    if (this.options.tables) {
      this.rules =3D block.tables;
    } else {
      this.rules =3D block.gfm;
    }
  }
}

/**
 * Expose Block Rules
 */

Lexer.rules =3D block;

/**
 * Static Lex Method
 */

Lexer.lex =3D function(src, options) {
  var lexer =3D new Lexer(options);
  return lexer.lex(src);
};

/**
 * Preprocessing
 */

Lexer.prototype.lex =3D function(src) {
  src =3D src
    .replace(/\r\n|\r/g, '\n')
    .replace(/\t/g, '    ')
    .replace(/\u00a0/g, ' ')
    .replace(/\u2424/g, '\n');

  return this.token(src, true);
};

/**
 * Lexing
 */

Lexer.prototype.token =3D function(src, top) {
  var src =3D src.replace(/^ +$/gm, '')
    , next
    , loose
    , cap
    , bull
    , b
    , item
    , space
    , i
    , l;

  while (src) {
    // newline
    if (cap =3D this.rules.newline.exec(src)) {
      src =3D src.substring(cap[0].length);
      if (cap[0].length > 1) {
        this.tokens.push({
          type: 'space'
        });
      }
    }

    // code
    if (cap =3D this.rules.code.exec(src)) {
      src =3D src.substring(cap[0].length);
      cap =3D cap[0].replace(/^ {4}/gm, '');
      this.tokens.push({
        type: 'code',
        text: !this.options.pedantic
          ? cap.replace(/\n+$/, '')
          : cap
      });
      continue;
    }

    // fences (gfm)
    if (cap =3D this.rules.fences.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'code',
        lang: cap[2],
        text: cap[3]
      });
      continue;
    }

    // heading
    if (cap =3D this.rules.heading.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[1].length,
        text: cap[2]
      });
      continue;
    }

    // table no leading pipe (gfm)
    if (top && (cap =3D this.rules.nptable.exec(src))) {
      src =3D src.substring(cap[0].length);

      item =3D {
        type: 'table',
        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3].replace(/\n$/, '').split('\n')
      };

      for (i =3D 0; i < item.align.length; i++) {
        if (/^ *-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'right';
        } else if (/^ *:-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'center';
        } else if (/^ *:-+ *$/.test(item.align[i])) {
          item.align[i] =3D 'left';
        } else {
          item.align[i] =3D null;
        }
      }

      for (i =3D 0; i < item.cells.length; i++) {
        item.cells[i] =3D item.cells[i].split(/ *\| */);
      }

      this.tokens.push(item);

      continue;
    }

    // lheading
    if (cap =3D this.rules.lheading.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[2] =3D=3D=3D '=3D' ? 1 : 2,
        text: cap[1]
      });
      continue;
    }

    // hr
    if (cap =3D this.rules.hr.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'hr'
      });
      continue;
    }

    // blockquote
    if (cap =3D this.rules.blockquote.exec(src)) {
      src =3D src.substring(cap[0].length);

      this.tokens.push({
        type: 'blockquote_start'
      });

      cap =3D cap[0].replace(/^ *> ?/gm, '');

      // Pass `top` to keep the current
      // "toplevel" state. This is exactly
      // how markdown.pl works.
      this.token(cap, top);

      this.tokens.push({
        type: 'blockquote_end'
      });

      continue;
    }

    // list
    if (cap =3D this.rules.list.exec(src)) {
      src =3D src.substring(cap[0].length);
      bull =3D cap[2];

      this.tokens.push({
        type: 'list_start',
        ordered: bull.length > 1
      });

      // Get each top-level item.
      cap =3D cap[0].match(this.rules.item);

      next =3D false;
      l =3D cap.length;
      i =3D 0;

      for (; i < l; i++) {
        item =3D cap[i];

        // Remove the list item's bullet
        // so it is seen as the next token.
        space =3D item.length;
        item =3D item.replace(/^ *([*+-]|\d+\.) +/, '');

        // Outdent whatever the
        // list item contains. Hacky.
        if (~item.indexOf('\n ')) {
          space -=3D item.length;
          item =3D !this.options.pedantic
            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')
            : item.replace(/^ {1,4}/gm, '');
        }

        // Determine whether the next list item belongs here.
        // Backpedal if it does not belong in this list.
        if (this.options.smartLists && i !=3D=3D l - 1) {
          b =3D block.bullet.exec(cap[i + 1])[0];
          if (bull !=3D=3D b && !(bull.length > 1 && b.length > 1)) {
            src =3D cap.slice(i + 1).join('\n') + src;
            i =3D l - 1;
          }
        }

        // Determine whether item is loose or not.
        // Use: /(^|\n)(?! )[^\n]+\n\n(?!\s*$)/
        // for discount behavior.
        loose =3D next || /\n\n(?!\s*$)/.test(item);
        if (i !=3D=3D l - 1) {
          next =3D item.charAt(item.length - 1) =3D=3D=3D '\n';
          if (!loose) loose =3D next;
        }

        this.tokens.push({
          type: loose
            ? 'loose_item_start'
            : 'list_item_start'
        });

        // Recurse.
        this.token(item, false);

        this.tokens.push({
          type: 'list_item_end'
        });
      }

      this.tokens.push({
        type: 'list_end'
      });

      continue;
    }

    // html
    if (cap =3D this.rules.html.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: this.options.sanitize
          ? 'paragraph'
          : 'html',
        pre: cap[1] =3D=3D=3D 'pre' || cap[1] =3D=3D=3D 'script' || =
cap[1] =3D=3D=3D 'style',
        text: cap[0]
      });
      continue;
    }

    // def
    if (top && (cap =3D this.rules.def.exec(src))) {
      src =3D src.substring(cap[0].length);
      this.tokens.links[cap[1].toLowerCase()] =3D {
        href: cap[2],
        title: cap[3]
      };
      continue;
    }

    // table (gfm)
    if (top && (cap =3D this.rules.table.exec(src))) {
      src =3D src.substring(cap[0].length);

      item =3D {
        type: 'table',
        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3].replace(/(?: *\| *)?\n$/, '').split('\n')
      };

      for (i =3D 0; i < item.align.length; i++) {
        if (/^ *-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'right';
        } else if (/^ *:-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'center';
        } else if (/^ *:-+ *$/.test(item.align[i])) {
          item.align[i] =3D 'left';
        } else {
          item.align[i] =3D null;
        }
      }

      for (i =3D 0; i < item.cells.length; i++) {
        item.cells[i] =3D item.cells[i]
          .replace(/^ *\| *| *\| *$/g, '')
          .split(/ *\| */);
      }

      this.tokens.push(item);

      continue;
    }

    // top-level paragraph
    if (top && (cap =3D this.rules.paragraph.exec(src))) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'paragraph',
        text: cap[1].charAt(cap[1].length - 1) =3D=3D=3D '\n'
          ? cap[1].slice(0, -1)
          : cap[1]
      });
      continue;
    }

    // text
    if (cap =3D this.rules.text.exec(src)) {
      // Top-level should never reach here.
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'text',
        text: cap[0]
      });
      continue;
    }

    if (src) {
      throw new
        Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return this.tokens;
};

/**
 * Inline-Level Grammar
 */

var inline =3D {
  escape: /^\\([\\`*{}\[\]()#+\-.!_>])/,
  autolink: /^<([^ >]+(@|:\/)[^ >]+)>/,
  url: noop,
  tag: /^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,
  link: /^!?\[(inside)\]\(href\)/,
  reflink: /^!?\[(inside)\]\s*\[([^\]]*)\]/,
  nolink: /^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,
  strong: /^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,
  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
  code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,
  br: /^ {2,}\n(?!\s*$)/,
  del: noop,
  text: /^[\s\S]+?(?=3D[\\<!\[_*`]| {2,}\n|$)/
};

inline._inside =3D /(?:\[[^\]]*\]|[^\[\]]|\](?=3D[^\[]*\]))*/;
inline._href =3D /\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;

inline.link =3D replace(inline.link)
  ('inside', inline._inside)
  ('href', inline._href)
  ();

inline.reflink =3D replace(inline.reflink)
  ('inside', inline._inside)
  ();

/**
 * Normal Inline Grammar
 */

inline.normal =3D merge({}, inline);

/**
 * Pedantic Inline Grammar
 */

inline.pedantic =3D merge({}, inline.normal, {
  strong: =
/^__(?=3D\S)([\s\S]*?\S)__(?!_)|^\*\*(?=3D\S)([\s\S]*?\S)\*\*(?!\*)/,
  em: /^_(?=3D\S)([\s\S]*?\S)_(?!_)|^\*(?=3D\S)([\s\S]*?\S)\*(?!\*)/
});

/**
 * GFM Inline Grammar
 */

inline.gfm =3D merge({}, inline.normal, {
  escape: replace(inline.escape)('])', '~|])')(),
  url: /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,
  del: /^~~(?=3D\S)([\s\S]*?\S)~~/,
  text: replace(inline.text)
    (']|', '~]|')
    ('|', '|https?://|')
    ()
});

/**
 * GFM + Line Breaks Inline Grammar
 */

inline.breaks =3D merge({}, inline.gfm, {
  br: replace(inline.br)('{2,}', '*')(),
  text: replace(inline.gfm.text)('{2,}', '*')()
});

/**
 * Inline Lexer & Compiler
 */

function InlineLexer(links, options) {
  this.options =3D options || marked.defaults;
  this.links =3D links;
  this.rules =3D inline.normal;

  if (!this.links) {
    throw new
      Error('Tokens array requires a `links` property.');
  }

  if (this.options.gfm) {
    if (this.options.breaks) {
      this.rules =3D inline.breaks;
    } else {
      this.rules =3D inline.gfm;
    }
  } else if (this.options.pedantic) {
    this.rules =3D inline.pedantic;
  }
}

/**
 * Expose Inline Rules
 */

InlineLexer.rules =3D inline;

/**
 * Static Lexing/Compiling Method
 */

InlineLexer.output =3D function(src, links, options) {
  var inline =3D new InlineLexer(links, options);
  return inline.output(src);
};

/**
 * Lexing/Compiling
 */

InlineLexer.prototype.output =3D function(src) {
  var out =3D ''
    , link
    , text
    , href
    , cap;

  while (src) {
    // escape
    if (cap =3D this.rules.escape.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D cap[1];
      continue;
    }

    // autolink
    if (cap =3D this.rules.autolink.exec(src)) {
      src =3D src.substring(cap[0].length);
      if (cap[2] =3D=3D=3D '@') {
        text =3D cap[1].charAt(6) =3D=3D=3D ':'
          ? this.mangle(cap[1].substring(7))
          : this.mangle(cap[1]);
        href =3D this.mangle('mailto:') + text;
      } else {
        text =3D escape(cap[1]);
        href =3D text;
      }
      out +=3D '<a href=3D"'
        + href
        + '">'
        + text
        + '</a>';
      continue;
    }

    // url (gfm)
    if (cap =3D this.rules.url.exec(src)) {
      src =3D src.substring(cap[0].length);
      text =3D escape(cap[1]);
      href =3D text;
      out +=3D '<a href=3D"'
        + href
        + '">'
        + text
        + '</a>';
      continue;
    }

    // tag
    if (cap =3D this.rules.tag.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D this.options.sanitize
        ? escape(cap[0])
        : cap[0];
      continue;
    }

    // link
    if (cap =3D this.rules.link.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D this.outputLink(cap, {
        href: cap[2],
        title: cap[3]
      });
      continue;
    }

    // reflink, nolink
    if ((cap =3D this.rules.reflink.exec(src))
        || (cap =3D this.rules.nolink.exec(src))) {
      src =3D src.substring(cap[0].length);
      link =3D (cap[2] || cap[1]).replace(/\s+/g, ' ');
      link =3D this.links[link.toLowerCase()];
      if (!link || !link.href) {
        out +=3D cap[0].charAt(0);
        src =3D cap[0].substring(1) + src;
        continue;
      }
      out +=3D this.outputLink(cap, link);
      continue;
    }

    // strong
    if (cap =3D this.rules.strong.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<strong>'
        + this.output(cap[2] || cap[1])
        + '</strong>';
      continue;
    }

    // em
    if (cap =3D this.rules.em.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<em>'
        + this.output(cap[2] || cap[1])
        + '</em>';
      continue;
    }

    // code
    if (cap =3D this.rules.code.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<code>'
        + escape(cap[2], true)
        + '</code>';
      continue;
    }

    // br
    if (cap =3D this.rules.br.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<br>';
      continue;
    }

    // del (gfm)
    if (cap =3D this.rules.del.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<del>'
        + this.output(cap[1])
        + '</del>';
      continue;
    }

    // text
    if (cap =3D this.rules.text.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D escape(this.smartypants(cap[0]));
      continue;
    }

    if (src) {
      throw new
        Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return out;
};

/**
 * Compile Link
 */

InlineLexer.prototype.outputLink =3D function(cap, link) {
  if (cap[0].charAt(0) !=3D=3D '!') {
    return '<a href=3D"'
      + escape(link.href)
      + '"'
      + (link.title
      ? ' title=3D"'
      + escape(link.title)
      + '"'
      : '')
      + '>'
      + this.output(cap[1])
      + '</a>';
  } else {
    return '<img src=3D"'
      + escape(link.href)
      + '" alt=3D"'
      + escape(cap[1])
      + '"'
      + (link.title
      ? ' title=3D"'
      + escape(link.title)
      + '"'
      : '')
      + '>';
  }
};

/**
 * Smartypants Transformations
 */

InlineLexer.prototype.smartypants =3D function(text) {
  if (!this.options.smartypants) return text;
  return text
    // em-dashes
    .replace(/--/g, '\u2014')
    // opening singles
    .replace(/(^|[-\u2014/(\[{"\s])'/g, '$1\u2018')
    // closing singles & apostrophes
    .replace(/'/g, '\u2019')
    // opening doubles
    .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1\u201c')
    // closing doubles
    .replace(/"/g, '\u201d')
    // ellipses
    .replace(/\.{3}/g, '\u2026');
};

/**
 * Mangle Links
 */

InlineLexer.prototype.mangle =3D function(text) {
  var out =3D ''
    , l =3D text.length
    , i =3D 0
    , ch;

  for (; i < l; i++) {
    ch =3D text.charCodeAt(i);
    if (Math.random() > 0.5) {
      ch =3D 'x' + ch.toString(16);
    }
    out +=3D '&#' + ch + ';';
  }

  return out;
};

/**
 * Parsing & Compiling
 */

function Parser(options) {
  this.tokens =3D [];
  this.token =3D null;
  this.options =3D options || marked.defaults;
}

/**
 * Static Parse Method
 */

Parser.parse =3D function(src, options) {
  var parser =3D new Parser(options);
  return parser.parse(src);
};

/**
 * Parse Loop
 */

Parser.prototype.parse =3D function(src) {
  this.inline =3D new InlineLexer(src.links, this.options);
  this.tokens =3D src.reverse();

  var out =3D '';
  while (this.next()) {
    out +=3D this.tok();
  }

  return out;
};

/**
 * Next Token
 */

Parser.prototype.next =3D function() {
  return this.token =3D this.tokens.pop();
};

/**
 * Preview Next Token
 */

Parser.prototype.peek =3D function() {
  return this.tokens[this.tokens.length - 1] || 0;
};

/**
 * Parse Text Tokens
 */

Parser.prototype.parseText =3D function() {
  var body =3D this.token.text;

  while (this.peek().type =3D=3D=3D 'text') {
    body +=3D '\n' + this.next().text;
  }

  return this.inline.output(body);
};

/**
 * Parse Current Token
 */

Parser.prototype.tok =3D function() {
  switch (this.token.type) {
    case 'space': {
      return '';
    }
    case 'hr': {
      return '<hr>\n';
    }
    case 'heading': {
      return '<h'
        + this.token.depth
        + ' id=3D"'
        + this.token.text.toLowerCase().replace(/[^\w]+/g, '-')
        + '">'
        + this.inline.output(this.token.text)
        + '</h'
        + this.token.depth
        + '>\n';
    }
    case 'code': {
      if (this.options.highlight) {
        var code =3D this.options.highlight(this.token.text, =
this.token.lang);
        if (code !=3D null && code !=3D=3D this.token.text) {
          this.token.escaped =3D true;
          this.token.text =3D code;
        }
      }

      if (!this.token.escaped) {
        this.token.text =3D escape(this.token.text, true);
      }

      return '<pre><code'
        + (this.token.lang
        ? ' class=3D"'
        + this.options.langPrefix
        + this.token.lang
        + '"'
        : '')
        + '>'
        + this.token.text
        + '</code></pre>\n';
    }
    case 'table': {
      var body =3D ''
        , heading
        , i
        , row
        , cell
        , j;

      // header
      body +=3D '<thead>\n<tr>\n';
      for (i =3D 0; i < this.token.header.length; i++) {
        heading =3D this.inline.output(this.token.header[i]);
        body +=3D '<th';
        if (this.token.align[i]) {
          body +=3D ' style=3D"text-align:' + this.token.align[i] + '"';
        }
        body +=3D '>' + heading + '</th>\n';
      }
      body +=3D '</tr>\n</thead>\n';

      // body
      body +=3D '<tbody>\n'
      for (i =3D 0; i < this.token.cells.length; i++) {
        row =3D this.token.cells[i];
        body +=3D '<tr>\n';
        for (j =3D 0; j < row.length; j++) {
          cell =3D this.inline.output(row[j]);
          body +=3D '<td';
          if (this.token.align[j]) {
            body +=3D ' style=3D"text-align:' + this.token.align[j] + =
'"';
          }
          body +=3D '>' + cell + '</td>\n';
        }
        body +=3D '</tr>\n';
      }
      body +=3D '</tbody>\n';

      return '<table>\n'
        + body
        + '</table>\n';
    }
    case 'blockquote_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'blockquote_end') {
        body +=3D this.tok();
      }

      return '<blockquote>\n'
        + body
        + '</blockquote>\n';
    }
    case 'list_start': {
      var type =3D this.token.ordered ? 'ol' : 'ul'
        , body =3D '';

      while (this.next().type !=3D=3D 'list_end') {
        body +=3D this.tok();
      }

      return '<'
        + type
        + '>\n'
        + body
        + '</'
        + type
        + '>\n';
    }
    case 'list_item_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'list_item_end') {
        body +=3D this.token.type =3D=3D=3D 'text'
          ? this.parseText()
          : this.tok();
      }

      return '<li>'
        + body
        + '</li>\n';
    }
    case 'loose_item_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'list_item_end') {
        body +=3D this.tok();
      }

      return '<li>'
        + body
        + '</li>\n';
    }
    case 'html': {
      return !this.token.pre && !this.options.pedantic
        ? this.inline.output(this.token.text)
        : this.token.text;
    }
    case 'paragraph': {
      return '<p>'
        + this.inline.output(this.token.text)
        + '</p>\n';
    }
    case 'text': {
      return '<p>'
        + this.parseText()
        + '</p>\n';
    }
  }
};

/**
 * Helpers
 */

function escape(html, encode) {
  return html
    .replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;');
}

function replace(regex, opt) {
  regex =3D regex.source;
  opt =3D opt || '';
  return function self(name, val) {
    if (!name) return new RegExp(regex, opt);
    val =3D val.source || val;
    val =3D val.replace(/(^|[^\[])\^/g, '$1');
    regex =3D regex.replace(name, val);
    return self;
  };
}

function noop() {}
noop.exec =3D noop;

function merge(obj) {
  var i =3D 1
    , target
    , key;

  for (; i < arguments.length; i++) {
    target =3D arguments[i];
    for (key in target) {
      if (Object.prototype.hasOwnProperty.call(target, key)) {
        obj[key] =3D target[key];
      }
    }
  }

  return obj;
}

/**
 * Marked
 */

function marked(src, opt, callback) {
  if (callback || typeof opt =3D=3D=3D 'function') {
    if (!callback) {
      callback =3D opt;
      opt =3D null;
    }

    opt =3D merge({}, marked.defaults, opt || {});

    var highlight =3D opt.highlight
      , tokens
      , pending
      , i =3D 0;

    try {
      tokens =3D Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending =3D tokens.length;

    var done =3D function() {
      var out, err;

      try {
        out =3D Parser.parse(tokens, opt);
      } catch (e) {
        err =3D e;
      }

      opt.highlight =3D highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !=3D=3D 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code =3D=3D null || code =3D=3D=3D token.text) {
            return --pending || done();
          }
          token.text =3D code;
          token.escaped =3D true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt =3D merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message +=3D '\nPlease report this to =
https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
}

/**
 * Options
 */

marked.options =3D
marked.setOptions =3D function(opt) {
  merge(marked.defaults, opt);
  return marked;
};

marked.defaults =3D {
  gfm: true,
  tables: true,
  breaks: false,
  pedantic: false,
  sanitize: false,
  smartLists: false,
  silent: false,
  highlight: null,
  langPrefix: 'lang-',
  smartypants: false
};

/**
 * Expose
 */

marked.Parser =3D Parser;
marked.parser =3D Parser.parse;

marked.Lexer =3D Lexer;
marked.lexer =3D Lexer.lex;

marked.InlineLexer =3D InlineLexer;
marked.inlineLexer =3D InlineLexer.output;

marked.parse =3D marked;

if (typeof exports =3D=3D=3D 'object') {
  module.exports =3D marked;
} else if (typeof define =3D=3D=3D 'function' && define.amd) {
  define(function() { return marked; });
} else {
  this.marked =3D marked;
}

}).call(function() {
  return this || (typeof window !=3D=3D 'undefined' ? window : global);
}());

------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/showdown.js

(function(global) {
// CodeMirror version 3.15
//
// CodeMirror is the only global var we claim
    var CodeMirror =3D (function() {
        "use strict";

        // BROWSER SNIFFING

        // Crude, but necessary to handle a number of =
hard-to-feature-detect
        // bugs and behavior differences.
        var gecko =3D /gecko\/\d/i.test(navigator.userAgent);
        var ie =3D /MSIE \d/.test(navigator.userAgent);
        var ie_lt8 =3D ie && (document.documentMode =3D=3D null || =
document.documentMode < 8);
        var ie_lt9 =3D ie && (document.documentMode =3D=3D null || =
document.documentMode < 9);
        var webkit =3D /WebKit\//.test(navigator.userAgent);
        var qtwebkit =3D webkit && =
/Qt\/\d+\.\d+/.test(navigator.userAgent);
        var chrome =3D /Chrome\//.test(navigator.userAgent);
        var opera =3D /Opera\//.test(navigator.userAgent);
        var safari =3D /Apple Computer/.test(navigator.vendor);
        var khtml =3D /KHTML\//.test(navigator.userAgent);
        var mac_geLion =3D /Mac OS X =
1\d\D([7-9]|\d\d)\D/.test(navigator.userAgent);
        var mac_geMountainLion =3D /Mac OS X =
1\d\D([8-9]|\d\d)\D/.test(navigator.userAgent);
        var phantom =3D /PhantomJS/.test(navigator.userAgent);

        var ios =3D /AppleWebKit/.test(navigator.userAgent) && =
/Mobile\/\w+/.test(navigator.userAgent);
        // This is woefully incomplete. Suggestions for alternative =
methods welcome.
        var mobile =3D ios || /Android|webOS|BlackBerry|Opera Mini|Opera =
Mobi|IEMobile/i.test(navigator.userAgent);
        var mac =3D ios || /Mac/.test(navigator.platform);
        var windows =3D /windows/i.test(navigator.platform);

        var opera_version =3D opera && =
navigator.userAgent.match(/Version\/(\d*\.\d*)/);
        if (opera_version) opera_version =3D Number(opera_version[1]);
        if (opera_version && opera_version >=3D 15) { opera =3D false; =
webkit =3D true; }
        // Some browsers use the wrong event properties to signal =
cmd/ctrl on OS X
        var flipCtrlCmd =3D mac && (qtwebkit || opera && (opera_version =
=3D=3D null || opera_version < 12.11));
        var captureMiddleClick =3D gecko || (ie && !ie_lt9);

        // Optimize some code when these features are not used
        var sawReadOnlySpans =3D false, sawCollapsedSpans =3D false;

        // CONSTRUCTOR

        function CodeMirror(place, options) {
            if (!(this instanceof CodeMirror)) return new =
CodeMirror(place, options);

            this.options =3D options =3D options || {};
            // Determine effective options based on given values and =
defaults.
            for (var opt in defaults) if (!options.hasOwnProperty(opt) =
&& defaults.hasOwnProperty(opt))
                options[opt] =3D defaults[opt];
            setGuttersForLineNumbers(options);

            var docStart =3D typeof options.value =3D=3D "string" ? 0 : =
options.value.first;
            var display =3D this.display =3D makeDisplay(place, =
docStart);
            display.wrapper.CodeMirror =3D this;
            updateGutters(this);
            if (options.autofocus && !mobile) focusInput(this);

            this.state =3D {keyMaps: [],
                overlays: [],
                modeGen: 0,
                overwrite: false, focused: false,
                suppressEdits: false, pasteIncoming: false,
                draggingText: false,
                highlight: new Delayed()};

            themeChanged(this);
            if (options.lineWrapping)
                this.display.wrapper.className +=3D " CodeMirror-wrap";

            var doc =3D options.value;
            if (typeof doc =3D=3D "string") doc =3D new =
Doc(options.value, options.mode);
            operation(this, attachDoc)(this, doc);

            // Override magic textarea content restore that IE sometimes =
does
            // on our hidden textarea on reload
            if (ie) setTimeout(bind(resetInput, this, true), 20);

            registerEventHandlers(this);
            // IE throws unspecified error in certain cases, when
            // trying to access activeElement before onload
            var hasFocus; try { hasFocus =3D (document.activeElement =
=3D=3D display.input); } catch(e) { }
            if (hasFocus || (options.autofocus && !mobile)) =
setTimeout(bind(onFocus, this), 20);
            else onBlur(this);

            operation(this, function() {
                for (var opt in optionHandlers)
                    if (optionHandlers.propertyIsEnumerable(opt))
                        optionHandlers[opt](this, options[opt], Init);
                for (var i =3D 0; i < initHooks.length; ++i) =
initHooks[i](this);
            })();
        }

        // DISPLAY CONSTRUCTOR

        function makeDisplay(place, docStart) {
            var d =3D {};

            var input =3D d.input =3D elt("textarea", null, null, =
"position: absolute; padding: 0; width: 1px; height: 1em; outline: none; =
font-size: 4px;");
            if (webkit) input.style.width =3D "1000px";
            else input.setAttribute("wrap", "off");
            // if border: 0; -- iOS fails to open keyboard (issue #1287)
            if (ios) input.style.border =3D "1px solid black";
            input.setAttribute("autocorrect", "off"); =
input.setAttribute("autocapitalize", "off"); =
input.setAttribute("spellcheck", "false");

            // Wraps and hides input textarea
            d.inputDiv =3D elt("div", [input], null, "overflow: hidden; =
position: relative; width: 3px; height: 0px;");
            // The actual fake scrollbars.
            d.scrollbarH =3D elt("div", [elt("div", null, null, "height: =
1px")], "CodeMirror-hscrollbar");
            d.scrollbarV =3D elt("div", [elt("div", null, null, "width: =
1px")], "CodeMirror-vscrollbar");
            d.scrollbarFiller =3D elt("div", null, =
"CodeMirror-scrollbar-filler");
            d.gutterFiller =3D elt("div", null, =
"CodeMirror-gutter-filler");
            // DIVs containing the selection and the actual code
            d.lineDiv =3D elt("div", null, "CodeMirror-code");
            d.selectionDiv =3D elt("div", null, null, "position: =
relative; z-index: 1");
            // Blinky cursor, and element used to ensure cursor fits at =
the end of a line
            d.cursor =3D elt("div", "\u00a0", "CodeMirror-cursor");
            // Secondary cursor, shown when on a 'jump' in =
bi-directional text
            d.otherCursor =3D elt("div", "\u00a0", "CodeMirror-cursor =
CodeMirror-secondarycursor");
            // Used to measure text size
            d.measure =3D elt("div", null, "CodeMirror-measure");
            // Wraps everything that needs to exist inside the =
vertically-padded coordinate system
            d.lineSpace =3D elt("div", [d.measure, d.selectionDiv, =
d.lineDiv, d.cursor, d.otherCursor],
                null, "position: relative; outline: none");
            // Moved around its parent to cover visible view
            d.mover =3D elt("div", [elt("div", [d.lineSpace], =
"CodeMirror-lines")], null, "position: relative");
            // Set to the height of the text, causes scrolling
            d.sizer =3D elt("div", [d.mover], "CodeMirror-sizer");
            // D is needed because behavior of elts with overflow: auto =
and padding is inconsistent across browsers
            d.heightForcer =3D elt("div", null, null, "position: =
absolute; height: " + scrollerCutOff + "px; width: 1px;");
            // Will contain the gutters, if any
            d.gutters =3D elt("div", null, "CodeMirror-gutters");
            d.lineGutter =3D null;
            // Provides scrolling
            d.scroller =3D elt("div", [d.sizer, d.heightForcer, =
d.gutters], "CodeMirror-scroll");
            d.scroller.setAttribute("tabIndex", "-1");
            // The element in which the editor lives.
            d.wrapper =3D elt("div", [d.inputDiv, d.scrollbarH, =
d.scrollbarV,
                d.scrollbarFiller, d.gutterFiller, d.scroller], =
"CodeMirror");
            // Work around IE7 z-index bug
            if (ie_lt8) { d.gutters.style.zIndex =3D -1; =
d.scroller.style.paddingRight =3D 0; }
            if (place.appendChild) place.appendChild(d.wrapper); else =
place(d.wrapper);

            // Needed to hide big blue blinking cursor on Mobile Safari
            if (ios) input.style.width =3D "0px";
            if (!webkit) d.scroller.draggable =3D true;
            // Needed to handle Tab key in KHTML
            if (khtml) { d.inputDiv.style.height =3D "1px"; =
d.inputDiv.style.position =3D "absolute"; }
            // Need to set a minimum width to see the scrollbar on IE7 =
(but must not set it on IE8).
            else if (ie_lt8) d.scrollbarH.style.minWidth =3D =
d.scrollbarV.style.minWidth =3D "18px";

            // Current visible range (may be bigger than the view =
window).
            d.viewOffset =3D d.lastSizeC =3D 0;
            d.showingFrom =3D d.showingTo =3D docStart;

            // Used to only resize the line number gutter when necessary =
(when
            // the amount of lines crosses a boundary that makes its =
width change)
            d.lineNumWidth =3D d.lineNumInnerWidth =3D d.lineNumChars =
=3D null;
            // See readInput and resetInput
            d.prevInput =3D "";
            // Set to true when a non-horizontal-scrolling widget is =
added. As
            // an optimization, widget aligning is skipped when d is =
false.
            d.alignWidgets =3D false;
            // Flag that indicates whether we currently expect input to =
appear
            // (after some event like 'keypress' or 'input') and are =
polling
            // intensively.
            d.pollingFast =3D false;
            // Self-resetting timeout for the poller
            d.poll =3D new Delayed();

            d.cachedCharWidth =3D d.cachedTextHeight =3D null;
            d.measureLineCache =3D [];
            d.measureLineCachePos =3D 0;

            // Tracks when resetInput has punted to just putting a short
            // string instead of the (large) selection.
            d.inaccurateSelection =3D false;

            // Tracks the maximum line length so that the horizontal =
scrollbar
            // can be kept static when scrolling.
            d.maxLine =3D null;
            d.maxLineLength =3D 0;
            d.maxLineChanged =3D false;

            // Used for measuring wheel scrolling granularity
            d.wheelDX =3D d.wheelDY =3D d.wheelStartX =3D d.wheelStartY =
=3D null;

            return d;
        }

        // STATE UPDATES

        // Used to get the editor into a consistent state again when =
options change.

        function loadMode(cm) {
            cm.doc.mode =3D CodeMirror.getMode(cm.options, =
cm.doc.modeOption);
            cm.doc.iter(function(line) {
                if (line.stateAfter) line.stateAfter =3D null;
                if (line.styles) line.styles =3D null;
            });
            cm.doc.frontier =3D cm.doc.first;
            startWorker(cm, 100);
            cm.state.modeGen++;
            if (cm.curOp) regChange(cm);
        }

        function wrappingChanged(cm) {
            if (cm.options.lineWrapping) {
                cm.display.wrapper.className +=3D " CodeMirror-wrap";
                cm.display.sizer.style.minWidth =3D "";
            } else {
                cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(" CodeMirror-wrap", "");
                computeMaxLength(cm);
            }
            estimateLineHeights(cm);
            regChange(cm);
            clearCaches(cm);
            setTimeout(function(){updateScrollbars(cm);}, 100);
        }

        function estimateHeight(cm) {
            var th =3D textHeight(cm.display), wrapping =3D =
cm.options.lineWrapping;
            var perLine =3D wrapping && Math.max(5, =
cm.display.scroller.clientWidth / charWidth(cm.display) - 3);
            return function(line) {
                if (lineIsHidden(cm.doc, line))
                    return 0;
                else if (wrapping)
                    return (Math.ceil(line.text.length / perLine) || 1) =
* th;
                else
                    return th;
            };
        }

        function estimateLineHeights(cm) {
            var doc =3D cm.doc, est =3D estimateHeight(cm);
            doc.iter(function(line) {
                var estHeight =3D est(line);
                if (estHeight !=3D line.height) updateLineHeight(line, =
estHeight);
            });
        }

        function keyMapChanged(cm) {
            var map =3D keyMap[cm.options.keyMap], style =3D map.style;
            cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(/\s*cm-keymap-\S+/g, "") +
                (style ? " cm-keymap-" + style : "");
            cm.state.disableInput =3D map.disableInput;
        }

        function themeChanged(cm) {
            cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(/\s*cm-s-\S+/g, "") +
                cm.options.theme.replace(/(^|\s)\s*/g, " cm-s-");
            clearCaches(cm);
        }

        function guttersChanged(cm) {
            updateGutters(cm);
            regChange(cm);
            setTimeout(function(){alignHorizontally(cm);}, 20);
        }

        function updateGutters(cm) {
            var gutters =3D cm.display.gutters, specs =3D =
cm.options.gutters;
            removeChildren(gutters);
            for (var i =3D 0; i < specs.length; ++i) {
                var gutterClass =3D specs[i];
                var gElt =3D gutters.appendChild(elt("div", null, =
"CodeMirror-gutter " + gutterClass));
                if (gutterClass =3D=3D "CodeMirror-linenumbers") {
                    cm.display.lineGutter =3D gElt;
                    gElt.style.width =3D (cm.display.lineNumWidth || 1) =
+ "px";
                }
            }
            gutters.style.display =3D i ? "" : "none";
        }

        function lineLength(doc, line) {
            if (line.height =3D=3D 0) return 0;
            var len =3D line.text.length, merged, cur =3D line;
            while (merged =3D collapsedSpanAtStart(cur)) {
                var found =3D merged.find();
                cur =3D getLine(doc, found.from.line);
                len +=3D found.from.ch - found.to.ch;
            }
            cur =3D line;
            while (merged =3D collapsedSpanAtEnd(cur)) {
                var found =3D merged.find();
                len -=3D cur.text.length - found.from.ch;
                cur =3D getLine(doc, found.to.line);
                len +=3D cur.text.length - found.to.ch;
            }
            return len;
        }

        function computeMaxLength(cm) {
            var d =3D cm.display, doc =3D cm.doc;
            d.maxLine =3D getLine(doc, doc.first);
            d.maxLineLength =3D lineLength(doc, d.maxLine);
            d.maxLineChanged =3D true;
            doc.iter(function(line) {
                var len =3D lineLength(doc, line);
                if (len > d.maxLineLength) {
                    d.maxLineLength =3D len;
                    d.maxLine =3D line;
                }
            });
        }

        // Make sure the gutters options contains the element
        // "CodeMirror-linenumbers" when the lineNumbers option is true.
        function setGuttersForLineNumbers(options) {
            var found =3D false;
            for (var i =3D 0; i < options.gutters.length; ++i) {
                if (options.gutters[i] =3D=3D "CodeMirror-linenumbers") =
{
                    if (options.lineNumbers) found =3D true;
                    else options.gutters.splice(i--, 1);
                }
            }
            if (!found && options.lineNumbers)
                options.gutters.push("CodeMirror-linenumbers");
        }

        // SCROLLBARS

        // Re-synchronize the fake scrollbars with the actual size of =
the
        // content. Optionally force a scrollTop.
        function updateScrollbars(cm) {
            var d =3D cm.display, docHeight =3D cm.doc.height;
            var totalHeight =3D docHeight + paddingVert(d);
            d.sizer.style.minHeight =3D d.heightForcer.style.top =3D =
totalHeight + "px";
            d.gutters.style.height =3D Math.max(totalHeight, =
d.scroller.clientHeight - scrollerCutOff) + "px";
            var scrollHeight =3D Math.max(totalHeight, =
d.scroller.scrollHeight);
            var needsH =3D d.scroller.scrollWidth > =
(d.scroller.clientWidth + 1);
            var needsV =3D scrollHeight > (d.scroller.clientHeight + 1);
            if (needsV) {
                d.scrollbarV.style.display =3D "block";
                d.scrollbarV.style.bottom =3D needsH ? =
scrollbarWidth(d.measure) + "px" : "0";
                d.scrollbarV.firstChild.style.height =3D
                    (scrollHeight - d.scroller.clientHeight + =
d.scrollbarV.clientHeight) + "px";
            } else d.scrollbarV.style.display =3D "";
            if (needsH) {
                d.scrollbarH.style.display =3D "block";
                d.scrollbarH.style.right =3D needsV ? =
scrollbarWidth(d.measure) + "px" : "0";
                d.scrollbarH.firstChild.style.width =3D
                    (d.scroller.scrollWidth - d.scroller.clientWidth + =
d.scrollbarH.clientWidth) + "px";
            } else d.scrollbarH.style.display =3D "";
            if (needsH && needsV) {
                d.scrollbarFiller.style.display =3D "block";
                d.scrollbarFiller.style.height =3D =
d.scrollbarFiller.style.width =3D scrollbarWidth(d.measure) + "px";
            } else d.scrollbarFiller.style.display =3D "";
            if (needsH && cm.options.coverGutterNextToScrollbar && =
cm.options.fixedGutter) {
                d.gutterFiller.style.display =3D "block";
                d.gutterFiller.style.height =3D =
scrollbarWidth(d.measure) + "px";
                d.gutterFiller.style.width =3D d.gutters.offsetWidth + =
"px";
            } else d.gutterFiller.style.display =3D "";

            if (mac_geLion && scrollbarWidth(d.measure) =3D=3D=3D 0)
                d.scrollbarV.style.minWidth =3D =
d.scrollbarH.style.minHeight =3D mac_geMountainLion ? "18px" : "12px";
        }

        function visibleLines(display, doc, viewPort) {
            var top =3D display.scroller.scrollTop, height =3D =
display.wrapper.clientHeight;
            if (typeof viewPort =3D=3D "number") top =3D viewPort;
            else if (viewPort) {top =3D viewPort.top; height =3D =
viewPort.bottom - viewPort.top;}
            top =3D Math.floor(top - paddingTop(display));
            var bottom =3D Math.ceil(top + height);
            return {from: lineAtHeight(doc, top), to: lineAtHeight(doc, =
bottom)};
        }

        // LINE NUMBERS

        function alignHorizontally(cm) {
            var display =3D cm.display;
            if (!display.alignWidgets && (!display.gutters.firstChild || =
!cm.options.fixedGutter)) return;
            var comp =3D compensateForHScroll(display) - =
display.scroller.scrollLeft + cm.doc.scrollLeft;
            var gutterW =3D display.gutters.offsetWidth, l =3D comp + =
"px";
            for (var n =3D display.lineDiv.firstChild; n; n =3D =
n.nextSibling) if (n.alignable) {
                for (var i =3D 0, a =3D n.alignable; i < a.length; ++i) =
a[i].style.left =3D l;
            }
            if (cm.options.fixedGutter)
                display.gutters.style.left =3D (comp + gutterW) + "px";
        }

        function maybeUpdateLineNumberWidth(cm) {
            if (!cm.options.lineNumbers) return false;
            var doc =3D cm.doc, last =3D lineNumberFor(cm.options, =
doc.first + doc.size - 1), display =3D cm.display;
            if (last.length !=3D display.lineNumChars) {
                var test =3D display.measure.appendChild(elt("div", =
[elt("div", last)],
                    "CodeMirror-linenumber CodeMirror-gutter-elt"));
                var innerW =3D test.firstChild.offsetWidth, padding =3D =
test.offsetWidth - innerW;
                display.lineGutter.style.width =3D "";
                display.lineNumInnerWidth =3D Math.max(innerW, =
display.lineGutter.offsetWidth - padding);
                display.lineNumWidth =3D display.lineNumInnerWidth + =
padding;
                display.lineNumChars =3D display.lineNumInnerWidth ? =
last.length : -1;
                display.lineGutter.style.width =3D display.lineNumWidth =
+ "px";
                return true;
            }
            return false;
        }

        function lineNumberFor(options, i) {
            return String(options.lineNumberFormatter(i + =
options.firstLineNumber));
        }
        function compensateForHScroll(display) {
            return getRect(display.scroller).left - =
getRect(display.sizer).left;
        }

        // DISPLAY DRAWING

        function updateDisplay(cm, changes, viewPort, forced) {
            var oldFrom =3D cm.display.showingFrom, oldTo =3D =
cm.display.showingTo, updated;
            var visible =3D visibleLines(cm.display, cm.doc, viewPort);
            for (;;) {
                if (!updateDisplayInner(cm, changes, visible, forced)) =
break;
                forced =3D false;
                updated =3D true;
                updateSelection(cm);
                updateScrollbars(cm);

                // Clip forced viewport to actual scrollable area
                if (viewPort)
                    viewPort =3D =
Math.min(cm.display.scroller.scrollHeight - =
cm.display.scroller.clientHeight,
                            typeof viewPort =3D=3D "number" ? viewPort : =
viewPort.top);
                visible =3D visibleLines(cm.display, cm.doc, viewPort);
                if (visible.from >=3D cm.display.showingFrom && =
visible.to <=3D cm.display.showingTo)
                    break;
                changes =3D [];
            }

            if (updated) {
                signalLater(cm, "update", cm);
                if (cm.display.showingFrom !=3D oldFrom || =
cm.display.showingTo !=3D oldTo)
                    signalLater(cm, "viewportChange", cm, =
cm.display.showingFrom, cm.display.showingTo);
            }
            return updated;
        }

        // Uses a set of changes plus the current scroll position to
        // determine which DOM updates have to be made, and makes the
        // updates.
        function updateDisplayInner(cm, changes, visible, forced) {
            var display =3D cm.display, doc =3D cm.doc;
            if (!display.wrapper.clientWidth) {
                display.showingFrom =3D display.showingTo =3D doc.first;
                display.viewOffset =3D 0;
                return;
            }

            // Bail out if the visible area is already rendered and =
nothing changed.
            if (!forced && changes.length =3D=3D 0 &&
                visible.from > display.showingFrom && visible.to < =
display.showingTo)
                return;

            if (maybeUpdateLineNumberWidth(cm))
                changes =3D [{from: doc.first, to: doc.first + =
doc.size}];
            var gutterW =3D display.sizer.style.marginLeft =3D =
display.gutters.offsetWidth + "px";
            display.scrollbarH.style.left =3D cm.options.fixedGutter ? =
gutterW : "0";

            // Used to determine which lines need their line numbers =
updated
            var positionsChangedFrom =3D Infinity;
            if (cm.options.lineNumbers)
                for (var i =3D 0; i < changes.length; ++i)
                    if (changes[i].diff) { positionsChangedFrom =3D =
changes[i].from; break; }

            var end =3D doc.first + doc.size;
            var from =3D Math.max(visible.from - =
cm.options.viewportMargin, doc.first);
            var to =3D Math.min(end, visible.to + =
cm.options.viewportMargin);
            if (display.showingFrom < from && from - display.showingFrom =
< 20) from =3D Math.max(doc.first, display.showingFrom);
            if (display.showingTo > to && display.showingTo - to < 20) =
to =3D Math.min(end, display.showingTo);
            if (sawCollapsedSpans) {
                from =3D lineNo(visualLine(doc, getLine(doc, from)));
                while (to < end && lineIsHidden(doc, getLine(doc, to))) =
++to;
            }

            // Create a range of theoretically intact lines, and punch =
holes
            // in that using the change info.
            var intact =3D [{from: Math.max(display.showingFrom, =
doc.first),
                to: Math.min(display.showingTo, end)}];
            if (intact[0].from >=3D intact[0].to) intact =3D [];
            else intact =3D computeIntact(intact, changes);
            // When merged lines are present, we might have to reduce =
the
            // intact ranges because changes in continued fragments of =
the
            // intact lines do require the lines to be redrawn.
            if (sawCollapsedSpans)
                for (var i =3D 0; i < intact.length; ++i) {
                    var range =3D intact[i], merged;
                    while (merged =3D collapsedSpanAtEnd(getLine(doc, =
range.to - 1))) {
                        var newTo =3D merged.find().from.line;
                        if (newTo > range.from) range.to =3D newTo;
                        else { intact.splice(i--, 1); break; }
                    }
                }

            // Clip off the parts that won't be visible
            var intactLines =3D 0;
            for (var i =3D 0; i < intact.length; ++i) {
                var range =3D intact[i];
                if (range.from < from) range.from =3D from;
                if (range.to > to) range.to =3D to;
                if (range.from >=3D range.to) intact.splice(i--, 1);
                else intactLines +=3D range.to - range.from;
            }
            if (!forced && intactLines =3D=3D to - from && from =3D=3D =
display.showingFrom && to =3D=3D display.showingTo) {
                updateViewOffset(cm);
                return;
            }
            intact.sort(function(a, b) {return a.from - b.from;});

            // Avoid crashing on IE's "unspecified error" when in =
iframes
            try {
                var focused =3D document.activeElement;
            } catch(e) {}
            if (intactLines < (to - from) * .7) =
display.lineDiv.style.display =3D "none";
            patchDisplay(cm, from, to, intact, positionsChangedFrom);
            display.lineDiv.style.display =3D "";
            if (focused && document.activeElement !=3D focused && =
focused.offsetHeight) focused.focus();

            var different =3D from !=3D display.showingFrom || to !=3D =
display.showingTo ||
                display.lastSizeC !=3D display.wrapper.clientHeight;
            // This is just a bogus formula that detects when the editor =
is
            // resized or the font size changes.
            if (different) {
                display.lastSizeC =3D display.wrapper.clientHeight;
                startWorker(cm, 400);
            }
            display.showingFrom =3D from; display.showingTo =3D to;

            updateHeightsInViewport(cm);
            updateViewOffset(cm);

            return true;
        }

        function updateHeightsInViewport(cm) {
            var display =3D cm.display;
            var prevBottom =3D display.lineDiv.offsetTop;
            for (var node =3D display.lineDiv.firstChild, height; node; =
node =3D node.nextSibling) if (node.lineObj) {
                if (ie_lt8) {
                    var bot =3D node.offsetTop + node.offsetHeight;
                    height =3D bot - prevBottom;
                    prevBottom =3D bot;
                } else {
                    var box =3D getRect(node);
                    height =3D box.bottom - box.top;
                }
                var diff =3D node.lineObj.height - height;
                if (height < 2) height =3D textHeight(display);
                if (diff > .001 || diff < -.001) {
                    updateLineHeight(node.lineObj, height);
                    var widgets =3D node.lineObj.widgets;
                    if (widgets) for (var i =3D 0; i < widgets.length; =
++i)
                        widgets[i].height =3D =
widgets[i].node.offsetHeight;
                }
            }
        }

        function updateViewOffset(cm) {
            var off =3D cm.display.viewOffset =3D heightAtLine(cm, =
getLine(cm.doc, cm.display.showingFrom));
            // Position the mover div to align with the current virtual =
scroll position
            cm.display.mover.style.top =3D off + "px";
        }

        function computeIntact(intact, changes) {
            for (var i =3D 0, l =3D changes.length || 0; i < l; ++i) {
                var change =3D changes[i], intact2 =3D [], diff =3D =
change.diff || 0;
                for (var j =3D 0, l2 =3D intact.length; j < l2; ++j) {
                    var range =3D intact[j];
                    if (change.to <=3D range.from && change.diff) {
                        intact2.push({from: range.from + diff, to: =
range.to + diff});
                    } else if (change.to <=3D range.from || change.from =
>=3D range.to) {
                        intact2.push(range);
                    } else {
                        if (change.from > range.from)
                            intact2.push({from: range.from, to: =
change.from});
                        if (change.to < range.to)
                            intact2.push({from: change.to + diff, to: =
range.to + diff});
                    }
                }
                intact =3D intact2;
            }
            return intact;
        }

        function getDimensions(cm) {
            var d =3D cm.display, left =3D {}, width =3D {};
            for (var n =3D d.gutters.firstChild, i =3D 0; n; n =3D =
n.nextSibling, ++i) {
                left[cm.options.gutters[i]] =3D n.offsetLeft;
                width[cm.options.gutters[i]] =3D n.offsetWidth;
            }
            return {fixedPos: compensateForHScroll(d),
                gutterTotalWidth: d.gutters.offsetWidth,
                gutterLeft: left,
                gutterWidth: width,
                wrapperWidth: d.wrapper.clientWidth};
        }

        function patchDisplay(cm, from, to, intact, updateNumbersFrom) {
            var dims =3D getDimensions(cm);
            var display =3D cm.display, lineNumbers =3D =
cm.options.lineNumbers;
            if (!intact.length && (!webkit || =
!cm.display.currentWheelTarget))
                removeChildren(display.lineDiv);
            var container =3D display.lineDiv, cur =3D =
container.firstChild;

            function rm(node) {
                var next =3D node.nextSibling;
                if (webkit && mac && cm.display.currentWheelTarget =
=3D=3D node) {
                    node.style.display =3D "none";
                    node.lineObj =3D null;
                } else {
                    node.parentNode.removeChild(node);
                }
                return next;
            }

            var nextIntact =3D intact.shift(), lineN =3D from;
            cm.doc.iter(from, to, function(line) {
                if (nextIntact && nextIntact.to =3D=3D lineN) nextIntact =
=3D intact.shift();
                if (lineIsHidden(cm.doc, line)) {
                    if (line.height !=3D 0) updateLineHeight(line, 0);
                    if (line.widgets && cur.previousSibling) for (var i =
=3D 0; i < line.widgets.length; ++i) {
                        var w =3D line.widgets[i];
                        if (w.showIfHidden) {
                            var prev =3D cur.previousSibling;
                            if (/pre/i.test(prev.nodeName)) {
                                var wrap =3D elt("div", null, null, =
"position: relative");
                                prev.parentNode.replaceChild(wrap, =
prev);
                                wrap.appendChild(prev);
                                prev =3D wrap;
                            }
                            var wnode =3D prev.appendChild(elt("div", =
[w.node], "CodeMirror-linewidget"));
                            if (!w.handleMouseEvents) wnode.ignoreEvents =
=3D true;
                            positionLineWidget(w, wnode, prev, dims);
                        }
                    }
                } else if (nextIntact && nextIntact.from <=3D lineN && =
nextIntact.to > lineN) {
                    // This line is intact. Skip to the actual node. =
Update its
                    // line number if needed.
                    while (cur.lineObj !=3D line) cur =3D rm(cur);
                    if (lineNumbers && updateNumbersFrom <=3D lineN && =
cur.lineNumber)
                        setTextContent(cur.lineNumber, =
lineNumberFor(cm.options, lineN));
                    cur =3D cur.nextSibling;
                } else {
                    // For lines with widgets, make an attempt to find =
and reuse
                    // the existing element, so that widgets aren't =
needlessly
                    // removed and re-inserted into the dom
                    if (line.widgets) for (var j =3D 0, search =3D cur, =
reuse; search && j < 20; ++j, search =3D search.nextSibling)
                        if (search.lineObj =3D=3D line && =
/div/i.test(search.nodeName)) { reuse =3D search; break; }
                    // This line needs to be generated.
                    var lineNode =3D buildLineElement(cm, line, lineN, =
dims, reuse);
                    if (lineNode !=3D reuse) {
                        container.insertBefore(lineNode, cur);
                    } else {
                        while (cur !=3D reuse) cur =3D rm(cur);
                        cur =3D cur.nextSibling;
                    }

                    lineNode.lineObj =3D line;
                }
                ++lineN;
            });
            while (cur) cur =3D rm(cur);
        }

        function buildLineElement(cm, line, lineNo, dims, reuse) {
            var lineElement =3D lineContent(cm, line);
            var markers =3D line.gutterMarkers, display =3D cm.display, =
wrap;

            if (!cm.options.lineNumbers && !markers && !line.bgClass && =
!line.wrapClass && !line.widgets)
                return lineElement;

            // Lines with gutter elements, widgets or a background class =
need
            // to be wrapped again, and have the extra elements added to =
the
            // wrapper div

            if (reuse) {
                reuse.alignable =3D null;
                var isOk =3D true, widgetsSeen =3D 0, insertBefore =3D =
null;
                for (var n =3D reuse.firstChild, next; n; n =3D next) {
                    next =3D n.nextSibling;
                    if (!/\bCodeMirror-linewidget\b/.test(n.className)) =
{
                        reuse.removeChild(n);
                    } else {
                        for (var i =3D 0; i < line.widgets.length; ++i) =
{
                            var widget =3D line.widgets[i];
                            if (widget.node =3D=3D n.firstChild) {
                                if (!widget.above && !insertBefore) =
insertBefore =3D n;
                                positionLineWidget(widget, n, reuse, =
dims);
                                ++widgetsSeen;
                                break;
                            }
                        }
                        if (i =3D=3D line.widgets.length) { isOk =3D =
false; break; }
                    }
                }
                reuse.insertBefore(lineElement, insertBefore);
                if (isOk && widgetsSeen =3D=3D line.widgets.length) {
                    wrap =3D reuse;
                    reuse.className =3D line.wrapClass || "";
                }
            }
            if (!wrap) {
                wrap =3D elt("div", null, line.wrapClass, "position: =
relative");
                wrap.appendChild(lineElement);
            }
            // Kludge to make sure the styled element lies behind the =
selection (by z-index)
            if (line.bgClass)
                wrap.insertBefore(elt("div", null, line.bgClass + " =
CodeMirror-linebackground"), wrap.firstChild);
            if (cm.options.lineNumbers || markers) {
                var gutterWrap =3D wrap.insertBefore(elt("div", null, =
null, "position: absolute; left: " +
                        (cm.options.fixedGutter ? dims.fixedPos : =
-dims.gutterTotalWidth) + "px"),
                    wrap.firstChild);
                if (cm.options.fixedGutter) (wrap.alignable || =
(wrap.alignable =3D [])).push(gutterWrap);
                if (cm.options.lineNumbers && (!markers || =
!markers["CodeMirror-linenumbers"]))
                    wrap.lineNumber =3D gutterWrap.appendChild(
                        elt("div", lineNumberFor(cm.options, lineNo),
                            "CodeMirror-linenumber =
CodeMirror-gutter-elt",
                                "left: " + =
dims.gutterLeft["CodeMirror-linenumbers"] + "px; width: "
                                + display.lineNumInnerWidth + "px"));
                if (markers)
                    for (var k =3D 0; k < cm.options.gutters.length; =
++k) {
                        var id =3D cm.options.gutters[k], found =3D =
markers.hasOwnProperty(id) && markers[id];
                        if (found)
                            gutterWrap.appendChild(elt("div", [found], =
"CodeMirror-gutter-elt", "left: " +
                                dims.gutterLeft[id] + "px; width: " + =
dims.gutterWidth[id] + "px"));
                    }
            }
            if (ie_lt8) wrap.style.zIndex =3D 2;
            if (line.widgets && wrap !=3D reuse) for (var i =3D 0, ws =
=3D line.widgets; i < ws.length; ++i) {
                var widget =3D ws[i], node =3D elt("div", [widget.node], =
"CodeMirror-linewidget");
                if (!widget.handleMouseEvents) node.ignoreEvents =3D =
true;
                positionLineWidget(widget, node, wrap, dims);
                if (widget.above)
                    wrap.insertBefore(node, cm.options.lineNumbers && =
line.height !=3D 0 ? gutterWrap : lineElement);
                else
                    wrap.appendChild(node);
                signalLater(widget, "redraw");
            }
            return wrap;
        }

        function positionLineWidget(widget, node, wrap, dims) {
            if (widget.noHScroll) {
                (wrap.alignable || (wrap.alignable =3D [])).push(node);
                var width =3D dims.wrapperWidth;
                node.style.left =3D dims.fixedPos + "px";
                if (!widget.coverGutter) {
                    width -=3D dims.gutterTotalWidth;
                    node.style.paddingLeft =3D dims.gutterTotalWidth + =
"px";
                }
                node.style.width =3D width + "px";
            }
            if (widget.coverGutter) {
                node.style.zIndex =3D 5;
                node.style.position =3D "relative";
                if (!widget.noHScroll) node.style.marginLeft =3D =
-dims.gutterTotalWidth + "px";
            }
        }

        // SELECTION / CURSOR

        function updateSelection(cm) {
            var display =3D cm.display;
            var collapsed =3D posEq(cm.doc.sel.from, cm.doc.sel.to);
            if (collapsed || cm.options.showCursorWhenSelecting)
                updateSelectionCursor(cm);
            else
                display.cursor.style.display =3D =
display.otherCursor.style.display =3D "none";
            if (!collapsed)
                updateSelectionRange(cm);
            else
                display.selectionDiv.style.display =3D "none";

            // Move the hidden textarea near the cursor to prevent =
scrolling artifacts
            if (cm.options.moveInputWithCursor) {
                var headPos =3D cursorCoords(cm, cm.doc.sel.head, =
"div");
                var wrapOff =3D getRect(display.wrapper), lineOff =3D =
getRect(display.lineDiv);
                display.inputDiv.style.top =3D Math.max(0, =
Math.min(display.wrapper.clientHeight - 10,
                        headPos.top + lineOff.top - wrapOff.top)) + =
"px";
                display.inputDiv.style.left =3D Math.max(0, =
Math.min(display.wrapper.clientWidth - 10,
                        headPos.left + lineOff.left - wrapOff.left)) + =
"px";
            }
        }

        // No selection, plain cursor
        function updateSelectionCursor(cm) {
            var display =3D cm.display, pos =3D cursorCoords(cm, =
cm.doc.sel.head, "div");
            display.cursor.style.left =3D pos.left + "px";
            display.cursor.style.top =3D pos.top + "px";
            display.cursor.style.height =3D Math.max(0, pos.bottom - =
pos.top) * cm.options.cursorHeight + "px";
            display.cursor.style.display =3D "";

            if (pos.other) {
                display.otherCursor.style.display =3D "";
                display.otherCursor.style.left =3D pos.other.left + =
"px";
                display.otherCursor.style.top =3D pos.other.top + "px";
                display.otherCursor.style.height =3D (pos.other.bottom - =
pos.other.top) * .85 + "px";
            } else { display.otherCursor.style.display =3D "none"; }
        }

        // Highlight selection
        function updateSelectionRange(cm) {
            var display =3D cm.display, doc =3D cm.doc, sel =3D =
cm.doc.sel;
            var fragment =3D document.createDocumentFragment();
            var clientWidth =3D display.lineSpace.offsetWidth, pl =3D =
paddingLeft(cm.display);

            function add(left, top, width, bottom) {
                if (top < 0) top =3D 0;
                fragment.appendChild(elt("div", null, =
"CodeMirror-selected", "position: absolute; left: " + left +
                    "px; top: " + top + "px; width: " + (width =3D=3D =
null ? clientWidth - left : width) +
                    "px; height: " + (bottom - top) + "px"));
            }

            function drawForLine(line, fromArg, toArg) {
                var lineObj =3D getLine(doc, line);
                var lineLen =3D lineObj.text.length;
                var start, end;
                function coords(ch, bias) {
                    return charCoords(cm, Pos(line, ch), "div", lineObj, =
bias);
                }

                iterateBidiSections(getOrder(lineObj), fromArg || 0, =
toArg =3D=3D null ? lineLen : toArg, function(from, to, dir) {
                    var leftPos =3D coords(from, "left"), rightPos, =
left, right;
                    if (from =3D=3D to) {
                        rightPos =3D leftPos;
                        left =3D right =3D leftPos.left;
                    } else {
                        rightPos =3D coords(to - 1, "right");
                        if (dir =3D=3D "rtl") { var tmp =3D leftPos; =
leftPos =3D rightPos; rightPos =3D tmp; }
                        left =3D leftPos.left;
                        right =3D rightPos.right;
                    }
                    if (fromArg =3D=3D null && from =3D=3D 0) left =3D =
pl;
                    if (rightPos.top - leftPos.top > 3) { // Different =
lines, draw top part
                        add(left, leftPos.top, null, leftPos.bottom);
                        left =3D pl;
                        if (leftPos.bottom < rightPos.top) add(left, =
leftPos.bottom, null, rightPos.top);
                    }
                    if (toArg =3D=3D null && to =3D=3D lineLen) right =
=3D clientWidth;
                    if (!start || leftPos.top < start.top || leftPos.top =
=3D=3D start.top && leftPos.left < start.left)
                        start =3D leftPos;
                    if (!end || rightPos.bottom > end.bottom || =
rightPos.bottom =3D=3D end.bottom && rightPos.right > end.right)
                        end =3D rightPos;
                    if (left < pl + 1) left =3D pl;
                    add(left, rightPos.top, right - left, =
rightPos.bottom);
                });
                return {start: start, end: end};
            }

            if (sel.from.line =3D=3D sel.to.line) {
                drawForLine(sel.from.line, sel.from.ch, sel.to.ch);
            } else {
                var fromLine =3D getLine(doc, sel.from.line), toLine =3D =
getLine(doc, sel.to.line);
                var singleVLine =3D visualLine(doc, fromLine) =3D=3D =
visualLine(doc, toLine);
                var leftEnd =3D drawForLine(sel.from.line, sel.from.ch, =
singleVLine ? fromLine.text.length : null).end;
                var rightStart =3D drawForLine(sel.to.line, singleVLine =
? 0 : null, sel.to.ch).start;
                if (singleVLine) {
                    if (leftEnd.top < rightStart.top - 2) {
                        add(leftEnd.right, leftEnd.top, null, =
leftEnd.bottom);
                        add(pl, rightStart.top, rightStart.left, =
rightStart.bottom);
                    } else {
                        add(leftEnd.right, leftEnd.top, rightStart.left =
- leftEnd.right, leftEnd.bottom);
                    }
                }
                if (leftEnd.bottom < rightStart.top)
                    add(pl, leftEnd.bottom, null, rightStart.top);
            }

            removeChildrenAndAdd(display.selectionDiv, fragment);
            display.selectionDiv.style.display =3D "";
        }

        // Cursor-blinking
        function restartBlink(cm) {
            if (!cm.state.focused) return;
            var display =3D cm.display;
            clearInterval(display.blinker);
            var on =3D true;
            display.cursor.style.visibility =3D =
display.otherCursor.style.visibility =3D "";
            display.blinker =3D setInterval(function() {
                display.cursor.style.visibility =3D =
display.otherCursor.style.visibility =3D (on =3D !on) ? "" : "hidden";
            }, cm.options.cursorBlinkRate);
        }

        // HIGHLIGHT WORKER

        function startWorker(cm, time) {
            if (cm.doc.mode.startState && cm.doc.frontier < =
cm.display.showingTo)
                cm.state.highlight.set(time, bind(highlightWorker, cm));
        }

        function highlightWorker(cm) {
            var doc =3D cm.doc;
            if (doc.frontier < doc.first) doc.frontier =3D doc.first;
            if (doc.frontier >=3D cm.display.showingTo) return;
            var end =3D +new Date + cm.options.workTime;
            var state =3D copyState(doc.mode, getStateBefore(cm, =
doc.frontier));
            var changed =3D [], prevChange;
            doc.iter(doc.frontier, Math.min(doc.first + doc.size, =
cm.display.showingTo + 500), function(line) {
                if (doc.frontier >=3D cm.display.showingFrom) { // =
Visible
                    var oldStyles =3D line.styles;
                    line.styles =3D highlightLine(cm, line, state);
                    var ischange =3D !oldStyles || oldStyles.length !=3D =
line.styles.length;
                    for (var i =3D 0; !ischange && i < oldStyles.length; =
++i) ischange =3D oldStyles[i] !=3D line.styles[i];
                    if (ischange) {
                        if (prevChange && prevChange.end =3D=3D =
doc.frontier) prevChange.end++;
                        else changed.push(prevChange =3D {start: =
doc.frontier, end: doc.frontier + 1});
                    }
                    line.stateAfter =3D copyState(doc.mode, state);
                } else {
                    processLine(cm, line, state);
                    line.stateAfter =3D doc.frontier % 5 =3D=3D 0 ? =
copyState(doc.mode, state) : null;
                }
                ++doc.frontier;
                if (+new Date > end) {
                    startWorker(cm, cm.options.workDelay);
                    return true;
                }
            });
            if (changed.length)
                operation(cm, function() {
                    for (var i =3D 0; i < changed.length; ++i)
                        regChange(this, changed[i].start, =
changed[i].end);
                })();
        }

        // Finds the line to start with when starting a parse. Tries to
        // find a line with a stateAfter, so that it can start with a
        // valid state. If that fails, it returns the line with the
        // smallest indentation, which tends to need the least context =
to
        // parse correctly.
        function findStartLine(cm, n, precise) {
            var minindent, minline, doc =3D cm.doc;
            for (var search =3D n, lim =3D n - 100; search > lim; =
--search) {
                if (search <=3D doc.first) return doc.first;
                var line =3D getLine(doc, search - 1);
                if (line.stateAfter && (!precise || search <=3D =
doc.frontier)) return search;
                var indented =3D countColumn(line.text, null, =
cm.options.tabSize);
                if (minline =3D=3D null || minindent > indented) {
                    minline =3D search - 1;
                    minindent =3D indented;
                }
            }
            return minline;
        }

        function getStateBefore(cm, n, precise) {
            var doc =3D cm.doc, display =3D cm.display;
            if (!doc.mode.startState) return true;
            var pos =3D findStartLine(cm, n, precise), state =3D pos > =
doc.first && getLine(doc, pos-1).stateAfter;
            if (!state) state =3D startState(doc.mode);
            else state =3D copyState(doc.mode, state);
            doc.iter(pos, n, function(line) {
                processLine(cm, line, state);
                var save =3D pos =3D=3D n - 1 || pos % 5 =3D=3D 0 || pos =
>=3D display.showingFrom && pos < display.showingTo;
                line.stateAfter =3D save ? copyState(doc.mode, state) : =
null;
                ++pos;
            });
            return state;
        }

        // POSITION MEASUREMENT

        function paddingTop(display) {return =
display.lineSpace.offsetTop;}
        function paddingVert(display) {return display.mover.offsetHeight =
- display.lineSpace.offsetHeight;}
        function paddingLeft(display) {
            var e =3D removeChildrenAndAdd(display.measure, elt("pre", =
null, null, "text-align: left")).appendChild(elt("span", "x"));
            return e.offsetLeft;
        }

        function measureChar(cm, line, ch, data, bias) {
            var dir =3D -1;
            data =3D data || measureLine(cm, line);

            for (var pos =3D ch;; pos +=3D dir) {
                var r =3D data[pos];
                if (r) break;
                if (dir < 0 && pos =3D=3D 0) dir =3D 1;
            }
            bias =3D pos > ch ? "left" : pos < ch ? "right" : bias;
            if (bias =3D=3D "left" && r.leftSide) r =3D r.leftSide;
            else if (bias =3D=3D "right" && r.rightSide) r =3D =
r.rightSide;
            return {left: pos < ch ? r.right : r.left,
                right: pos > ch ? r.left : r.right,
                top: r.top,
                bottom: r.bottom};
        }

        function findCachedMeasurement(cm, line) {
            var cache =3D cm.display.measureLineCache;
            for (var i =3D 0; i < cache.length; ++i) {
                var memo =3D cache[i];
                if (memo.text =3D=3D line.text && memo.markedSpans =
=3D=3D line.markedSpans &&
                    cm.display.scroller.clientWidth =3D=3D memo.width &&
                    memo.classes =3D=3D line.textClass + "|" + =
line.bgClass + "|" + line.wrapClass)
                    return memo;
            }
        }

        function clearCachedMeasurement(cm, line) {
            var exists =3D findCachedMeasurement(cm, line);
            if (exists) exists.text =3D exists.measure =3D =
exists.markedSpans =3D null;
        }

        function measureLine(cm, line) {
            // First look in the cache
            var cached =3D findCachedMeasurement(cm, line);
            if (cached) return cached.measure;

            // Failing that, recompute and store result in cache
            var measure =3D measureLineInner(cm, line);
            var cache =3D cm.display.measureLineCache;
            var memo =3D {text: line.text, width: =
cm.display.scroller.clientWidth,
                markedSpans: line.markedSpans, measure: measure,
                classes: line.textClass + "|" + line.bgClass + "|" + =
line.wrapClass};
            if (cache.length =3D=3D 16) =
cache[++cm.display.measureLineCachePos % 16] =3D memo;
            else cache.push(memo);
            return measure;
        }

        function measureLineInner(cm, line) {
            var display =3D cm.display, measure =3D =
emptyArray(line.text.length);
            var pre =3D lineContent(cm, line, measure, true);

            // IE does not cache element positions of inline elements =
between
            // calls to getBoundingClientRect. This makes the loop =
below,
            // which gathers the positions of all the characters on the =
line,
            // do an amount of layout work quadratic to the number of
            // characters. When line wrapping is off, we try to improve =
things
            // by first subdividing the line into a bunch of inline =
blocks, so
            // that IE can reuse most of the layout information from =
caches
            // for those blocks. This does interfere with line wrapping, =
so it
            // doesn't work when wrapping is on, but in that case the
            // situation is slightly better, since IE does cache =
line-wrapping
            // information and only recomputes per-line.
            if (ie && !ie_lt8 && !cm.options.lineWrapping && =
pre.childNodes.length > 100) {
                var fragment =3D document.createDocumentFragment();
                var chunk =3D 10, n =3D pre.childNodes.length;
                for (var i =3D 0, chunks =3D Math.ceil(n / chunk); i < =
chunks; ++i) {
                    var wrap =3D elt("div", null, null, "display: =
inline-block");
                    for (var j =3D 0; j < chunk && n; ++j) {
                        wrap.appendChild(pre.firstChild);
                        --n;
                    }
                    fragment.appendChild(wrap);
                }
                pre.appendChild(fragment);
            }

            removeChildrenAndAdd(display.measure, pre);

            var outer =3D getRect(display.lineDiv);
            var vranges =3D [], data =3D emptyArray(line.text.length), =
maxBot =3D pre.offsetHeight;
            // Work around an IE7/8 bug where it will sometimes have =
randomly
            // replaced our pre with a clone at this point.
            if (ie_lt9 && display.measure.first !=3D pre)
                removeChildrenAndAdd(display.measure, pre);

            function measureRect(rect) {
                var top =3D rect.top - outer.top, bot =3D rect.bottom - =
outer.top;
                if (bot > maxBot) bot =3D maxBot;
                if (top < 0) top =3D 0;
                for (var i =3D vranges.length - 2; i >=3D 0; i -=3D 2) {
                    var rtop =3D vranges[i], rbot =3D vranges[i+1];
                    if (rtop > bot || rbot < top) continue;
                    if (rtop <=3D top && rbot >=3D bot ||
                        top <=3D rtop && bot >=3D rbot ||
                        Math.min(bot, rbot) - Math.max(top, rtop) >=3D =
(bot - top) >> 1) {
                        vranges[i] =3D Math.min(top, rtop);
                        vranges[i+1] =3D Math.max(bot, rbot);
                        break;
                    }
                }
                if (i < 0) { i =3D vranges.length; vranges.push(top, =
bot); }
                return {left: rect.left - outer.left,
                    right: rect.right - outer.left,
                    top: i, bottom: null};
            }
            function finishRect(rect) {
                rect.bottom =3D vranges[rect.top+1];
                rect.top =3D vranges[rect.top];
            }

            for (var i =3D 0, cur; i < measure.length; ++i) if (cur =3D =
measure[i]) {
                var node =3D cur, rect =3D null;
                // A widget might wrap, needs special care
                if (/\bCodeMirror-widget\b/.test(cur.className) && =
cur.getClientRects) {
                    if (cur.firstChild.nodeType =3D=3D 1) node =3D =
cur.firstChild;
                    var rects =3D node.getClientRects();
                    if (rects.length > 1) {
                        rect =3D data[i] =3D measureRect(rects[0]);
                        rect.rightSide =3D =
measureRect(rects[rects.length - 1]);
                    }
                }
                if (!rect) rect =3D data[i] =3D =
measureRect(getRect(node));
                if (cur.measureRight) rect.right =3D =
getRect(cur.measureRight).left;
                if (cur.leftSide) rect.leftSide =3D =
measureRect(getRect(cur.leftSide));
            }
            for (var i =3D 0, cur; i < data.length; ++i) if (cur =3D =
data[i]) {
                finishRect(cur);
                if (cur.leftSide) finishRect(cur.leftSide);
                if (cur.rightSide) finishRect(cur.rightSide);
            }
            return data;
        }

        function measureLineWidth(cm, line) {
            var hasBadSpan =3D false;
            if (line.markedSpans) for (var i =3D 0; i < =
line.markedSpans; ++i) {
                var sp =3D line.markedSpans[i];
                if (sp.collapsed && (sp.to =3D=3D null || sp.to =3D=3D =
line.text.length)) hasBadSpan =3D true;
            }
            var cached =3D !hasBadSpan && findCachedMeasurement(cm, =
line);
            if (cached) return measureChar(cm, line, line.text.length, =
cached.measure, "right").right;

            var pre =3D lineContent(cm, line, null, true);
            var end =3D =
pre.appendChild(zeroWidthElement(cm.display.measure));
            removeChildrenAndAdd(cm.display.measure, pre);
            return getRect(end).right - =
getRect(cm.display.lineDiv).left;
        }

        function clearCaches(cm) {
            cm.display.measureLineCache.length =3D =
cm.display.measureLineCachePos =3D 0;
            cm.display.cachedCharWidth =3D cm.display.cachedTextHeight =
=3D null;
            if (!cm.options.lineWrapping) cm.display.maxLineChanged =3D =
true;
            cm.display.lineNumChars =3D null;
        }

        function pageScrollX() { return window.pageXOffset || =
(document.documentElement || document.body).scrollLeft; }
        function pageScrollY() { return window.pageYOffset || =
(document.documentElement || document.body).scrollTop; }

        // Context is one of "line", "div" (display.lineDiv), =
"local"/null (editor), or "page"
        function intoCoordSystem(cm, lineObj, rect, context) {
            if (lineObj.widgets) for (var i =3D 0; i < =
lineObj.widgets.length; ++i) if (lineObj.widgets[i].above) {
                var size =3D widgetHeight(lineObj.widgets[i]);
                rect.top +=3D size; rect.bottom +=3D size;
            }
            if (context =3D=3D "line") return rect;
            if (!context) context =3D "local";
            var yOff =3D heightAtLine(cm, lineObj);
            if (context =3D=3D "local") yOff +=3D =
paddingTop(cm.display);
            else yOff -=3D cm.display.viewOffset;
            if (context =3D=3D "page" || context =3D=3D "window") {
                var lOff =3D getRect(cm.display.lineSpace);
                yOff +=3D lOff.top + (context =3D=3D "window" ? 0 : =
pageScrollY());
                var xOff =3D lOff.left + (context =3D=3D "window" ? 0 : =
pageScrollX());
                rect.left +=3D xOff; rect.right +=3D xOff;
            }
            rect.top +=3D yOff; rect.bottom +=3D yOff;
            return rect;
        }

        // Context may be "window", "page", "div", or "local"/null
        // Result is in "div" coords
        function fromCoordSystem(cm, coords, context) {
            if (context =3D=3D "div") return coords;
            var left =3D coords.left, top =3D coords.top;
            // First move into "page" coordinate system
            if (context =3D=3D "page") {
                left -=3D pageScrollX();
                top -=3D pageScrollY();
            } else if (context =3D=3D "local" || !context) {
                var localBox =3D getRect(cm.display.sizer);
                left +=3D localBox.left;
                top +=3D localBox.top;
            }

            var lineSpaceBox =3D getRect(cm.display.lineSpace);
            return {left: left - lineSpaceBox.left, top: top - =
lineSpaceBox.top};
        }

        function charCoords(cm, pos, context, lineObj, bias) {
            if (!lineObj) lineObj =3D getLine(cm.doc, pos.line);
            return intoCoordSystem(cm, lineObj, measureChar(cm, lineObj, =
pos.ch, null, bias), context);
        }

        function cursorCoords(cm, pos, context, lineObj, measurement) {
            lineObj =3D lineObj || getLine(cm.doc, pos.line);
            if (!measurement) measurement =3D measureLine(cm, lineObj);
            function get(ch, right) {
                var m =3D measureChar(cm, lineObj, ch, measurement, =
right ? "right" : "left");
                if (right) m.left =3D m.right; else m.right =3D m.left;
                return intoCoordSystem(cm, lineObj, m, context);
            }
            function getBidi(ch, partPos) {
                var part =3D order[partPos], right =3D part.level % 2;
                if (ch =3D=3D bidiLeft(part) && partPos && part.level < =
order[partPos - 1].level) {
                    part =3D order[--partPos];
                    ch =3D bidiRight(part) - (part.level % 2 ? 0 : 1);
                    right =3D true;
                } else if (ch =3D=3D bidiRight(part) && partPos < =
order.length - 1 && part.level < order[partPos + 1].level) {
                    part =3D order[++partPos];
                    ch =3D bidiLeft(part) - part.level % 2;
                    right =3D false;
                }
                if (right && ch =3D=3D part.to && ch > part.from) return =
get(ch - 1);
                return get(ch, right);
            }
            var order =3D getOrder(lineObj), ch =3D pos.ch;
            if (!order) return get(ch);
            var partPos =3D getBidiPartAt(order, ch);
            var val =3D getBidi(ch, partPos);
            if (bidiOther !=3D null) val.other =3D getBidi(ch, =
bidiOther);
            return val;
        }

        function PosWithInfo(line, ch, outside, xRel) {
            var pos =3D new Pos(line, ch);
            pos.xRel =3D xRel;
            if (outside) pos.outside =3D true;
            return pos;
        }

        // Coords must be lineSpace-local
        function coordsChar(cm, x, y) {
            var doc =3D cm.doc;
            y +=3D cm.display.viewOffset;
            if (y < 0) return PosWithInfo(doc.first, 0, true, -1);
            var lineNo =3D lineAtHeight(doc, y), last =3D doc.first + =
doc.size - 1;
            if (lineNo > last)
                return PosWithInfo(doc.first + doc.size - 1, =
getLine(doc, last).text.length, true, 1);
            if (x < 0) x =3D 0;

            for (;;) {
                var lineObj =3D getLine(doc, lineNo);
                var found =3D coordsCharInner(cm, lineObj, lineNo, x, =
y);
                var merged =3D collapsedSpanAtEnd(lineObj);
                var mergedPos =3D merged && merged.find();
                if (merged && (found.ch > mergedPos.from.ch || found.ch =
=3D=3D mergedPos.from.ch && found.xRel > 0))
                    lineNo =3D mergedPos.to.line;
                else
                    return found;
            }
        }

        function coordsCharInner(cm, lineObj, lineNo, x, y) {
            var innerOff =3D y - heightAtLine(cm, lineObj);
            var wrongLine =3D false, adjust =3D 2 * =
cm.display.wrapper.clientWidth;
            var measurement =3D measureLine(cm, lineObj);

            function getX(ch) {
                var sp =3D cursorCoords(cm, Pos(lineNo, ch), "line",
                    lineObj, measurement);
                wrongLine =3D true;
                if (innerOff > sp.bottom) return sp.left - adjust;
                else if (innerOff < sp.top) return sp.left + adjust;
                else wrongLine =3D false;
                return sp.left;
            }

            var bidi =3D getOrder(lineObj), dist =3D =
lineObj.text.length;
            var from =3D lineLeft(lineObj), to =3D lineRight(lineObj);
            var fromX =3D getX(from), fromOutside =3D wrongLine, toX =3D =
getX(to), toOutside =3D wrongLine;

            if (x > toX) return PosWithInfo(lineNo, to, toOutside, 1);
            // Do a binary search between these bounds.
            for (;;) {
                if (bidi ? to =3D=3D from || to =3D=3D =
moveVisually(lineObj, from, 1) : to - from <=3D 1) {
                    var ch =3D x < fromX || x - fromX <=3D toX - x ? =
from : to;
                    var xDiff =3D x - (ch =3D=3D from ? fromX : toX);
                    while =
(isExtendingChar.test(lineObj.text.charAt(ch))) ++ch;
                    var pos =3D PosWithInfo(lineNo, ch, ch =3D=3D from ? =
fromOutside : toOutside,
                            xDiff < 0 ? -1 : xDiff ? 1 : 0);
                    return pos;
                }
                var step =3D Math.ceil(dist / 2), middle =3D from + =
step;
                if (bidi) {
                    middle =3D from;
                    for (var i =3D 0; i < step; ++i) middle =3D =
moveVisually(lineObj, middle, 1);
                }
                var middleX =3D getX(middle);
                if (middleX > x) {to =3D middle; toX =3D middleX; if =
(toOutside =3D wrongLine) toX +=3D 1000; dist =3D step;}
                else {from =3D middle; fromX =3D middleX; fromOutside =
=3D wrongLine; dist -=3D step;}
            }
        }

        var measureText;
        function textHeight(display) {
            if (display.cachedTextHeight !=3D null) return =
display.cachedTextHeight;
            if (measureText =3D=3D null) {
                measureText =3D elt("pre");
                // Measure a bunch of lines, for browsers that compute
                // fractional heights.
                for (var i =3D 0; i < 49; ++i) {
                    =
measureText.appendChild(document.createTextNode("x"));
                    measureText.appendChild(elt("br"));
                }
                measureText.appendChild(document.createTextNode("x"));
            }
            removeChildrenAndAdd(display.measure, measureText);
            var height =3D measureText.offsetHeight / 50;
            if (height > 3) display.cachedTextHeight =3D height;
            removeChildren(display.measure);
            return height || 1;
        }

        function charWidth(display) {
            if (display.cachedCharWidth !=3D null) return =
display.cachedCharWidth;
            var anchor =3D elt("span", "x");
            var pre =3D elt("pre", [anchor]);
            removeChildrenAndAdd(display.measure, pre);
            var width =3D anchor.offsetWidth;
            if (width > 2) display.cachedCharWidth =3D width;
            return width || 10;
        }

        // OPERATIONS

        // Operations are used to wrap changes in such a way that each
        // change won't have to update the cursor and display (which =
would
        // be awkward, slow, and error-prone), but instead updates are
        // batched and then all combined and executed at once.

        var nextOpId =3D 0;
        function startOperation(cm) {
            cm.curOp =3D {
                // An array of ranges of lines that have to be updated. =
See
                // updateDisplay.
                changes: [],
                forceUpdate: false,
                updateInput: null,
                userSelChange: null,
                textChanged: null,
                selectionChanged: false,
                cursorActivity: false,
                updateMaxLine: false,
                updateScrollPos: false,
                id: ++nextOpId
            };
            if (!delayedCallbackDepth++) delayedCallbacks =3D [];
        }

        function endOperation(cm) {
            var op =3D cm.curOp, doc =3D cm.doc, display =3D cm.display;
            cm.curOp =3D null;

            if (op.updateMaxLine) computeMaxLength(cm);
            if (display.maxLineChanged && !cm.options.lineWrapping && =
display.maxLine) {
                var width =3D measureLineWidth(cm, display.maxLine);
                display.sizer.style.minWidth =3D Math.max(0, width + 3 + =
scrollerCutOff) + "px";
                display.maxLineChanged =3D false;
                var maxScrollLeft =3D Math.max(0, =
display.sizer.offsetLeft + display.sizer.offsetWidth - =
display.scroller.clientWidth);
                if (maxScrollLeft < doc.scrollLeft && =
!op.updateScrollPos)
                    setScrollLeft(cm, =
Math.min(display.scroller.scrollLeft, maxScrollLeft), true);
            }
            var newScrollPos, updated;
            if (op.updateScrollPos) {
                newScrollPos =3D op.updateScrollPos;
            } else if (op.selectionChanged && =
display.scroller.clientHeight) { // don't rescroll if not visible
                var coords =3D cursorCoords(cm, doc.sel.head);
                newScrollPos =3D calculateScrollPos(cm, coords.left, =
coords.top, coords.left, coords.bottom);
            }
            if (op.changes.length || op.forceUpdate || newScrollPos && =
newScrollPos.scrollTop !=3D null) {
                updated =3D updateDisplay(cm, op.changes, newScrollPos =
&& newScrollPos.scrollTop, op.forceUpdate);
                if (cm.display.scroller.offsetHeight) cm.doc.scrollTop =
=3D cm.display.scroller.scrollTop;
            }
            if (!updated && op.selectionChanged) updateSelection(cm);
            if (op.updateScrollPos) {
                display.scroller.scrollTop =3D =
display.scrollbarV.scrollTop =3D doc.scrollTop =3D =
newScrollPos.scrollTop;
                display.scroller.scrollLeft =3D =
display.scrollbarH.scrollLeft =3D doc.scrollLeft =3D =
newScrollPos.scrollLeft;
                alignHorizontally(cm);
                if (op.scrollToPos)
                    scrollPosIntoView(cm, clipPos(cm.doc, =
op.scrollToPos), op.scrollToPosMargin);
            } else if (newScrollPos) {
                scrollCursorIntoView(cm);
            }
            if (op.selectionChanged) restartBlink(cm);

            if (cm.state.focused && op.updateInput)
                resetInput(cm, op.userSelChange);

            var hidden =3D op.maybeHiddenMarkers, unhidden =3D =
op.maybeUnhiddenMarkers;
            if (hidden) for (var i =3D 0; i < hidden.length; ++i)
                if (!hidden[i].lines.length) signal(hidden[i], "hide");
            if (unhidden) for (var i =3D 0; i < unhidden.length; ++i)
                if (unhidden[i].lines.length) signal(unhidden[i], =
"unhide");

            var delayed;
            if (!--delayedCallbackDepth) {
                delayed =3D delayedCallbacks;
                delayedCallbacks =3D null;
            }
            if (op.textChanged)
                signal(cm, "change", cm, op.textChanged);
            if (op.cursorActivity) signal(cm, "cursorActivity", cm);
            if (delayed) for (var i =3D 0; i < delayed.length; ++i) =
delayed[i]();
        }

        // Wraps a function in an operation. Returns the wrapped =
function.
        function operation(cm1, f) {
            return function() {
                var cm =3D cm1 || this, withOp =3D !cm.curOp;
                if (withOp) startOperation(cm);
                try { var result =3D f.apply(cm, arguments); }
                finally { if (withOp) endOperation(cm); }
                return result;
            };
        }
        function docOperation(f) {
            return function() {
                var withOp =3D this.cm && !this.cm.curOp, result;
                if (withOp) startOperation(this.cm);
                try { result =3D f.apply(this, arguments); }
                finally { if (withOp) endOperation(this.cm); }
                return result;
            };
        }
        function runInOp(cm, f) {
            var withOp =3D !cm.curOp, result;
            if (withOp) startOperation(cm);
            try { result =3D f(); }
            finally { if (withOp) endOperation(cm); }
            return result;
        }

        function regChange(cm, from, to, lendiff) {
            if (from =3D=3D null) from =3D cm.doc.first;
            if (to =3D=3D null) to =3D cm.doc.first + cm.doc.size;
            cm.curOp.changes.push({from: from, to: to, diff: lendiff});
        }

        // INPUT HANDLING

        function slowPoll(cm) {
            if (cm.display.pollingFast) return;
            cm.display.poll.set(cm.options.pollInterval, function() {
                readInput(cm);
                if (cm.state.focused) slowPoll(cm);
            });
        }

        function fastPoll(cm) {
            var missed =3D false;
            cm.display.pollingFast =3D true;
            function p() {
                var changed =3D readInput(cm);
                if (!changed && !missed) {missed =3D true; =
cm.display.poll.set(60, p);}
                else {cm.display.pollingFast =3D false; slowPoll(cm);}
            }
            cm.display.poll.set(20, p);
        }

        // prevInput is a hack to work with IME. If we reset the =
textarea
        // on every change, that breaks IME. So we look for changes
        // compared to the previous content instead. (Modern browsers =
have
        // events that indicate IME taking place, but these are not =
widely
        // supported or compatible enough yet to rely on.)
        function readInput(cm) {
            var input =3D cm.display.input, prevInput =3D =
cm.display.prevInput, doc =3D cm.doc, sel =3D doc.sel;
            if (!cm.state.focused || hasSelection(input) || =
isReadOnly(cm) || cm.state.disableInput) return false;
            var text =3D input.value;
            if (text =3D=3D prevInput && posEq(sel.from, sel.to)) return =
false;
            if (ie && !ie_lt9 && cm.display.inputHasSelection =3D=3D=3D =
text) {
                resetInput(cm, true);
                return false;
            }

            var withOp =3D !cm.curOp;
            if (withOp) startOperation(cm);
            sel.shift =3D false;
            var same =3D 0, l =3D Math.min(prevInput.length, =
text.length);
            while (same < l && prevInput.charCodeAt(same) =3D=3D =
text.charCodeAt(same)) ++same;
            var from =3D sel.from, to =3D sel.to;
            if (same < prevInput.length)
                from =3D Pos(from.line, from.ch - (prevInput.length - =
same));
            else if (cm.state.overwrite && posEq(from, to) && =
!cm.state.pasteIncoming)
                to =3D Pos(to.line, Math.min(getLine(doc, =
to.line).text.length, to.ch + (text.length - same)));

            var updateInput =3D cm.curOp.updateInput;
            var changeEvent =3D {from: from, to: to, text: =
splitLines(text.slice(same)),
                origin: cm.state.pasteIncoming ? "paste" : "+input"};
            makeChange(cm.doc, changeEvent, "end");
            cm.curOp.updateInput =3D updateInput;
            signalLater(cm, "inputRead", cm, changeEvent);

            if (text.length > 1000 || text.indexOf("\n") > -1) =
input.value =3D cm.display.prevInput =3D "";
            else cm.display.prevInput =3D text;
            if (withOp) endOperation(cm);
            cm.state.pasteIncoming =3D false;
            return true;
        }

        function resetInput(cm, user) {
            var minimal, selected, doc =3D cm.doc;
            if (!posEq(doc.sel.from, doc.sel.to)) {
                cm.display.prevInput =3D "";
                minimal =3D hasCopyEvent &&
                    (doc.sel.to.line - doc.sel.from.line > 100 || =
(selected =3D cm.getSelection()).length > 1000);
                var content =3D minimal ? "-" : selected || =
cm.getSelection();
                cm.display.input.value =3D content;
                if (cm.state.focused) selectInput(cm.display.input);
                if (ie && !ie_lt9) cm.display.inputHasSelection =3D =
content;
            } else if (user) {
                cm.display.prevInput =3D cm.display.input.value =3D "";
                if (ie && !ie_lt9) cm.display.inputHasSelection =3D =
null;
            }
            cm.display.inaccurateSelection =3D minimal;
        }

        function focusInput(cm) {
            if (cm.options.readOnly !=3D "nocursor" && (!mobile || =
document.activeElement !=3D cm.display.input))
                try {cm.display.input.focus();} catch(e) {}
        }

        function isReadOnly(cm) {
            return cm.options.readOnly || cm.doc.cantEdit;
        }

        // EVENT HANDLERS

        function registerEventHandlers(cm) {
            var d =3D cm.display;
            on(d.scroller, "mousedown", operation(cm, onMouseDown));
            if (ie)
                on(d.scroller, "dblclick", operation(cm, function(e) {
                    if (signalDOMEvent(cm, e)) return;
                    var pos =3D posFromMouse(cm, e);
                    if (!pos || clickInGutter(cm, e) || =
eventInWidget(cm.display, e)) return;
                    e_preventDefault(e);
                    var word =3D findWordAt(getLine(cm.doc, =
pos.line).text, pos);
                    extendSelection(cm.doc, word.from, word.to);
                }));
            else
                on(d.scroller, "dblclick", function(e) { =
signalDOMEvent(cm, e) || e_preventDefault(e); });
            on(d.lineSpace, "selectstart", function(e) {
                if (!eventInWidget(d, e)) e_preventDefault(e);
            });
            // Gecko browsers fire contextmenu *after* opening the menu, =
at
            // which point we can't mess with it anymore. Context menu =
is
            // handled in onMouseDown for Gecko.
            if (!captureMiddleClick) on(d.scroller, "contextmenu", =
function(e) {onContextMenu(cm, e);});

            on(d.scroller, "scroll", function() {
                if (d.scroller.clientHeight) {
                    setScrollTop(cm, d.scroller.scrollTop);
                    setScrollLeft(cm, d.scroller.scrollLeft, true);
                    signal(cm, "scroll", cm);
                }
            });
            on(d.scrollbarV, "scroll", function() {
                if (d.scroller.clientHeight) setScrollTop(cm, =
d.scrollbarV.scrollTop);
            });
            on(d.scrollbarH, "scroll", function() {
                if (d.scroller.clientHeight) setScrollLeft(cm, =
d.scrollbarH.scrollLeft);
            });

            on(d.scroller, "mousewheel", function(e){onScrollWheel(cm, =
e);});
            on(d.scroller, "DOMMouseScroll", =
function(e){onScrollWheel(cm, e);});

            function reFocus() { if (cm.state.focused) =
setTimeout(bind(focusInput, cm), 0); }
            on(d.scrollbarH, "mousedown", reFocus);
            on(d.scrollbarV, "mousedown", reFocus);
            // Prevent wrapper from ever scrolling
            on(d.wrapper, "scroll", function() { d.wrapper.scrollTop =3D =
d.wrapper.scrollLeft =3D 0; });

            var resizeTimer;
            function onResize() {
                if (resizeTimer =3D=3D null) resizeTimer =3D =
setTimeout(function() {
                    resizeTimer =3D null;
                    // Might be a text scaling operation, clear size =
caches.
                    d.cachedCharWidth =3D d.cachedTextHeight =3D =
knownScrollbarWidth =3D null;
                    clearCaches(cm);
                    runInOp(cm, bind(regChange, cm));
                }, 100);
            }
            on(window, "resize", onResize);
            // Above handler holds on to the editor and its data =
structures.
            // Here we poll to unregister it when the editor is no =
longer in
            // the document, so that it can be garbage-collected.
            function unregister() {
                for (var p =3D d.wrapper.parentNode; p && p !=3D =
document.body; p =3D p.parentNode) {}
                if (p) setTimeout(unregister, 5000);
                else off(window, "resize", onResize);
            }
            setTimeout(unregister, 5000);

            on(d.input, "keyup", operation(cm, function(e) {
                if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
                if (e.keyCode =3D=3D 16) cm.doc.sel.shift =3D false;
            }));
            on(d.input, "input", bind(fastPoll, cm));
            on(d.input, "keydown", operation(cm, onKeyDown));
            on(d.input, "keypress", operation(cm, onKeyPress));
            on(d.input, "focus", bind(onFocus, cm));
            on(d.input, "blur", bind(onBlur, cm));

            function drag_(e) {
                if (signalDOMEvent(cm, e) || cm.options.onDragEvent && =
cm.options.onDragEvent(cm, addStop(e))) return;
                e_stop(e);
            }
            if (cm.options.dragDrop) {
                on(d.scroller, "dragstart", function(e){onDragStart(cm, =
e);});
                on(d.scroller, "dragenter", drag_);
                on(d.scroller, "dragover", drag_);
                on(d.scroller, "drop", operation(cm, onDrop));
            }
            on(d.scroller, "paste", function(e){
                if (eventInWidget(d, e)) return;
                focusInput(cm);
                fastPoll(cm);
            });
            on(d.input, "paste", function() {
                cm.state.pasteIncoming =3D true;
                fastPoll(cm);
            });

            function prepareCopy() {
                if (d.inaccurateSelection) {
                    d.prevInput =3D "";
                    d.inaccurateSelection =3D false;
                    d.input.value =3D cm.getSelection();
                    selectInput(d.input);
                }
            }
            on(d.input, "cut", prepareCopy);
            on(d.input, "copy", prepareCopy);

            // Needed to handle Tab key in KHTML
            if (khtml) on(d.sizer, "mouseup", function() {
                if (document.activeElement =3D=3D d.input) =
d.input.blur();
                focusInput(cm);
            });
        }

        function eventInWidget(display, e) {
            for (var n =3D e_target(e); n !=3D display.wrapper; n =3D =
n.parentNode) {
                if (!n || n.ignoreEvents || n.parentNode =3D=3D =
display.sizer && n !=3D display.mover) return true;
            }
        }

        function posFromMouse(cm, e, liberal) {
            var display =3D cm.display;
            if (!liberal) {
                var target =3D e_target(e);
                if (target =3D=3D display.scrollbarH || target =3D=3D =
display.scrollbarH.firstChild ||
                    target =3D=3D display.scrollbarV || target =3D=3D =
display.scrollbarV.firstChild ||
                    target =3D=3D display.scrollbarFiller || target =
=3D=3D display.gutterFiller) return null;
            }
            var x, y, space =3D getRect(display.lineSpace);
            // Fails unpredictably on IE[67] when mouse is dragged =
around quickly.
            try { x =3D e.clientX; y =3D e.clientY; } catch (e) { return =
null; }
            return coordsChar(cm, x - space.left, y - space.top);
        }

        var lastClick, lastDoubleClick;
        function onMouseDown(e) {
            if (signalDOMEvent(this, e)) return;
            var cm =3D this, display =3D cm.display, doc =3D cm.doc, sel =
=3D doc.sel;
            sel.shift =3D e.shiftKey;

            if (eventInWidget(display, e)) {
                if (!webkit) {
                    display.scroller.draggable =3D false;
                    setTimeout(function(){display.scroller.draggable =3D =
true;}, 100);
                }
                return;
            }
            if (clickInGutter(cm, e)) return;
            var start =3D posFromMouse(cm, e);

            switch (e_button(e)) {
                case 3:
                    if (captureMiddleClick) onContextMenu.call(cm, cm, =
e);
                    return;
                case 2:
                    if (start) extendSelection(cm.doc, start);
                    setTimeout(bind(focusInput, cm), 20);
                    e_preventDefault(e);
                    return;
            }
            // For button 1, if it was clicked inside the editor
            // (posFromMouse returning non-null), we have to adjust the
            // selection.
            if (!start) {if (e_target(e) =3D=3D display.scroller) =
e_preventDefault(e); return;}

            if (!cm.state.focused) onFocus(cm);

            var now =3D +new Date, type =3D "single";
            if (lastDoubleClick && lastDoubleClick.time > now - 400 && =
posEq(lastDoubleClick.pos, start)) {
                type =3D "triple";
                e_preventDefault(e);
                setTimeout(bind(focusInput, cm), 20);
                selectLine(cm, start.line);
            } else if (lastClick && lastClick.time > now - 400 && =
posEq(lastClick.pos, start)) {
                type =3D "double";
                lastDoubleClick =3D {time: now, pos: start};
                e_preventDefault(e);
                var word =3D findWordAt(getLine(doc, start.line).text, =
start);
                extendSelection(cm.doc, word.from, word.to);
            } else { lastClick =3D {time: now, pos: start}; }

            var last =3D start;
            if (cm.options.dragDrop && dragAndDrop && !isReadOnly(cm) && =
!posEq(sel.from, sel.to) &&
                !posLess(start, sel.from) && !posLess(sel.to, start) && =
type =3D=3D "single") {
                var dragEnd =3D operation(cm, function(e2) {
                    if (webkit) display.scroller.draggable =3D false;
                    cm.state.draggingText =3D false;
                    off(document, "mouseup", dragEnd);
                    off(display.scroller, "drop", dragEnd);
                    if (Math.abs(e.clientX - e2.clientX) + =
Math.abs(e.clientY - e2.clientY) < 10) {
                        e_preventDefault(e2);
                        extendSelection(cm.doc, start);
                        focusInput(cm);
                    }
                });
                // Let the drag handler handle this.
                if (webkit) display.scroller.draggable =3D true;
                cm.state.draggingText =3D dragEnd;
                // IE's approach to draggable
                if (display.scroller.dragDrop) =
display.scroller.dragDrop();
                on(document, "mouseup", dragEnd);
                on(display.scroller, "drop", dragEnd);
                return;
            }
            e_preventDefault(e);
            if (type =3D=3D "single") extendSelection(cm.doc, =
clipPos(doc, start));

            var startstart =3D sel.from, startend =3D sel.to, lastPos =
=3D start;

            function doSelect(cur) {
                if (posEq(lastPos, cur)) return;
                lastPos =3D cur;

                if (type =3D=3D "single") {
                    extendSelection(cm.doc, clipPos(doc, start), cur);
                    return;
                }

                startstart =3D clipPos(doc, startstart);
                startend =3D clipPos(doc, startend);
                if (type =3D=3D "double") {
                    var word =3D findWordAt(getLine(doc, cur.line).text, =
cur);
                    if (posLess(cur, startstart)) =
extendSelection(cm.doc, word.from, startend);
                    else extendSelection(cm.doc, startstart, word.to);
                } else if (type =3D=3D "triple") {
                    if (posLess(cur, startstart)) =
extendSelection(cm.doc, startend, clipPos(doc, Pos(cur.line, 0)));
                    else extendSelection(cm.doc, startstart, =
clipPos(doc, Pos(cur.line + 1, 0)));
                }
            }

            var editorSize =3D getRect(display.wrapper);
            // Used to ensure timeout re-tries don't fire when another =
extend
            // happened in the meantime (clearTimeout isn't reliable -- =
at
            // least on Chrome, the timeouts still happen even when =
cleared,
            // if the clear happens after their scheduled firing time).
            var counter =3D 0;

            function extend(e) {
                var curCount =3D ++counter;
                var cur =3D posFromMouse(cm, e, true);
                if (!cur) return;
                if (!posEq(cur, last)) {
                    if (!cm.state.focused) onFocus(cm);
                    last =3D cur;
                    doSelect(cur);
                    var visible =3D visibleLines(display, doc);
                    if (cur.line >=3D visible.to || cur.line < =
visible.from)
                        setTimeout(operation(cm, function(){if (counter =
=3D=3D curCount) extend(e);}), 150);
                } else {
                    var outside =3D e.clientY < editorSize.top ? -20 : =
e.clientY > editorSize.bottom ? 20 : 0;
                    if (outside) setTimeout(operation(cm, function() {
                        if (counter !=3D curCount) return;
                        display.scroller.scrollTop +=3D outside;
                        extend(e);
                    }), 50);
                }
            }

            function done(e) {
                counter =3D Infinity;
                e_preventDefault(e);
                focusInput(cm);
                off(document, "mousemove", move);
                off(document, "mouseup", up);
            }

            var move =3D operation(cm, function(e) {
                if (!ie && !e_button(e)) done(e);
                else extend(e);
            });
            var up =3D operation(cm, done);
            on(document, "mousemove", move);
            on(document, "mouseup", up);
        }

        function clickInGutter(cm, e) {
            var display =3D cm.display;
            try { var mX =3D e.clientX, mY =3D e.clientY; }
            catch(e) { return false; }

            if (mX >=3D Math.floor(getRect(display.gutters).right)) =
return false;
            e_preventDefault(e);
            if (!hasHandler(cm, "gutterClick")) return true;

            var lineBox =3D getRect(display.lineDiv);
            if (mY > lineBox.bottom) return true;
            mY -=3D lineBox.top - display.viewOffset;

            for (var i =3D 0; i < cm.options.gutters.length; ++i) {
                var g =3D display.gutters.childNodes[i];
                if (g && getRect(g).right >=3D mX) {
                    var line =3D lineAtHeight(cm.doc, mY);
                    var gutter =3D cm.options.gutters[i];
                    signalLater(cm, "gutterClick", cm, line, gutter, e);
                    break;
                }
            }
            return true;
        }

        // Kludge to work around strange IE behavior where it'll =
sometimes
        // re-fire a series of drag-related events right after the drop =
(#1551)
        var lastDrop =3D 0;

        function onDrop(e) {
            var cm =3D this;
            if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e) || =
(cm.options.onDragEvent && cm.options.onDragEvent(cm, addStop(e))))
                return;
            e_preventDefault(e);
            if (ie) lastDrop =3D +new Date;
            var pos =3D posFromMouse(cm, e, true), files =3D =
e.dataTransfer.files;
            if (!pos || isReadOnly(cm)) return;
            if (files && files.length && window.FileReader && =
window.File) {
                var n =3D files.length, text =3D Array(n), read =3D 0;
                var loadFile =3D function(file, i) {
                    var reader =3D new FileReader;
                    reader.onload =3D function() {
                        text[i] =3D reader.result;
                        if (++read =3D=3D n) {
                            pos =3D clipPos(cm.doc, pos);
                            makeChange(cm.doc, {from: pos, to: pos, =
text: splitLines(text.join("\n")), origin: "paste"}, "around");
                        }
                    };
                    reader.readAsText(file);
                };
                for (var i =3D 0; i < n; ++i) loadFile(files[i], i);
            } else {
                // Don't do a replace if the drop happened inside of the =
selected text.
                if (cm.state.draggingText && !(posLess(pos, =
cm.doc.sel.from) || posLess(cm.doc.sel.to, pos))) {
                    cm.state.draggingText(e);
                    // Ensure the editor is re-focused
                    setTimeout(bind(focusInput, cm), 20);
                    return;
                }
                try {
                    var text =3D e.dataTransfer.getData("Text");
                    if (text) {
                        var curFrom =3D cm.doc.sel.from, curTo =3D =
cm.doc.sel.to;
                        setSelection(cm.doc, pos, pos);
                        if (cm.state.draggingText) replaceRange(cm.doc, =
"", curFrom, curTo, "paste");
                        cm.replaceSelection(text, null, "paste");
                        focusInput(cm);
                        onFocus(cm);
                    }
                }
                catch(e){}
            }
        }

        function onDragStart(cm, e) {
            if (ie && (!cm.state.draggingText || +new Date - lastDrop < =
100)) { e_stop(e); return; }
            if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e)) =
return;

            var txt =3D cm.getSelection();
            e.dataTransfer.setData("Text", txt);

            // Use dummy image instead of default browsers image.
            // Recent Safari (~6.0.2) have a tendency to segfault when =
this happens, so we don't do it there.
            if (e.dataTransfer.setDragImage && !safari) {
                var img =3D elt("img", null, null, "position: fixed; =
left: 0; top: 0;");
                if (opera) {
                    img.width =3D img.height =3D 1;
                    cm.display.wrapper.appendChild(img);
                    // Force a relayout, or Opera won't use our image =
for some obscure reason
                    img._top =3D img.offsetTop;
                }
                e.dataTransfer.setDragImage(img, 0, 0);
                if (opera) img.parentNode.removeChild(img);
            }
        }

        function setScrollTop(cm, val) {
            if (Math.abs(cm.doc.scrollTop - val) < 2) return;
            cm.doc.scrollTop =3D val;
            if (!gecko) updateDisplay(cm, [], val);
            if (cm.display.scroller.scrollTop !=3D val) =
cm.display.scroller.scrollTop =3D val;
            if (cm.display.scrollbarV.scrollTop !=3D val) =
cm.display.scrollbarV.scrollTop =3D val;
            if (gecko) updateDisplay(cm, []);
            startWorker(cm, 100);
        }
        function setScrollLeft(cm, val, isScroller) {
            if (isScroller ? val =3D=3D cm.doc.scrollLeft : =
Math.abs(cm.doc.scrollLeft - val) < 2) return;
            val =3D Math.min(val, cm.display.scroller.scrollWidth - =
cm.display.scroller.clientWidth);
            cm.doc.scrollLeft =3D val;
            alignHorizontally(cm);
            if (cm.display.scroller.scrollLeft !=3D val) =
cm.display.scroller.scrollLeft =3D val;
            if (cm.display.scrollbarH.scrollLeft !=3D val) =
cm.display.scrollbarH.scrollLeft =3D val;
        }

        // Since the delta values reported on mouse wheel events are
        // unstandardized between browsers and even browser versions, =
and
        // generally horribly unpredictable, this code starts by =
measuring
        // the scroll effect that the first few mouse wheel events have,
        // and, from that, detects the way it can convert deltas to =
pixel
        // offsets afterwards.
        //
        // The reason we want to know the amount a wheel event will =
scroll
        // is that it gives us a chance to update the display before the
        // actual scrolling happens, reducing flickering.

        var wheelSamples =3D 0, wheelPixelsPerUnit =3D null;
        // Fill in a browser-detected starting value on browsers where =
we
        // know one. These don't have to be accurate -- the result of =
them
        // being wrong would just be a slight flicker on the first wheel
        // scroll (if it is large enough).
        if (ie) wheelPixelsPerUnit =3D -.53;
        else if (gecko) wheelPixelsPerUnit =3D 15;
        else if (chrome) wheelPixelsPerUnit =3D -.7;
        else if (safari) wheelPixelsPerUnit =3D -1/3;

        function onScrollWheel(cm, e) {
            var dx =3D e.wheelDeltaX, dy =3D e.wheelDeltaY;
            if (dx =3D=3D null && e.detail && e.axis =3D=3D =
e.HORIZONTAL_AXIS) dx =3D e.detail;
            if (dy =3D=3D null && e.detail && e.axis =3D=3D =
e.VERTICAL_AXIS) dy =3D e.detail;
            else if (dy =3D=3D null) dy =3D e.wheelDelta;

            var display =3D cm.display, scroll =3D display.scroller;
            // Quit if there's nothing to scroll here
            if (!(dx && scroll.scrollWidth > scroll.clientWidth ||
                dy && scroll.scrollHeight > scroll.clientHeight)) =
return;

            // Webkit browsers on OS X abort momentum scrolls when the =
target
            // of the scroll event is removed from the scrollable =
element.
            // This hack (see related code in patchDisplay) makes sure =
the
            // element is kept around.
            if (dy && mac && webkit) {
                for (var cur =3D e.target; cur !=3D scroll; cur =3D =
cur.parentNode) {
                    if (cur.lineObj) {
                        cm.display.currentWheelTarget =3D cur;
                        break;
                    }
                }
            }

            // On some browsers, horizontal scrolling will cause redraws =
to
            // happen before the gutter has been realigned, causing it =
to
            // wriggle around in a most unseemly way. When we have an
            // estimated pixels/delta value, we just handle horizontal
            // scrolling entirely here. It'll be slightly off from =
native, but
            // better than glitching out.
            if (dx && !gecko && !opera && wheelPixelsPerUnit !=3D null) =
{
                if (dy)
                    setScrollTop(cm, Math.max(0, =
Math.min(scroll.scrollTop + dy * wheelPixelsPerUnit, scroll.scrollHeight =
- scroll.clientHeight)));
                setScrollLeft(cm, Math.max(0, Math.min(scroll.scrollLeft =
+ dx * wheelPixelsPerUnit, scroll.scrollWidth - scroll.clientWidth)));
                e_preventDefault(e);
                display.wheelStartX =3D null; // Abort measurement, if =
in progress
                return;
            }

            if (dy && wheelPixelsPerUnit !=3D null) {
                var pixels =3D dy * wheelPixelsPerUnit;
                var top =3D cm.doc.scrollTop, bot =3D top + =
display.wrapper.clientHeight;
                if (pixels < 0) top =3D Math.max(0, top + pixels - 50);
                else bot =3D Math.min(cm.doc.height, bot + pixels + 50);
                updateDisplay(cm, [], {top: top, bottom: bot});
            }

            if (wheelSamples < 20) {
                if (display.wheelStartX =3D=3D null) {
                    display.wheelStartX =3D scroll.scrollLeft; =
display.wheelStartY =3D scroll.scrollTop;
                    display.wheelDX =3D dx; display.wheelDY =3D dy;
                    setTimeout(function() {
                        if (display.wheelStartX =3D=3D null) return;
                        var movedX =3D scroll.scrollLeft - =
display.wheelStartX;
                        var movedY =3D scroll.scrollTop - =
display.wheelStartY;
                        var sample =3D (movedY && display.wheelDY && =
movedY / display.wheelDY) ||
                            (movedX && display.wheelDX && movedX / =
display.wheelDX);
                        display.wheelStartX =3D display.wheelStartY =3D =
null;
                        if (!sample) return;
                        wheelPixelsPerUnit =3D (wheelPixelsPerUnit * =
wheelSamples + sample) / (wheelSamples + 1);
                        ++wheelSamples;
                    }, 200);
                } else {
                    display.wheelDX +=3D dx; display.wheelDY +=3D dy;
                }
            }
        }

        function doHandleBinding(cm, bound, dropShift) {
            if (typeof bound =3D=3D "string") {
                bound =3D commands[bound];
                if (!bound) return false;
            }
            // Ensure previous input has been read, so that the handler =
sees a
            // consistent view of the document
            if (cm.display.pollingFast && readInput(cm)) =
cm.display.pollingFast =3D false;
            var doc =3D cm.doc, prevShift =3D doc.sel.shift, done =3D =
false;
            try {
                if (isReadOnly(cm)) cm.state.suppressEdits =3D true;
                if (dropShift) doc.sel.shift =3D false;
                done =3D bound(cm) !=3D Pass;
            } finally {
                doc.sel.shift =3D prevShift;
                cm.state.suppressEdits =3D false;
            }
            return done;
        }

        function allKeyMaps(cm) {
            var maps =3D cm.state.keyMaps.slice(0);
            if (cm.options.extraKeys) maps.push(cm.options.extraKeys);
            maps.push(cm.options.keyMap);
            return maps;
        }

        var maybeTransition;
        function handleKeyBinding(cm, e) {
            // Handle auto keymap transitions
            var startMap =3D getKeyMap(cm.options.keyMap), next =3D =
startMap.auto;
            clearTimeout(maybeTransition);
            if (next && !isModifierKey(e)) maybeTransition =3D =
setTimeout(function() {
                if (getKeyMap(cm.options.keyMap) =3D=3D startMap) {
                    cm.options.keyMap =3D (next.call ? next.call(null, =
cm) : next);
                    keyMapChanged(cm);
                }
            }, 50);

            var name =3D keyName(e, true), handled =3D false;
            if (!name) return false;
            var keymaps =3D allKeyMaps(cm);

            if (e.shiftKey) {
                // First try to resolve full name (including 'Shift-'). =
Failing
                // that, see if there is a cursor-motion command =
(starting with
                // 'go') bound to the keyname without 'Shift-'.
                handled =3D lookupKey("Shift-" + name, keymaps, =
function(b) {return doHandleBinding(cm, b, true);})
                    || lookupKey(name, keymaps, function(b) {
                        if (typeof b =3D=3D "string" ? =
/^go[A-Z]/.test(b) : b.motion)
                            return doHandleBinding(cm, b);
                    });
            } else {
                handled =3D lookupKey(name, keymaps, function(b) { =
return doHandleBinding(cm, b); });
            }

            if (handled) {
                e_preventDefault(e);
                restartBlink(cm);
                if (ie_lt9) { e.oldKeyCode =3D e.keyCode; e.keyCode =3D =
0; }
                signalLater(cm, "keyHandled", cm, name, e);
            }
            return handled;
        }

        function handleCharBinding(cm, e, ch) {
            var handled =3D lookupKey("'" + ch + "'", allKeyMaps(cm),
                function(b) { return doHandleBinding(cm, b, true); });
            if (handled) {
                e_preventDefault(e);
                restartBlink(cm);
                signalLater(cm, "keyHandled", cm, "'" + ch + "'", e);
            }
            return handled;
        }

        var lastStoppedKey =3D null;
        function onKeyDown(e) {
            var cm =3D this;
            if (!cm.state.focused) onFocus(cm);
            if (ie && e.keyCode =3D=3D 27) { e.returnValue =3D false; }
            if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
            var code =3D e.keyCode;
            // IE does strange things with escape.
            cm.doc.sel.shift =3D code =3D=3D 16 || e.shiftKey;
            // First give onKeyEvent option a chance to handle this.
            var handled =3D handleKeyBinding(cm, e);
            if (opera) {
                lastStoppedKey =3D handled ? code : null;
                // Opera has no cut event... we try to at least catch =
the key combo
                if (!handled && code =3D=3D 88 && !hasCopyEvent && (mac =
? e.metaKey : e.ctrlKey))
                    cm.replaceSelection("");
            }
        }

        function onKeyPress(e) {
            var cm =3D this;
            if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
            var keyCode =3D e.keyCode, charCode =3D e.charCode;
            if (opera && keyCode =3D=3D lastStoppedKey) {lastStoppedKey =
=3D null; e_preventDefault(e); return;}
            if (((opera && (!e.which || e.which < 10)) || khtml) && =
handleKeyBinding(cm, e)) return;
            var ch =3D String.fromCharCode(charCode =3D=3D null ? =
keyCode : charCode);
            if (this.options.electricChars && =
this.doc.mode.electricChars &&
                this.options.smartIndent && !isReadOnly(this) &&
                this.doc.mode.electricChars.indexOf(ch) > -1)
                setTimeout(operation(cm, function() {indentLine(cm, =
cm.doc.sel.to.line, "smart");}), 75);
            if (handleCharBinding(cm, e, ch)) return;
            if (ie && !ie_lt9) cm.display.inputHasSelection =3D null;
            fastPoll(cm);
        }

        function onFocus(cm) {
            if (cm.options.readOnly =3D=3D "nocursor") return;
            if (!cm.state.focused) {
                signal(cm, "focus", cm);
                cm.state.focused =3D true;
                if =
(cm.display.wrapper.className.search(/\bCodeMirror-focused\b/) =3D=3D =
-1)
                    cm.display.wrapper.className +=3D " =
CodeMirror-focused";
                resetInput(cm, true);
            }
            slowPoll(cm);
            restartBlink(cm);
        }
        function onBlur(cm) {
            if (cm.state.focused) {
                signal(cm, "blur", cm);
                cm.state.focused =3D false;
                cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(" CodeMirror-focused", "");
            }
            clearInterval(cm.display.blinker);
            setTimeout(function() {if (!cm.state.focused) =
cm.doc.sel.shift =3D false;}, 150);
        }

        var detectingSelectAll;
        function onContextMenu(cm, e) {
            if (signalDOMEvent(cm, e, "contextmenu")) return;
            var display =3D cm.display, sel =3D cm.doc.sel;
            if (eventInWidget(display, e)) return;

            var pos =3D posFromMouse(cm, e), scrollPos =3D =
display.scroller.scrollTop;
            if (!pos || opera) return; // Opera is difficult.
            if (posEq(sel.from, sel.to) || posLess(pos, sel.from) || =
!posLess(pos, sel.to))
                operation(cm, setSelection)(cm.doc, pos, pos);

            var oldCSS =3D display.input.style.cssText;
            display.inputDiv.style.position =3D "absolute";
            display.input.style.cssText =3D "position: fixed; width: =
30px; height: 30px; top: " + (e.clientY - 5) +
                "px; left: " + (e.clientX - 5) + "px; z-index: 1000; =
background: white; outline: none;" +
                "border-width: 0; outline: none; overflow: hidden; =
opacity: .05; -ms-opacity: .05; filter: alpha(opacity=3D5);";
            focusInput(cm);
            resetInput(cm, true);
            // Adds "Select all" to context menu in FF
            if (posEq(sel.from, sel.to)) display.input.value =3D =
display.prevInput =3D " ";

            function prepareSelectAllHack() {
                if (display.input.selectionStart !=3D null) {
                    var extval =3D display.input.value =3D " " + =
(posEq(sel.from, sel.to) ? "" : display.input.value);
                    display.prevInput =3D " ";
                    display.input.selectionStart =3D 1; =
display.input.selectionEnd =3D extval.length;
                }
            }
            function rehide() {
                display.inputDiv.style.position =3D "relative";
                display.input.style.cssText =3D oldCSS;
                if (ie_lt9) display.scrollbarV.scrollTop =3D =
display.scroller.scrollTop =3D scrollPos;
                slowPoll(cm);

                // Try to detect the user choosing select-all
                if (display.input.selectionStart !=3D null) {
                    if (!ie || ie_lt9) prepareSelectAllHack();
                    clearTimeout(detectingSelectAll);
                    var i =3D 0, poll =3D function(){
                        if (display.prevInput =3D=3D " " && =
display.input.selectionStart =3D=3D 0)
                            operation(cm, commands.selectAll)(cm);
                        else if (i++ < 10) detectingSelectAll =3D =
setTimeout(poll, 500);
                        else resetInput(cm);
                    };
                    detectingSelectAll =3D setTimeout(poll, 200);
                }
            }

            if (ie && !ie_lt9) prepareSelectAllHack();
            if (captureMiddleClick) {
                e_stop(e);
                var mouseup =3D function() {
                    off(window, "mouseup", mouseup);
                    setTimeout(rehide, 20);
                };
                on(window, "mouseup", mouseup);
            } else {
                setTimeout(rehide, 50);
            }
        }

        // UPDATING

        var changeEnd =3D CodeMirror.changeEnd =3D function(change) {
            if (!change.text) return change.to;
            return Pos(change.from.line + change.text.length - 1,
                    lst(change.text).length + (change.text.length =3D=3D =
1 ? change.from.ch : 0));
        };

        // Make sure a position will be valid after the given change.
        function clipPostChange(doc, change, pos) {
            if (!posLess(change.from, pos)) return clipPos(doc, pos);
            var diff =3D (change.text.length - 1) - (change.to.line - =
change.from.line);
            if (pos.line > change.to.line + diff) {
                var preLine =3D pos.line - diff, lastLine =3D doc.first =
+ doc.size - 1;
                if (preLine > lastLine) return Pos(lastLine, =
getLine(doc, lastLine).text.length);
                return clipToLen(pos, getLine(doc, =
preLine).text.length);
            }
            if (pos.line =3D=3D change.to.line + diff)
                return clipToLen(pos, lst(change.text).length + =
(change.text.length =3D=3D 1 ? change.from.ch : 0) +
                    getLine(doc, change.to.line).text.length - =
change.to.ch);
            var inside =3D pos.line - change.from.line;
            return clipToLen(pos, change.text[inside].length + (inside ? =
0 : change.from.ch));
        }

        // Hint can be null|"end"|"start"|"around"|{anchor,head}
        function computeSelAfterChange(doc, change, hint) {
            if (hint && typeof hint =3D=3D "object") // Assumed to be =
{anchor, head} object
                return {anchor: clipPostChange(doc, change, =
hint.anchor),
                    head: clipPostChange(doc, change, hint.head)};

            if (hint =3D=3D "start") return {anchor: change.from, head: =
change.from};

            var end =3D changeEnd(change);
            if (hint =3D=3D "around") return {anchor: change.from, head: =
end};
            if (hint =3D=3D "end") return {anchor: end, head: end};

            // hint is null, leave the selection alone as much as =
possible
            var adjustPos =3D function(pos) {
                if (posLess(pos, change.from)) return pos;
                if (!posLess(change.to, pos)) return end;

                var line =3D pos.line + change.text.length - =
(change.to.line - change.from.line) - 1, ch =3D pos.ch;
                if (pos.line =3D=3D change.to.line) ch +=3D end.ch - =
change.to.ch;
                return Pos(line, ch);
            };
            return {anchor: adjustPos(doc.sel.anchor), head: =
adjustPos(doc.sel.head)};
        }

        function filterChange(doc, change, update) {
            var obj =3D {
                canceled: false,
                from: change.from,
                to: change.to,
                text: change.text,
                origin: change.origin,
                cancel: function() { this.canceled =3D true; }
            };
            if (update) obj.update =3D function(from, to, text, origin) =
{
                if (from) this.from =3D clipPos(doc, from);
                if (to) this.to =3D clipPos(doc, to);
                if (text) this.text =3D text;
                if (origin !=3D=3D undefined) this.origin =3D origin;
            };
            signal(doc, "beforeChange", doc, obj);
            if (doc.cm) signal(doc.cm, "beforeChange", doc.cm, obj);

            if (obj.canceled) return null;
            return {from: obj.from, to: obj.to, text: obj.text, origin: =
obj.origin};
        }

        // Replace the range from from to to by the strings in =
replacement.
        // change is a {from, to, text [, origin]} object
        function makeChange(doc, change, selUpdate, ignoreReadOnly) {
            if (doc.cm) {
                if (!doc.cm.curOp) return operation(doc.cm, =
makeChange)(doc, change, selUpdate, ignoreReadOnly);
                if (doc.cm.state.suppressEdits) return;
            }

            if (hasHandler(doc, "beforeChange") || doc.cm && =
hasHandler(doc.cm, "beforeChange")) {
                change =3D filterChange(doc, change, true);
                if (!change) return;
            }

            // Possibly split or suppress the update based on the =
presence
            // of read-only spans in its range.
            var split =3D sawReadOnlySpans && !ignoreReadOnly && =
removeReadOnlyRanges(doc, change.from, change.to);
            if (split) {
                for (var i =3D split.length - 1; i >=3D 1; --i)
                    makeChangeNoReadonly(doc, {from: split[i].from, to: =
split[i].to, text: [""]});
                if (split.length)
                    makeChangeNoReadonly(doc, {from: split[0].from, to: =
split[0].to, text: change.text}, selUpdate);
            } else {
                makeChangeNoReadonly(doc, change, selUpdate);
            }
        }

        function makeChangeNoReadonly(doc, change, selUpdate) {
            var selAfter =3D computeSelAfterChange(doc, change, =
selUpdate);
            addToHistory(doc, change, selAfter, doc.cm ? doc.cm.curOp.id =
: NaN);

            makeChangeSingleDoc(doc, change, selAfter, =
stretchSpansOverChange(doc, change));
            var rebased =3D [];

            linkedDocs(doc, function(doc, sharedHist) {
                if (!sharedHist && indexOf(rebased, doc.history) =3D=3D =
-1) {
                    rebaseHist(doc.history, change);
                    rebased.push(doc.history);
                }
                makeChangeSingleDoc(doc, change, null, =
stretchSpansOverChange(doc, change));
            });
        }

        function makeChangeFromHistory(doc, type) {
            if (doc.cm && doc.cm.state.suppressEdits) return;

            var hist =3D doc.history;
            var event =3D (type =3D=3D "undo" ? hist.done : =
hist.undone).pop();
            if (!event) return;

            var anti =3D {changes: [], anchorBefore: event.anchorAfter, =
headBefore: event.headAfter,
                anchorAfter: event.anchorBefore, headAfter: =
event.headBefore,
                generation: hist.generation};
            (type =3D=3D "undo" ? hist.undone : hist.done).push(anti);
            hist.generation =3D event.generation || =
++hist.maxGeneration;

            var filter =3D hasHandler(doc, "beforeChange") || doc.cm && =
hasHandler(doc.cm, "beforeChange");

            for (var i =3D event.changes.length - 1; i >=3D 0; --i) {
                var change =3D event.changes[i];
                change.origin =3D type;
                if (filter && !filterChange(doc, change, false)) {
                    (type =3D=3D "undo" ? hist.done : =
hist.undone).length =3D 0;
                    return;
                }

                anti.changes.push(historyChangeFromChange(doc, change));

                var after =3D i ? computeSelAfterChange(doc, change, =
null)
                    : {anchor: event.anchorBefore, head: =
event.headBefore};
                makeChangeSingleDoc(doc, change, after, =
mergeOldSpans(doc, change));
                var rebased =3D [];

                linkedDocs(doc, function(doc, sharedHist) {
                    if (!sharedHist && indexOf(rebased, doc.history) =
=3D=3D -1) {
                        rebaseHist(doc.history, change);
                        rebased.push(doc.history);
                    }
                    makeChangeSingleDoc(doc, change, null, =
mergeOldSpans(doc, change));
                });
            }
        }

        function shiftDoc(doc, distance) {
            function shiftPos(pos) {return Pos(pos.line + distance, =
pos.ch);}
            doc.first +=3D distance;
            if (doc.cm) regChange(doc.cm, doc.first, doc.first, =
distance);
            doc.sel.head =3D shiftPos(doc.sel.head); doc.sel.anchor =3D =
shiftPos(doc.sel.anchor);
            doc.sel.from =3D shiftPos(doc.sel.from); doc.sel.to =3D =
shiftPos(doc.sel.to);
        }

        function makeChangeSingleDoc(doc, change, selAfter, spans) {
            if (doc.cm && !doc.cm.curOp)
                return operation(doc.cm, makeChangeSingleDoc)(doc, =
change, selAfter, spans);

            if (change.to.line < doc.first) {
                shiftDoc(doc, change.text.length - 1 - (change.to.line - =
change.from.line));
                return;
            }
            if (change.from.line > doc.lastLine()) return;

            // Clip the change to the size of this doc
            if (change.from.line < doc.first) {
                var shift =3D change.text.length - 1 - (doc.first - =
change.from.line);
                shiftDoc(doc, shift);
                change =3D {from: Pos(doc.first, 0), to: =
Pos(change.to.line + shift, change.to.ch),
                    text: [lst(change.text)], origin: change.origin};
            }
            var last =3D doc.lastLine();
            if (change.to.line > last) {
                change =3D {from: change.from, to: Pos(last, =
getLine(doc, last).text.length),
                    text: [change.text[0]], origin: change.origin};
            }

            change.removed =3D getBetween(doc, change.from, change.to);

            if (!selAfter) selAfter =3D computeSelAfterChange(doc, =
change, null);
            if (doc.cm) makeChangeSingleDocInEditor(doc.cm, change, =
spans, selAfter);
            else updateDoc(doc, change, spans, selAfter);
        }

        function makeChangeSingleDocInEditor(cm, change, spans, =
selAfter) {
            var doc =3D cm.doc, display =3D cm.display, from =3D =
change.from, to =3D change.to;

            var recomputeMaxLength =3D false, checkWidthStart =3D =
from.line;
            if (!cm.options.lineWrapping) {
                checkWidthStart =3D lineNo(visualLine(doc, getLine(doc, =
from.line)));
                doc.iter(checkWidthStart, to.line + 1, function(line) {
                    if (line =3D=3D display.maxLine) {
                        recomputeMaxLength =3D true;
                        return true;
                    }
                });
            }

            if (!posLess(doc.sel.head, change.from) && =
!posLess(change.to, doc.sel.head))
                cm.curOp.cursorActivity =3D true;

            updateDoc(doc, change, spans, selAfter, estimateHeight(cm));

            if (!cm.options.lineWrapping) {
                doc.iter(checkWidthStart, from.line + =
change.text.length, function(line) {
                    var len =3D lineLength(doc, line);
                    if (len > display.maxLineLength) {
                        display.maxLine =3D line;
                        display.maxLineLength =3D len;
                        display.maxLineChanged =3D true;
                        recomputeMaxLength =3D false;
                    }
                });
                if (recomputeMaxLength) cm.curOp.updateMaxLine =3D true;
            }

            // Adjust frontier, schedule worker
            doc.frontier =3D Math.min(doc.frontier, from.line);
            startWorker(cm, 400);

            var lendiff =3D change.text.length - (to.line - from.line) - =
1;
            // Remember that these lines changed, for updating the =
display
            regChange(cm, from.line, to.line + 1, lendiff);

            if (hasHandler(cm, "change")) {
                var changeObj =3D {from: from, to: to,
                    text: change.text,
                    removed: change.removed,
                    origin: change.origin};
                if (cm.curOp.textChanged) {
                    for (var cur =3D cm.curOp.textChanged; cur.next; cur =
=3D cur.next) {}
                    cur.next =3D changeObj;
                } else cm.curOp.textChanged =3D changeObj;
            }
        }

        function replaceRange(doc, code, from, to, origin) {
            if (!to) to =3D from;
            if (posLess(to, from)) { var tmp =3D to; to =3D from; from =
=3D tmp; }
            if (typeof code =3D=3D "string") code =3D splitLines(code);
            makeChange(doc, {from: from, to: to, text: code, origin: =
origin}, null);
        }

        // POSITION OBJECT

        function Pos(line, ch) {
            if (!(this instanceof Pos)) return new Pos(line, ch);
            this.line =3D line; this.ch =3D ch;
        }
        CodeMirror.Pos =3D Pos;

        function posEq(a, b) {return a.line =3D=3D b.line && a.ch =3D=3D =
b.ch;}
        function posLess(a, b) {return a.line < b.line || (a.line =3D=3D =
b.line && a.ch < b.ch);}
        function copyPos(x) {return Pos(x.line, x.ch);}

        // SELECTION

        function clipLine(doc, n) {return Math.max(doc.first, =
Math.min(n, doc.first + doc.size - 1));}
        function clipPos(doc, pos) {
            if (pos.line < doc.first) return Pos(doc.first, 0);
            var last =3D doc.first + doc.size - 1;
            if (pos.line > last) return Pos(last, getLine(doc, =
last).text.length);
            return clipToLen(pos, getLine(doc, pos.line).text.length);
        }
        function clipToLen(pos, linelen) {
            var ch =3D pos.ch;
            if (ch =3D=3D null || ch > linelen) return Pos(pos.line, =
linelen);
            else if (ch < 0) return Pos(pos.line, 0);
            else return pos;
        }
        function isLine(doc, l) {return l >=3D doc.first && l < =
doc.first + doc.size;}

        // If shift is held, this will move the selection anchor. =
Otherwise,
        // it'll set the whole selection.
        function extendSelection(doc, pos, other, bias) {
            if (doc.sel.shift || doc.sel.extend) {
                var anchor =3D doc.sel.anchor;
                if (other) {
                    var posBefore =3D posLess(pos, anchor);
                    if (posBefore !=3D posLess(other, anchor)) {
                        anchor =3D pos;
                        pos =3D other;
                    } else if (posBefore !=3D posLess(pos, other)) {
                        pos =3D other;
                    }
                }
                setSelection(doc, anchor, pos, bias);
            } else {
                setSelection(doc, pos, other || pos, bias);
            }
            if (doc.cm) doc.cm.curOp.userSelChange =3D true;
        }

        function filterSelectionChange(doc, anchor, head) {
            var obj =3D {anchor: anchor, head: head};
            signal(doc, "beforeSelectionChange", doc, obj);
            if (doc.cm) signal(doc.cm, "beforeSelectionChange", doc.cm, =
obj);
            obj.anchor =3D clipPos(doc, obj.anchor); obj.head =3D =
clipPos(doc, obj.head);
            return obj;
        }

        // Update the selection. Last two args are only used by
        // updateDoc, since they have to be expressed in the line
        // numbers before the update.
        function setSelection(doc, anchor, head, bias, checkAtomic) {
            if (!checkAtomic && hasHandler(doc, "beforeSelectionChange") =
|| doc.cm && hasHandler(doc.cm, "beforeSelectionChange")) {
                var filtered =3D filterSelectionChange(doc, anchor, =
head);
                head =3D filtered.head;
                anchor =3D filtered.anchor;
            }

            var sel =3D doc.sel;
            sel.goalColumn =3D null;
            // Skip over atomic spans.
            if (checkAtomic || !posEq(anchor, sel.anchor))
                anchor =3D skipAtomic(doc, anchor, bias, checkAtomic =
!=3D "push");
            if (checkAtomic || !posEq(head, sel.head))
                head =3D skipAtomic(doc, head, bias, checkAtomic !=3D =
"push");

            if (posEq(sel.anchor, anchor) && posEq(sel.head, head)) =
return;

            sel.anchor =3D anchor; sel.head =3D head;
            var inv =3D posLess(head, anchor);
            sel.from =3D inv ? head : anchor;
            sel.to =3D inv ? anchor : head;

            if (doc.cm)
                doc.cm.curOp.updateInput =3D =
doc.cm.curOp.selectionChanged =3D
                    doc.cm.curOp.cursorActivity =3D true;

            signalLater(doc, "cursorActivity", doc);
        }

        function reCheckSelection(cm) {
            setSelection(cm.doc, cm.doc.sel.from, cm.doc.sel.to, null, =
"push");
        }

        function skipAtomic(doc, pos, bias, mayClear) {
            var flipped =3D false, curPos =3D pos;
            var dir =3D bias || 1;
            doc.cantEdit =3D false;
            search: for (;;) {
                var line =3D getLine(doc, curPos.line);
                if (line.markedSpans) {
                    for (var i =3D 0; i < line.markedSpans.length; ++i) =
{
                        var sp =3D line.markedSpans[i], m =3D sp.marker;
                        if ((sp.from =3D=3D null || (m.inclusiveLeft ? =
sp.from <=3D curPos.ch : sp.from < curPos.ch)) &&
                            (sp.to =3D=3D null || (m.inclusiveRight ? =
sp.to >=3D curPos.ch : sp.to > curPos.ch))) {
                            if (mayClear) {
                                signal(m, "beforeCursorEnter");
                                if (m.explicitlyCleared) {
                                    if (!line.markedSpans) break;
                                    else {--i; continue;}
                                }
                            }
                            if (!m.atomic) continue;
                            var newPos =3D m.find()[dir < 0 ? "from" : =
"to"];
                            if (posEq(newPos, curPos)) {
                                newPos.ch +=3D dir;
                                if (newPos.ch < 0) {
                                    if (newPos.line > doc.first) newPos =
=3D clipPos(doc, Pos(newPos.line - 1));
                                    else newPos =3D null;
                                } else if (newPos.ch > line.text.length) =
{
                                    if (newPos.line < doc.first + =
doc.size - 1) newPos =3D Pos(newPos.line + 1, 0);
                                    else newPos =3D null;
                                }
                                if (!newPos) {
                                    if (flipped) {
                                        // Driven in a corner -- no =
valid cursor position found at all
                                        // -- try again *with* clearing, =
if we didn't already
                                        if (!mayClear) return =
skipAtomic(doc, pos, bias, true);
                                        // Otherwise, turn off editing =
until further notice, and return the start of the doc
                                        doc.cantEdit =3D true;
                                        return Pos(doc.first, 0);
                                    }
                                    flipped =3D true; newPos =3D pos; =
dir =3D -dir;
                                }
                            }
                            curPos =3D newPos;
                            continue search;
                        }
                    }
                }
                return curPos;
            }
        }

        // SCROLLING

        function scrollCursorIntoView(cm) {
            var coords =3D scrollPosIntoView(cm, cm.doc.sel.head, =
cm.options.cursorScrollMargin);
            if (!cm.state.focused) return;
            var display =3D cm.display, box =3D getRect(display.sizer), =
doScroll =3D null;
            if (coords.top + box.top < 0) doScroll =3D true;
            else if (coords.bottom + box.top > (window.innerHeight || =
document.documentElement.clientHeight)) doScroll =3D false;
            if (doScroll !=3D null && !phantom) {
                var hidden =3D display.cursor.style.display =3D=3D =
"none";
                if (hidden) {
                    display.cursor.style.display =3D "";
                    display.cursor.style.left =3D coords.left + "px";
                    display.cursor.style.top =3D (coords.top - =
display.viewOffset) + "px";
                }
                display.cursor.scrollIntoView(doScroll);
                if (hidden) display.cursor.style.display =3D "none";
            }
        }

        function scrollPosIntoView(cm, pos, margin) {
            if (margin =3D=3D null) margin =3D 0;
            for (;;) {
                var changed =3D false, coords =3D cursorCoords(cm, pos);
                var scrollPos =3D calculateScrollPos(cm, coords.left, =
coords.top - margin, coords.left, coords.bottom + margin);
                var startTop =3D cm.doc.scrollTop, startLeft =3D =
cm.doc.scrollLeft;
                if (scrollPos.scrollTop !=3D null) {
                    setScrollTop(cm, scrollPos.scrollTop);
                    if (Math.abs(cm.doc.scrollTop - startTop) > 1) =
changed =3D true;
                }
                if (scrollPos.scrollLeft !=3D null) {
                    setScrollLeft(cm, scrollPos.scrollLeft);
                    if (Math.abs(cm.doc.scrollLeft - startLeft) > 1) =
changed =3D true;
                }
                if (!changed) return coords;
            }
        }

        function scrollIntoView(cm, x1, y1, x2, y2) {
            var scrollPos =3D calculateScrollPos(cm, x1, y1, x2, y2);
            if (scrollPos.scrollTop !=3D null) setScrollTop(cm, =
scrollPos.scrollTop);
            if (scrollPos.scrollLeft !=3D null) setScrollLeft(cm, =
scrollPos.scrollLeft);
        }

        function calculateScrollPos(cm, x1, y1, x2, y2) {
            var display =3D cm.display, snapMargin =3D =
textHeight(cm.display);
            if (y1 < 0) y1 =3D 0;
            var screen =3D display.scroller.clientHeight - =
scrollerCutOff, screentop =3D display.scroller.scrollTop, result =3D {};
            var docBottom =3D cm.doc.height + paddingVert(display);
            var atTop =3D y1 < snapMargin, atBottom =3D y2 > docBottom - =
snapMargin;
            if (y1 < screentop) {
                result.scrollTop =3D atTop ? 0 : y1;
            } else if (y2 > screentop + screen) {
                var newTop =3D Math.min(y1, (atBottom ? docBottom : y2) =
- screen);
                if (newTop !=3D screentop) result.scrollTop =3D newTop;
            }

            var screenw =3D display.scroller.clientWidth - =
scrollerCutOff, screenleft =3D display.scroller.scrollLeft;
            x1 +=3D display.gutters.offsetWidth; x2 +=3D =
display.gutters.offsetWidth;
            var gutterw =3D display.gutters.offsetWidth;
            var atLeft =3D x1 < gutterw + 10;
            if (x1 < screenleft + gutterw || atLeft) {
                if (atLeft) x1 =3D 0;
                result.scrollLeft =3D Math.max(0, x1 - 10 - gutterw);
            } else if (x2 > screenw + screenleft - 3) {
                result.scrollLeft =3D x2 + 10 - screenw;
            }
            return result;
        }

        function updateScrollPos(cm, left, top) {
            cm.curOp.updateScrollPos =3D {scrollLeft: left =3D=3D null ? =
cm.doc.scrollLeft : left,
                scrollTop: top =3D=3D null ? cm.doc.scrollTop : top};
        }

        function addToScrollPos(cm, left, top) {
            var pos =3D cm.curOp.updateScrollPos || =
(cm.curOp.updateScrollPos =3D {scrollLeft: cm.doc.scrollLeft, scrollTop: =
cm.doc.scrollTop});
            var scroll =3D cm.display.scroller;
            pos.scrollTop =3D Math.max(0, Math.min(scroll.scrollHeight - =
scroll.clientHeight, pos.scrollTop + top));
            pos.scrollLeft =3D Math.max(0, Math.min(scroll.scrollWidth - =
scroll.clientWidth, pos.scrollLeft + left));
        }

        // API UTILITIES

        function indentLine(cm, n, how, aggressive) {
            var doc =3D cm.doc;
            if (how =3D=3D null) how =3D "add";
            if (how =3D=3D "smart") {
                if (!cm.doc.mode.indent) how =3D "prev";
                else var state =3D getStateBefore(cm, n);
            }

            var tabSize =3D cm.options.tabSize;
            var line =3D getLine(doc, n), curSpace =3D =
countColumn(line.text, null, tabSize);
            var curSpaceString =3D line.text.match(/^\s*/)[0], =
indentation;
            if (how =3D=3D "smart") {
                indentation =3D cm.doc.mode.indent(state, =
line.text.slice(curSpaceString.length), line.text);
                if (indentation =3D=3D Pass) {
                    if (!aggressive) return;
                    how =3D "prev";
                }
            }
            if (how =3D=3D "prev") {
                if (n > doc.first) indentation =3D =
countColumn(getLine(doc, n-1).text, null, tabSize);
                else indentation =3D 0;
            } else if (how =3D=3D "add") {
                indentation =3D curSpace + cm.options.indentUnit;
            } else if (how =3D=3D "subtract") {
                indentation =3D curSpace - cm.options.indentUnit;
            } else if (typeof how =3D=3D "number") {
                indentation =3D curSpace + how;
            }
            indentation =3D Math.max(0, indentation);

            var indentString =3D "", pos =3D 0;
            if (cm.options.indentWithTabs)
                for (var i =3D Math.floor(indentation / tabSize); i; =
--i) {pos +=3D tabSize; indentString +=3D "\t";}
            if (pos < indentation) indentString +=3D =
spaceStr(indentation - pos);

            if (indentString !=3D curSpaceString)
                replaceRange(cm.doc, indentString, Pos(n, 0), Pos(n, =
curSpaceString.length), "+input");
            line.stateAfter =3D null;
        }

        function changeLine(cm, handle, op) {
            var no =3D handle, line =3D handle, doc =3D cm.doc;
            if (typeof handle =3D=3D "number") line =3D getLine(doc, =
clipLine(doc, handle));
            else no =3D lineNo(handle);
            if (no =3D=3D null) return null;
            if (op(line, no)) regChange(cm, no, no + 1);
            else return null;
            return line;
        }

        function findPosH(doc, pos, dir, unit, visually) {
            var line =3D pos.line, ch =3D pos.ch, origDir =3D dir;
            var lineObj =3D getLine(doc, line);
            var possible =3D true;
            function findNextLine() {
                var l =3D line + dir;
                if (l < doc.first || l >=3D doc.first + doc.size) return =
(possible =3D false);
                line =3D l;
                return lineObj =3D getLine(doc, l);
            }
            function moveOnce(boundToLine) {
                var next =3D (visually ? moveVisually : =
moveLogically)(lineObj, ch, dir, true);
                if (next =3D=3D null) {
                    if (!boundToLine && findNextLine()) {
                        if (visually) ch =3D (dir < 0 ? lineRight : =
lineLeft)(lineObj);
                        else ch =3D dir < 0 ? lineObj.text.length : 0;
                    } else return (possible =3D false);
                } else ch =3D next;
                return true;
            }

            if (unit =3D=3D "char") moveOnce();
            else if (unit =3D=3D "column") moveOnce(true);
            else if (unit =3D=3D "word" || unit =3D=3D "group") {
                var sawType =3D null, group =3D unit =3D=3D "group";
                for (var first =3D true;; first =3D false) {
                    if (dir < 0 && !moveOnce(!first)) break;
                    var cur =3D lineObj.text.charAt(ch) || "\n";
                    var type =3D isWordChar(cur) ? "w"
                        : !group ? null
                        : /\s/.test(cur) ? null
                        : "p";
                    if (sawType && sawType !=3D type) {
                        if (dir < 0) {dir =3D 1; moveOnce();}
                        break;
                    }
                    if (type) sawType =3D type;
                    if (dir > 0 && !moveOnce(!first)) break;
                }
            }
            var result =3D skipAtomic(doc, Pos(line, ch), origDir, =
true);
            if (!possible) result.hitSide =3D true;
            return result;
        }

        function findPosV(cm, pos, dir, unit) {
            var doc =3D cm.doc, x =3D pos.left, y;
            if (unit =3D=3D "page") {
                var pageSize =3D =
Math.min(cm.display.wrapper.clientHeight, window.innerHeight || =
document.documentElement.clientHeight);
                y =3D pos.top + dir * (pageSize - (dir < 0 ? 1.5 : .5) * =
textHeight(cm.display));
            } else if (unit =3D=3D "line") {
                y =3D dir > 0 ? pos.bottom + 3 : pos.top - 3;
            }
            for (;;) {
                var target =3D coordsChar(cm, x, y);
                if (!target.outside) break;
                if (dir < 0 ? y <=3D 0 : y >=3D doc.height) { =
target.hitSide =3D true; break; }
                y +=3D dir * 5;
            }
            return target;
        }

        function findWordAt(line, pos) {
            var start =3D pos.ch, end =3D pos.ch;
            if (line) {
                if ((pos.xRel < 0 || end =3D=3D line.length) && start) =
--start; else ++end;
                var startChar =3D line.charAt(start);
                var check =3D isWordChar(startChar) ? isWordChar
                    : /\s/.test(startChar) ? function(ch) {return =
/\s/.test(ch);}
                    : function(ch) {return !/\s/.test(ch) && =
!isWordChar(ch);};
                while (start > 0 && check(line.charAt(start - 1))) =
--start;
                while (end < line.length && check(line.charAt(end))) =
++end;
            }
            return {from: Pos(pos.line, start), to: Pos(pos.line, end)};
        }

        function selectLine(cm, line) {
            extendSelection(cm.doc, Pos(line, 0), clipPos(cm.doc, =
Pos(line + 1, 0)));
        }

        // PROTOTYPE

        // The publicly visible API. Note that operation(null, f) means
        // 'wrap f in an operation, performed on its `this` parameter'

        CodeMirror.prototype =3D {
            constructor: CodeMirror,
            focus: function(){window.focus(); focusInput(this); =
onFocus(this); fastPoll(this);},

            setOption: function(option, value) {
                var options =3D this.options, old =3D options[option];
                if (options[option] =3D=3D value && option !=3D "mode") =
return;
                options[option] =3D value;
                if (optionHandlers.hasOwnProperty(option))
                    operation(this, optionHandlers[option])(this, value, =
old);
            },

            getOption: function(option) {return this.options[option];},
            getDoc: function() {return this.doc;},

            addKeyMap: function(map, bottom) {
                this.state.keyMaps[bottom ? "push" : "unshift"](map);
            },
            removeKeyMap: function(map) {
                var maps =3D this.state.keyMaps;
                for (var i =3D 0; i < maps.length; ++i)
                    if (maps[i] =3D=3D map || (typeof maps[i] !=3D =
"string" && maps[i].name =3D=3D map)) {
                        maps.splice(i, 1);
                        return true;
                    }
            },

            addOverlay: operation(null, function(spec, options) {
                var mode =3D spec.token ? spec : =
CodeMirror.getMode(this.options, spec);
                if (mode.startState) throw new Error("Overlays may not =
be stateful.");
                this.state.overlays.push({mode: mode, modeSpec: spec, =
opaque: options && options.opaque});
                this.state.modeGen++;
                regChange(this);
            }),
            removeOverlay: operation(null, function(spec) {
                var overlays =3D this.state.overlays;
                for (var i =3D 0; i < overlays.length; ++i) {
                    var cur =3D overlays[i].modeSpec;
                    if (cur =3D=3D spec || typeof spec =3D=3D "string" =
&& cur.name =3D=3D spec) {
                        overlays.splice(i, 1);
                        this.state.modeGen++;
                        regChange(this);
                        return;
                    }
                }
            }),

            indentLine: operation(null, function(n, dir, aggressive) {
                if (typeof dir !=3D "string" && typeof dir !=3D =
"number") {
                    if (dir =3D=3D null) dir =3D =
this.options.smartIndent ? "smart" : "prev";
                    else dir =3D dir ? "add" : "subtract";
                }
                if (isLine(this.doc, n)) indentLine(this, n, dir, =
aggressive);
            }),
            indentSelection: operation(null, function(how) {
                var sel =3D this.doc.sel;
                if (posEq(sel.from, sel.to)) return indentLine(this, =
sel.from.line, how);
                var e =3D sel.to.line - (sel.to.ch ? 0 : 1);
                for (var i =3D sel.from.line; i <=3D e; ++i) =
indentLine(this, i, how);
            }),

            // Fetch the parser token for a given character. Useful for =
hacks
            // that want to inspect the mode state (say, for =
completion).
            getTokenAt: function(pos, precise) {
                var doc =3D this.doc;
                pos =3D clipPos(doc, pos);
                var state =3D getStateBefore(this, pos.line, precise), =
mode =3D this.doc.mode;
                var line =3D getLine(doc, pos.line);
                var stream =3D new StringStream(line.text, =
this.options.tabSize);
                while (stream.pos < pos.ch && !stream.eol()) {
                    stream.start =3D stream.pos;
                    var style =3D mode.token(stream, state);
                }
                return {start: stream.start,
                    end: stream.pos,
                    string: stream.current(),
                    className: style || null, // Deprecated, use 'type' =
instead
                    type: style || null,
                    state: state};
            },

            getTokenTypeAt: function(pos) {
                pos =3D clipPos(this.doc, pos);
                var styles =3D getLineStyles(this, getLine(this.doc, =
pos.line));
                var before =3D 0, after =3D (styles.length - 1) / 2, ch =
=3D pos.ch;
                if (ch =3D=3D 0) return styles[2];
                for (;;) {
                    var mid =3D (before + after) >> 1;
                    if ((mid ? styles[mid * 2 - 1] : 0) >=3D ch) after =
=3D mid;
                    else if (styles[mid * 2 + 1] < ch) before =3D mid + =
1;
                    else return styles[mid * 2 + 2];
                }
            },

            getModeAt: function(pos) {
                var mode =3D this.doc.mode;
                if (!mode.innerMode) return mode;
                return CodeMirror.innerMode(mode, =
this.getTokenAt(pos).state).mode;
            },

            getHelper: function(pos, type) {
                if (!helpers.hasOwnProperty(type)) return;
                var help =3D helpers[type], mode =3D =
this.getModeAt(pos);
                return mode[type] && help[mode[type]] ||
                    mode.helperType && help[mode.helperType] ||
                    help[mode.name];
            },

            getStateAfter: function(line, precise) {
                var doc =3D this.doc;
                line =3D clipLine(doc, line =3D=3D null ? doc.first + =
doc.size - 1: line);
                return getStateBefore(this, line + 1, precise);
            },

            cursorCoords: function(start, mode) {
                var pos, sel =3D this.doc.sel;
                if (start =3D=3D null) pos =3D sel.head;
                else if (typeof start =3D=3D "object") pos =3D =
clipPos(this.doc, start);
                else pos =3D start ? sel.from : sel.to;
                return cursorCoords(this, pos, mode || "page");
            },

            charCoords: function(pos, mode) {
                return charCoords(this, clipPos(this.doc, pos), mode || =
"page");
            },

            coordsChar: function(coords, mode) {
                coords =3D fromCoordSystem(this, coords, mode || =
"page");
                return coordsChar(this, coords.left, coords.top);
            },

            lineAtHeight: function(height, mode) {
                height =3D fromCoordSystem(this, {top: height, left: 0}, =
mode || "page").top;
                return lineAtHeight(this.doc, height + =
this.display.viewOffset);
            },
            heightAtLine: function(line, mode) {
                var end =3D false, last =3D this.doc.first + =
this.doc.size - 1;
                if (line < this.doc.first) line =3D this.doc.first;
                else if (line > last) { line =3D last; end =3D true; }
                var lineObj =3D getLine(this.doc, line);
                return intoCoordSystem(this, getLine(this.doc, line), =
{top: 0, left: 0}, mode || "page").top +
                    (end ? lineObj.height : 0);
            },

            defaultTextHeight: function() { return =
textHeight(this.display); },
            defaultCharWidth: function() { return =
charWidth(this.display); },

            setGutterMarker: operation(null, function(line, gutterID, =
value) {
                return changeLine(this, line, function(line) {
                    var markers =3D line.gutterMarkers || =
(line.gutterMarkers =3D {});
                    markers[gutterID] =3D value;
                    if (!value && isEmpty(markers)) line.gutterMarkers =
=3D null;
                    return true;
                });
            }),

            clearGutter: operation(null, function(gutterID) {
                var cm =3D this, doc =3D cm.doc, i =3D doc.first;
                doc.iter(function(line) {
                    if (line.gutterMarkers && =
line.gutterMarkers[gutterID]) {
                        line.gutterMarkers[gutterID] =3D null;
                        regChange(cm, i, i + 1);
                        if (isEmpty(line.gutterMarkers)) =
line.gutterMarkers =3D null;
                    }
                    ++i;
                });
            }),

            addLineClass: operation(null, function(handle, where, cls) {
                return changeLine(this, handle, function(line) {
                    var prop =3D where =3D=3D "text" ? "textClass" : =
where =3D=3D "background" ? "bgClass" : "wrapClass";
                    if (!line[prop]) line[prop] =3D cls;
                    else if (new RegExp("(?:^|\\s)" + cls + =
"(?:$|\\s)").test(line[prop])) return false;
                    else line[prop] +=3D " " + cls;
                    return true;
                });
            }),

            removeLineClass: operation(null, function(handle, where, =
cls) {
                return changeLine(this, handle, function(line) {
                    var prop =3D where =3D=3D "text" ? "textClass" : =
where =3D=3D "background" ? "bgClass" : "wrapClass";
                    var cur =3D line[prop];
                    if (!cur) return false;
                    else if (cls =3D=3D null) line[prop] =3D null;
                    else {
                        var found =3D cur.match(new RegExp("(?:^|\\s+)" =
+ cls + "(?:$|\\s+)"));
                        if (!found) return false;
                        var end =3D found.index + found[0].length;
                        line[prop] =3D cur.slice(0, found.index) + =
(!found.index || end =3D=3D cur.length ? "" : " ") + cur.slice(end) || =
null;
                    }
                    return true;
                });
            }),

            addLineWidget: operation(null, function(handle, node, =
options) {
                return addLineWidget(this, handle, node, options);
            }),

            removeLineWidget: function(widget) { widget.clear(); },

            lineInfo: function(line) {
                if (typeof line =3D=3D "number") {
                    if (!isLine(this.doc, line)) return null;
                    var n =3D line;
                    line =3D getLine(this.doc, line);
                    if (!line) return null;
                } else {
                    var n =3D lineNo(line);
                    if (n =3D=3D null) return null;
                }
                return {line: n, handle: line, text: line.text, =
gutterMarkers: line.gutterMarkers,
                    textClass: line.textClass, bgClass: line.bgClass, =
wrapClass: line.wrapClass,
                    widgets: line.widgets};
            },

            getViewport: function() { return {from: =
this.display.showingFrom, to: this.display.showingTo};},

            addWidget: function(pos, node, scroll, vert, horiz) {
                var display =3D this.display;
                pos =3D cursorCoords(this, clipPos(this.doc, pos));
                var top =3D pos.bottom, left =3D pos.left;
                node.style.position =3D "absolute";
                display.sizer.appendChild(node);
                if (vert =3D=3D "over") {
                    top =3D pos.top;
                } else if (vert =3D=3D "above" || vert =3D=3D "near") {
                    var vspace =3D =
Math.max(display.wrapper.clientHeight, this.doc.height),
                        hspace =3D Math.max(display.sizer.clientWidth, =
display.lineSpace.clientWidth);
                    // Default to positioning above (if specified and =
possible); otherwise default to positioning below
                    if ((vert =3D=3D 'above' || pos.bottom + =
node.offsetHeight > vspace) && pos.top > node.offsetHeight)
                        top =3D pos.top - node.offsetHeight;
                    else if (pos.bottom + node.offsetHeight <=3D vspace)
                        top =3D pos.bottom;
                    if (left + node.offsetWidth > hspace)
                        left =3D hspace - node.offsetWidth;
                }
                node.style.top =3D top + "px";
                node.style.left =3D node.style.right =3D "";
                if (horiz =3D=3D "right") {
                    left =3D display.sizer.clientWidth - =
node.offsetWidth;
                    node.style.right =3D "0px";
                } else {
                    if (horiz =3D=3D "left") left =3D 0;
                    else if (horiz =3D=3D "middle") left =3D =
(display.sizer.clientWidth - node.offsetWidth) / 2;
                    node.style.left =3D left + "px";
                }
                if (scroll)
                    scrollIntoView(this, left, top, left + =
node.offsetWidth, top + node.offsetHeight);
            },

            triggerOnKeyDown: operation(null, onKeyDown),

            execCommand: function(cmd) {return commands[cmd](this);},

            findPosH: function(from, amount, unit, visually) {
                var dir =3D 1;
                if (amount < 0) { dir =3D -1; amount =3D -amount; }
                for (var i =3D 0, cur =3D clipPos(this.doc, from); i < =
amount; ++i) {
                    cur =3D findPosH(this.doc, cur, dir, unit, =
visually);
                    if (cur.hitSide) break;
                }
                return cur;
            },

            moveH: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel, pos;
                if (sel.shift || sel.extend || posEq(sel.from, sel.to))
                    pos =3D findPosH(this.doc, sel.head, dir, unit, =
this.options.rtlMoveVisually);
                else
                    pos =3D dir < 0 ? sel.from : sel.to;
                extendSelection(this.doc, pos, pos, dir);
            }),

            deleteH: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel;
                if (!posEq(sel.from, sel.to)) replaceRange(this.doc, "", =
sel.from, sel.to, "+delete");
                else replaceRange(this.doc, "", sel.from, =
findPosH(this.doc, sel.head, dir, unit, false), "+delete");
                this.curOp.userSelChange =3D true;
            }),

            findPosV: function(from, amount, unit, goalColumn) {
                var dir =3D 1, x =3D goalColumn;
                if (amount < 0) { dir =3D -1; amount =3D -amount; }
                for (var i =3D 0, cur =3D clipPos(this.doc, from); i < =
amount; ++i) {
                    var coords =3D cursorCoords(this, cur, "div");
                    if (x =3D=3D null) x =3D coords.left;
                    else coords.left =3D x;
                    cur =3D findPosV(this, coords, dir, unit);
                    if (cur.hitSide) break;
                }
                return cur;
            },

            moveV: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel;
                var pos =3D cursorCoords(this, sel.head, "div");
                if (sel.goalColumn !=3D null) pos.left =3D =
sel.goalColumn;
                var target =3D findPosV(this, pos, dir, unit);

                if (unit =3D=3D "page") addToScrollPos(this, 0, =
charCoords(this, target, "div").top - pos.top);
                extendSelection(this.doc, target, target, dir);
                sel.goalColumn =3D pos.left;
            }),

            toggleOverwrite: function(value) {
                if (value !=3D null && value =3D=3D =
this.state.overwrite) return;
                if (this.state.overwrite =3D !this.state.overwrite)
                    this.display.cursor.className +=3D " =
CodeMirror-overwrite";
                else
                    this.display.cursor.className =3D =
this.display.cursor.className.replace(" CodeMirror-overwrite", "");
            },
            hasFocus: function() { return this.state.focused; },

            scrollTo: operation(null, function(x, y) {
                updateScrollPos(this, x, y);
            }),
            getScrollInfo: function() {
                var scroller =3D this.display.scroller, co =3D =
scrollerCutOff;
                return {left: scroller.scrollLeft, top: =
scroller.scrollTop,
                    height: scroller.scrollHeight - co, width: =
scroller.scrollWidth - co,
                    clientHeight: scroller.clientHeight - co, =
clientWidth: scroller.clientWidth - co};
            },

            scrollIntoView: operation(null, function(pos, margin) {
                if (typeof pos =3D=3D "number") pos =3D Pos(pos, 0);
                if (!margin) margin =3D 0;
                var coords =3D pos;

                if (!pos || pos.line !=3D null) {
                    this.curOp.scrollToPos =3D pos ? clipPos(this.doc, =
pos) : this.doc.sel.head;
                    this.curOp.scrollToPosMargin =3D margin;
                    coords =3D cursorCoords(this, =
this.curOp.scrollToPos);
                }
                var sPos =3D calculateScrollPos(this, coords.left, =
coords.top - margin, coords.right, coords.bottom + margin);
                updateScrollPos(this, sPos.scrollLeft, sPos.scrollTop);
            }),

            setSize: operation(null, function(width, height) {
                function interpret(val) {
                    return typeof val =3D=3D "number" || =
/^\d+$/.test(String(val)) ? val + "px" : val;
                }
                if (width !=3D null) this.display.wrapper.style.width =
=3D interpret(width);
                if (height !=3D null) this.display.wrapper.style.height =
=3D interpret(height);
                if (this.options.lineWrapping)
                    this.display.measureLineCache.length =3D =
this.display.measureLineCachePos =3D 0;
                this.curOp.forceUpdate =3D true;
            }),

            operation: function(f){return runInOp(this, f);},

            refresh: operation(null, function() {
                clearCaches(this);
                updateScrollPos(this, this.doc.scrollLeft, =
this.doc.scrollTop);
                regChange(this);
            }),

            swapDoc: operation(null, function(doc) {
                var old =3D this.doc;
                old.cm =3D null;
                attachDoc(this, doc);
                clearCaches(this);
                resetInput(this, true);
                updateScrollPos(this, doc.scrollLeft, doc.scrollTop);
                return old;
            }),

            getInputField: function(){return this.display.input;},
            getWrapperElement: function(){return this.display.wrapper;},
            getScrollerElement: function(){return =
this.display.scroller;},
            getGutterElement: function(){return this.display.gutters;}
        };
        eventMixin(CodeMirror);

        // OPTION DEFAULTS

        var optionHandlers =3D CodeMirror.optionHandlers =3D {};

        // The default configuration options.
        var defaults =3D CodeMirror.defaults =3D {};

        function option(name, deflt, handle, notOnInit) {
            CodeMirror.defaults[name] =3D deflt;
            if (handle) optionHandlers[name] =3D
                notOnInit ? function(cm, val, old) {if (old !=3D Init) =
handle(cm, val, old);} : handle;
        }

        var Init =3D CodeMirror.Init =3D {toString: function(){return =
"CodeMirror.Init";}};

        // These two are, on init, called from the constructor because =
they
        // have to be initialized before the editor can start at all.
        option("value", "", function(cm, val) {
            cm.setValue(val);
        }, true);
        option("mode", null, function(cm, val) {
            cm.doc.modeOption =3D val;
            loadMode(cm);
        }, true);

        option("indentUnit", 2, loadMode, true);
        option("indentWithTabs", false);
        option("smartIndent", true);
        option("tabSize", 4, function(cm) {
            loadMode(cm);
            clearCaches(cm);
            regChange(cm);
        }, true);
        option("electricChars", true);
        option("rtlMoveVisually", !windows);

        option("theme", "default", function(cm) {
            themeChanged(cm);
            guttersChanged(cm);
        }, true);
        option("keyMap", "default", keyMapChanged);
        option("extraKeys", null);

        option("onKeyEvent", null);
        option("onDragEvent", null);

        option("lineWrapping", false, wrappingChanged, true);
        option("gutters", [], function(cm) {
            setGuttersForLineNumbers(cm.options);
            guttersChanged(cm);
        }, true);
        option("fixedGutter", true, function(cm, val) {
            cm.display.gutters.style.left =3D val ? =
compensateForHScroll(cm.display) + "px" : "0";
            cm.refresh();
        }, true);
        option("coverGutterNextToScrollbar", false, updateScrollbars, =
true);
        option("lineNumbers", false, function(cm) {
            setGuttersForLineNumbers(cm.options);
            guttersChanged(cm);
        }, true);
        option("firstLineNumber", 1, guttersChanged, true);
        option("lineNumberFormatter", function(integer) {return =
integer;}, guttersChanged, true);
        option("showCursorWhenSelecting", false, updateSelection, true);

        option("readOnly", false, function(cm, val) {
            if (val =3D=3D "nocursor") {onBlur(cm); =
cm.display.input.blur();}
            else if (!val) resetInput(cm, true);
        });
        option("dragDrop", true);

        option("cursorBlinkRate", 530);
        option("cursorScrollMargin", 0);
        option("cursorHeight", 1);
        option("workTime", 100);
        option("workDelay", 100);
        option("flattenSpans", true);
        option("pollInterval", 100);
        option("undoDepth", 40, function(cm, =
val){cm.doc.history.undoDepth =3D val;});
        option("historyEventDelay", 500);
        option("viewportMargin", 10, function(cm){cm.refresh();}, true);
        option("maxHighlightLength", 10000, function(cm){loadMode(cm); =
cm.refresh();}, true);
        option("moveInputWithCursor", true, function(cm, val) {
            if (!val) cm.display.inputDiv.style.top =3D =
cm.display.inputDiv.style.left =3D 0;
        });

        option("tabindex", null, function(cm, val) {
            cm.display.input.tabIndex =3D val || "";
        });
        option("autofocus", null);

        // MODE DEFINITION AND QUERYING

        // Known modes, by name and by MIME
        var modes =3D CodeMirror.modes =3D {}, mimeModes =3D =
CodeMirror.mimeModes =3D {};

        CodeMirror.defineMode =3D function(name, mode) {
            if (!CodeMirror.defaults.mode && name !=3D "null") =
CodeMirror.defaults.mode =3D name;
            if (arguments.length > 2) {
                mode.dependencies =3D [];
                for (var i =3D 2; i < arguments.length; ++i) =
mode.dependencies.push(arguments[i]);
            }
            modes[name] =3D mode;
        };

        CodeMirror.defineMIME =3D function(mime, spec) {
            mimeModes[mime] =3D spec;
        };

        CodeMirror.resolveMode =3D function(spec) {
            if (typeof spec =3D=3D "string" && =
mimeModes.hasOwnProperty(spec)) {
                spec =3D mimeModes[spec];
            } else if (spec && typeof spec.name =3D=3D "string" && =
mimeModes.hasOwnProperty(spec.name)) {
                var found =3D mimeModes[spec.name];
                spec =3D createObj(found, spec);
                spec.name =3D found.name;
            } else if (typeof spec =3D=3D "string" && =
/^[\w\-]+\/[\w\-]+\+xml$/.test(spec)) {
                return CodeMirror.resolveMode("application/xml");
            }
            if (typeof spec =3D=3D "string") return {name: spec};
            else return spec || {name: "null"};
        };

        CodeMirror.getMode =3D function(options, spec) {
            var spec =3D CodeMirror.resolveMode(spec);
            var mfactory =3D modes[spec.name];
            if (!mfactory) return CodeMirror.getMode(options, =
"text/plain");
            var modeObj =3D mfactory(options, spec);
            if (modeExtensions.hasOwnProperty(spec.name)) {
                var exts =3D modeExtensions[spec.name];
                for (var prop in exts) {
                    if (!exts.hasOwnProperty(prop)) continue;
                    if (modeObj.hasOwnProperty(prop)) modeObj["_" + =
prop] =3D modeObj[prop];
                    modeObj[prop] =3D exts[prop];
                }
            }
            modeObj.name =3D spec.name;

            return modeObj;
        };

        CodeMirror.defineMode("null", function() {
            return {token: function(stream) {stream.skipToEnd();}};
        });
        CodeMirror.defineMIME("text/plain", "null");

        var modeExtensions =3D CodeMirror.modeExtensions =3D {};
        CodeMirror.extendMode =3D function(mode, properties) {
            var exts =3D modeExtensions.hasOwnProperty(mode) ? =
modeExtensions[mode] : (modeExtensions[mode] =3D {});
            copyObj(properties, exts);
        };

        // EXTENSIONS

        CodeMirror.defineExtension =3D function(name, func) {
            CodeMirror.prototype[name] =3D func;
        };
        CodeMirror.defineDocExtension =3D function(name, func) {
            Doc.prototype[name] =3D func;
        };
        CodeMirror.defineOption =3D option;

        var initHooks =3D [];
        CodeMirror.defineInitHook =3D function(f) {initHooks.push(f);};

        var helpers =3D CodeMirror.helpers =3D {};
        CodeMirror.registerHelper =3D function(type, name, value) {
            if (!helpers.hasOwnProperty(type)) helpers[type] =3D =
CodeMirror[type] =3D {};
            helpers[type][name] =3D value;
        };

        // UTILITIES

        CodeMirror.isWordChar =3D isWordChar;

        // MODE STATE HANDLING

        // Utility functions for working with state. Exported because =
modes
        // sometimes need to do this.
        function copyState(mode, state) {
            if (state =3D=3D=3D true) return state;
            if (mode.copyState) return mode.copyState(state);
            var nstate =3D {};
            for (var n in state) {
                var val =3D state[n];
                if (val instanceof Array) val =3D val.concat([]);
                nstate[n] =3D val;
            }
            return nstate;
        }
        CodeMirror.copyState =3D copyState;

        function startState(mode, a1, a2) {
            return mode.startState ? mode.startState(a1, a2) : true;
        }
        CodeMirror.startState =3D startState;

        CodeMirror.innerMode =3D function(mode, state) {
            while (mode.innerMode) {
                var info =3D mode.innerMode(state);
                if (!info || info.mode =3D=3D mode) break;
                state =3D info.state;
                mode =3D info.mode;
            }
            return info || {mode: mode, state: state};
        };

        // STANDARD COMMANDS

        var commands =3D CodeMirror.commands =3D {
            selectAll: function(cm) {cm.setSelection(Pos(cm.firstLine(), =
0), Pos(cm.lastLine()));},
            killLine: function(cm) {
                var from =3D cm.getCursor(true), to =3D =
cm.getCursor(false), sel =3D !posEq(from, to);
                if (!sel && cm.getLine(from.line).length =3D=3D from.ch)
                    cm.replaceRange("", from, Pos(from.line + 1, 0), =
"+delete");
                else cm.replaceRange("", from, sel ? to : =
Pos(from.line), "+delete");
            },
            deleteLine: function(cm) {
                var l =3D cm.getCursor().line;
                cm.replaceRange("", Pos(l, 0), Pos(l), "+delete");
            },
            delLineLeft: function(cm) {
                var cur =3D cm.getCursor();
                cm.replaceRange("", Pos(cur.line, 0), cur, "+delete");
            },
            undo: function(cm) {cm.undo();},
            redo: function(cm) {cm.redo();},
            goDocStart: function(cm) =
{cm.extendSelection(Pos(cm.firstLine(), 0));},
            goDocEnd: function(cm) =
{cm.extendSelection(Pos(cm.lastLine()));},
            goLineStart: function(cm) {
                cm.extendSelection(lineStart(cm, cm.getCursor().line));
            },
            goLineStartSmart: function(cm) {
                var cur =3D cm.getCursor(), start =3D lineStart(cm, =
cur.line);
                var line =3D cm.getLineHandle(start.line);
                var order =3D getOrder(line);
                if (!order || order[0].level =3D=3D 0) {
                    var firstNonWS =3D Math.max(0, =
line.text.search(/\S/));
                    var inWS =3D cur.line =3D=3D start.line && cur.ch =
<=3D firstNonWS && cur.ch;
                    cm.extendSelection(Pos(start.line, inWS ? 0 : =
firstNonWS));
                } else cm.extendSelection(start);
            },
            goLineEnd: function(cm) {
                cm.extendSelection(lineEnd(cm, cm.getCursor().line));
            },
            goLineRight: function(cm) {
                var top =3D cm.charCoords(cm.getCursor(), "div").top + =
5;
                cm.extendSelection(cm.coordsChar({left: =
cm.display.lineDiv.offsetWidth + 100, top: top}, "div"));
            },
            goLineLeft: function(cm) {
                var top =3D cm.charCoords(cm.getCursor(), "div").top + =
5;
                cm.extendSelection(cm.coordsChar({left: 0, top: top}, =
"div"));
            },
            goLineUp: function(cm) {cm.moveV(-1, "line");},
            goLineDown: function(cm) {cm.moveV(1, "line");},
            goPageUp: function(cm) {cm.moveV(-1, "page");},
            goPageDown: function(cm) {cm.moveV(1, "page");},
            goCharLeft: function(cm) {cm.moveH(-1, "char");},
            goCharRight: function(cm) {cm.moveH(1, "char");},
            goColumnLeft: function(cm) {cm.moveH(-1, "column");},
            goColumnRight: function(cm) {cm.moveH(1, "column");},
            goWordLeft: function(cm) {cm.moveH(-1, "word");},
            goGroupRight: function(cm) {cm.moveH(1, "group");},
            goGroupLeft: function(cm) {cm.moveH(-1, "group");},
            goWordRight: function(cm) {cm.moveH(1, "word");},
            delCharBefore: function(cm) {cm.deleteH(-1, "char");},
            delCharAfter: function(cm) {cm.deleteH(1, "char");},
            delWordBefore: function(cm) {cm.deleteH(-1, "word");},
            delWordAfter: function(cm) {cm.deleteH(1, "word");},
            delGroupBefore: function(cm) {cm.deleteH(-1, "group");},
            delGroupAfter: function(cm) {cm.deleteH(1, "group");},
            indentAuto: function(cm) {cm.indentSelection("smart");},
            indentMore: function(cm) {cm.indentSelection("add");},
            indentLess: function(cm) {cm.indentSelection("subtract");},
            insertTab: function(cm) {cm.replaceSelection("\t", "end", =
"+input");},
            defaultTab: function(cm) {
                if (cm.somethingSelected()) cm.indentSelection("add");
                else cm.replaceSelection("\t", "end", "+input");
            },
            transposeChars: function(cm) {
                var cur =3D cm.getCursor(), line =3D =
cm.getLine(cur.line);
                if (cur.ch > 0 && cur.ch < line.length - 1)
                    cm.replaceRange(line.charAt(cur.ch) + =
line.charAt(cur.ch - 1),
                        Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch =
+ 1));
            },
            newlineAndIndent: function(cm) {
                operation(cm, function() {
                    cm.replaceSelection("\n", "end", "+input");
                    cm.indentLine(cm.getCursor().line, null, true);
                })();
            },
            toggleOverwrite: function(cm) {cm.toggleOverwrite();}
        };

        // STANDARD KEYMAPS

        var keyMap =3D CodeMirror.keyMap =3D {};
        keyMap.basic =3D {
            "Left": "goCharLeft", "Right": "goCharRight", "Up": =
"goLineUp", "Down": "goLineDown",
            "End": "goLineEnd", "Home": "goLineStartSmart", "PageUp": =
"goPageUp", "PageDown": "goPageDown",
            "Delete": "delCharAfter", "Backspace": "delCharBefore", =
"Tab": "defaultTab", "Shift-Tab": "indentAuto",
            "Enter": "newlineAndIndent", "Insert": "toggleOverwrite"
        };
        // Note that the save and find-related commands aren't defined =
by
        // default. Unknown commands are simply ignored.
        keyMap.pcDefault =3D {
            "Ctrl-A": "selectAll", "Ctrl-D": "deleteLine", "Ctrl-Z": =
"undo", "Shift-Ctrl-Z": "redo", "Ctrl-Y": "redo",
            "Ctrl-Home": "goDocStart", "Alt-Up": "goDocStart", =
"Ctrl-End": "goDocEnd", "Ctrl-Down": "goDocEnd",
            "Ctrl-Left": "goGroupLeft", "Ctrl-Right": "goGroupRight", =
"Alt-Left": "goLineStart", "Alt-Right": "goLineEnd",
            "Ctrl-Backspace": "delGroupBefore", "Ctrl-Delete": =
"delGroupAfter", "Ctrl-S": "save", "Ctrl-F": "find",
            "Ctrl-G": "findNext", "Shift-Ctrl-G": "findPrev", =
"Shift-Ctrl-F": "replace", "Shift-Ctrl-R": "replaceAll",
            "Ctrl-[": "indentLess", "Ctrl-]": "indentMore",
            fallthrough: "basic"
        };
        keyMap.macDefault =3D {
            "Cmd-A": "selectAll", "Cmd-D": "deleteLine", "Cmd-Z": =
"undo", "Shift-Cmd-Z": "redo", "Cmd-Y": "redo",
            "Cmd-Up": "goDocStart", "Cmd-End": "goDocEnd", "Cmd-Down": =
"goDocEnd", "Alt-Left": "goGroupLeft",
            "Alt-Right": "goGroupRight", "Cmd-Left": "goLineStart", =
"Cmd-Right": "goLineEnd", "Alt-Backspace": "delGroupBefore",
            "Ctrl-Alt-Backspace": "delGroupAfter", "Alt-Delete": =
"delGroupAfter", "Cmd-S": "save", "Cmd-F": "find",
            "Cmd-G": "findNext", "Shift-Cmd-G": "findPrev", "Cmd-Alt-F": =
"replace", "Shift-Cmd-Alt-F": "replaceAll",
            "Cmd-[": "indentLess", "Cmd-]": "indentMore", =
"Cmd-Backspace": "delLineLeft",
            fallthrough: ["basic", "emacsy"]
        };
        keyMap["default"] =3D mac ? keyMap.macDefault : =
keyMap.pcDefault;
        keyMap.emacsy =3D {
            "Ctrl-F": "goCharRight", "Ctrl-B": "goCharLeft", "Ctrl-P": =
"goLineUp", "Ctrl-N": "goLineDown",
            "Alt-F": "goWordRight", "Alt-B": "goWordLeft", "Ctrl-A": =
"goLineStart", "Ctrl-E": "goLineEnd",
            "Ctrl-V": "goPageDown", "Shift-Ctrl-V": "goPageUp", =
"Ctrl-D": "delCharAfter", "Ctrl-H": "delCharBefore",
            "Alt-D": "delWordAfter", "Alt-Backspace": "delWordBefore", =
"Ctrl-K": "killLine", "Ctrl-T": "transposeChars"
        };

        // KEYMAP DISPATCH

        function getKeyMap(val) {
            if (typeof val =3D=3D "string") return keyMap[val];
            else return val;
        }

        function lookupKey(name, maps, handle) {
            function lookup(map) {
                map =3D getKeyMap(map);
                var found =3D map[name];
                if (found =3D=3D=3D false) return "stop";
                if (found !=3D null && handle(found)) return true;
                if (map.nofallthrough) return "stop";

                var fallthrough =3D map.fallthrough;
                if (fallthrough =3D=3D null) return false;
                if (Object.prototype.toString.call(fallthrough) !=3D =
"[object Array]")
                    return lookup(fallthrough);
                for (var i =3D 0, e =3D fallthrough.length; i < e; ++i) =
{
                    var done =3D lookup(fallthrough[i]);
                    if (done) return done;
                }
                return false;
            }

            for (var i =3D 0; i < maps.length; ++i) {
                var done =3D lookup(maps[i]);
                if (done) return done !=3D "stop";
            }
        }
        function isModifierKey(event) {
            var name =3D keyNames[event.keyCode];
            return name =3D=3D "Ctrl" || name =3D=3D "Alt" || name =
=3D=3D "Shift" || name =3D=3D "Mod";
        }
        function keyName(event, noShift) {
            if (opera && event.keyCode =3D=3D 34 && event["char"]) =
return false;
            var name =3D keyNames[event.keyCode];
            if (name =3D=3D null || event.altGraphKey) return false;
            if (event.altKey) name =3D "Alt-" + name;
            if (flipCtrlCmd ? event.metaKey : event.ctrlKey) name =3D =
"Ctrl-" + name;
            if (flipCtrlCmd ? event.ctrlKey : event.metaKey) name =3D =
"Cmd-" + name;
            if (!noShift && event.shiftKey) name =3D "Shift-" + name;
            return name;
        }
        CodeMirror.lookupKey =3D lookupKey;
        CodeMirror.isModifierKey =3D isModifierKey;
        CodeMirror.keyName =3D keyName;

        // FROMTEXTAREA

        CodeMirror.fromTextArea =3D function(textarea, options) {
            if (!options) options =3D {};
            options.value =3D textarea.value;
            if (!options.tabindex && textarea.tabindex)
                options.tabindex =3D textarea.tabindex;
            if (!options.placeholder && textarea.placeholder)
                options.placeholder =3D textarea.placeholder;
            // Set autofocus to true if this textarea is focused, or if =
it has
            // autofocus and no other element is focused.
            if (options.autofocus =3D=3D null) {
                var hasFocus =3D document.body;
                // doc.activeElement occasionally throws on IE
                try { hasFocus =3D document.activeElement; } catch(e) {}
                options.autofocus =3D hasFocus =3D=3D textarea ||
                    textarea.getAttribute("autofocus") !=3D null && =
hasFocus =3D=3D document.body;
            }

            function save() {textarea.value =3D cm.getValue();}
            if (textarea.form) {
                on(textarea.form, "submit", save);
                // Deplorable hack to make the submit method do the =
right thing.
                if (!options.leaveSubmitMethodAlone) {
                    var form =3D textarea.form, realSubmit =3D =
form.submit;
                    try {
                        var wrappedSubmit =3D form.submit =3D function() =
{
                            save();
                            form.submit =3D realSubmit;
                            form.submit();
                            form.submit =3D wrappedSubmit;
                        };
                    } catch(e) {}
                }
            }

            textarea.style.display =3D "none";
            var cm =3D CodeMirror(function(node) {
                textarea.parentNode.insertBefore(node, =
textarea.nextSibling);
            }, options);
            cm.save =3D save;
            cm.getTextArea =3D function() { return textarea; };
            cm.toTextArea =3D function() {
                save();
                textarea.parentNode.removeChild(cm.getWrapperElement());
                textarea.style.display =3D "";
                if (textarea.form) {
                    off(textarea.form, "submit", save);
                    if (typeof textarea.form.submit =3D=3D "function")
                        textarea.form.submit =3D realSubmit;
                }
            };
            return cm;
        };

        // STRING STREAM

        // Fed to the mode parsers, provides helper functions to make
        // parsers more succinct.

        // The character stream used by a mode's parser.
        function StringStream(string, tabSize) {
            this.pos =3D this.start =3D 0;
            this.string =3D string;
            this.tabSize =3D tabSize || 8;
            this.lastColumnPos =3D this.lastColumnValue =3D 0;
        }

        StringStream.prototype =3D {
            eol: function() {return this.pos >=3D this.string.length;},
            sol: function() {return this.pos =3D=3D 0;},
            peek: function() {return this.string.charAt(this.pos) || =
undefined;},
            next: function() {
                if (this.pos < this.string.length)
                    return this.string.charAt(this.pos++);
            },
            eat: function(match) {
                var ch =3D this.string.charAt(this.pos);
                if (typeof match =3D=3D "string") var ok =3D ch =3D=3D =
match;
                else var ok =3D ch && (match.test ? match.test(ch) : =
match(ch));
                if (ok) {++this.pos; return ch;}
            },
            eatWhile: function(match) {
                var start =3D this.pos;
                while (this.eat(match)){}
                return this.pos > start;
            },
            eatSpace: function() {
                var start =3D this.pos;
                while (/[\s\u00a0]/.test(this.string.charAt(this.pos))) =
++this.pos;
                return this.pos > start;
            },
            skipToEnd: function() {this.pos =3D this.string.length;},
            skipTo: function(ch) {
                var found =3D this.string.indexOf(ch, this.pos);
                if (found > -1) {this.pos =3D found; return true;}
            },
            backUp: function(n) {this.pos -=3D n;},
            column: function() {
                if (this.lastColumnPos < this.start) {
                    this.lastColumnValue =3D countColumn(this.string, =
this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);
                    this.lastColumnPos =3D this.start;
                }
                return this.lastColumnValue;
            },
            indentation: function() {return countColumn(this.string, =
null, this.tabSize);},
            match: function(pattern, consume, caseInsensitive) {
                if (typeof pattern =3D=3D "string") {
                    var cased =3D function(str) {return caseInsensitive =
? str.toLowerCase() : str;};
                    var substr =3D this.string.substr(this.pos, =
pattern.length);
                    if (cased(substr) =3D=3D cased(pattern)) {
                        if (consume !=3D=3D false) this.pos +=3D =
pattern.length;
                        return true;
                    }
                } else {
                    var match =3D =
this.string.slice(this.pos).match(pattern);
                    if (match && match.index > 0) return null;
                    if (match && consume !=3D=3D false) this.pos +=3D =
match[0].length;
                    return match;
                }
            },
            current: function(){return this.string.slice(this.start, =
this.pos);}
        };
        CodeMirror.StringStream =3D StringStream;

        // TEXTMARKERS

        function TextMarker(doc, type) {
            this.lines =3D [];
            this.type =3D type;
            this.doc =3D doc;
        }
        CodeMirror.TextMarker =3D TextMarker;
        eventMixin(TextMarker);

        TextMarker.prototype.clear =3D function() {
            if (this.explicitlyCleared) return;
            var cm =3D this.doc.cm, withOp =3D cm && !cm.curOp;
            if (withOp) startOperation(cm);
            if (hasHandler(this, "clear")) {
                var found =3D this.find();
                if (found) signalLater(this, "clear", found.from, =
found.to);
            }
            var min =3D null, max =3D null;
            for (var i =3D 0; i < this.lines.length; ++i) {
                var line =3D this.lines[i];
                var span =3D getMarkedSpanFor(line.markedSpans, this);
                if (span.to !=3D null) max =3D lineNo(line);
                line.markedSpans =3D removeMarkedSpan(line.markedSpans, =
span);
                if (span.from !=3D null)
                    min =3D lineNo(line);
                else if (this.collapsed && !lineIsHidden(this.doc, line) =
&& cm)
                    updateLineHeight(line, textHeight(cm.display));
            }
            if (cm && this.collapsed && !cm.options.lineWrapping) for =
(var i =3D 0; i < this.lines.length; ++i) {
                var visual =3D visualLine(cm.doc, this.lines[i]), len =
=3D lineLength(cm.doc, visual);
                if (len > cm.display.maxLineLength) {
                    cm.display.maxLine =3D visual;
                    cm.display.maxLineLength =3D len;
                    cm.display.maxLineChanged =3D true;
                }
            }

            if (min !=3D null && cm) regChange(cm, min, max + 1);
            this.lines.length =3D 0;
            this.explicitlyCleared =3D true;
            if (this.atomic && this.doc.cantEdit) {
                this.doc.cantEdit =3D false;
                if (cm) reCheckSelection(cm);
            }
            if (withOp) endOperation(cm);
        };

        TextMarker.prototype.find =3D function() {
            var from, to;
            for (var i =3D 0; i < this.lines.length; ++i) {
                var line =3D this.lines[i];
                var span =3D getMarkedSpanFor(line.markedSpans, this);
                if (span.from !=3D null || span.to !=3D null) {
                    var found =3D lineNo(line);
                    if (span.from !=3D null) from =3D Pos(found, =
span.from);
                    if (span.to !=3D null) to =3D Pos(found, span.to);
                }
            }
            if (this.type =3D=3D "bookmark") return from;
            return from && {from: from, to: to};
        };

        TextMarker.prototype.changed =3D function() {
            var pos =3D this.find(), cm =3D this.doc.cm;
            if (!pos || !cm) return;
            var line =3D getLine(this.doc, pos.from.line);
            clearCachedMeasurement(cm, line);
            if (pos.from.line >=3D cm.display.showingFrom && =
pos.from.line < cm.display.showingTo) {
                for (var node =3D cm.display.lineDiv.firstChild; node; =
node =3D node.nextSibling) if (node.lineObj =3D=3D line) {
                    if (node.offsetHeight !=3D line.height) =
updateLineHeight(line, node.offsetHeight);
                    break;
                }
                runInOp(cm, function() {
                    cm.curOp.selectionChanged =3D cm.curOp.forceUpdate =
=3D cm.curOp.updateMaxLine =3D true;
                });
            }
        };

        TextMarker.prototype.attachLine =3D function(line) {
            if (!this.lines.length && this.doc.cm) {
                var op =3D this.doc.cm.curOp;
                if (!op.maybeHiddenMarkers || =
indexOf(op.maybeHiddenMarkers, this) =3D=3D -1)
                    (op.maybeUnhiddenMarkers || (op.maybeUnhiddenMarkers =
=3D [])).push(this);
            }
            this.lines.push(line);
        };
        TextMarker.prototype.detachLine =3D function(line) {
            this.lines.splice(indexOf(this.lines, line), 1);
            if (!this.lines.length && this.doc.cm) {
                var op =3D this.doc.cm.curOp;
                (op.maybeHiddenMarkers || (op.maybeHiddenMarkers =3D =
[])).push(this);
            }
        };

        function markText(doc, from, to, options, type) {
            if (options && options.shared) return markTextShared(doc, =
from, to, options, type);
            if (doc.cm && !doc.cm.curOp) return operation(doc.cm, =
markText)(doc, from, to, options, type);

            var marker =3D new TextMarker(doc, type);
            if (type =3D=3D "range" && !posLess(from, to)) return =
marker;
            if (options) copyObj(options, marker);
            if (marker.replacedWith) {
                marker.collapsed =3D true;
                marker.replacedWith =3D elt("span", =
[marker.replacedWith], "CodeMirror-widget");
                if (!options.handleMouseEvents) =
marker.replacedWith.ignoreEvents =3D true;
            }
            if (marker.collapsed) sawCollapsedSpans =3D true;

            if (marker.addToHistory)
                addToHistory(doc, {from: from, to: to, origin: =
"markText"},
                    {head: doc.sel.head, anchor: doc.sel.anchor}, NaN);

            var curLine =3D from.line, size =3D 0, collapsedAtStart, =
collapsedAtEnd, cm =3D doc.cm, updateMaxLine;
            doc.iter(curLine, to.line + 1, function(line) {
                if (cm && marker.collapsed && !cm.options.lineWrapping =
&& visualLine(doc, line) =3D=3D cm.display.maxLine)
                    updateMaxLine =3D true;
                var span =3D {from: null, to: null, marker: marker};
                size +=3D line.text.length;
                if (curLine =3D=3D from.line) {span.from =3D from.ch; =
size -=3D from.ch;}
                if (curLine =3D=3D to.line) {span.to =3D to.ch; size =
-=3D line.text.length - to.ch;}
                if (marker.collapsed) {
                    if (curLine =3D=3D to.line) collapsedAtEnd =3D =
collapsedSpanAt(line, to.ch);
                    if (curLine =3D=3D from.line) collapsedAtStart =3D =
collapsedSpanAt(line, from.ch);
                    else updateLineHeight(line, 0);
                }
                addMarkedSpan(line, span);
                ++curLine;
            });
            if (marker.collapsed) doc.iter(from.line, to.line + 1, =
function(line) {
                if (lineIsHidden(doc, line)) updateLineHeight(line, 0);
            });

            if (marker.clearOnEnter) on(marker, "beforeCursorEnter", =
function() { marker.clear(); });

            if (marker.readOnly) {
                sawReadOnlySpans =3D true;
                if (doc.history.done.length || =
doc.history.undone.length)
                    doc.clearHistory();
            }
            if (marker.collapsed) {
                if (collapsedAtStart !=3D collapsedAtEnd)
                    throw new Error("Inserting collapsed marker =
overlapping an existing one");
                marker.size =3D size;
                marker.atomic =3D true;
            }
            if (cm) {
                if (updateMaxLine) cm.curOp.updateMaxLine =3D true;
                if (marker.className || marker.title || =
marker.startStyle || marker.endStyle || marker.collapsed)
                    regChange(cm, from.line, to.line + 1);
                if (marker.atomic) reCheckSelection(cm);
            }
            return marker;
        }

        // SHARED TEXTMARKERS

        function SharedTextMarker(markers, primary) {
            this.markers =3D markers;
            this.primary =3D primary;
            for (var i =3D 0, me =3D this; i < markers.length; ++i) {
                markers[i].parent =3D this;
                on(markers[i], "clear", function(){me.clear();});
            }
        }
        CodeMirror.SharedTextMarker =3D SharedTextMarker;
        eventMixin(SharedTextMarker);

        SharedTextMarker.prototype.clear =3D function() {
            if (this.explicitlyCleared) return;
            this.explicitlyCleared =3D true;
            for (var i =3D 0; i < this.markers.length; ++i)
                this.markers[i].clear();
            signalLater(this, "clear");
        };
        SharedTextMarker.prototype.find =3D function() {
            return this.primary.find();
        };

        function markTextShared(doc, from, to, options, type) {
            options =3D copyObj(options);
            options.shared =3D false;
            var markers =3D [markText(doc, from, to, options, type)], =
primary =3D markers[0];
            var widget =3D options.replacedWith;
            linkedDocs(doc, function(doc) {
                if (widget) options.replacedWith =3D =
widget.cloneNode(true);
                markers.push(markText(doc, clipPos(doc, from), =
clipPos(doc, to), options, type));
                for (var i =3D 0; i < doc.linked.length; ++i)
                    if (doc.linked[i].isParent) return;
                primary =3D lst(markers);
            });
            return new SharedTextMarker(markers, primary);
        }

        // TEXTMARKER SPANS

        function getMarkedSpanFor(spans, marker) {
            if (spans) for (var i =3D 0; i < spans.length; ++i) {
                var span =3D spans[i];
                if (span.marker =3D=3D marker) return span;
            }
        }
        function removeMarkedSpan(spans, span) {
            for (var r, i =3D 0; i < spans.length; ++i)
                if (spans[i] !=3D span) (r || (r =3D =
[])).push(spans[i]);
            return r;
        }
        function addMarkedSpan(line, span) {
            line.markedSpans =3D line.markedSpans ? =
line.markedSpans.concat([span]) : [span];
            span.marker.attachLine(line);
        }

        function markedSpansBefore(old, startCh, isInsert) {
            if (old) for (var i =3D 0, nw; i < old.length; ++i) {
                var span =3D old[i], marker =3D span.marker;
                var startsBefore =3D span.from =3D=3D null || =
(marker.inclusiveLeft ? span.from <=3D startCh : span.from < startCh);
                if (startsBefore || marker.type =3D=3D "bookmark" && =
span.from =3D=3D startCh && (!isInsert || !span.marker.insertLeft)) {
                    var endsAfter =3D span.to =3D=3D null || =
(marker.inclusiveRight ? span.to >=3D startCh : span.to > startCh);
                    (nw || (nw =3D [])).push({from: span.from,
                        to: endsAfter ? null : span.to,
                        marker: marker});
                }
            }
            return nw;
        }

        function markedSpansAfter(old, endCh, isInsert) {
            if (old) for (var i =3D 0, nw; i < old.length; ++i) {
                var span =3D old[i], marker =3D span.marker;
                var endsAfter =3D span.to =3D=3D null || =
(marker.inclusiveRight ? span.to >=3D endCh : span.to > endCh);
                if (endsAfter || marker.type =3D=3D "bookmark" && =
span.from =3D=3D endCh && (!isInsert || span.marker.insertLeft)) {
                    var startsBefore =3D span.from =3D=3D null || =
(marker.inclusiveLeft ? span.from <=3D endCh : span.from < endCh);
                    (nw || (nw =3D [])).push({from: startsBefore ? null =
: span.from - endCh,
                        to: span.to =3D=3D null ? null : span.to - =
endCh,
                        marker: marker});
                }
            }
            return nw;
        }

        function stretchSpansOverChange(doc, change) {
            var oldFirst =3D isLine(doc, change.from.line) && =
getLine(doc, change.from.line).markedSpans;
            var oldLast =3D isLine(doc, change.to.line) && getLine(doc, =
change.to.line).markedSpans;
            if (!oldFirst && !oldLast) return null;

            var startCh =3D change.from.ch, endCh =3D change.to.ch, =
isInsert =3D posEq(change.from, change.to);
            // Get the spans that 'stick out' on both sides
            var first =3D markedSpansBefore(oldFirst, startCh, =
isInsert);
            var last =3D markedSpansAfter(oldLast, endCh, isInsert);

            // Next, merge those two ends
            var sameLine =3D change.text.length =3D=3D 1, offset =3D =
lst(change.text).length + (sameLine ? startCh : 0);
            if (first) {
                // Fix up .to properties of first
                for (var i =3D 0; i < first.length; ++i) {
                    var span =3D first[i];
                    if (span.to =3D=3D null) {
                        var found =3D getMarkedSpanFor(last, =
span.marker);
                        if (!found) span.to =3D startCh;
                        else if (sameLine) span.to =3D found.to =3D=3D =
null ? null : found.to + offset;
                    }
                }
            }
            if (last) {
                // Fix up .from in last (or move them into first in case =
of sameLine)
                for (var i =3D 0; i < last.length; ++i) {
                    var span =3D last[i];
                    if (span.to !=3D null) span.to +=3D offset;
                    if (span.from =3D=3D null) {
                        var found =3D getMarkedSpanFor(first, =
span.marker);
                        if (!found) {
                            span.from =3D offset;
                            if (sameLine) (first || (first =3D =
[])).push(span);
                        }
                    } else {
                        span.from +=3D offset;
                        if (sameLine) (first || (first =3D =
[])).push(span);
                    }
                }
            }
            if (sameLine && first) {
                // Make sure we didn't create any zero-length spans
                for (var i =3D 0; i < first.length; ++i)
                    if (first[i].from !=3D null && first[i].from =3D=3D =
first[i].to && first[i].marker.type !=3D "bookmark")
                        first.splice(i--, 1);
                if (!first.length) first =3D null;
            }

            var newMarkers =3D [first];
            if (!sameLine) {
                // Fill gap with whole-line-spans
                var gap =3D change.text.length - 2, gapMarkers;
                if (gap > 0 && first)
                    for (var i =3D 0; i < first.length; ++i)
                        if (first[i].to =3D=3D null)
                            (gapMarkers || (gapMarkers =3D =
[])).push({from: null, to: null, marker: first[i].marker});
                for (var i =3D 0; i < gap; ++i)
                    newMarkers.push(gapMarkers);
                newMarkers.push(last);
            }
            return newMarkers;
        }

        function mergeOldSpans(doc, change) {
            var old =3D getOldSpans(doc, change);
            var stretched =3D stretchSpansOverChange(doc, change);
            if (!old) return stretched;
            if (!stretched) return old;

            for (var i =3D 0; i < old.length; ++i) {
                var oldCur =3D old[i], stretchCur =3D stretched[i];
                if (oldCur && stretchCur) {
                    spans: for (var j =3D 0; j < stretchCur.length; ++j) =
{
                        var span =3D stretchCur[j];
                        for (var k =3D 0; k < oldCur.length; ++k)
                            if (oldCur[k].marker =3D=3D span.marker) =
continue spans;
                        oldCur.push(span);
                    }
                } else if (stretchCur) {
                    old[i] =3D stretchCur;
                }
            }
            return old;
        }

        function removeReadOnlyRanges(doc, from, to) {
            var markers =3D null;
            doc.iter(from.line, to.line + 1, function(line) {
                if (line.markedSpans) for (var i =3D 0; i < =
line.markedSpans.length; ++i) {
                    var mark =3D line.markedSpans[i].marker;
                    if (mark.readOnly && (!markers || indexOf(markers, =
mark) =3D=3D -1))
                        (markers || (markers =3D [])).push(mark);
                }
            });
            if (!markers) return null;
            var parts =3D [{from: from, to: to}];
            for (var i =3D 0; i < markers.length; ++i) {
                var mk =3D markers[i], m =3D mk.find();
                for (var j =3D 0; j < parts.length; ++j) {
                    var p =3D parts[j];
                    if (posLess(p.to, m.from) || posLess(m.to, p.from)) =
continue;
                    var newParts =3D [j, 1];
                    if (posLess(p.from, m.from) || !mk.inclusiveLeft && =
posEq(p.from, m.from))
                        newParts.push({from: p.from, to: m.from});
                    if (posLess(m.to, p.to) || !mk.inclusiveRight && =
posEq(p.to, m.to))
                        newParts.push({from: m.to, to: p.to});
                    parts.splice.apply(parts, newParts);
                    j +=3D newParts.length - 1;
                }
            }
            return parts;
        }

        function collapsedSpanAt(line, ch) {
            var sps =3D sawCollapsedSpans && line.markedSpans, found;
            if (sps) for (var sp, i =3D 0; i < sps.length; ++i) {
                sp =3D sps[i];
                if (!sp.marker.collapsed) continue;
                if ((sp.from =3D=3D null || sp.from < ch) &&
                    (sp.to =3D=3D null || sp.to > ch) &&
                    (!found || found.width < sp.marker.width))
                    found =3D sp.marker;
            }
            return found;
        }
        function collapsedSpanAtStart(line) { return =
collapsedSpanAt(line, -1); }
        function collapsedSpanAtEnd(line) { return collapsedSpanAt(line, =
line.text.length + 1); }

        function visualLine(doc, line) {
            var merged;
            while (merged =3D collapsedSpanAtStart(line))
                line =3D getLine(doc, merged.find().from.line);
            return line;
        }

        function lineIsHidden(doc, line) {
            var sps =3D sawCollapsedSpans && line.markedSpans;
            if (sps) for (var sp, i =3D 0; i < sps.length; ++i) {
                sp =3D sps[i];
                if (!sp.marker.collapsed) continue;
                if (sp.from =3D=3D null) return true;
                if (sp.marker.replacedWith) continue;
                if (sp.from =3D=3D 0 && sp.marker.inclusiveLeft && =
lineIsHiddenInner(doc, line, sp))
                    return true;
            }
        }
        function lineIsHiddenInner(doc, line, span) {
            if (span.to =3D=3D null) {
                var end =3D span.marker.find().to, endLine =3D =
getLine(doc, end.line);
                return lineIsHiddenInner(doc, endLine, =
getMarkedSpanFor(endLine.markedSpans, span.marker));
            }
            if (span.marker.inclusiveRight && span.to =3D=3D =
line.text.length)
                return true;
            for (var sp, i =3D 0; i < line.markedSpans.length; ++i) {
                sp =3D line.markedSpans[i];
                if (sp.marker.collapsed && !sp.marker.replacedWith && =
sp.from =3D=3D span.to &&
                    (sp.marker.inclusiveLeft || =
span.marker.inclusiveRight) &&
                    lineIsHiddenInner(doc, line, sp)) return true;
            }
        }

        function detachMarkedSpans(line) {
            var spans =3D line.markedSpans;
            if (!spans) return;
            for (var i =3D 0; i < spans.length; ++i)
                spans[i].marker.detachLine(line);
            line.markedSpans =3D null;
        }

        function attachMarkedSpans(line, spans) {
            if (!spans) return;
            for (var i =3D 0; i < spans.length; ++i)
                spans[i].marker.attachLine(line);
            line.markedSpans =3D spans;
        }

        // LINE WIDGETS

        var LineWidget =3D CodeMirror.LineWidget =3D function(cm, node, =
options) {
            if (options) for (var opt in options) if =
(options.hasOwnProperty(opt))
                this[opt] =3D options[opt];
            this.cm =3D cm;
            this.node =3D node;
        };
        eventMixin(LineWidget);
        function widgetOperation(f) {
            return function() {
                var withOp =3D !this.cm.curOp;
                if (withOp) startOperation(this.cm);
                try {var result =3D f.apply(this, arguments);}
                finally {if (withOp) endOperation(this.cm);}
                return result;
            };
        }
        LineWidget.prototype.clear =3D widgetOperation(function() {
            var ws =3D this.line.widgets, no =3D lineNo(this.line);
            if (no =3D=3D null || !ws) return;
            for (var i =3D 0; i < ws.length; ++i) if (ws[i] =3D=3D this) =
ws.splice(i--, 1);
            if (!ws.length) this.line.widgets =3D null;
            var aboveVisible =3D heightAtLine(this.cm, this.line) < =
this.cm.doc.scrollTop;
            updateLineHeight(this.line, Math.max(0, this.line.height - =
widgetHeight(this)));
            if (aboveVisible) addToScrollPos(this.cm, 0, -this.height);
            regChange(this.cm, no, no + 1);
        });
        LineWidget.prototype.changed =3D widgetOperation(function() {
            var oldH =3D this.height;
            this.height =3D null;
            var diff =3D widgetHeight(this) - oldH;
            if (!diff) return;
            updateLineHeight(this.line, this.line.height + diff);
            var no =3D lineNo(this.line);
            regChange(this.cm, no, no + 1);
        });

        function widgetHeight(widget) {
            if (widget.height !=3D null) return widget.height;
            if (!widget.node.parentNode || =
widget.node.parentNode.nodeType !=3D 1)
                removeChildrenAndAdd(widget.cm.display.measure, =
elt("div", [widget.node], null, "position: relative"));
            return widget.height =3D widget.node.offsetHeight;
        }

        function addLineWidget(cm, handle, node, options) {
            var widget =3D new LineWidget(cm, node, options);
            if (widget.noHScroll) cm.display.alignWidgets =3D true;
            changeLine(cm, handle, function(line) {
                var widgets =3D line.widgets || (line.widgets =3D []);
                if (widget.insertAt =3D=3D null) widgets.push(widget);
                else widgets.splice(Math.min(widgets.length - 1, =
Math.max(0, widget.insertAt)), 0, widget);
                widget.line =3D line;
                if (!lineIsHidden(cm.doc, line) || widget.showIfHidden) =
{
                    var aboveVisible =3D heightAtLine(cm, line) < =
cm.doc.scrollTop;
                    updateLineHeight(line, line.height + =
widgetHeight(widget));
                    if (aboveVisible) addToScrollPos(cm, 0, =
widget.height);
                }
                return true;
            });
            return widget;
        }

        // LINE DATA STRUCTURE

        // Line objects. These hold state related to a line, including
        // highlighting info (the styles array).
        var Line =3D CodeMirror.Line =3D function(text, markedSpans, =
estimateHeight) {
            this.text =3D text;
            attachMarkedSpans(this, markedSpans);
            this.height =3D estimateHeight ? estimateHeight(this) : 1;
        };
        eventMixin(Line);

        function updateLine(line, text, markedSpans, estimateHeight) {
            line.text =3D text;
            if (line.stateAfter) line.stateAfter =3D null;
            if (line.styles) line.styles =3D null;
            if (line.order !=3D null) line.order =3D null;
            detachMarkedSpans(line);
            attachMarkedSpans(line, markedSpans);
            var estHeight =3D estimateHeight ? estimateHeight(line) : 1;
            if (estHeight !=3D line.height) updateLineHeight(line, =
estHeight);
        }

        function cleanUpLine(line) {
            line.parent =3D null;
            detachMarkedSpans(line);
        }

        // Run the given mode's parser over a line, update the styles
        // array, which contains alternating fragments of text and CSS
        // classes.
        function runMode(cm, text, mode, state, f) {
            var flattenSpans =3D mode.flattenSpans;
            if (flattenSpans =3D=3D null) flattenSpans =3D =
cm.options.flattenSpans;
            var curStart =3D 0, curStyle =3D null;
            var stream =3D new StringStream(text, cm.options.tabSize), =
style;
            if (text =3D=3D "" && mode.blankLine) mode.blankLine(state);
            while (!stream.eol()) {
                if (stream.pos > cm.options.maxHighlightLength) {
                    flattenSpans =3D false;
                    // Webkit seems to refuse to render text nodes =
longer than 57444 characters
                    stream.pos =3D Math.min(text.length, stream.start + =
50000);
                    style =3D null;
                } else {
                    style =3D mode.token(stream, state);
                }
                if (!flattenSpans || curStyle !=3D style) {
                    if (curStart < stream.start) f(stream.start, =
curStyle);
                    curStart =3D stream.start; curStyle =3D style;
                }
                stream.start =3D stream.pos;
            }
            if (curStart < stream.pos) f(stream.pos, curStyle);
        }

        function highlightLine(cm, line, state) {
            // A styles array always starts with a number identifying =
the
            // mode/overlays that it is based on (for easy =
invalidation).
            var st =3D [cm.state.modeGen];
            // Compute the base array of styles
            runMode(cm, line.text, cm.doc.mode, state, function(end, =
style) {st.push(end, style);});

            // Run overlays, adjust style array.
            for (var o =3D 0; o < cm.state.overlays.length; ++o) {
                var overlay =3D cm.state.overlays[o], i =3D 1, at =3D 0;
                runMode(cm, line.text, overlay.mode, true, function(end, =
style) {
                    var start =3D i;
                    // Ensure there's a token end at the current =
position, and that i points at it
                    while (at < end) {
                        var i_end =3D st[i];
                        if (i_end > end)
                            st.splice(i, 1, end, st[i+1], i_end);
                        i +=3D 2;
                        at =3D Math.min(end, i_end);
                    }
                    if (!style) return;
                    if (overlay.opaque) {
                        st.splice(start, i - start, end, style);
                        i =3D start + 2;
                    } else {
                        for (; start < i; start +=3D 2) {
                            var cur =3D st[start+1];
                            st[start+1] =3D cur ? cur + " " + style : =
style;
                        }
                    }
                });
            }

            return st;
        }

        function getLineStyles(cm, line) {
            if (!line.styles || line.styles[0] !=3D cm.state.modeGen)
                line.styles =3D highlightLine(cm, line, line.stateAfter =
=3D getStateBefore(cm, lineNo(line)));
            return line.styles;
        }

        // Lightweight form of highlight -- proceed over this line and
        // update state, but don't save a style array.
        function processLine(cm, line, state) {
            var mode =3D cm.doc.mode;
            var stream =3D new StringStream(line.text, =
cm.options.tabSize);
            if (line.text =3D=3D "" && mode.blankLine) =
mode.blankLine(state);
            while (!stream.eol() && stream.pos <=3D =
cm.options.maxHighlightLength) {
                mode.token(stream, state);
                stream.start =3D stream.pos;
            }
        }

        var styleToClassCache =3D {};
        function styleToClass(style) {
            if (!style) return null;
            return styleToClassCache[style] ||
                (styleToClassCache[style] =3D "cm-" + style.replace(/ =
+/g, " cm-"));
        }

        function lineContent(cm, realLine, measure, copyWidgets) {
            var merged, line =3D realLine, empty =3D true;
            while (merged =3D collapsedSpanAtStart(line))
                line =3D getLine(cm.doc, merged.find().from.line);

            var builder =3D {pre: elt("pre"), col: 0, pos: 0,
                measure: null, measuredSomething: false, cm: cm,
                copyWidgets: copyWidgets};
            if (line.textClass) builder.pre.className =3D =
line.textClass;

            do {
                if (line.text) empty =3D false;
                builder.measure =3D line =3D=3D realLine && measure;
                builder.pos =3D 0;
                builder.addToken =3D builder.measure ? buildTokenMeasure =
: buildToken;
                if ((ie || webkit) && cm.getOption("lineWrapping"))
                    builder.addToken =3D =
buildTokenSplitSpaces(builder.addToken);
                var next =3D insertLineContent(line, builder, =
getLineStyles(cm, line));
                if (measure && line =3D=3D realLine && =
!builder.measuredSomething) {
                    measure[0] =3D =
builder.pre.appendChild(zeroWidthElement(cm.display.measure));
                    builder.measuredSomething =3D true;
                }
                if (next) line =3D getLine(cm.doc, next.to.line);
            } while (next);

            if (measure && !builder.measuredSomething && !measure[0])
                measure[0] =3D builder.pre.appendChild(empty ? =
elt("span", "\u00a0") : zeroWidthElement(cm.display.measure));
            if (!builder.pre.firstChild && !lineIsHidden(cm.doc, =
realLine))
                =
builder.pre.appendChild(document.createTextNode("\u00a0"));

            var order;
            // Work around problem with the reported dimensions of =
single-char
            // direction spans on IE (issue #1129). See also the comment =
in
            // cursorCoords.
            if (measure && ie && (order =3D getOrder(line))) {
                var l =3D order.length - 1;
                if (order[l].from =3D=3D order[l].to) --l;
                var last =3D order[l], prev =3D order[l - 1];
                if (last.from + 1 =3D=3D last.to && prev && last.level < =
prev.level) {
                    var span =3D measure[builder.pos - 1];
                    if (span) =
span.parentNode.insertBefore(span.measureRight =3D =
zeroWidthElement(cm.display.measure),
                        span.nextSibling);
                }
            }

            signal(cm, "renderLine", cm, realLine, builder.pre);
            return builder.pre;
        }

        var tokenSpecialChars =3D =
/[\t\u0000-\u0019\u00ad\u200b\u2028\u2029\uFEFF]/g;
        function buildToken(builder, text, style, startStyle, endStyle, =
title) {
            if (!text) return;
            if (!tokenSpecialChars.test(text)) {
                builder.col +=3D text.length;
                var content =3D document.createTextNode(text);
            } else {
                var content =3D document.createDocumentFragment(), pos =
=3D 0;
                while (true) {
                    tokenSpecialChars.lastIndex =3D pos;
                    var m =3D tokenSpecialChars.exec(text);
                    var skipped =3D m ? m.index - pos : text.length - =
pos;
                    if (skipped) {
                        =
content.appendChild(document.createTextNode(text.slice(pos, pos + =
skipped)));
                        builder.col +=3D skipped;
                    }
                    if (!m) break;
                    pos +=3D skipped + 1;
                    if (m[0] =3D=3D "\t") {
                        var tabSize =3D builder.cm.options.tabSize, =
tabWidth =3D tabSize - builder.col % tabSize;
                        content.appendChild(elt("span", =
spaceStr(tabWidth), "cm-tab"));
                        builder.col +=3D tabWidth;
                    } else {
                        var token =3D elt("span", "\u2022", =
"cm-invalidchar");
                        token.title =3D "\\u" + =
m[0].charCodeAt(0).toString(16);
                        content.appendChild(token);
                        builder.col +=3D 1;
                    }
                }
            }
            if (style || startStyle || endStyle || builder.measure) {
                var fullStyle =3D style || "";
                if (startStyle) fullStyle +=3D startStyle;
                if (endStyle) fullStyle +=3D endStyle;
                var token =3D elt("span", [content], fullStyle);
                if (title) token.title =3D title;
                return builder.pre.appendChild(token);
            }
            builder.pre.appendChild(content);
        }

        function buildTokenMeasure(builder, text, style, startStyle, =
endStyle) {
            var wrapping =3D builder.cm.options.lineWrapping;
            for (var i =3D 0; i < text.length; ++i) {
                var ch =3D text.charAt(i), start =3D i =3D=3D 0;
                if (ch >=3D "\ud800" && ch < "\udbff" && i < text.length =
- 1) {
                    ch =3D text.slice(i, i + 2);
                    ++i;
                } else if (i && wrapping && spanAffectsWrapping(text, =
i)) {
                    builder.pre.appendChild(elt("wbr"));
                }
                var old =3D builder.measure[builder.pos];
                var span =3D builder.measure[builder.pos] =3D
                    buildToken(builder, ch, style,
                            start && startStyle, i =3D=3D text.length - =
1 && endStyle);
                if (old) span.leftSide =3D old.leftSide || old;
                // In IE single-space nodes wrap differently than spaces
                // embedded in larger text nodes, except when set to
                // white-space: normal (issue #1268).
                if (ie && wrapping && ch =3D=3D " " && i && =
!/\s/.test(text.charAt(i - 1)) &&
                    i < text.length - 1 && !/\s/.test(text.charAt(i + =
1)))
                    span.style.whiteSpace =3D "normal";
                builder.pos +=3D ch.length;
            }
            if (text.length) builder.measuredSomething =3D true;
        }

        function buildTokenSplitSpaces(inner) {
            function split(old) {
                var out =3D " ";
                for (var i =3D 0; i < old.length - 2; ++i) out +=3D i % =
2 ? " " : "\u00a0";
                out +=3D " ";
                return out;
            }
            return function(builder, text, style, startStyle, endStyle, =
title) {
                return inner(builder, text.replace(/ {3,}/, split), =
style, startStyle, endStyle, title);
            };
        }

        function buildCollapsedSpan(builder, size, marker, ignoreWidget) =
{
            var widget =3D !ignoreWidget && marker.replacedWith;
            if (widget) {
                if (builder.copyWidgets) widget =3D =
widget.cloneNode(true);
                builder.pre.appendChild(widget);
                if (builder.measure) {
                    if (size) {
                        builder.measure[builder.pos] =3D widget;
                    } else {
                        var elt =3D builder.measure[builder.pos] =3D =
zeroWidthElement(builder.cm.display.measure);
                        if (marker.type !=3D "bookmark" || =
marker.insertLeft)
                            builder.pre.insertBefore(elt, widget);
                        else
                            builder.pre.appendChild(elt);
                    }
                    builder.measuredSomething =3D true;
                }
            }
            builder.pos +=3D size;
        }

        // Outputs a number of spans to make up a line, taking =
highlighting
        // and marked text into account.
        function insertLineContent(line, builder, styles) {
            var spans =3D line.markedSpans, allText =3D line.text, at =
=3D 0;
            if (!spans) {
                for (var i =3D 1; i < styles.length; i+=3D2)
                    builder.addToken(builder, allText.slice(at, at =3D =
styles[i]), styleToClass(styles[i+1]));
                return;
            }

            var len =3D allText.length, pos =3D 0, i =3D 1, text =3D "", =
style;
            var nextChange =3D 0, spanStyle, spanEndStyle, =
spanStartStyle, title, collapsed;
            for (;;) {
                if (nextChange =3D=3D pos) { // Update current marker =
set
                    spanStyle =3D spanEndStyle =3D spanStartStyle =3D =
title =3D "";
                    collapsed =3D null; nextChange =3D Infinity;
                    var foundBookmark =3D null;
                    for (var j =3D 0; j < spans.length; ++j) {
                        var sp =3D spans[j], m =3D sp.marker;
                        if (sp.from <=3D pos && (sp.to =3D=3D null || =
sp.to > pos)) {
                            if (sp.to !=3D null && nextChange > sp.to) { =
nextChange =3D sp.to; spanEndStyle =3D ""; }
                            if (m.className) spanStyle +=3D " " + =
m.className;
                            if (m.startStyle && sp.from =3D=3D pos) =
spanStartStyle +=3D " " + m.startStyle;
                            if (m.endStyle && sp.to =3D=3D nextChange) =
spanEndStyle +=3D " " + m.endStyle;
                            if (m.title && !title) title =3D m.title;
                            if (m.collapsed && (!collapsed || =
collapsed.marker.size < m.size))
                                collapsed =3D sp;
                        } else if (sp.from > pos && nextChange > =
sp.from) {
                            nextChange =3D sp.from;
                        }
                        if (m.type =3D=3D "bookmark" && sp.from =3D=3D =
pos && m.replacedWith) foundBookmark =3D m;
                    }
                    if (collapsed && (collapsed.from || 0) =3D=3D pos) {
                        buildCollapsedSpan(builder, (collapsed.to =3D=3D =
null ? len : collapsed.to) - pos,
                            collapsed.marker, collapsed.from =3D=3D =
null);
                        if (collapsed.to =3D=3D null) return =
collapsed.marker.find();
                    }
                    if (foundBookmark && !collapsed) =
buildCollapsedSpan(builder, 0, foundBookmark);
                }
                if (pos >=3D len) break;

                var upto =3D Math.min(len, nextChange);
                while (true) {
                    if (text) {
                        var end =3D pos + text.length;
                        if (!collapsed) {
                            var tokenText =3D end > upto ? text.slice(0, =
upto - pos) : text;
                            builder.addToken(builder, tokenText, style ? =
style + spanStyle : spanStyle,
                                spanStartStyle, pos + tokenText.length =
=3D=3D nextChange ? spanEndStyle : "", title);
                        }
                        if (end >=3D upto) {text =3D text.slice(upto - =
pos); pos =3D upto; break;}
                        pos =3D end;
                        spanStartStyle =3D "";
                    }
                    text =3D allText.slice(at, at =3D styles[i++]);
                    style =3D styleToClass(styles[i++]);
                }
            }
        }

        // DOCUMENT DATA STRUCTURE

        function updateDoc(doc, change, markedSpans, selAfter, =
estimateHeight) {
            function spansFor(n) {return markedSpans ? markedSpans[n] : =
null;}
            function update(line, text, spans) {
                updateLine(line, text, spans, estimateHeight);
                signalLater(line, "change", line, change);
            }

            var from =3D change.from, to =3D change.to, text =3D =
change.text;
            var firstLine =3D getLine(doc, from.line), lastLine =3D =
getLine(doc, to.line);
            var lastText =3D lst(text), lastSpans =3D =
spansFor(text.length - 1), nlines =3D to.line - from.line;

            // First adjust the line structure
            if (from.ch =3D=3D 0 && to.ch =3D=3D 0 && lastText =3D=3D =
"") {
                // This is a whole-line replace. Treated specially to =
make
                // sure line objects move the way they are supposed to.
                for (var i =3D 0, e =3D text.length - 1, added =3D []; i =
< e; ++i)
                    added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                update(lastLine, lastLine.text, lastSpans);
                if (nlines) doc.remove(from.line, nlines);
                if (added.length) doc.insert(from.line, added);
            } else if (firstLine =3D=3D lastLine) {
                if (text.length =3D=3D 1) {
                    update(firstLine, firstLine.text.slice(0, from.ch) + =
lastText + firstLine.text.slice(to.ch), lastSpans);
                } else {
                    for (var added =3D [], i =3D 1, e =3D text.length - =
1; i < e; ++i)
                        added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                    added.push(new Line(lastText + =
firstLine.text.slice(to.ch), lastSpans, estimateHeight));
                    update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0], spansFor(0));
                    doc.insert(from.line + 1, added);
                }
            } else if (text.length =3D=3D 1) {
                update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0] + lastLine.text.slice(to.ch), spansFor(0));
                doc.remove(from.line + 1, nlines);
            } else {
                update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0], spansFor(0));
                update(lastLine, lastText + lastLine.text.slice(to.ch), =
lastSpans);
                for (var i =3D 1, e =3D text.length - 1, added =3D []; i =
< e; ++i)
                    added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                if (nlines > 1) doc.remove(from.line + 1, nlines - 1);
                doc.insert(from.line + 1, added);
            }

            signalLater(doc, "change", doc, change);
            setSelection(doc, selAfter.anchor, selAfter.head, null, =
true);
        }

        function LeafChunk(lines) {
            this.lines =3D lines;
            this.parent =3D null;
            for (var i =3D 0, e =3D lines.length, height =3D 0; i < e; =
++i) {
                lines[i].parent =3D this;
                height +=3D lines[i].height;
            }
            this.height =3D height;
        }

        LeafChunk.prototype =3D {
            chunkSize: function() { return this.lines.length; },
            removeInner: function(at, n) {
                for (var i =3D at, e =3D at + n; i < e; ++i) {
                    var line =3D this.lines[i];
                    this.height -=3D line.height;
                    cleanUpLine(line);
                    signalLater(line, "delete");
                }
                this.lines.splice(at, n);
            },
            collapse: function(lines) {
                lines.splice.apply(lines, [lines.length, =
0].concat(this.lines));
            },
            insertInner: function(at, lines, height) {
                this.height +=3D height;
                this.lines =3D this.lines.slice(0, =
at).concat(lines).concat(this.lines.slice(at));
                for (var i =3D 0, e =3D lines.length; i < e; ++i) =
lines[i].parent =3D this;
            },
            iterN: function(at, n, op) {
                for (var e =3D at + n; at < e; ++at)
                    if (op(this.lines[at])) return true;
            }
        };

        function BranchChunk(children) {
            this.children =3D children;
            var size =3D 0, height =3D 0;
            for (var i =3D 0, e =3D children.length; i < e; ++i) {
                var ch =3D children[i];
                size +=3D ch.chunkSize(); height +=3D ch.height;
                ch.parent =3D this;
            }
            this.size =3D size;
            this.height =3D height;
            this.parent =3D null;
        }

        BranchChunk.prototype =3D {
            chunkSize: function() { return this.size; },
            removeInner: function(at, n) {
                this.size -=3D n;
                for (var i =3D 0; i < this.children.length; ++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at < sz) {
                        var rm =3D Math.min(n, sz - at), oldHeight =3D =
child.height;
                        child.removeInner(at, rm);
                        this.height -=3D oldHeight - child.height;
                        if (sz =3D=3D rm) { this.children.splice(i--, =
1); child.parent =3D null; }
                        if ((n -=3D rm) =3D=3D 0) break;
                        at =3D 0;
                    } else at -=3D sz;
                }
                if (this.size - n < 25) {
                    var lines =3D [];
                    this.collapse(lines);
                    this.children =3D [new LeafChunk(lines)];
                    this.children[0].parent =3D this;
                }
            },
            collapse: function(lines) {
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) this.children[i].collapse(lines);
            },
            insertInner: function(at, lines, height) {
                this.size +=3D lines.length;
                this.height +=3D height;
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at <=3D sz) {
                        child.insertInner(at, lines, height);
                        if (child.lines && child.lines.length > 50) {
                            while (child.lines.length > 50) {
                                var spilled =3D =
child.lines.splice(child.lines.length - 25, 25);
                                var newleaf =3D new LeafChunk(spilled);
                                child.height -=3D newleaf.height;
                                this.children.splice(i + 1, 0, newleaf);
                                newleaf.parent =3D this;
                            }
                            this.maybeSpill();
                        }
                        break;
                    }
                    at -=3D sz;
                }
            },
            maybeSpill: function() {
                if (this.children.length <=3D 10) return;
                var me =3D this;
                do {
                    var spilled =3D =
me.children.splice(me.children.length - 5, 5);
                    var sibling =3D new BranchChunk(spilled);
                    if (!me.parent) { // Become the parent node
                        var copy =3D new BranchChunk(me.children);
                        copy.parent =3D me;
                        me.children =3D [copy, sibling];
                        me =3D copy;
                    } else {
                        me.size -=3D sibling.size;
                        me.height -=3D sibling.height;
                        var myIndex =3D indexOf(me.parent.children, me);
                        me.parent.children.splice(myIndex + 1, 0, =
sibling);
                    }
                    sibling.parent =3D me.parent;
                } while (me.children.length > 10);
                me.parent.maybeSpill();
            },
            iterN: function(at, n, op) {
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at < sz) {
                        var used =3D Math.min(n, sz - at);
                        if (child.iterN(at, used, op)) return true;
                        if ((n -=3D used) =3D=3D 0) break;
                        at =3D 0;
                    } else at -=3D sz;
                }
            }
        };

        var nextDocId =3D 0;
        var Doc =3D CodeMirror.Doc =3D function(text, mode, firstLine) {
            if (!(this instanceof Doc)) return new Doc(text, mode, =
firstLine);
            if (firstLine =3D=3D null) firstLine =3D 0;

            BranchChunk.call(this, [new LeafChunk([new Line("", =
null)])]);
            this.first =3D firstLine;
            this.scrollTop =3D this.scrollLeft =3D 0;
            this.cantEdit =3D false;
            this.history =3D makeHistory();
            this.cleanGeneration =3D 1;
            this.frontier =3D firstLine;
            var start =3D Pos(firstLine, 0);
            this.sel =3D {from: start, to: start, head: start, anchor: =
start, shift: false, extend: false, goalColumn: null};
            this.id =3D ++nextDocId;
            this.modeOption =3D mode;

            if (typeof text =3D=3D "string") text =3D splitLines(text);
            updateDoc(this, {from: start, to: start, text: text}, null, =
{head: start, anchor: start});
        };

        Doc.prototype =3D createObj(BranchChunk.prototype, {
            constructor: Doc,
            iter: function(from, to, op) {
                if (op) this.iterN(from - this.first, to - from, op);
                else this.iterN(this.first, this.first + this.size, =
from);
            },

            insert: function(at, lines) {
                var height =3D 0;
                for (var i =3D 0, e =3D lines.length; i < e; ++i) height =
+=3D lines[i].height;
                this.insertInner(at - this.first, lines, height);
            },
            remove: function(at, n) { this.removeInner(at - this.first, =
n); },

            getValue: function(lineSep) {
                var lines =3D getLines(this, this.first, this.first + =
this.size);
                if (lineSep =3D=3D=3D false) return lines;
                return lines.join(lineSep || "\n");
            },
            setValue: function(code) {
                var top =3D Pos(this.first, 0), last =3D this.first + =
this.size - 1;
                makeChange(this, {from: top, to: Pos(last, getLine(this, =
last).text.length),
                        text: splitLines(code), origin: "setValue"},
                    {head: top, anchor: top}, true);
            },
            replaceRange: function(code, from, to, origin) {
                from =3D clipPos(this, from);
                to =3D to ? clipPos(this, to) : from;
                replaceRange(this, code, from, to, origin);
            },
            getRange: function(from, to, lineSep) {
                var lines =3D getBetween(this, clipPos(this, from), =
clipPos(this, to));
                if (lineSep =3D=3D=3D false) return lines;
                return lines.join(lineSep || "\n");
            },

            getLine: function(line) {var l =3D this.getLineHandle(line); =
return l && l.text;},
            setLine: function(line, text) {
                if (isLine(this, line))
                    replaceRange(this, text, Pos(line, 0), clipPos(this, =
Pos(line)));
            },
            removeLine: function(line) {
                if (line) replaceRange(this, "", clipPos(this, Pos(line =
- 1)), clipPos(this, Pos(line)));
                else replaceRange(this, "", Pos(0, 0), clipPos(this, =
Pos(1, 0)));
            },

            getLineHandle: function(line) {if (isLine(this, line)) =
return getLine(this, line);},
            getLineNumber: function(line) {return lineNo(line);},

            getLineHandleVisualStart: function(line) {
                if (typeof line =3D=3D "number") line =3D getLine(this, =
line);
                return visualLine(this, line);
            },

            lineCount: function() {return this.size;},
            firstLine: function() {return this.first;},
            lastLine: function() {return this.first + this.size - 1;},

            clipPos: function(pos) {return clipPos(this, pos);},

            getCursor: function(start) {
                var sel =3D this.sel, pos;
                if (start =3D=3D null || start =3D=3D "head") pos =3D =
sel.head;
                else if (start =3D=3D "anchor") pos =3D sel.anchor;
                else if (start =3D=3D "end" || start =3D=3D=3D false) =
pos =3D sel.to;
                else pos =3D sel.from;
                return copyPos(pos);
            },
            somethingSelected: function() {return !posEq(this.sel.head, =
this.sel.anchor);},

            setCursor: docOperation(function(line, ch, extend) {
                var pos =3D clipPos(this, typeof line =3D=3D "number" ? =
Pos(line, ch || 0) : line);
                if (extend) extendSelection(this, pos);
                else setSelection(this, pos, pos);
            }),
            setSelection: docOperation(function(anchor, head) {
                setSelection(this, clipPos(this, anchor), clipPos(this, =
head || anchor));
            }),
            extendSelection: docOperation(function(from, to) {
                extendSelection(this, clipPos(this, from), to && =
clipPos(this, to));
            }),

            getSelection: function(lineSep) {return =
this.getRange(this.sel.from, this.sel.to, lineSep);},
            replaceSelection: function(code, collapse, origin) {
                makeChange(this, {from: this.sel.from, to: this.sel.to, =
text: splitLines(code), origin: origin}, collapse || "around");
            },
            undo: docOperation(function() {makeChangeFromHistory(this, =
"undo");}),
            redo: docOperation(function() {makeChangeFromHistory(this, =
"redo");}),

            setExtending: function(val) {this.sel.extend =3D val;},

            historySize: function() {
                var hist =3D this.history;
                return {undo: hist.done.length, redo: =
hist.undone.length};
            },
            clearHistory: function() {this.history =3D =
makeHistory(this.history.maxGeneration);},

            markClean: function() {
                this.cleanGeneration =3D this.changeGeneration();
            },
            changeGeneration: function() {
                this.history.lastOp =3D this.history.lastOrigin =3D =
null;
                return this.history.generation;
            },
            isClean: function (gen) {
                return this.history.generation =3D=3D (gen || =
this.cleanGeneration);
            },

            getHistory: function() {
                return {done: copyHistoryArray(this.history.done),
                    undone: copyHistoryArray(this.history.undone)};
            },
            setHistory: function(histData) {
                var hist =3D this.history =3D =
makeHistory(this.history.maxGeneration);
                hist.done =3D histData.done.slice(0);
                hist.undone =3D histData.undone.slice(0);
            },

            markText: function(from, to, options) {
                return markText(this, clipPos(this, from), clipPos(this, =
to), options, "range");
            },
            setBookmark: function(pos, options) {
                var realOpts =3D {replacedWith: options && =
(options.nodeType =3D=3D null ? options.widget : options),
                    insertLeft: options && options.insertLeft};
                pos =3D clipPos(this, pos);
                return markText(this, pos, pos, realOpts, "bookmark");
            },
            findMarksAt: function(pos) {
                pos =3D clipPos(this, pos);
                var markers =3D [], spans =3D getLine(this, =
pos.line).markedSpans;
                if (spans) for (var i =3D 0; i < spans.length; ++i) {
                    var span =3D spans[i];
                    if ((span.from =3D=3D null || span.from <=3D pos.ch) =
&&
                        (span.to =3D=3D null || span.to >=3D pos.ch))
                        markers.push(span.marker.parent || span.marker);
                }
                return markers;
            },
            getAllMarks: function() {
                var markers =3D [];
                this.iter(function(line) {
                    var sps =3D line.markedSpans;
                    if (sps) for (var i =3D 0; i < sps.length; ++i)
                        if (sps[i].from !=3D null) =
markers.push(sps[i].marker);
                });
                return markers;
            },

            posFromIndex: function(off) {
                var ch, lineNo =3D this.first;
                this.iter(function(line) {
                    var sz =3D line.text.length + 1;
                    if (sz > off) { ch =3D off; return true; }
                    off -=3D sz;
                    ++lineNo;
                });
                return clipPos(this, Pos(lineNo, ch));
            },
            indexFromPos: function (coords) {
                coords =3D clipPos(this, coords);
                var index =3D coords.ch;
                if (coords.line < this.first || coords.ch < 0) return 0;
                this.iter(this.first, coords.line, function (line) {
                    index +=3D line.text.length + 1;
                });
                return index;
            },

            copy: function(copyHistory) {
                var doc =3D new Doc(getLines(this, this.first, =
this.first + this.size), this.modeOption, this.first);
                doc.scrollTop =3D this.scrollTop; doc.scrollLeft =3D =
this.scrollLeft;
                doc.sel =3D {from: this.sel.from, to: this.sel.to, head: =
this.sel.head, anchor: this.sel.anchor,
                    shift: this.sel.shift, extend: false, goalColumn: =
this.sel.goalColumn};
                if (copyHistory) {
                    doc.history.undoDepth =3D this.history.undoDepth;
                    doc.setHistory(this.getHistory());
                }
                return doc;
            },

            linkedDoc: function(options) {
                if (!options) options =3D {};
                var from =3D this.first, to =3D this.first + this.size;
                if (options.from !=3D null && options.from > from) from =
=3D options.from;
                if (options.to !=3D null && options.to < to) to =3D =
options.to;
                var copy =3D new Doc(getLines(this, from, to), =
options.mode || this.modeOption, from);
                if (options.sharedHist) copy.history =3D this.history;
                (this.linked || (this.linked =3D [])).push({doc: copy, =
sharedHist: options.sharedHist});
                copy.linked =3D [{doc: this, isParent: true, sharedHist: =
options.sharedHist}];
                return copy;
            },
            unlinkDoc: function(other) {
                if (other instanceof CodeMirror) other =3D other.doc;
                if (this.linked) for (var i =3D 0; i < =
this.linked.length; ++i) {
                    var link =3D this.linked[i];
                    if (link.doc !=3D other) continue;
                    this.linked.splice(i, 1);
                    other.unlinkDoc(this);
                    break;
                }
                // If the histories were shared, split them again
                if (other.history =3D=3D this.history) {
                    var splitIds =3D [other.id];
                    linkedDocs(other, function(doc) =
{splitIds.push(doc.id);}, true);
                    other.history =3D makeHistory();
                    other.history.done =3D =
copyHistoryArray(this.history.done, splitIds);
                    other.history.undone =3D =
copyHistoryArray(this.history.undone, splitIds);
                }
            },
            iterLinkedDocs: function(f) {linkedDocs(this, f);},

            getMode: function() {return this.mode;},
            getEditor: function() {return this.cm;}
        });

        Doc.prototype.eachLine =3D Doc.prototype.iter;

        // The Doc methods that should be available on CodeMirror =
instances
        var dontDelegate =3D "iter insert remove copy getEditor".split(" =
");
        for (var prop in Doc.prototype) if =
(Doc.prototype.hasOwnProperty(prop) && indexOf(dontDelegate, prop) < 0)
            CodeMirror.prototype[prop] =3D (function(method) {
                return function() {return method.apply(this.doc, =
arguments);};
            })(Doc.prototype[prop]);

        eventMixin(Doc);

        function linkedDocs(doc, f, sharedHistOnly) {
            function propagate(doc, skip, sharedHist) {
                if (doc.linked) for (var i =3D 0; i < doc.linked.length; =
++i) {
                    var rel =3D doc.linked[i];
                    if (rel.doc =3D=3D skip) continue;
                    var shared =3D sharedHist && rel.sharedHist;
                    if (sharedHistOnly && !shared) continue;
                    f(rel.doc, shared);
                    propagate(rel.doc, doc, shared);
                }
            }
            propagate(doc, null, true);
        }

        function attachDoc(cm, doc) {
            if (doc.cm) throw new Error("This document is already in =
use.");
            cm.doc =3D doc;
            doc.cm =3D cm;
            estimateLineHeights(cm);
            loadMode(cm);
            if (!cm.options.lineWrapping) computeMaxLength(cm);
            cm.options.mode =3D doc.modeOption;
            regChange(cm);
        }

        // LINE UTILITIES

        function getLine(chunk, n) {
            n -=3D chunk.first;
            while (!chunk.lines) {
                for (var i =3D 0;; ++i) {
                    var child =3D chunk.children[i], sz =3D =
child.chunkSize();
                    if (n < sz) { chunk =3D child; break; }
                    n -=3D sz;
                }
            }
            return chunk.lines[n];
        }

        function getBetween(doc, start, end) {
            var out =3D [], n =3D start.line;
            doc.iter(start.line, end.line + 1, function(line) {
                var text =3D line.text;
                if (n =3D=3D end.line) text =3D text.slice(0, end.ch);
                if (n =3D=3D start.line) text =3D text.slice(start.ch);
                out.push(text);
                ++n;
            });
            return out;
        }
        function getLines(doc, from, to) {
            var out =3D [];
            doc.iter(from, to, function(line) { out.push(line.text); });
            return out;
        }

        function updateLineHeight(line, height) {
            var diff =3D height - line.height;
            for (var n =3D line; n; n =3D n.parent) n.height +=3D diff;
        }

        function lineNo(line) {
            if (line.parent =3D=3D null) return null;
            var cur =3D line.parent, no =3D indexOf(cur.lines, line);
            for (var chunk =3D cur.parent; chunk; cur =3D chunk, chunk =
=3D chunk.parent) {
                for (var i =3D 0;; ++i) {
                    if (chunk.children[i] =3D=3D cur) break;
                    no +=3D chunk.children[i].chunkSize();
                }
            }
            return no + cur.first;
        }

        function lineAtHeight(chunk, h) {
            var n =3D chunk.first;
            outer: do {
                for (var i =3D 0, e =3D chunk.children.length; i < e; =
++i) {
                    var child =3D chunk.children[i], ch =3D =
child.height;
                    if (h < ch) { chunk =3D child; continue outer; }
                    h -=3D ch;
                    n +=3D child.chunkSize();
                }
                return n;
            } while (!chunk.lines);
            for (var i =3D 0, e =3D chunk.lines.length; i < e; ++i) {
                var line =3D chunk.lines[i], lh =3D line.height;
                if (h < lh) break;
                h -=3D lh;
            }
            return n + i;
        }

        function heightAtLine(cm, lineObj) {
            lineObj =3D visualLine(cm.doc, lineObj);

            var h =3D 0, chunk =3D lineObj.parent;
            for (var i =3D 0; i < chunk.lines.length; ++i) {
                var line =3D chunk.lines[i];
                if (line =3D=3D lineObj) break;
                else h +=3D line.height;
            }
            for (var p =3D chunk.parent; p; chunk =3D p, p =3D =
chunk.parent) {
                for (var i =3D 0; i < p.children.length; ++i) {
                    var cur =3D p.children[i];
                    if (cur =3D=3D chunk) break;
                    else h +=3D cur.height;
                }
            }
            return h;
        }

        function getOrder(line) {
            var order =3D line.order;
            if (order =3D=3D null) order =3D line.order =3D =
bidiOrdering(line.text);
            return order;
        }

        // HISTORY

        function makeHistory(startGen) {
            return {
                // Arrays of history events. Doing something adds an =
event to
                // done and clears undo. Undoing moves events from done =
to
                // undone, redoing moves them in the other direction.
                done: [], undone: [], undoDepth: Infinity,
                // Used to track when changes can be merged into a =
single undo
                // event
                lastTime: 0, lastOp: null, lastOrigin: null,
                // Used by the isClean() method
                generation: startGen || 1, maxGeneration: startGen || 1
            };
        }

        function attachLocalSpans(doc, change, from, to) {
            var existing =3D change["spans_" + doc.id], n =3D 0;
            doc.iter(Math.max(doc.first, from), Math.min(doc.first + =
doc.size, to), function(line) {
                if (line.markedSpans)
                    (existing || (existing =3D change["spans_" + doc.id] =
=3D {}))[n] =3D line.markedSpans;
                ++n;
            });
        }

        function historyChangeFromChange(doc, change) {
            var from =3D { line: change.from.line, ch: change.from.ch };
            var histChange =3D {from: from, to: changeEnd(change), text: =
getBetween(doc, change.from, change.to)};
            attachLocalSpans(doc, histChange, change.from.line, =
change.to.line + 1);
            linkedDocs(doc, function(doc) {attachLocalSpans(doc, =
histChange, change.from.line, change.to.line + 1);}, true);
            return histChange;
        }

        function addToHistory(doc, change, selAfter, opId) {
            var hist =3D doc.history;
            hist.undone.length =3D 0;
            var time =3D +new Date, cur =3D lst(hist.done);

            if (cur &&
                (hist.lastOp =3D=3D opId ||
                    hist.lastOrigin =3D=3D change.origin && =
change.origin &&
                    ((change.origin.charAt(0) =3D=3D "+" && doc.cm && =
hist.lastTime > time - doc.cm.options.historyEventDelay) ||
                        change.origin.charAt(0) =3D=3D "*"))) {
                // Merge this change into the last event
                var last =3D lst(cur.changes);
                if (posEq(change.from, change.to) && posEq(change.from, =
last.to)) {
                    // Optimized case for simple insertion -- don't want =
to add
                    // new changesets for every character typed
                    last.to =3D changeEnd(change);
                } else {
                    // Add new sub-event
                    cur.changes.push(historyChangeFromChange(doc, =
change));
                }
                cur.anchorAfter =3D selAfter.anchor; cur.headAfter =3D =
selAfter.head;
            } else {
                // Can not be merged, start a new event.
                cur =3D {changes: [historyChangeFromChange(doc, =
change)],
                    generation: hist.generation,
                    anchorBefore: doc.sel.anchor, headBefore: =
doc.sel.head,
                    anchorAfter: selAfter.anchor, headAfter: =
selAfter.head};
                hist.done.push(cur);
                hist.generation =3D ++hist.maxGeneration;
                while (hist.done.length > hist.undoDepth)
                    hist.done.shift();
            }
            hist.lastTime =3D time;
            hist.lastOp =3D opId;
            hist.lastOrigin =3D change.origin;
        }

        function removeClearedSpans(spans) {
            if (!spans) return null;
            for (var i =3D 0, out; i < spans.length; ++i) {
                if (spans[i].marker.explicitlyCleared) { if (!out) out =
=3D spans.slice(0, i); }
                else if (out) out.push(spans[i]);
            }
            return !out ? spans : out.length ? out : null;
        }

        function getOldSpans(doc, change) {
            var found =3D change["spans_" + doc.id];
            if (!found) return null;
            for (var i =3D 0, nw =3D []; i < change.text.length; ++i)
                nw.push(removeClearedSpans(found[i]));
            return nw;
        }

        // Used both to provide a JSON-safe object in .getHistory, and, =
when
        // detaching a document, to split the history in two
        function copyHistoryArray(events, newGroup) {
            for (var i =3D 0, copy =3D []; i < events.length; ++i) {
                var event =3D events[i], changes =3D event.changes, =
newChanges =3D [];
                copy.push({changes: newChanges, anchorBefore: =
event.anchorBefore, headBefore: event.headBefore,
                    anchorAfter: event.anchorAfter, headAfter: =
event.headAfter});
                for (var j =3D 0; j < changes.length; ++j) {
                    var change =3D changes[j], m;
                    newChanges.push({from: change.from, to: change.to, =
text: change.text});
                    if (newGroup) for (var prop in change) if (m =3D =
prop.match(/^spans_(\d+)$/)) {
                        if (indexOf(newGroup, Number(m[1])) > -1) {
                            lst(newChanges)[prop] =3D change[prop];
                            delete change[prop];
                        }
                    }
                }
            }
            return copy;
        }

        // Rebasing/resetting history to deal with externally-sourced =
changes

        function rebaseHistSel(pos, from, to, diff) {
            if (to < pos.line) {
                pos.line +=3D diff;
            } else if (from < pos.line) {
                pos.line =3D from;
                pos.ch =3D 0;
            }
        }

        // Tries to rebase an array of history events given a change in =
the
        // document. If the change touches the same lines as the event, =
the
        // event, and everything 'behind' it, is discarded. If the =
change is
        // before the event, the event's positions are updated. Uses a
        // copy-on-write scheme for the positions, to avoid having to
        // reallocate them all on every rebase, but also avoid problems =
with
        // shared position objects being unsafely updated.
        function rebaseHistArray(array, from, to, diff) {
            for (var i =3D 0; i < array.length; ++i) {
                var sub =3D array[i], ok =3D true;
                for (var j =3D 0; j < sub.changes.length; ++j) {
                    var cur =3D sub.changes[j];
                    if (!sub.copied) { cur.from =3D copyPos(cur.from); =
cur.to =3D copyPos(cur.to); }
                    if (to < cur.from.line) {
                        cur.from.line +=3D diff;
                        cur.to.line +=3D diff;
                    } else if (from <=3D cur.to.line) {
                        ok =3D false;
                        break;
                    }
                }
                if (!sub.copied) {
                    sub.anchorBefore =3D copyPos(sub.anchorBefore); =
sub.headBefore =3D copyPos(sub.headBefore);
                    sub.anchorAfter =3D copyPos(sub.anchorAfter); =
sub.readAfter =3D copyPos(sub.headAfter);
                    sub.copied =3D true;
                }
                if (!ok) {
                    array.splice(0, i + 1);
                    i =3D 0;
                } else {
                    rebaseHistSel(sub.anchorBefore); =
rebaseHistSel(sub.headBefore);
                    rebaseHistSel(sub.anchorAfter); =
rebaseHistSel(sub.headAfter);
                }
            }
        }

        function rebaseHist(hist, change) {
            var from =3D change.from.line, to =3D change.to.line, diff =
=3D change.text.length - (to - from) - 1;
            rebaseHistArray(hist.done, from, to, diff);
            rebaseHistArray(hist.undone, from, to, diff);
        }

        // EVENT OPERATORS

        function stopMethod() {e_stop(this);}
        // Ensure an event has a stop method.
        function addStop(event) {
            if (!event.stop) event.stop =3D stopMethod;
            return event;
        }

        function e_preventDefault(e) {
            if (e.preventDefault) e.preventDefault();
            else e.returnValue =3D false;
        }
        function e_stopPropagation(e) {
            if (e.stopPropagation) e.stopPropagation();
            else e.cancelBubble =3D true;
        }
        function e_defaultPrevented(e) {
            return e.defaultPrevented !=3D null ? e.defaultPrevented : =
e.returnValue =3D=3D false;
        }
        function e_stop(e) {e_preventDefault(e); e_stopPropagation(e);}
        CodeMirror.e_stop =3D e_stop;
        CodeMirror.e_preventDefault =3D e_preventDefault;
        CodeMirror.e_stopPropagation =3D e_stopPropagation;

        function e_target(e) {return e.target || e.srcElement;}
        function e_button(e) {
            var b =3D e.which;
            if (b =3D=3D null) {
                if (e.button & 1) b =3D 1;
                else if (e.button & 2) b =3D 3;
                else if (e.button & 4) b =3D 2;
            }
            if (mac && e.ctrlKey && b =3D=3D 1) b =3D 3;
            return b;
        }

        // EVENT HANDLING

        function on(emitter, type, f) {
            if (emitter.addEventListener)
                emitter.addEventListener(type, f, false);
            else if (emitter.attachEvent)
                emitter.attachEvent("on" + type, f);
            else {
                var map =3D emitter._handlers || (emitter._handlers =3D =
{});
                var arr =3D map[type] || (map[type] =3D []);
                arr.push(f);
            }
        }

        function off(emitter, type, f) {
            if (emitter.removeEventListener)
                emitter.removeEventListener(type, f, false);
            else if (emitter.detachEvent)
                emitter.detachEvent("on" + type, f);
            else {
                var arr =3D emitter._handlers && =
emitter._handlers[type];
                if (!arr) return;
                for (var i =3D 0; i < arr.length; ++i)
                    if (arr[i] =3D=3D f) { arr.splice(i, 1); break; }
            }
        }

        function signal(emitter, type /*, values...*/) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            if (!arr) return;
            var args =3D Array.prototype.slice.call(arguments, 2);
            for (var i =3D 0; i < arr.length; ++i) arr[i].apply(null, =
args);
        }

        var delayedCallbacks, delayedCallbackDepth =3D 0;
        function signalLater(emitter, type /*, values...*/) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            if (!arr) return;
            var args =3D Array.prototype.slice.call(arguments, 2);
            if (!delayedCallbacks) {
                ++delayedCallbackDepth;
                delayedCallbacks =3D [];
                setTimeout(fireDelayed, 0);
            }
            function bnd(f) {return function(){f.apply(null, args);};};
            for (var i =3D 0; i < arr.length; ++i)
                delayedCallbacks.push(bnd(arr[i]));
        }

        function signalDOMEvent(cm, e, override) {
            signal(cm, override || e.type, cm, e);
            return e_defaultPrevented(e) || e.codemirrorIgnore;
        }

        function fireDelayed() {
            --delayedCallbackDepth;
            var delayed =3D delayedCallbacks;
            delayedCallbacks =3D null;
            for (var i =3D 0; i < delayed.length; ++i) delayed[i]();
        }

        function hasHandler(emitter, type) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            return arr && arr.length > 0;
        }

        CodeMirror.on =3D on; CodeMirror.off =3D off; CodeMirror.signal =
=3D signal;

        function eventMixin(ctor) {
            ctor.prototype.on =3D function(type, f) {on(this, type, =
f);};
            ctor.prototype.off =3D function(type, f) {off(this, type, =
f);};
        }

        // MISC UTILITIES

        // Number of pixels added to scroller and sizer to hide =
scrollbar
        var scrollerCutOff =3D 30;

        // Returned or thrown by various protocols to signal 'I'm not
        // handling this'.
        var Pass =3D CodeMirror.Pass =3D {toString: function(){return =
"CodeMirror.Pass";}};

        function Delayed() {this.id =3D null;}
        Delayed.prototype =3D {set: function(ms, f) =
{clearTimeout(this.id); this.id =3D setTimeout(f, ms);}};

        // Counts the column offset in a string, taking tabs into =
account.
        // Used mostly to find indentation.
        function countColumn(string, end, tabSize, startIndex, =
startValue) {
            if (end =3D=3D null) {
                end =3D string.search(/[^\s\u00a0]/);
                if (end =3D=3D -1) end =3D string.length;
            }
            for (var i =3D startIndex || 0, n =3D startValue || 0; i < =
end; ++i) {
                if (string.charAt(i) =3D=3D "\t") n +=3D tabSize - (n % =
tabSize);
                else ++n;
            }
            return n;
        }
        CodeMirror.countColumn =3D countColumn;

        var spaceStrs =3D [""];
        function spaceStr(n) {
            while (spaceStrs.length <=3D n)
                spaceStrs.push(lst(spaceStrs) + " ");
            return spaceStrs[n];
        }

        function lst(arr) { return arr[arr.length-1]; }

        function selectInput(node) {
            if (ios) { // Mobile Safari apparently has a bug where =
select() is broken.
                node.selectionStart =3D 0;
                node.selectionEnd =3D node.value.length;
            } else {
                // Suppress mysterious IE10 errors
                try { node.select(); }
                catch(_e) {}
            }
        }

        function indexOf(collection, elt) {
            if (collection.indexOf) return collection.indexOf(elt);
            for (var i =3D 0, e =3D collection.length; i < e; ++i)
                if (collection[i] =3D=3D elt) return i;
            return -1;
        }

        function createObj(base, props) {
            function Obj() {}
            Obj.prototype =3D base;
            var inst =3D new Obj();
            if (props) copyObj(props, inst);
            return inst;
        }

        function copyObj(obj, target) {
            if (!target) target =3D {};
            for (var prop in obj) if (obj.hasOwnProperty(prop)) =
target[prop] =3D obj[prop];
            return target;
        }

        function emptyArray(size) {
            for (var a =3D [], i =3D 0; i < size; ++i) =
a.push(undefined);
            return a;
        }

        function bind(f) {
            var args =3D Array.prototype.slice.call(arguments, 1);
            return function(){return f.apply(null, args);};
        }

        var nonASCIISingleCaseWordChar =3D =
/[\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
        function isWordChar(ch) {
            return /\w/.test(ch) || ch > "\x80" &&
                (ch.toUpperCase() !=3D ch.toLowerCase() || =
nonASCIISingleCaseWordChar.test(ch));
        }

        function isEmpty(obj) {
            for (var n in obj) if (obj.hasOwnProperty(n) && obj[n]) =
return false;
            return true;
        }

        var isExtendingChar =3D =
/[\u0300-\u036F\u0483-\u0487\u0488-\u0489\u0591-\u05BD\u05BF\u05C1-\u05C2=
\u05C4-\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u=
06E4\u06E7-\u06E8\u06EA-\u06ED\uA66F\uA670-\uA672\uA674-\uA67D\uA69F\udc0=
0-\udfff]/;

        // DOM UTILITIES

        function elt(tag, content, className, style) {
            var e =3D document.createElement(tag);
            if (className) e.className =3D className;
            if (style) e.style.cssText =3D style;
            if (typeof content =3D=3D "string") setTextContent(e, =
content);
            else if (content) for (var i =3D 0; i < content.length; ++i) =
e.appendChild(content[i]);
            return e;
        }

        function removeChildren(e) {
            for (var count =3D e.childNodes.length; count > 0; --count)
                e.removeChild(e.firstChild);
            return e;
        }

        function removeChildrenAndAdd(parent, e) {
            return removeChildren(parent).appendChild(e);
        }

        function setTextContent(e, str) {
            if (ie_lt9) {
                e.innerHTML =3D "";
                e.appendChild(document.createTextNode(str));
            } else e.textContent =3D str;
        }

        function getRect(node) {
            return node.getBoundingClientRect();
        }
        CodeMirror.replaceGetRect =3D function(f) { getRect =3D f; };

        // FEATURE DETECTION

        // Detect drag-and-drop
        var dragAndDrop =3D function() {
            // There is *some* kind of drag-and-drop support in IE6-8, =
but I
            // couldn't get it to work yet.
            if (ie_lt9) return false;
            var div =3D elt('div');
            return "draggable" in div || "dragDrop" in div;
        }();

        // For a reason I have yet to figure out, some browsers disallow
        // word wrapping between certain characters *only* if a new =
inline
        // element is started between them. This makes it hard to =
reliably
        // measure the position of things, since that requires inserting =
an
        // extra span. This terribly fragile set of tests matches the
        // character combinations that suffer from this phenomenon on =
the
        // various browsers.
        function spanAffectsWrapping() { return false; }
        if (gecko) // Only for "$'"
            spanAffectsWrapping =3D function(str, i) {
                return str.charCodeAt(i - 1) =3D=3D 36 && =
str.charCodeAt(i) =3D=3D 39;
            };
        else if (safari && =
!/Version\/([6-9]|\d\d)\b/.test(navigator.userAgent))
            spanAffectsWrapping =3D function(str, i) {
                return /\-[^ \-?]|\?[^ =
!\'\"\),.\-\/:;\?\]\}]/.test(str.slice(i - 1, i + 1));
            };
        else if (webkit && =
!/Chrome\/(?:29|[3-9]\d|\d\d\d)\./.test(navigator.userAgent))
            spanAffectsWrapping =3D function(str, i) {
                if (i > 1 && str.charCodeAt(i - 1) =3D=3D 45) {
                    if (/\w/.test(str.charAt(i - 2)) && =
/[^\-?\.]/.test(str.charAt(i))) return true;
                    if (i > 2 && /[\d\.,]/.test(str.charAt(i - 2)) && =
/[\d\.,]/.test(str.charAt(i))) return false;
                }
                return =
/[~!#%&*)=3D+}\]|\"\.>,:;][({[<]|-[^\-?\.\u2010-\u201f\u2026]|\?[\w~`@#$%=
\^&*(_=3D+{[|><]|=E2=80=A6[\w~`@#$%\^&*(_=3D+{[><]/.test(str.slice(i - =
1, i + 1));
            };

        var knownScrollbarWidth;
        function scrollbarWidth(measure) {
            if (knownScrollbarWidth !=3D null) return =
knownScrollbarWidth;
            var test =3D elt("div", null, null, "width: 50px; height: =
50px; overflow-x: scroll");
            removeChildrenAndAdd(measure, test);
            if (test.offsetWidth)
                knownScrollbarWidth =3D test.offsetHeight - =
test.clientHeight;
            return knownScrollbarWidth || 0;
        }

        var zwspSupported;
        function zeroWidthElement(measure) {
            if (zwspSupported =3D=3D null) {
                var test =3D elt("span", "\u200b");
                removeChildrenAndAdd(measure, elt("span", [test, =
document.createTextNode("x")]));
                if (measure.firstChild.offsetHeight !=3D 0)
                    zwspSupported =3D test.offsetWidth <=3D 1 && =
test.offsetHeight > 2 && !ie_lt8;
            }
            if (zwspSupported) return elt("span", "\u200b");
            else return elt("span", "\u00a0", null, "display: =
inline-block; width: 1px; margin-right: -1px");
        }

        // See if "".split is the broken IE version, if so, provide an
        // alternative way to split lines.
        var splitLines =3D "\n\nb".split(/\n/).length !=3D 3 ? =
function(string) {
            var pos =3D 0, result =3D [], l =3D string.length;
            while (pos <=3D l) {
                var nl =3D string.indexOf("\n", pos);
                if (nl =3D=3D -1) nl =3D string.length;
                var line =3D string.slice(pos, string.charAt(nl - 1) =
=3D=3D "\r" ? nl - 1 : nl);
                var rt =3D line.indexOf("\r");
                if (rt !=3D -1) {
                    result.push(line.slice(0, rt));
                    pos +=3D rt + 1;
                } else {
                    result.push(line);
                    pos =3D nl + 1;
                }
            }
            return result;
        } : function(string){return string.split(/\r\n?|\n/);};
        CodeMirror.splitLines =3D splitLines;

        var hasSelection =3D window.getSelection ? function(te) {
            try { return te.selectionStart !=3D te.selectionEnd; }
            catch(e) { return false; }
        } : function(te) {
            try {var range =3D =
te.ownerDocument.selection.createRange();}
            catch(e) {}
            if (!range || range.parentElement() !=3D te) return false;
            return range.compareEndPoints("StartToEnd", range) !=3D 0;
        };

        var hasCopyEvent =3D (function() {
            var e =3D elt("div");
            if ("oncopy" in e) return true;
            e.setAttribute("oncopy", "return;");
            return typeof e.oncopy =3D=3D 'function';
        })();

        // KEY NAMING

        var keyNames =3D {3: "Enter", 8: "Backspace", 9: "Tab", 13: =
"Enter", 16: "Shift", 17: "Ctrl", 18: "Alt",
            19: "Pause", 20: "CapsLock", 27: "Esc", 32: "Space", 33: =
"PageUp", 34: "PageDown", 35: "End",
            36: "Home", 37: "Left", 38: "Up", 39: "Right", 40: "Down", =
44: "PrintScrn", 45: "Insert",
            46: "Delete", 59: ";", 91: "Mod", 92: "Mod", 93: "Mod", 109: =
"-", 107: "=3D", 127: "Delete",
            186: ";", 187: "=3D", 188: ",", 189: "-", 190: ".", 191: =
"/", 192: "`", 219: "[", 220: "\\",
            221: "]", 222: "'", 63276: "PageUp", 63277: "PageDown", =
63275: "End", 63273: "Home",
            63234: "Left", 63232: "Up", 63235: "Right", 63233: "Down", =
63302: "Insert", 63272: "Delete"};
        CodeMirror.keyNames =3D keyNames;
        (function() {
            // Number keys
            for (var i =3D 0; i < 10; i++) keyNames[i + 48] =3D =
String(i);
            // Alphabetic keys
            for (var i =3D 65; i <=3D 90; i++) keyNames[i] =3D =
String.fromCharCode(i);
            // Function keys
            for (var i =3D 1; i <=3D 12; i++) keyNames[i + 111] =3D =
keyNames[i + 63235] =3D "F" + i;
        })();

        // BIDI HELPERS

        function iterateBidiSections(order, from, to, f) {
            if (!order) return f(from, to, "ltr");
            var found =3D false;
            for (var i =3D 0; i < order.length; ++i) {
                var part =3D order[i];
                if (part.from < to && part.to > from || from =3D=3D to =
&& part.to =3D=3D from) {
                    f(Math.max(part.from, from), Math.min(part.to, to), =
part.level =3D=3D 1 ? "rtl" : "ltr");
                    found =3D true;
                }
            }
            if (!found) f(from, to, "ltr");
        }

        function bidiLeft(part) { return part.level % 2 ? part.to : =
part.from; }
        function bidiRight(part) { return part.level % 2 ? part.from : =
part.to; }

        function lineLeft(line) { var order =3D getOrder(line); return =
order ? bidiLeft(order[0]) : 0; }
        function lineRight(line) {
            var order =3D getOrder(line);
            if (!order) return line.text.length;
            return bidiRight(lst(order));
        }

        function lineStart(cm, lineN) {
            var line =3D getLine(cm.doc, lineN);
            var visual =3D visualLine(cm.doc, line);
            if (visual !=3D line) lineN =3D lineNo(visual);
            var order =3D getOrder(visual);
            var ch =3D !order ? 0 : order[0].level % 2 ? =
lineRight(visual) : lineLeft(visual);
            return Pos(lineN, ch);
        }
        function lineEnd(cm, lineN) {
            var merged, line;
            while (merged =3D collapsedSpanAtEnd(line =3D =
getLine(cm.doc, lineN)))
                lineN =3D merged.find().to.line;
            var order =3D getOrder(line);
            var ch =3D !order ? line.text.length : order[0].level % 2 ? =
lineLeft(line) : lineRight(line);
            return Pos(lineN, ch);
        }

        function compareBidiLevel(order, a, b) {
            var linedir =3D order[0].level;
            if (a =3D=3D linedir) return true;
            if (b =3D=3D linedir) return false;
            return a < b;
        }
        var bidiOther;
        function getBidiPartAt(order, pos) {
            for (var i =3D 0, found; i < order.length; ++i) {
                var cur =3D order[i];
                if (cur.from < pos && cur.to > pos) { bidiOther =3D =
null; return i; }
                if (cur.from =3D=3D pos || cur.to =3D=3D pos) {
                    if (found =3D=3D null) {
                        found =3D i;
                    } else if (compareBidiLevel(order, cur.level, =
order[found].level)) {
                        bidiOther =3D found;
                        return i;
                    } else {
                        bidiOther =3D i;
                        return found;
                    }
                }
            }
            bidiOther =3D null;
            return found;
        }

        function moveInLine(line, pos, dir, byUnit) {
            if (!byUnit) return pos + dir;
            do pos +=3D dir;
            while (pos > 0 && =
isExtendingChar.test(line.text.charAt(pos)));
            return pos;
        }

        // This is somewhat involved. It is needed in order to move
        // 'visually' through bi-directional text -- i.e., pressing left
        // should make the cursor go left, even when in RTL text. The
        // tricky part is the 'jumps', where RTL and LTR text touch each
        // other. This often requires the cursor offset to move more =
than
        // one unit, in order to visually move one unit.
        function moveVisually(line, start, dir, byUnit) {
            var bidi =3D getOrder(line);
            if (!bidi) return moveLogically(line, start, dir, byUnit);
            var pos =3D getBidiPartAt(bidi, start), part =3D bidi[pos];
            var target =3D moveInLine(line, start, part.level % 2 ? -dir =
: dir, byUnit);

            for (;;) {
                if (target > part.from && target < part.to) return =
target;
                if (target =3D=3D part.from || target =3D=3D part.to) {
                    if (getBidiPartAt(bidi, target) =3D=3D pos) return =
target;
                    part =3D bidi[pos +=3D dir];
                    return (dir > 0) =3D=3D part.level % 2 ? part.to : =
part.from;
                } else {
                    part =3D bidi[pos +=3D dir];
                    if (!part) return null;
                    if ((dir > 0) =3D=3D part.level % 2)
                        target =3D moveInLine(line, part.to, -1, =
byUnit);
                    else
                        target =3D moveInLine(line, part.from, 1, =
byUnit);
                }
            }
        }

        function moveLogically(line, start, dir, byUnit) {
            var target =3D start + dir;
            if (byUnit) while (target > 0 && =
isExtendingChar.test(line.text.charAt(target))) target +=3D dir;
            return target < 0 || target > line.text.length ? null : =
target;
        }

        // Bidirectional ordering algorithm
        // See http://unicode.org/reports/tr9/tr9-13.html for the =
algorithm
        // that this (partially) implements.

        // One-char codes used for character types:
        // L (L):   Left-to-Right
        // R (R):   Right-to-Left
        // r (AL):  Right-to-Left Arabic
        // 1 (EN):  European Number
        // + (ES):  European Number Separator
        // % (ET):  European Number Terminator
        // n (AN):  Arabic Number
        // , (CS):  Common Number Separator
        // m (NSM): Non-Spacing Mark
        // b (BN):  Boundary Neutral
        // s (B):   Paragraph Separator
        // t (S):   Segment Separator
        // w (WS):  Whitespace
        // N (ON):  Other Neutrals

        // Returns null if characters are ordered as they appear
        // (left-to-right), or an array of sections ({from, to, level}
        // objects) in the order in which they occur visually.
        var bidiOrdering =3D (function() {
            // Character types for codepoints 0 to 0xff
            var lowTypes =3D =
"bbbbbbbbbtstwsbbbbbbbbbbbbbbssstwNN%%%NNNNNN,N,N1111111111NNNNNNNLLLLLLL=
LLLLLLLLLLLLLLLLLLLNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNbbbbbbsbbbbbbbbbbb=
bbbbbbbbbbbbbbb,N%%%%NNNNLNNNNN%%11NLNNN1LNNNNNLLLLLLLLLLLLLLLLLLLLLLLNLL=
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLL";
            // Character types for codepoints 0x600 to 0x6ff
            var arabicTypes =3D =
"rrrrrrrrrrrr,rNNmmmmmmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr=
rrrmmmmmmmmmmmmmmrrrrrrrnnnnnnnnnn%nnrrrmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr=
rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrmmmm=
mmmmmmmmmmmmmmmNmmmmrrrrrrrrrrrrrrrrrr";
            function charType(code) {
                if (code <=3D 0xff) return lowTypes.charAt(code);
                else if (0x590 <=3D code && code <=3D 0x5f4) return "R";
                else if (0x600 <=3D code && code <=3D 0x6ff) return =
arabicTypes.charAt(code - 0x600);
                else if (0x700 <=3D code && code <=3D 0x8ac) return "r";
                else return "L";
            }

            var bidiRE =3D /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
            var isNeutral =3D /[stwN]/, isStrong =3D /[LRr]/, =
countsAsLeft =3D /[Lb1n]/, countsAsNum =3D /[1n]/;
            // Browsers seem to always treat the boundaries of block =
elements as being L.
            var outerType =3D "L";

            return function(str) {
                if (!bidiRE.test(str)) return false;
                var len =3D str.length, types =3D [];
                for (var i =3D 0, type; i < len; ++i)
                    types.push(type =3D charType(str.charCodeAt(i)));

                // W1. Examine each non-spacing mark (NSM) in the level =
run, and
                // change the type of the NSM to the type of the =
previous
                // character. If the NSM is at the start of the level =
run, it will
                // get the type of sor.
                for (var i =3D 0, prev =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "m") types[i] =3D prev;
                    else prev =3D type;
                }

                // W2. Search backwards from each instance of a European =
number
                // until the first strong type (R, L, AL, or sor) is =
found. If an
                // AL is found, change the type of the European number =
to Arabic
                // number.
                // W3. Change all ALs to R.
                for (var i =3D 0, cur =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "1" && cur =3D=3D "r") types[i] =3D =
"n";
                    else if (isStrong.test(type)) { cur =3D type; if =
(type =3D=3D "r") types[i] =3D "R"; }
                }

                // W4. A single European separator between two European =
numbers
                // changes to a European number. A single common =
separator between
                // two numbers of the same type changes to that type.
                for (var i =3D 1, prev =3D types[0]; i < len - 1; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "+" && prev =3D=3D "1" && types[i+1] =
=3D=3D "1") types[i] =3D "1";
                    else if (type =3D=3D "," && prev =3D=3D types[i+1] =
&&
                        (prev =3D=3D "1" || prev =3D=3D "n")) types[i] =
=3D prev;
                    prev =3D type;
                }

                // W5. A sequence of European terminators adjacent to =
European
                // numbers changes to all European numbers.
                // W6. Otherwise, separators and terminators change to =
Other
                // Neutral.
                for (var i =3D 0; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D ",") types[i] =3D "N";
                    else if (type =3D=3D "%") {
                        for (var end =3D i + 1; end < len && types[end] =
=3D=3D "%"; ++end) {}
                        var replace =3D (i && types[i-1] =3D=3D "!") || =
(end < len - 1 && types[end] =3D=3D "1") ? "1" : "N";
                        for (var j =3D i; j < end; ++j) types[j] =3D =
replace;
                        i =3D end - 1;
                    }
                }

                // W7. Search backwards from each instance of a European =
number
                // until the first strong type (R, L, or sor) is found. =
If an L is
                // found, then change the type of the European number to =
L.
                for (var i =3D 0, cur =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (cur =3D=3D "L" && type =3D=3D "1") types[i] =3D =
"L";
                    else if (isStrong.test(type)) cur =3D type;
                }

                // N1. A sequence of neutrals takes the direction of the
                // surrounding strong text if the text on both sides has =
the same
                // direction. European and Arabic numbers act as if they =
were R in
                // terms of their influence on neutrals. =
Start-of-level-run (sor)
                // and end-of-level-run (eor) are used at level run =
boundaries.
                // N2. Any remaining neutrals take the embedding =
direction.
                for (var i =3D 0; i < len; ++i) {
                    if (isNeutral.test(types[i])) {
                        for (var end =3D i + 1; end < len && =
isNeutral.test(types[end]); ++end) {}
                        var before =3D (i ? types[i-1] : outerType) =
=3D=3D "L";
                        var after =3D (end < len - 1 ? types[end] : =
outerType) =3D=3D "L";
                        var replace =3D before || after ? "L" : "R";
                        for (var j =3D i; j < end; ++j) types[j] =3D =
replace;
                        i =3D end - 1;
                    }
                }

                // Here we depart from the documented algorithm, in =
order to avoid
                // building up an actual levels array. Since there are =
only three
                // levels (0, 1, 2) in an implementation that doesn't =
take
                // explicit embedding into account, we can build up the =
order on
                // the fly, without following the level-based algorithm.
                var order =3D [], m;
                for (var i =3D 0; i < len;) {
                    if (countsAsLeft.test(types[i])) {
                        var start =3D i;
                        for (++i; i < len && =
countsAsLeft.test(types[i]); ++i) {}
                        order.push({from: start, to: i, level: 0});
                    } else {
                        var pos =3D i, at =3D order.length;
                        for (++i; i < len && types[i] !=3D "L"; ++i) {}
                        for (var j =3D pos; j < i;) {
                            if (countsAsNum.test(types[j])) {
                                if (pos < j) order.splice(at, 0, {from: =
pos, to: j, level: 1});
                                var nstart =3D j;
                                for (++j; j < i && =
countsAsNum.test(types[j]); ++j) {}
                                order.splice(at, 0, {from: nstart, to: =
j, level: 2});
                                pos =3D j;
                            } else ++j;
                        }
                        if (pos < i) order.splice(at, 0, {from: pos, to: =
i, level: 1});
                    }
                }
                if (order[0].level =3D=3D 1 && (m =3D =
str.match(/^\s+/))) {
                    order[0].from =3D m[0].length;
                    order.unshift({from: 0, to: m[0].length, level: 0});
                }
                if (lst(order).level =3D=3D 1 && (m =3D =
str.match(/\s+$/))) {
                    lst(order).to -=3D m[0].length;
                    order.push({from: len - m[0].length, to: len, level: =
0});
                }
                if (order[0].level !=3D lst(order).level)
                    order.push({from: len, to: len, level: =
order[0].level});

                return order;
            };
        })();

        // THE END

        CodeMirror.version =3D "3.15.0";

        return CodeMirror;
    })();

    var listRE =3D /^(\s*)([*+-]|(\d+)\.)([\w+(\s+\w+)]|[\s*])/,
        emptyListRE =3D /^(\s*)([*+-]|(\d+)\.)(\s*)$/,
        unorderedBullets =3D '*+-';

    var inListState =3D function(cm, pos){
        return cm.getStateAfter(pos.line).list || null;
    };

    var inListOrNot =3D function(cm){
        var pos =3D cm.getCursor();
        return inListState(cm, pos);
    };

    CodeMirror.commands.shiftTabAndIndentContinueMarkdownList =3D =
function(cm){
        var inList =3D inListOrNot(cm);

        if(inList !=3D=3D null){
            cm.execCommand('insertTab');
            return;
        }

        cm.execCommand('indentLess');
    };

    CodeMirror.commands.tabAndIndentContinueMarkdownList =3D =
function(cm){
        var inList =3D inListOrNot(cm);

        if(inList !=3D=3D null){
            cm.execCommand('insertTab');
            return;
        }

        cm.execCommand('indentMore');
    };

    CodeMirror.commands.newlineAndIndentContinueMarkdownList =3D =
function(cm){
        var pos, tok, match, emptyMatch, inList;

        pos =3D cm.getCursor();
        tok =3D cm.getTokenAt(pos);
        emptyMatch =3D cm.getLine(pos.line).match(emptyListRE);
        inList =3D inListState(cm, pos);

        if (!inList && emptyMatch){
            cm.replaceRange("", {line: pos.line , ch:tok.start}, =
{line:pos.line , ch:tok.end});
            cm.execCommand('delLineLeft');
            cm.execCommand('newlineAndIndent');
            return;
        }

        if (!inList || !(match =3D cm.getLine(pos.line).match(listRE))) =
{
            cm.execCommand('newlineAndIndent');
            return;
        }

        var indent =3D match[1], after =3D " ";
        var bullet =3D unorderedBullets.indexOf(match[2]) >=3D 0
            ? match[2]
            : (parseInt(match[3], 10) + 1) + '.';

        cm.replaceSelection('\n' + indent + bullet + after, 'end');
    };

    CodeMirror.defineMode("xml", function(config, parserConfig) {
        var indentUnit =3D config.indentUnit;
        var multilineTagIndentFactor =3D =
parserConfig.multilineTagIndentFactor || 1;
        var multilineTagIndentPastTag =3D =
parserConfig.multilineTagIndentPastTag || true;

        var Kludges =3D parserConfig.htmlMode ? {
            autoSelfClosers: {'area': true, 'base': true, 'br': true, =
'col': true, 'command': true,
                'embed': true, 'frame': true, 'hr': true, 'img': true, =
'input': true,
                'keygen': true, 'link': true, 'meta': true, 'param': =
true, 'source': true,
                'track': true, 'wbr': true},
            implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, =
'option': true, 'p': true,
                'rp': true, 'rt': true, 'tbody': true, 'td': true, =
'tfoot': true,
                'th': true, 'tr': true},
            contextGrabbers: {
                'dd': {'dd': true, 'dt': true},
                'dt': {'dd': true, 'dt': true},
                'li': {'li': true},
                'option': {'option': true, 'optgroup': true},
                'optgroup': {'optgroup': true},
                'p': {'address': true, 'article': true, 'aside': true, =
'blockquote': true, 'dir': true,
                    'div': true, 'dl': true, 'fieldset': true, 'footer': =
true, 'form': true,
                    'h1': true, 'h2': true, 'h3': true, 'h4': true, =
'h5': true, 'h6': true,
                    'header': true, 'hgroup': true, 'hr': true, 'menu': =
true, 'nav': true, 'ol': true,
                    'p': true, 'pre': true, 'section': true, 'table': =
true, 'ul': true},
                'rp': {'rp': true, 'rt': true},
                'rt': {'rp': true, 'rt': true},
                'tbody': {'tbody': true, 'tfoot': true},
                'td': {'td': true, 'th': true},
                'tfoot': {'tbody': true},
                'th': {'td': true, 'th': true},
                'thead': {'tbody': true, 'tfoot': true},
                'tr': {'tr': true}
            },
            doNotIndent: {"pre": true},
            allowUnquoted: true,
            allowMissing: true
        } : {
            autoSelfClosers: {},
            implicitlyClosed: {},
            contextGrabbers: {},
            doNotIndent: {},
            allowUnquoted: false,
            allowMissing: false
        };
        var alignCDATA =3D parserConfig.alignCDATA;

        // Return variables for tokenizers
        var tagName, type;

        function inText(stream, state) {
            function chain(parser) {
                state.tokenize =3D parser;
                return parser(stream, state);
            }

            var ch =3D stream.next();
            if (ch =3D=3D "<") {
                if (stream.eat("!")) {
                    if (stream.eat("[")) {
                        if (stream.match("CDATA[")) return =
chain(inBlock("atom", "]]>"));
                        else return null;
                    } else if (stream.match("--")) {
                        return chain(inBlock("comment", "-->"));
                    } else if (stream.match("DOCTYPE", true, true)) {
                        stream.eatWhile(/[\w\._\-]/);
                        return chain(doctype(1));
                    } else {
                        return null;
                    }
                } else if (stream.eat("?")) {
                    stream.eatWhile(/[\w\._\-]/);
                    state.tokenize =3D inBlock("meta", "?>");
                    return "meta";
                } else {
                    var isClose =3D stream.eat("/");
                    tagName =3D "";
                    var c;
                    while ((c =3D =
stream.eat(/[^\s\u00a0=3D<>\"\'\/?]/))) tagName +=3D c;
                    if (!tagName) return "error";
                    type =3D isClose ? "closeTag" : "openTag";
                    state.tokenize =3D inTag;
                    return "tag";
                }
            } else if (ch =3D=3D "&") {
                var ok;
                if (stream.eat("#")) {
                    if (stream.eat("x")) {
                        ok =3D stream.eatWhile(/[a-fA-F\d]/) && =
stream.eat(";");
                    } else {
                        ok =3D stream.eatWhile(/[\d]/) && =
stream.eat(";");
                    }
                } else {
                    ok =3D stream.eatWhile(/[\w\.\-:]/) && =
stream.eat(";");
                }
                return ok ? "atom" : "error";
            } else {
                stream.eatWhile(/[^&<]/);
                return null;
            }
        }

        function inTag(stream, state) {
            var ch =3D stream.next();
            if (ch =3D=3D ">" || (ch =3D=3D "/" && stream.eat(">"))) {
                state.tokenize =3D inText;
                type =3D ch =3D=3D ">" ? "endTag" : "selfcloseTag";
                return "tag";
            } else if (ch =3D=3D "=3D") {
                type =3D "equals";
                return null;
            } else if (ch =3D=3D "<") {
                return "error";
            } else if (/[\'\"]/.test(ch)) {
                state.tokenize =3D inAttribute(ch);
                state.stringStartCol =3D stream.column();
                return state.tokenize(stream, state);
            } else {
                stream.eatWhile(/[^\s\u00a0=3D<>\"\']/);
                return "word";
            }
        }

        function inAttribute(quote) {
            var closure =3D function(stream, state) {
                while (!stream.eol()) {
                    if (stream.next() =3D=3D quote) {
                        state.tokenize =3D inTag;
                        break;
                    }
                }
                return "string";
            };
            closure.isInAttribute =3D true;
            return closure;
        }

        function inBlock(style, terminator) {
            return function(stream, state) {
                while (!stream.eol()) {
                    if (stream.match(terminator)) {
                        state.tokenize =3D inText;
                        break;
                    }
                    stream.next();
                }
                return style;
            };
        }
        function doctype(depth) {
            return function(stream, state) {
                var ch;
                while ((ch =3D stream.next()) !=3D null) {
                    if (ch =3D=3D "<") {
                        state.tokenize =3D doctype(depth + 1);
                        return state.tokenize(stream, state);
                    } else if (ch =3D=3D ">") {
                        if (depth =3D=3D 1) {
                            state.tokenize =3D inText;
                            break;
                        } else {
                            state.tokenize =3D doctype(depth - 1);
                            return state.tokenize(stream, state);
                        }
                    }
                }
                return "meta";
            };
        }

        var curState, curStream, setStyle;
        function pass() {
            for (var i =3D arguments.length - 1; i >=3D 0; i--) =
curState.cc.push(arguments[i]);
        }
        function cont() {
            pass.apply(null, arguments);
            return true;
        }

        function pushContext(tagName, startOfLine) {
            var noIndent =3D Kludges.doNotIndent.hasOwnProperty(tagName) =
|| (curState.context && curState.context.noIndent);
            curState.context =3D {
                prev: curState.context,
                tagName: tagName,
                indent: curState.indented,
                startOfLine: startOfLine,
                noIndent: noIndent
            };
        }
        function popContext() {
            if (curState.context) curState.context =3D =
curState.context.prev;
        }

        function element(type) {
            if (type =3D=3D "openTag") {
                curState.tagName =3D tagName;
                curState.tagStart =3D curStream.column();
                return cont(attributes, endtag(curState.startOfLine));
            } else if (type =3D=3D "closeTag") {
                var err =3D false;
                if (curState.context) {
                    if (curState.context.tagName !=3D tagName) {
                        if =
(Kludges.implicitlyClosed.hasOwnProperty(curState.context.tagName.toLower=
Case())) {
                            popContext();
                        }
                        err =3D !curState.context || =
curState.context.tagName !=3D tagName;
                    }
                } else {
                    err =3D true;
                }
                if (err) setStyle =3D "error";
                return cont(endclosetag(err));
            }
            return cont();
        }
        function endtag(startOfLine) {
            return function(type) {
                var tagName =3D curState.tagName;
                curState.tagName =3D curState.tagStart =3D null;
                if (type =3D=3D "selfcloseTag" ||
                    (type =3D=3D "endTag" && =
Kludges.autoSelfClosers.hasOwnProperty(tagName.toLowerCase()))) {
                    maybePopContext(tagName.toLowerCase());
                    return cont();
                }
                if (type =3D=3D "endTag") {
                    maybePopContext(tagName.toLowerCase());
                    pushContext(tagName, startOfLine);
                    return cont();
                }
                return cont();
            };
        }
        function endclosetag(err) {
            return function(type) {
                if (err) setStyle =3D "error";
                if (type =3D=3D "endTag") { popContext(); return cont(); =
}
                setStyle =3D "error";
                return cont(arguments.callee);
            };
        }
        function maybePopContext(nextTagName) {
            var parentTagName;
            while (true) {
                if (!curState.context) {
                    return;
                }
                parentTagName =3D =
curState.context.tagName.toLowerCase();
                if =
(!Kludges.contextGrabbers.hasOwnProperty(parentTagName) ||
                    =
!Kludges.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {
                    return;
                }
                popContext();
            }
        }

        function attributes(type) {
            if (type =3D=3D "word") {setStyle =3D "attribute"; return =
cont(attribute, attributes);}
            if (type =3D=3D "endTag" || type =3D=3D "selfcloseTag") =
return pass();
            setStyle =3D "error";
            return cont(attributes);
        }
        function attribute(type) {
            if (type =3D=3D "equals") return cont(attvalue, attributes);
            if (!Kludges.allowMissing) setStyle =3D "error";
            else if (type =3D=3D "word") setStyle =3D "attribute";
            return (type =3D=3D "endTag" || type =3D=3D "selfcloseTag") =
? pass() : cont();
        }
        function attvalue(type) {
            if (type =3D=3D "string") return cont(attvaluemaybe);
            if (type =3D=3D "word" && Kludges.allowUnquoted) {setStyle =
=3D "string"; return cont();}
            setStyle =3D "error";
            return (type =3D=3D "endTag" || type =3D=3D "selfCloseTag") =
? pass() : cont();
        }
        function attvaluemaybe(type) {
            if (type =3D=3D "string") return cont(attvaluemaybe);
            else return pass();
        }

        return {
            startState: function() {
                return {tokenize: inText, cc: [], indented: 0, =
startOfLine: true, tagName: null, tagStart: null, context: null};
            },

            token: function(stream, state) {
                if (!state.tagName && stream.sol()) {
                    state.startOfLine =3D true;
                    state.indented =3D stream.indentation();
                }
                if (stream.eatSpace()) return null;

                setStyle =3D type =3D tagName =3D null;
                var style =3D state.tokenize(stream, state);
                state.type =3D type;
                if ((style || type) && style !=3D "comment") {
                    curState =3D state; curStream =3D stream;
                    while (true) {
                        var comb =3D state.cc.pop() || element;
                        if (comb(type || style)) break;
                    }
                }
                state.startOfLine =3D false;
                return setStyle || style;
            },

            indent: function(state, textAfter, fullLine) {
                var context =3D state.context;
                // Indent multi-line strings (e.g. css).
                if (state.tokenize.isInAttribute) {
                    return state.stringStartCol + 1;
                }
                if ((state.tokenize !=3D inTag && state.tokenize !=3D =
inText) ||
                    context && context.noIndent)
                    return fullLine ? fullLine.match(/^(\s*)/)[0].length =
: 0;
                // Indent the starts of attribute names.
                if (state.tagName) {
                    if (multilineTagIndentPastTag)
                        return state.tagStart + state.tagName.length + =
2;
                    else
                        return state.tagStart + indentUnit * =
multilineTagIndentFactor;
                }
                if (alignCDATA && /<!\[CDATA\[/.test(textAfter)) return =
0;
                if (context && /^<\//.test(textAfter))
                    context =3D context.prev;
                while (context && !context.startOfLine)
                    context =3D context.prev;
                if (context) return context.indent + indentUnit;
                else return 0;
            },

            electricChars: "/",
            blockCommentStart: "<!--",
            blockCommentEnd: "-->",

            configuration: parserConfig.htmlMode ? "html" : "xml",
            helperType: parserConfig.htmlMode ? "html" : "xml"
        };
    });

    CodeMirror.defineMIME("text/xml", "xml");
    CodeMirror.defineMIME("application/xml", "xml");
    if (!CodeMirror.mimeModes.hasOwnProperty("text/html"))
        CodeMirror.defineMIME("text/html", {name: "xml", htmlMode: =
true});

    CodeMirror.defineMode("markdown", function(cmCfg, modeCfg) {

        var htmlFound =3D CodeMirror.modes.hasOwnProperty("xml");
        var htmlMode =3D CodeMirror.getMode(cmCfg, htmlFound ? {name: =
"xml", htmlMode: true} : "text/plain");
        var aliases =3D {
            html: "htmlmixed",
            js: "javascript",
            json: "application/json",
            c: "text/x-csrc",
            "c++": "text/x-c++src",
            java: "text/x-java",
            csharp: "text/x-csharp",
            "c#": "text/x-csharp",
            scala: "text/x-scala"
        };

        var getMode =3D (function () {
            var i, modes =3D {}, mimes =3D {}, mime;

            var list =3D [];
            for (var m in CodeMirror.modes)
                if (CodeMirror.modes.propertyIsEnumerable(m)) =
list.push(m);
            for (i =3D 0; i < list.length; i++) {
                modes[list[i]] =3D list[i];
            }
            var mimesList =3D [];
            for (var m in CodeMirror.mimeModes)
                if (CodeMirror.mimeModes.propertyIsEnumerable(m))
                    mimesList.push({mime: m, mode: =
CodeMirror.mimeModes[m]});
            for (i =3D 0; i < mimesList.length; i++) {
                mime =3D mimesList[i].mime;
                mimes[mime] =3D mimesList[i].mime;
            }

            for (var a in aliases) {
                if (aliases[a] in modes || aliases[a] in mimes)
                    modes[a] =3D aliases[a];
            }

            return function (lang) {
                return modes[lang] ? CodeMirror.getMode(cmCfg, =
modes[lang]) : null;
            };
        }());

        // Should underscores in words open/close em/strong?
        if (modeCfg.underscoresBreakWords =3D=3D=3D undefined)
            modeCfg.underscoresBreakWords =3D true;

        // Turn on fenced code blocks? ("```" to start/end)
        if (modeCfg.fencedCodeBlocks =3D=3D=3D undefined) =
modeCfg.fencedCodeBlocks =3D false;

        // Turn on task lists? ("- [ ] " and "- [x] ")
        if (modeCfg.taskLists =3D=3D=3D undefined) modeCfg.taskLists =3D =
false;

        var codeDepth =3D 0;

        var header   =3D 'header'
            ,   code     =3D 'comment'
            ,   quote1   =3D 'atom'
            ,   quote2   =3D 'number'
            ,   list1    =3D 'variable-2'
            ,   list2    =3D 'variable-3'
            ,   list3    =3D 'keyword'
            ,   hr       =3D 'hr'
            ,   image    =3D 'tag'
            ,   linkinline =3D 'link'
            ,   linkemail =3D 'link'
            ,   linktext =3D 'link'
            ,   linkhref =3D 'string'
            ,   em       =3D 'em'
            ,   strong   =3D 'strong'
            ,   strike   =3D 'strike';

        var hrRE =3D /^([*\-=3D_])(?:\s*\1){4,}\s*$/
            ,   ulRE =3D /^[*\-+]\s+/
            ,   olRE =3D /^[0-9]+\.\s+/
            ,   taskListRE =3D /^\[(x| )\](?=3D\s)/ // Must follow ulRE =
or olRE
            ,   headerRE =3D /^(?:\=3D{1,}|-{1,})$/
            ,   textRE =3D /^[^!\[\]*_~\\<>` "'(]+/;

        function switchInline(stream, state, f) {
            state.f =3D state.inline =3D f;
            return f(stream, state);
        }

        function switchBlock(stream, state, f) {
            state.f =3D state.block =3D f;
            return f(stream, state);
        }


        // Blocks

        function blankLine(state) {
            // Reset linkTitle state
            state.linkTitle =3D false;
            // Reset EM state
            state.em =3D false;
            // Reset STRONG state
            state.strong =3D false;
            // Reset STRIKE state
            state.strike =3D false;

            // Reset state.quote
            state.quote =3D 0;
            if (!htmlFound && state.f =3D=3D htmlBlock) {
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
            }
            // Reset state.trailingSpace
            state.trailingSpace =3D 0;
            state.trailingSpaceNewLine =3D false;
            // Mark this line as blank
            state.thisLineHasContent =3D false;
            return null;
        }

        function blockNormal(stream, state) {

            var prevLineIsList =3D (state.list !=3D=3D false);
            if (state.list !=3D=3D false && state.indentationDiff >=3D =
0) { // Continued list
                if (state.indentationDiff < 4) { // Only adjust =
indentation if *not* a code block
                    state.indentation -=3D state.indentationDiff;
                }
                state.list =3D null;
            } else if (state.list !=3D=3D false && state.indentation > =
0) {
                state.list =3D null;
                state.listDepth =3D Math.floor(state.indentation / 4);
            } else if (state.list !=3D=3D false) { // No longer a list
                state.list =3D false;
                state.listDepth =3D 0;
            }

            if (state.indentationDiff >=3D 4) {
                state.indentation -=3D 4;
                stream.skipToEnd();
                return code;
            } else if (stream.eatSpace()) {
                return null;
            } else if (stream.peek() =3D=3D=3D '#' || =
(state.prevLineHasContent && stream.match(headerRE)) ) {
                state.header =3D true;
            } else if (stream.eat('>')) {
                state.indentation++;
                state.quote =3D 1;
                stream.eatSpace();
                while (stream.eat('>')) {
                    stream.eatSpace();
                    state.quote++;
                }
            } else if (stream.peek() =3D=3D=3D '[') {
                return switchInline(stream, state, footnoteLink);
            } else if (stream.match(hrRE, true)) {
                return hr;
            } else if ((!state.prevLineHasContent || prevLineIsList) && =
(stream.match(ulRE, true) || stream.match(olRE, true))) {
                state.indentation +=3D 4;
                state.list =3D true;
                state.listDepth++;
                if (modeCfg.taskLists && stream.match(taskListRE, =
false)) {
                    state.taskList =3D true;
                }
            } else if (modeCfg.fencedCodeBlocks && =
stream.match(/^```([\w+#]*)/, true)) {
                // try switching mode
                state.localMode =3D getMode(RegExp.$1);
                if (state.localMode) state.localState =3D =
state.localMode.startState();
                switchBlock(stream, state, local);
                return code;
            }

            return switchInline(stream, state, state.inline);
        }

        function htmlBlock(stream, state) {
            var style =3D htmlMode.token(stream, state.htmlState);
            if (htmlFound && style =3D=3D=3D 'tag' && =
state.htmlState.type !=3D=3D 'openTag' && !state.htmlState.context) {
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
            }
            if (state.md_inside && stream.current().indexOf(">")!=3D-1) =
{
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
                state.htmlState.context =3D undefined;
            }
            return style;
        }

        function local(stream, state) {
            if (stream.sol() && stream.match(/^```/, true)) {
                state.localMode =3D state.localState =3D null;
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
                return code;
            } else if (state.localMode) {
                return state.localMode.token(stream, state.localState);
            } else {
                stream.skipToEnd();
                return code;
            }
        }

        // Inline
        function getType(state) {
            var styles =3D [];

            if (state.taskOpen) { return "meta"; }
            if (state.taskClosed) { return "property"; }

            if (state.strong) { styles.push(strong); }
            if (state.strike) { styles.push(strike); }
            if (state.em) { styles.push(em); }

            if (state.linkText) { styles.push(linktext); }

            if (state.code) { styles.push(code); }

            if (state.header) { styles.push(header); }
            if (state.quote) { styles.push(state.quote % 2 ? quote1 : =
quote2); }
            if (state.list !=3D=3D false) {
                var listMod =3D (state.listDepth - 1) % 3;
                if (!listMod) {
                    styles.push(list1);
                } else if (listMod =3D=3D=3D 1) {
                    styles.push(list2);
                } else {
                    styles.push(list3);
                }
            }

            if (state.trailingSpaceNewLine) {
                styles.push("trailing-space-new-line");
            } else if (state.trailingSpace) {
                styles.push("trailing-space-" + (state.trailingSpace % 2 =
? "a" : "b"));
            }

            return styles.length ? styles.join(' ') : null;
        }

        function handleText(stream, state) {
            if (stream.match(textRE, true)) {
                return getType(state);
            }
            return undefined;
        }

        function inlineNormal(stream, state) {
            var style =3D state.text(stream, state);
            if (typeof style !=3D=3D 'undefined')
                return style;

            if (state.list) { // List marker (*, +, -, 1., etc)
                state.list =3D null;
                return getType(state);
            }

            if (state.taskList) {
                var taskOpen =3D stream.match(taskListRE, true)[1] =
!=3D=3D "x";
                if (taskOpen) state.taskOpen =3D true;
                else state.taskClosed =3D true;
                state.taskList =3D false;
                return getType(state);
            }

            state.taskOpen =3D false;
            state.taskClosed =3D false;

            var ch =3D stream.next();

            if (ch =3D=3D=3D '\\') {
                stream.next();
                return getType(state);
            }

            // Matches link titles present on next line
            if (state.linkTitle) {
                state.linkTitle =3D false;
                var matchCh =3D ch;
                if (ch =3D=3D=3D '(') {
                    matchCh =3D ')';
                }
                matchCh =3D =
(matchCh+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
                var regex =3D '^\\s*(?:[^' + matchCh + =
'\\\\]+|\\\\\\\\|\\\\.)' + matchCh;
                if (stream.match(new RegExp(regex), true)) {
                    return linkhref;
                }
            }

            // If this block is changed, it may need to be updated in =
GFM mode
            if (ch =3D=3D=3D '`') {
                var t =3D getType(state);
                var before =3D stream.pos;
                stream.eatWhile('`');
                var difference =3D 1 + stream.pos - before;
                if (!state.code) {
                    codeDepth =3D difference;
                    state.code =3D true;
                    return getType(state);
                } else {
                    if (difference =3D=3D=3D codeDepth) { // Must be =
exact
                        state.code =3D false;
                        return t;
                    }
                    return getType(state);
                }
            } else if (state.code) {
                return getType(state);
            }

            if (ch =3D=3D=3D '!' && stream.match(/\[[^\]]*\] =
?(?:\(|\[)/, false)) {
                stream.match(/\[[^\]]*\]/);
                state.inline =3D state.f =3D linkHref;
                return image;
            }

            if (ch =3D=3D=3D '[' && stream.match(/.*\](\(| ?\[)/, =
false)) {
                state.linkText =3D true;
                return getType(state);
            }

            if (ch =3D=3D=3D ']' && state.linkText) {
                var type =3D getType(state);
                state.linkText =3D false;
                state.inline =3D state.f =3D linkHref;
                return type;
            }

            if (ch =3D=3D=3D '<' && =
stream.match(/^(https?|ftps?):\/\/(?:[^\\>]|\\.)+>/, false)) {
                return switchInline(stream, state, =
inlineElement(linkinline, '>'));
            }

            if (ch =3D=3D=3D '<' && stream.match(/^[^> =
\\]+@(?:[^\\>]|\\.)+>/, false)) {
                return switchInline(stream, state, =
inlineElement(linkemail, '>'));
            }

            if (ch =3D=3D=3D '<' && stream.match(/^\w/, false)) {
                if (stream.string.indexOf(">")!=3D-1) {
                    var atts =3D =
stream.string.substring(1,stream.string.indexOf(">"));
                    if =
(/markdown\s*=3D\s*('|"){0,1}1('|"){0,1}/.test(atts)) {
                        state.md_inside =3D true;
                    }
                }
                stream.backUp(1);
                return switchBlock(stream, state, htmlBlock);
            }

            if (ch =3D=3D=3D '<' && stream.match(/^\/\w*?>/)) {
                state.md_inside =3D false;
                return "tag";
            }

            var ignoreUnderscore =3D false;
            if (!modeCfg.underscoresBreakWords) {
                if (ch =3D=3D=3D '_' && stream.peek() !=3D=3D '_' && =
stream.match(/(\w)/, false)) {
                    var prevPos =3D stream.pos - 2;
                    if (prevPos >=3D 0) {
                        var prevCh =3D stream.string.charAt(prevPos);
                        if (prevCh !=3D=3D '_' && prevCh.match(/(\w)/, =
false)) {
                            ignoreUnderscore =3D true;
                        }
                    }
                }
            }
            var t =3D getType(state);
            if (ch =3D=3D=3D '*' || (ch =3D=3D=3D '_' && =
!ignoreUnderscore)) {
                if (state.strong =3D=3D=3D ch && stream.eat(ch) && =
stream.peek(ch)) { // Remove STRONG
                    state.strong =3D false;
                    return t;
                } else if (!state.strong && stream.eat(ch) && =
stream.peek(ch)) { // Add STRONG
                    state.strong =3D ch;
                    return getType(state);
                } else if (state.em =3D=3D=3D ch) { // Remove EM
                    state.em =3D false;
                    return t;
                } else if (!state.em) { // Add EM
                    state.em =3D ch;
                    return getType(state);
                }
            } else if (ch =3D=3D=3D '~'){
                if (state.strike =3D=3D=3D ch && stream.eat(ch)) { // =
Remove SRTIKE
                    state.strike =3D false;
                    return t;
                } else if (!state.strike && stream.eat(ch)) { // Add =
STRIKE
                    state.strike =3D ch;
                    return getType(state);
                }
            } else if (ch =3D=3D=3D ' ') {
                if (stream.eat('*') || stream.eat('_')) { // Probably =
surrounded by spaces
                    if (stream.peek() =3D=3D=3D ' ') { // Surrounded by =
spaces, ignore
                        return getType(state);
                    } else { // Not surrounded by spaces, back up =
pointer
                        stream.backUp(1);
                    }
                }
            }

            if (ch =3D=3D=3D ' ') {
                if (stream.match(/ +$/, false)) {
                    state.trailingSpace++;
                } else if (state.trailingSpace) {
                    state.trailingSpaceNewLine =3D true;
                }
            }

            return getType(state);
        }

        function linkHref(stream, state) {
            // Check if space, and return NULL if so (to avoid marking =
the space)
            if(stream.eatSpace()){
                return null;
            }
            var ch =3D stream.next();
            if (ch =3D=3D=3D '(' || ch =3D=3D=3D '[') {
                return switchInline(stream, state, =
inlineElement(linkhref, ch =3D=3D=3D '(' ? ')' : ']'));
            }
            return 'error';
        }

        function footnoteLink(stream, state) {
            if (stream.match(/^[^\]]*\]:/, true)) {
                state.f =3D footnoteUrl;
                return linktext;
            }
            return switchInline(stream, state, inlineNormal);
        }

        function footnoteUrl(stream, state) {
            // Check if space, and return NULL if so (to avoid marking =
the space)
            if(stream.eatSpace()){
                return null;
            }
            // Match URL
            stream.match(/^[^\s]+/, true);
            // Check for link title
            if (stream.peek() =3D=3D=3D undefined) { // End of line, set =
flag to check next line
                state.linkTitle =3D true;
            } else { // More content on line, check if link title
                =
stream.match(/^(?:\s+(?:"(?:[^"\\]|\\\\|\\.)+"|'(?:[^'\\]|\\\\|\\.)+'|\((=
?:[^)\\]|\\\\|\\.)+\)))?/, true);
            }
            state.f =3D state.inline =3D inlineNormal;
            return linkhref;
        }

        var savedInlineRE =3D [];
        function inlineRE(endChar) {
            if (!savedInlineRE[endChar]) {
                // Escape endChar for RegExp (taken from =
http://stackoverflow.com/a/494122/526741)
                endChar =3D =
(endChar+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
                // Match any non-endChar, escaped character, as well as =
the closing
                // endChar.
                savedInlineRE[endChar] =3D new =
RegExp('^(?:[^\\\\]|\\\\.)*?(' + endChar + ')');
            }
            return savedInlineRE[endChar];
        }

        function inlineElement(type, endChar, next) {
            next =3D next || inlineNormal;
            return function(stream, state) {
                stream.match(inlineRE(endChar));
                state.inline =3D state.f =3D next;
                return type;
            };
        }

        return {
            startState: function() {
                return {
                    f: blockNormal,

                    prevLineHasContent: false,
                    thisLineHasContent: false,

                    block: blockNormal,
                    htmlState: CodeMirror.startState(htmlMode),
                    indentation: 0,

                    inline: inlineNormal,
                    text: handleText,

                    linkText: false,
                    linkTitle: false,
                    em: false,
                    strong: false,
                    strike: false,
                    header: false,
                    taskList: false,
                    list: false,
                    listDepth: 0,
                    quote: 0,
                    trailingSpace: 0,
                    trailingSpaceNewLine: false
                };
            },

            copyState: function(s) {
                return {
                    f: s.f,

                    prevLineHasContent: s.prevLineHasContent,
                    thisLineHasContent: s.thisLineHasContent,

                    block: s.block,
                    htmlState: CodeMirror.copyState(htmlMode, =
s.htmlState),
                    indentation: s.indentation,

                    localMode: s.localMode,
                    localState: s.localMode ? =
CodeMirror.copyState(s.localMode, s.localState) : null,

                    inline: s.inline,
                    text: s.text,
                    linkTitle: s.linkTitle,
                    em: s.em,
                    strong: s.strong,
                    strike: s.strike,
                    header: s.header,
                    taskList: s.taskList,
                    list: s.list,
                    listDepth: s.listDepth,
                    quote: s.quote,
                    trailingSpace: s.trailingSpace,
                    trailingSpaceNewLine: s.trailingSpaceNewLine,
                    md_inside: s.md_inside
                };
            },

            token: function(stream, state) {
                if (stream.sol()) {
                    if (stream.match(/^\s*$/, true)) {
                        state.prevLineHasContent =3D false;
                        return blankLine(state);
                    } else {
                        state.prevLineHasContent =3D =
state.thisLineHasContent;
                        state.thisLineHasContent =3D true;
                    }

                    // Reset state.header
                    state.header =3D false;

                    // Reset state.taskList
                    state.taskList =3D false;

                    // Reset state.code
                    state.code =3D false;

                    // Reset state.trailingSpace
                    state.trailingSpace =3D 0;
                    state.trailingSpaceNewLine =3D false;

                    state.f =3D state.block;
                    var indentation =3D stream.match(/^\s*/, =
true)[0].replace(/\t/g, '    ').length;
                    var difference =3D Math.floor((indentation - =
state.indentation) / 4) * 4;
                    if (difference > 4) difference =3D 4;
                    var adjustedIndentation =3D state.indentation + =
difference;
                    state.indentationDiff =3D adjustedIndentation - =
state.indentation;
                    state.indentation =3D adjustedIndentation;
                    if (indentation > 0) return null;
                }
                return state.f(stream, state);
            },

            blankLine: blankLine,

            getType: getType
        };

    }, "xml");

    CodeMirror.defineMIME("text/x-markdown", "markdown");


    var isMac =3D /Mac/.test(navigator.platform);

    var shortcuts =3D {
        'Cmd-Alt-1': toggleHeadline,
        'Cmd-Alt-2': toggleHeading,
        'Cmd-B': toggleBold,
        'Cmd-I': toggleItalic,
        'Cmd-K': drawLink,
        'Cmd-Alt-I': drawImage,
        "Cmd-'": toggleBlockquote,
        "Cmd-,": drawCode,
        'Cmd-Alt-L': toggleOrderedList,
        'Cmd-L': toggleUnOrderedList,
        'Cmd-Z': undo,
        'Cmd-Shift-Z': redo
    };


    /**
     * Fix shortcut. Mac use Command, others use Ctrl.
     */
    function fixShortcut(name) {
        if (isMac) {
            name =3D name.replace('Ctrl', 'Cmd');
        } else {
            name =3D name.replace('Cmd', 'Ctrl');
        }
        return name;
    }


    /**
     * Create icon element for toolbar.
     */
    function createIcon(name, options) {
        options =3D options || {};
        var el =3D document.createElement('a');

        var shortcut =3D options.shortcut || shortcuts[name];
        if (shortcut) {
            shortcut =3D fixShortcut(shortcut);
            el.title =3D shortcut;
            el.title =3D el.title.replace('Cmd', '=E2=8C=98');
            if (isMac) {
                el.title =3D el.title.replace('Alt', '=E2=8C=A5');
            }
        }

        el.className =3D options.className || 'icon-' + name;
        return el;
    }

    function createSep() {
        var el =3D document.createElement('i');
        el.className =3D 'separator';
        el.innerHTML =3D '|';
        return el;
    }


    /**
     * The state of CodeMirror at the given position.
     */
    function getState(cm, pos) {
        pos =3D pos || cm.getCursor('start');
        var stat =3D cm.getTokenAt(pos);
        if (!stat.type) return {};

        var types =3D stat.type.split(' ');

        var ret =3D {}, data, text;
        for (var i =3D 0; i < types.length; i++) {
            data =3D types[i];
            if (data =3D=3D=3D 'strong') {
                ret.bold =3D true;
            } else if (data =3D=3D=3D 'variable-2') {
                text =3D cm.getLine(pos.line);
                if (/^\s*\d+\.\s/.test(text)) {
                    ret['list-ol'] =3D true;
                } else {
                    ret['list-ul'] =3D true;
                }
            } else if (data =3D=3D=3D 'atom') {
                ret.quote =3D true;
            } else if (data =3D=3D=3D 'em') {
                ret.italic =3D true;
            } else if (data =3D=3D=3D 'header') {
                text =3D cm.getLine(pos.line);
                if (/^\s*\##\s/.test(text)) {
                    ret['heading'] =3D true;
                }else {
                    ret['headline'] =3D true;
                }
            }
        }
        return ret;
    }


    /**
     * Toggle full screen of the editor.
     */
    function toggleFullScreen(editor) {
        var el =3D editor.codemirror.getWrapperElement();

        // =
https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode
        var doc =3D document;
        var isFull =3D doc.fullScreen || doc.mozFullScreen || =
doc.webkitFullScreen;
        var request =3D function() {
            if (el.requestFullScreen) {
                el.requestFullScreen();
            } else if (el.mozRequestFullScreen) {
                el.mozRequestFullScreen();
            } else if (el.webkitRequestFullScreen) {
                =
el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
            }
        };
        var cancel =3D function() {
            if (doc.cancelFullScreen) {
                doc.cancelFullScreen();
            } else if (doc.mozCancelFullScreen) {
                doc.mozCancelFullScreen();
            } else if (doc.webkitCancelFullScreen) {
                doc.webkitCancelFullScreen();
            }
        };
        if (!isFull) {
            request();
        } else if (cancel) {
            cancel();
        }
    }

    /**
     * Action for toggling heading.
     */
    function toggleHeadline(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'headline');
    }

    function toggleHeading(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'heading');
    }


    /**
     * Action for toggling bold.
     */
    function toggleBold(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);

        var text;
        var start =3D '**';
        var end =3D '**';

        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (stat.bold) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);

            start =3D start.replace(/^(.*)?(\*|\_){2}(\S+.*)?$/, =
'$1$3');
            end =3D end.replace(/^(.*\S+)?(\*|\_){2}(\s+.*)?$/, '$1$3');
            startPoint.ch -=3D 2;
            endPoint.ch -=3D 2;
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D 2;
            endPoint.ch +=3D 2;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    /**
     * Action for toggling italic.
     */
    function toggleItalic(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);

        var text;
        var start =3D '_';
        var end =3D '_';

        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (stat.italic) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);

            start =3D start.replace(/^(._)?(\*|\_)(\S+._)?$/, '$1$3');
            end =3D end.replace(/^(._\S+)?(\*|\_)(\s+._)?$/, '$1$3');
            startPoint.ch -=3D 1;
            endPoint.ch -=3D 1;
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D 1;
            endPoint.ch +=3D 1;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    /**
     * Action for toggling blockquote.
     */
    function toggleBlockquote(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'quote');
    }

    function drawCode(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        _replaceSelection(cm, stat.code, '\n\n```\n ', =
'=E5=9C=A8=E8=BF=99=E9=87=8C=E4=B9=A6=E5=86=99=E4=BB=A3=E7=A0=81=E7=89=87=
  \n```\n\n');
    }


    /**
     * Action for toggling ul.
     */
    function toggleUnOrderedList(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'list-ul');
    }


    /**
     * Action for toggling ol.
     */
    function toggleOrderedList(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'list-ol');
    }


    /**
     * Action for drawing a link.
     */
    function drawLink(editor) {
        $('.cm_dialog').fadeIn(300);
        $('.cm_add_link').slideDown(300);
        $('.cm_add_img').slideUp(300);
    }
    function cmDrawLink(editor, prefix_str) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        var cm_link_txt =3D $('#'+prefix_str+'cm_link_txt').val();
        var cm_link_url =3D $('#'+prefix_str+'cm_link_url').val();
        var cm_link_tit =3D $('#'+prefix_str+'cm_link_tit').val();
        if(cm_link_txt!=3D"" || cm_link_url!=3D"" || cm_link_tit!=3D""){
           _replaceSelection(cm, stat.link, '[',cm_link_txt =
+']('+cm_link_url+' "'+cm_link_tit+'")');
        }
        $('.cm_add_link').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }


    /**
     * Action for drawing an img.
     */
    function drawImage(editor) {
        $('.cm_dialog').fadeIn(300);
        $('.cm_add_link').slideUp(300);
        $('.cm_add_img').slideDown(300);
    }
    function cmDrawImage(editor, prefix_str) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        var cm_img_url =3D $('#'+prefix_str+'cm_img_url').val();
        var cm_img_alt =3D $('#'+prefix_str+'cm_img_alt').val();
        if(cm_img_url!=3D"" || cm_img_alt!=3D""){
            _replaceSelection(cm, stat.image, '![', =
cm_img_alt+']('+cm_img_url+')');
        }
        $('.cm_add_img').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }

    function cmDrawImageUp(editor, url) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        _replaceSelection(cm, stat.image, '![', =
'=E5=9B=BE=E7=89=87=E8=AF=B4=E6=98=8E]('+ url +')');
        $('.cm_add_img').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }

    window.cmDrawLink =3D cmDrawLink;
    window.cmDrawImage =3D cmDrawImage;
    window.cmDrawImageUp =3D cmDrawImageUp;

    /**
     * Undo action.
     */
    function undo(editor) {
        var cm =3D editor.codemirror;
        cm.undo();
        cm.focus();
    }


    /**
     * Redo action.
     */
    function redo(editor) {
        var cm =3D editor.codemirror;
        cm.redo();
        cm.focus();
    }

    /**
     * Preview action.
     */
    function togglePreview(editor) {
        var toolbar =3D editor.toolbar.preview;
        var parse =3D editor.constructor.markdown;
        var cm =3D editor.codemirror;
        var wrapper =3D cm.getWrapperElement();
        var preview =3D wrapper.lastChild;
        if (!/editor-preview/.test(preview.className)) {
            preview =3D document.createElement('div');
            preview.className =3D 'editor-preview';
            wrapper.appendChild(preview);
        }
        if (/editor-preview-active/.test(preview.className)) {
            preview.className =3D preview.className.replace(
                /\s*editor-preview-active\s*/g, ''
            );
            toolbar.className =3D =
toolbar.className.replace(/\s*active\s*/g, '');
        } else {
            /* When the preview button is clicked for the first time,
             * give some time for the transition from editor.css to fire =
and the view to slide from right to left,
             * instead of just appearing.
             */
            setTimeout(function() {preview.className +=3D ' =
editor-preview-active'}, 1);
            toolbar.className +=3D ' active';
        }
        var text =3D cm.getValue();
        preview.innerHTML =3D parse(text);
    }

    function _replaceSelection(cm, active, start, end) {
        var text;
        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (active) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D start.length;
            endPoint.ch +=3D start.length;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    function _toggleLine(cm, name) {
        var stat =3D getState(cm);
        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        var repl =3D {
            headline: /^(\s*)\#\s+/,
            heading: /^(\s*)\##\s+/,
            quote: /^(\s*)\>\s+/,
            'list-ul': /^(\s*)(\*|\-|\+)\s+/,
            'list-ol': /^(\s*)\d+\.\s+/
        };
        var map =3D {
            headline: '# ',
            heading: '## ',
            quote: '> ',
            'list-ul': '* ',
            'list-ol': '1. '
        };
        for (var i =3D startPoint.line; i <=3D endPoint.line; i++) {
            (function(i) {
                var text =3D cm.getLine(i);
                if (stat[name]) {
                    text =3D text.replace(repl[name], '$1');
                } else {
                    text =3D map[name] + text;
                }
                cm.setLine(i, text);
            })(i);
        }
        cm.focus();
    }


    /* The right word count in respect for CJK. */
    function wordCount(data) {
        var pattern =3D =
/[a-zA-Z0-9_\u0392-\u03c9]+|[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u304=
0-\u309f\uac00-\ud7af]+/g;
        var m =3D data.match(pattern);
        var count =3D 0;
        if( m =3D=3D=3D null ) return count;
        for (var i =3D 0; i < m.length; i++) {
            if (m[i].charCodeAt(0) >=3D 0x4E00) {
                count +=3D m[i].length;
            } else {
                count +=3D 1;
            }
        }
        return count;
    }

    var toolbar =3D [
        '|',
        {name: 'headline', action: =
toggleHeadline,title:'=E6=A0=87=E9=A2=98=E4=B8=80=EF=BC=88Ctrl+Alt+1=EF=BC=
=89'},
        {name: 'heading', action: =
toggleHeading,title:'=E6=A0=87=E9=A2=98=E4=BA=8C=EF=BC=88Ctrl+Alt+2=EF=BC=
=89'},
        {name: 'bold', action: =
toggleBold,title:'=E7=B2=97=E4=BD=93=EF=BC=88Ctrl+B=EF=BC=89'},
        {name: 'italic', action: =
toggleItalic,title:'=E6=96=9C=E4=BD=93=EF=BC=88Ctrl+I=EF=BC=89'},
        '|',

        {name: 'quote-left', action: =
toggleBlockquote,title:'=E5=BC=95=E7=94=A8=EF=BC=88Ctrl+=E2=80=99=EF=BC=89=
'},
        {name: 'code', action: =
drawCode,title:'=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81=E7=89=87=EF=BC=88Ctr=
l+,=EF=BC=89'},
        {name: 'list-ul', action: =
toggleUnOrderedList,title:'=E6=97=A0=E5=BA=8F=E5=88=97=E8=A1=A8=EF=BC=88C=
trl+L=EF=BC=89'},
        {name: 'list-ol', action: =
toggleOrderedList,title:'=E6=9C=89=E5=BA=8F=E5=88=97=E8=A1=A8=EF=BC=88Ctr=
l+Alt+L=EF=BC=89'},
        '|',

        {name: 'link', =
title:'=E6=B7=BB=E5=8A=A0=E9=93=BE=E6=8E=A5=EF=BC=88Ctrl+K=EF=BC=89'},   =
 //action: drawLink,
        {name: 'picture', =
title:'=E6=B7=BB=E5=8A=A0=E5=9B=BE=E7=89=87=EF=BC=88Ctrl+Alt+I=EF=BC=89'}=
,   //action: drawImage,
        '|',

        {name: 'reply', action: =
undo,title:'=E6=92=A4=E9=80=80=EF=BC=88Ctrl+Z=EF=BC=89'},
        {name: 'share-alt', action: =
redo,title:'=E5=89=8D=E8=BF=9B=EF=BC=88Ctrl+Shift+Z=EF=BC=89'},
        '|',
        {name: 'info', action: =
'http://ask.csdn.net/pages/markdown',title:'markdown=E8=AF=AD=E6=B3=95=E5=
=8F=82=E8=80=83'},
        {name: 'preview', action: =
togglePreview,title:'=E9=A2=84=E8=A7=88'},
        //{name: 'fullscreen', action: toggleFullScreen},
        '|'
    ];

    /**
     * Interface of Editor.
     */
    function Editor(options) {
        options =3D options || {};

        if (options.element) {
            this.element =3D options.element;
        }

        options.toolbar =3D options.toolbar || Editor.toolbar;
        // you can customize toolbar with object
        // [{name: 'bold', shortcut: 'Ctrl-B', className: 'icon-bold'}]

        if (!options.hasOwnProperty('status')) {
            options.status =3D ['lines', 'words', 'cursor'];
        }

        this.options =3D options;

        // If user has passed an element, it should auto rendered
        if (this.element) {
            this.render();
        }
    }

    /**
     * Default toolbar elements.
     */
    Editor.toolbar =3D toolbar;

    /**
     * Default markdown render.
     */
    Editor.markdown =3D function(text) {
        if (window.marked) {
            // use marked as markdown parser
            return marked(text);
        }
    };

    /**
     * Render editor to the given element.
     */
    Editor.prototype.render =3D function(el) {
        if (!el) {
            el =3D this.element || =
document.getElementsByTagName('textarea')[0];
        }

        if (this._rendered && this._rendered =3D=3D=3D el) {
            // Already rendered.
            return;
        }

        this.element =3D el;
        var options =3D this.options;

        var self =3D this;
        var keyMaps =3D {};

        for (var key in shortcuts) {
            (function(key) {
                keyMaps[fixShortcut(key)] =3D function(cm) {
                    shortcuts[key](self);
                };
            })(key);
        }

        keyMaps["Enter"] =3D "newlineAndIndentContinueMarkdownList";
        keyMaps['Tab'] =3D 'tabAndIndentContinueMarkdownList';
        keyMaps['Shift-Tab'] =3D =
'shiftTabAndIndentContinueMarkdownList';

        this.codemirror =3D CodeMirror.fromTextArea(el, {
            mode: 'markdown',
            theme: 'paper',
            tabSize: '2',
            indentWithTabs: true,
            lineNumbers: false,
            autofocus: true,
            extraKeys: keyMaps
        });

        if (options.toolbar !=3D=3D false) {
            this.createToolbar();
        }
        if (options.status !=3D=3D false) {
            this.createStatusbar();
        }

        this._rendered =3D this.element;
    };

    Editor.prototype.createToolbar =3D function(items) {
        items =3D items || this.options.toolbar;

        if (!items || items.length =3D=3D=3D 0) {
            return;
        }

        var bar =3D document.createElement('div');
        bar.className =3D 'editor-toolbar';

        var self =3D this;

        var el;
        self.toolbar =3D {};

        for (var i =3D 0; i < items.length; i++) {
            (function(item) {
                var el;
                if (item.name) {
                    el =3D createIcon(item.name, item);
                } else if (item =3D=3D=3D '|') {
                    el =3D createSep();
                } else {
                    el =3D createIcon(item);
                }

                // bind events, special for info
                if (item.action) {
                    if (typeof item.action =3D=3D=3D 'function') {
                        el.onclick =3D function(e) {
                            item.action(self);
                        };
                    } else if (typeof item.action =3D=3D=3D 'string') {
                        el.href =3D item.action;
                        el.target =3D '_blank';
                    }
                }
                if(item.title){
                    el.title =3D item.title;
                }
                self.toolbar[item.name || item] =3D el;
                bar.appendChild(el);
            })(items[i]);
        }

        var cm =3D this.codemirror;
        cm.on('cursorActivity', function() {
            var stat =3D getState(cm);

            for (var key in self.toolbar) {
                (function(key) {
                    var el =3D self.toolbar[key];
                    if (stat[key]) {
                        el.className +=3D ' active';
                    } else {
                        el.className =3D =
el.className.replace(/\s*active\s*/g, '');
                    }
                })(key);
            }
        });

        var cmWrapper =3D cm.getWrapperElement();
        cmWrapper.parentNode.insertBefore(bar, cmWrapper);
        return bar;
    };

    Editor.prototype.createStatusbar =3D function(status) {
        status =3D status || this.options.status;

        if (!status || status.length =3D=3D=3D 0) return;

        var bar =3D document.createElement('div');
        bar.className =3D 'editor-statusbar';

        var pos, cm =3D this.codemirror;
        for (var i =3D 0; i < status.length; i++) {
            (function(name) {
                var el =3D document.createElement('span');
                el.className =3D name;
                if (name =3D=3D=3D 'words') {
                    el.innerHTML =3D '0';
                    cm.on('update', function() {
                        el.innerHTML =3D wordCount(cm.getValue());
                    });
                } else if (name =3D=3D=3D 'lines') {
                    el.innerHTML =3D '0';
                    cm.on('update', function() {
                        el.innerHTML =3D cm.lineCount();
                    });
                } else if (name =3D=3D=3D 'cursor') {
                    el.innerHTML =3D '0:0';
                    cm.on('cursorActivity', function() {
                        pos =3D cm.getCursor();
                        el.innerHTML =3D pos.line + ':' + pos.ch;
                    });
                }
                bar.appendChild(el);
            })(status[i]);
        }
        var cmWrapper =3D this.codemirror.getWrapperElement();
        cmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);
        return bar;
    };

    /**
     * Get or set the text content.
     */
    Editor.prototype.value =3D function(val) {
        if (val) {
            this.codemirror.getDoc().setValue(val);
            return this;
        } else {
            return this.codemirror.getValue();
        }
    };


    /**
     * Bind static methods for exports.
     */
    Editor.toggleHeadline =3D toggleHeadline;
    Editor.toggleHeading =3D toggleHeading;
    Editor.toggleBold =3D toggleBold;
    Editor.toggleItalic =3D toggleItalic;
    Editor.toggleBlockquote =3D toggleBlockquote;
    Editor.drawCode =3D drawCode;
    Editor.toggleUnOrderedList =3D toggleUnOrderedList;
    Editor.toggleOrderedList =3D toggleOrderedList;
    Editor.drawLink =3D drawLink;
    Editor.drawImage =3D drawImage;
    Editor.undo =3D undo;
    Editor.redo =3D redo;
    Editor.togglePreview =3D togglePreview;
    Editor.toggleFullScreen =3D toggleFullScreen;

    /**
     * Bind instance methods for exports.
     */
    Editor.prototype.toggleHeadline =3D function() {
        toggleHeadline(this);
    };
    Editor.prototype.toggleHeading =3D function() {
        toggleHeading(this);
    };
    Editor.prototype.toggleBold =3D function() {
        toggleBold(this);
    };
    Editor.prototype.toggleItalic =3D function() {
        toggleItalic(this);
    };
    Editor.prototype.toggleBlockquote =3D function() {
        toggleBlockquote(this);
    };
    Editor.prototype.drawCode =3D function() {
        drawCode(this);
    };
    Editor.prototype.toggleUnOrderedList =3D function() {
        toggleUnOrderedList(this);
    };
    Editor.prototype.toggleOrderedList =3D function() {
        toggleOrderedList(this);
    };
    Editor.prototype.drawLink =3D function() {
        drawLink(this);
    };
    Editor.prototype.drawImage =3D function() {
        drawImage(this);
    };
    Editor.prototype.undo =3D function() {
        undo(this);
    };
    Editor.prototype.redo =3D function() {
        redo(this);
    };
    Editor.prototype.togglePreview =3D function() {
        togglePreview(this);
    };
    Editor.prototype.toggleFullScreen =3D function() {
        toggleFullScreen(this);
    };

    global.Editor =3D Editor;
})(this);
------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: 7bit
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/prettify.js

//marked
------=_NextPart_000_0000_01D1170A.85812440
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js

=EF=BB=BFvar editor_change_ask_o_domain =3D "";
function editor_change_ask_o(str){
    var editor =3D $( document ).data('editor_all');
    //editor.render(document.getElementById('editor_all'));
    window.cmDrawImageUp(editor, str);

    if (editor_change_ask_o_domain !=3D "") {
        document.domain =3D editor_change_ask_o_domain;
        editor_change_ask_o_domain =3D "";
    }
}
(function(){
    $(function(){
        var prot =3D window.location.protocol;
        var afont =3D prot + =
"//ask.csdn.net/assets/ask_float_fonts_css-6b30a53970eb5c3a2a045e3df585b4=
75.css";//=E8=AF=A5=E6=A0=B7=E5=BC=8F=E6=96=87=E4=BB=B6=E5=90=8D=E7=A7=B0=
=E8=A6=81=E6=A0=B9=E6=8D=AE=E6=AF=8F=E6=AC=A1=E5=8F=91=E5=B8=83=E5=90=8E=E7=
=9A=84=E5=8A=A8=E6=80=81=E5=90=8D=E7=A7=B0=E6=9D=A5=E4=BF=AE=E6=94=B9=E3=80=
=82//font-awesome.min-58872ef19fd8eb4c71bc6667c200b0c0.css";
        $('body').append('<link rel=3D"stylesheet" type=3D"text/css" =
media=3D"screen" href=3D"' + afont + '">');

        var first_pop_str=3D"<div class=3D'pop_edit ask_first =
comm_ask_first' style=3D'display: none;'><h3>=E6=8F=90=E9=97=AE</h3><a =
href=3D'#' nodetype=3D'close' class=3D'close'>=C3=97</a>"+
            " <div class=3D'context'>"+
            " <form id=3D'form' nodetype=3D'form-popup' =
class=3D'form'>"+
            "<div class=3D'askFirst_desc'><span class=3D'afd_p'>CSDN =
=E9=97=AE=E7=AD=94=E6=98=AF=E4=B8=80=E4=B8=AA=E7=9C=9F=E8=AF=9A=E3=80=81=E8=
=AE=A4=E7=9C=9F=E3=80=81=E6=9C=89=E6=B4=BB=E5=8A=9B=E7=9A=84=E6=8A=80=E6=9C=
=AF=E7=A4=BE=E5=8C=BA=E3=80=82</span><br><span =
class=3D'afd_p'>=E6=88=91=E4=BB=AC=E5=BE=88=E6=84=BF=E6=84=8F=E5=B8=AE=E5=
=8A=A9=E6=82=A8=EF=BC=8C=E5=B8=8C=E6=9C=9B=E6=82=A8=E6=8F=90=E5=87=BA=E7=9A=
=84=E6=AF=8F=E4=B8=80=E4=B8=AA=E9=97=AE=E9=A2=98=E9=83=BD=E8=83=BD=E5=BE=97=
=E5=88=B0=E8=A7=A3=E7=AD=94=EF=BC=8C=E5=90=8C=E6=97=B6=E4=B9=9F=E5=B8=8C=E6=
=9C=9B=E6=82=A8=E7=9F=A5=E9=81=93=EF=BC=8C=E4=B8=80=E4=B8=AA=E5=A5=BD=E7=9A=
=84=E9=97=AE=E9=A2=98</span><br><span"+
            " =
class=3D'afd_p'>=E6=9B=B4=E5=AE=B9=E6=98=93=E5=BE=97=E5=88=B0=E5=A5=BD=E7=
=9A=84=E7=AD=94=E6=A1=88<span>&nbsp;&nbsp;</span><a =
href=3D'//ask.csdn.net/help?#rule12' =
target=3D'_blank'>=E6=80=8E=E6=A0=B7=E6=8F=90=E5=87=BA=E4=B8=80=E4=B8=AA=E5=
=A5=BD=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9F</a></span><br>"+
            "<span =
class=3D'afd_p'>=E6=8F=90=E9=97=AE=E6=97=B6=E5=BA=94=E9=81=B5=E5=BE=AA=E8=
=AE=A4=E7=9C=9F=E3=80=81=E7=AE=80=E6=B4=81=E3=80=81=E6=98=8E=E7=A1=AE=E3=80=
=81=E8=A7=84=E8=8C=83=E7=9A=84=E5=8E=9F=E5=88=99</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E9=A6=96=E5=85=88=E7=A1=AE=E5=AE=9A=E6=82=A8=E6=98=AF=E5=90=A6=E9=9C=80=E8=
=A6=81=E4=BD=BF=E7=94=A8=E6=82=AC=E8=B5=8F=E6=8F=90=E9=97=AE=EF=BC=9B</sp=
an><br><span class=3D'afd_p'>=E2=80=A2 =
=E9=97=AE=E9=A2=98=E4=B8=AD=E6=B2=A1=E5=BF=85=E8=A6=81=E5=87=BA=E7=8E=B0=E2=
=80=9C=E5=A4=A7=E7=A5=9E=E5=B8=AE=E5=B8=AE=E5=BF=99=E2=80=9D=E3=80=81=E2=80=
=9C=E6=95=99=E6=8E=88=E6=95=91=E6=95=91=E6=88=91=E2=80=9D=E4=B9=8B=E7=B1=BB=
=E4=B8=8E=E6=8A=80=E6=9C=AF=E9=97=AE=E9=A2=98=E6=97=A0=E5=85=B3=E7=9A=84=E4=
=BF=A1=E6=81=AF=EF=BC=8C=E5=8F=8A=E6=97=B6=E9=87=87=E7=BA=B3=E6=9C=80=E4=BD=
=B3=E7=AD=94=E6=A1=88=E5=B0=B1=E6=98=AF=E5=AF=B9=E5=9B=9E=E7=AD=94=E4=BA=BA=
=E7=9A=84=E6=9C=80=E5=A5=BD=E8=AE=A4=E5=8F=AF=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98=E8=A6=81=E6=9C=89=E6=98=8E=E7=A1=AE=E8=
=80=8C=E6=9C=89=E4=BB=B7=E5=80=BC=E7=9A=84=E4=BF=A1=E6=81=AF=EF=BC=8C=E2=80=
=9C=E6=9C=89=E4=BA=BA=E9=81=87=E5=88=B0=E8=BF=87=E8=BF=99=E7=A7=8D=E6=83=85=
=E5=86=B5=E5=90=97=EF=BC=9F=E5=B8=AE=E5=BF=99=E8=BF=9B=E6=9D=A5=E7=9C=8B=E7=
=9C=8B=E2=80=9D=E8=BF=99=E7=A7=8D=E6=A0=87=E9=A2=98=E5=8F=AA=E4=BC=9A=E9=99=
=8D=E4=BD=8E=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98=E8=A2=AB=E5=9B=9E=E7=AD=94=
=E7=9A=84=E6=A6=82=E7=8E=87=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E2=80=9C=E6=B1=82=E4=BB=A3=E7=A0=81=E2=80=9D=E7=B1=BB=E7=9A=84=E9=97=AE=E9=
=A2=98=E8=AF=B7=E6=82=A8=E6=82=AC=E8=B5=8F=E6=8F=90=E9=97=AE=EF=BC=8C=E6=88=
=91=E4=BB=AC=E4=B9=90=E4=BA=8E=E5=B0=86=E5=85=B6=E7=9C=8B=E6=88=90=E4=B8=80=
=E7=A7=8D=E4=BA=A4=E6=98=93=E3=80=82</span><br><br><span"+
            " =
class=3D'afd_p'>=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E5=B9=B6=E4=B8=8D=E6=
=AC=A2=E8=BF=8E=E8=BF=99=E7=A7=8D=E9=97=AE=E9=A2=98</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E5=92=8C=E5=B7=B2=E6=9C=89=E9=97=AE=E9=A2=98=E5=AE=8C=E5=85=A8=E9=87=8D=E5=
=A4=8D=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=8C=E4=B8=BA=E9=81=BF=E5=85=8D=E9=87=
=8D=E5=A4=8D=EF=BC=8C=E6=8F=90=E9=97=AE=E5=89=8D=E8=AF=B7=E5=85=88=E8=BF=9B=
=E8=A1=8C=E6=90=9C=E7=B4=A2=EF=BC=9B</span><br><span =
class=3D'afd_p'>=E2=80=A2 =E6=8B=9B=E8=81=98 / =
=E6=B1=82=E8=81=8C=E3=80=81=E4=BA=A4=E6=98=93 / =
=E5=90=88=E4=BD=9C=E3=80=81=E5=AF=BB=E4=BA=BA / =
=E5=BE=81=E5=8F=8B=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E6=97=A0=E6=98=8E=E7=A1=AE=E7=AD=94=E6=A1=88=E7=9A=84=E8=B0=83=E6=9F=A5=E7=
=B1=BB=E9=97=AE=E9=A2=98=E3=80=82=E5=A6=82=E8=8B=B9=E6=9E=9C=E5=92=8C=E8=B0=
=B7=E6=AD=8C=EF=BC=8C=E5=A4=A7=E5=AE=B6=E6=9B=B4=E6=AC=A3=E8=B5=8F=E8=B0=81=
=EF=BC=9F</span><br><span =
class=3D'afd_p'>=E6=83=B3=E5=AD=A6=E4=BC=9A=E6=9B=B4=E5=A5=BD=E7=9A=84=E6=
=8F=90=E9=97=AE=EF=BC=8C=E8=AF=B7=E6=9F=A5=E7=9C=8B<span>&nbsp;</span><a"=
+
            " href=3D'//ask.csdn.net/help' =
target=3D'_blank'>=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E6=8F=90=E9=97=AE=E8=
=A7=84=E8=8C=83</a></span></div>"+
            "<div =
class=3D'askFirst_se'><span>=E6=8F=90=E9=97=AE=E5=89=8D=E8=AF=B7=E6=90=9C=
=E7=B4=A2</span></div>"+
            "<div class=3D'search_div'><input id=3D'askInput' =
type=3D'text' =
placeholder=3D'=E8=BE=93=E5=85=A5=E9=97=AE=E9=A2=98=EF=BC=8C=E6=9F=A5=E7=9C=
=8B=E6=98=AF=E5=90=A6=E5=AD=98=E5=9C=A8=E7=9B=B8=E4=BC=BC=E7=9A=84=E9=97=AE=
=E9=A2=98'></div></form> </div>"+
            " <div class=3D'success'></div></div>";
        var second_pop_str=3D"<div class=3D'pop_edit ask_second =
comm_ask_second'><h3>=E6=8F=90=E9=97=AE</h3><span =
class=3D'ask_float_span'>=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98=E5=B0=86=E4=
=BC=9A=E8=A2=AB=E5=8F=91=E5=B8=83=E5=9C=A8=E2=80=9C<a =
class=3D'ask_float_channel' href=3D'//ask.csdn.net' target=3D'_blank' =
style=3D'cursor:pointer'>=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94</a>=E2=80=9D=
=E9=A2=91=E9=81=93</span><a href=3D'#' nodeType=3D'close' =
class=3D'close'>=C3=97</a><div class=3D'context'><div =
class=3D'err_div'><span class=3D'err_ico'></span>"+
            "<span =
class=3D'err_txt'>=E8=AF=A5=E9=97=AE=E9=A2=98=E5=B7=B2=E5=AD=98=E5=9C=A8=EF=
=BC=8C=E8=AF=B7=E5=8B=BF=E9=87=8D=E5=A4=8D=E6=8F=90=E9=97=AE</span></div>=
"+
            "<div class=3D'input_div'><input id=3D'askInputSecond' =
type=3D'text' style=3D'font-size:14px;' =
placeholder=3D'=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98'/></div>"+
            "<div class=3D'cm_box'><div class=3D'cm_dialog'></div> <div =
class=3D'pop_cm cm_add_link'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E5=86=85=E5=AE=B9' =
id=3D'af_cm_link_txt'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E5=9C=B0=E5=9D=80' =
id=3D'af_cm_link_url'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E6=8F=90=E7=A4=BA' =
id=3D'af_cm_link_tit'><div class=3D'text-right'><span class=3D'btn =
btn-default btn-sm' =
id=3D'add_link_btn'>=E6=8F=92=E5=85=A5=E9=93=BE=E6=8E=A5</span> </div> =
</div>"+
            "<div class=3D'pop_cm cm_add_img'><div class=3D'nav-tabs'><a =
class=3D'img_tab active' =
href=3D'#tab_upload'>=E6=9C=AC=E5=9C=B0=E4=B8=8A=E4=BC=A0</a><a =
class=3D'img_tab' =
href=3D'#tab_weburl'>=E7=BD=91=E7=BB=9C=E5=9B=BE=E7=89=87</a></div><div =
class=3D'tab_panel active' id=3D'tab_upload'><div =
class=3D'set_img'><iframe =
src=3D'http://ask.csdn.net/upload.html'></iframe></div></div><div =
class=3D'tab_panel' id=3D'tab_weburl'><input type=3D'text' =
placeholder=3D'=E5=9B=BE=E7=89=87=E5=9C=B0=E5=9D=80' =
id=3D'af_cm_img_url'><input type=3D'text' =
placeholder=3D'=E5=9B=BE=E7=89=87=E8=AF=B4=E6=98=8E' =
id=3D'af_cm_img_alt'><div class=3D'text-right'><span class=3D'btn =
btn-default btn-sm' =
id=3D'add_img_btn'>=E6=8F=92=E5=85=A5=E5=9B=BE=E7=89=87</span> =
</div></div> </div></div> "+
            "<textarea id=3D'editor_all' rows=3D'8'></textarea>"+
            "<div class=3D'div_tags clearfix'><div id=3D'divSearchTags' =
class=3D'tags_con'>"+
            "<input type=3D'text'/></div><input type=3D'hidden' =
name=3D'txtSearchTags'/></div>"+
            "<div id=3D'ask2_tagRecomm_div' class=3D'drt_tagRecomm =
tracking-ad' data-mod=3D'popu_73'><span =
class=3D'drt_tit'>=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=EF=BC=9A</span></d=
iv></div>"+
            "<div class=3D'success'><div class=3D'left_area'><input =
id=3D'chk_cb' type=3D'checkbox'/><span =
class=3D'wyxs'>=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F</span><input =
id=3D'cb_num'  class=3D'cb_num' readonly=3D'true'/>"+
            "<span class=3D'phib_rii'><span> =
=E5=B8=81</span></span></div><a href=3D'#' nodeType=3D'cancel' =
class=3D'cancel'>=E5=8F=96=E6=B6=88</a><a href=3D'#' nodeType=3D'ok' =
class=3D'ok'>=E5=8F=91=E5=B8=83</a></div></div>";

        =
//=E8=AF=A5=E5=80=BC=E6=98=AF=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8=E5=88=B0=
=E4=B8=8A=E9=9D=A2=E7=9A=84=E8=B7=9D=E7=A6=BB=EF=BC=8C=E5=A4=A7=E7=BA=A6=E5=
=9C=A8%65=E5=A4=84
        var back_top_value =
=3DMath.ceil(document.documentElement.clientHeight *0.65);
        =
//=E7=8E=B0=E5=9C=A8=E6=88=91=E4=BB=AC=E5=BC=80=E5=A7=8B=E5=8A=A0=E5=85=A5=
=E4=BA=8C=E7=BB=B4=E7=A0=81=E5=8A=9F=E8=83=BD=EF=BC=8C=E7=84=B6=E5=90=8E=E6=
=8A=8A=E6=8F=90=E9=97=AE=E6=94=B9=E4=B8=BAapp=E4=B8=8B=E8=BD=BD
        if(window.quickReplyflag) {
            =
//=E6=B3=A8=E9=87=8A=E7=9A=84=E9=83=A8=E5=88=86=E6=98=AF=E4=BB=A5=E5=89=8D=
=E6=8F=90=E9=97=AE=E7=9A=84=EF=BC=8C=E8=BF=99=E4=B8=AA=E6=97=B6=E5=80=99=E5=
=85=B6=E5=AE=9E=E5=90=8E=E7=BB=AD=E7=9A=84=E5=BE=88=E5=A4=9A=E4=B8=8E=E8=BF=
=99=E4=B8=AA=E6=8C=89=E9=92=AE=E7=9B=B8=E5=85=B3=E7=9A=84=E4=BB=A3=E7=A0=81=
=E6=B2=A1=E7=94=A8=E4=BA=86=EF=BC=8C=E5=B0=B1=E6=98=AF=E9=82=A3=E4=BA=9B=E5=
=BC=B9=E5=87=BA=E7=9A=84=E6=8F=90=E9=97=AE=E6=A1=86=EF=BC=8C=E5=85=88=E4=B8=
=8D=E5=88=A0=E9=99=A4=E5=90=A7=E3=80=82
            /* var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-ask-float-block'  =
title=3D'=E6=8F=90=E9=97=AE=E6=8C=89=E9=92=AE' =
style=3D'top:"+(back_top_value-82)+"px'></a>"+
             "<a id=3D'com-quick-reply'  =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-41)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";*/
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-160)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block' =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
                "<a id=3D'com-quick-reply'  =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-38)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";
        } else if (window.eduCallCenter) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-160)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block'  =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
                "<a id=3D'com-edu-call-center'  =
title=3D'=E5=AD=A6=E9=99=A2=E5=AE=A2=E6=9C=8D' =
style=3D'top:"+(back_top_value-38)+"px' target=3D'_blank' =
href=3D'http://wpa.qq.com/msgrd?v=3D3&amp;uin=3D2355263780&amp;site=3Dqq&=
amp;menu=3Dyes'></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        } else if (window.bbsInfoflag) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-236)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block'  =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-152)+"px'></a>"+
                "<a id=3D'com-quick-reply-bbs' =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-114)+"px'></a>" +
                "<a id=3D'com-back-channel' =
title=3D'=E5=9B=9E=E5=88=B0=E9=A2=91=E9=81=93' =
style=3D'top:"+(back_top_value-76)+"px'></a>" +
                "<a id=3D'com-back-home' =
title=3D'=E5=9B=9E=E5=88=B0=E9=A6=96=E9=A1=B5' =
style=3D'top:"+(back_top_value-38)+"px'></a>" +
                "<a id=3D'com-d-top-a' =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";
        }
        =
//=E5=86=8D=E6=AC=A1=E9=87=8D=E6=96=B0=E5=8A=A0=E5=85=A5ask=E4=BE=9B=E5=95=
=86=E5=8A=A1=E9=A1=B9=E7=9B=AE=E9=82=A3=E8=BE=B9=E4=BD=BF=E7=94=A82015061=
0
        else if (window.askForBussenessFlag) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-160)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block'  =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
                 "<a id=3D'com-ask-float-block'  =
style=3D'top:"+(back_top_value-38)+"px' =
title=3D'=E6=88=91=E8=A6=81=E6=8F=90=E9=97=AE' onclick=3D'' ></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        }
        else {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block'  =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-122)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block'   =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-38)+"px'></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        }

        //=E6=90=9C=E7=B4=A2=E5=BB=BA=E8=AE=AE=E7=9A=84HTML
        var common_ask_div_sc=3D"<div id=3D\"common_ask_div_sc\" =
class=3D\"searchContainer\"><div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div><div class=3D\"sFooter\"><a =
class=3D\"sFirstNewAsk\">=E6=88=91=E6=83=B3=E6=8F=90=E4=B8=80=E4=B8=AA=E6=
=96=B0=E9=97=AE=E9=A2=98</a></div></div>"
        var =
total_ask_str=3Dfloat_ask_img+second_pop_str+common_ask_div_sc;//float_as=
k_img+first_pop_str+second_pop_str+common_ask_div_sc
        $("body").append(total_ask_str);

        =
//=E7=82=B9=E5=87=BB=E5=85=B3=E9=97=AD=E4=BA=8C=E7=BB=B4=E7=A0=81

        $("#com-appcode-float-block #appcode-close").click(function(){
            $("#com-appcode-float-block").hide('slow');
			return false;
            //$("#com-appcode-float-block").remove();

        })

        $( 'body').bind( 'click', function ( evt ) {
            $target =3D $( evt.target );
            if ( $target.attr( 'id') =3D=3D 'add_img_btn' )
            {
                cmDrawImage(editor, "af_");
                return false;
            }else if( $target.attr( 'class') =3D=3D 'img_tab' ){
                =
$target.addClass('active').siblings('.img_tab').removeClass('active');
                var _target =3D $target.attr('href');
                =
$(_target).addClass('active').siblings('.tab_panel').removeClass('active'=
);
            }else if( $target.attr( 'id') =3D=3D 'add_link_btn' ) {
                cmDrawLink(editor, "af_");
                return false;
            }else if( $target.attr( 'class') =3D=3D 'cm_dialog'){
                $('.pop_cm').hide(300);
                $('.cm_dialog').hide();
                if (editor_change_ask_o_domain !=3D "") {
                    document.domain =3D editor_change_ask_o_domain;
                    editor_change_ask_o_domain =3D "";
                }
            }else if ($target.hasClass('icon-link')){     //icon-link
                var $ft =3D $target.parents()[1];
                //var $ft =3D $tb.parents()[0];
                $(".cm_dialog", $ft).fadeIn(300);
                $(".cm_add_link", $ft).slideDown(300);
                $(".cm_add_img", $ft).slideUp(300);

            }else if ($target.hasClass('icon-picture')){     //icon-link
                var $ft =3D $target.parents()[1];
                //var $ft =3D $tb.parents()[0];
                $(".cm_dialog", $ft).fadeIn(300);
                $(".cm_add_link", $ft).slideUp(300);
                $(".cm_add_img", $ft).slideDown(300);
                editor_change_ask_o_domain =3D document.domain;
                document.domain =3D "csdn.net";
            }
        } )

        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E6=9C=89=E5=BF=AB=E9=80=9F=
=E5=9B=9E=E5=A4=8D=EF=BC=8C=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8start
        $("#com-quick-reply").click(function(){
            if($("#comment_content").length>0){
                setEditorFocus();
            }
            else{
                window.location.href =3D "https://passport.csdn.net/";
            }
        });


        var d_top =3D $('#com-d-top-a');

        $(document).scroll(function(){
            var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);
            if (scrTop > 500)
            {
                d_top.show();
            } else
            {
                d_top.hide();
            }

        })
        $('#com-d-top-a').click(function ()
        {
            scrollTo(0, 0);
            this.blur();
            return false;
        });
        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E6=9C=89=E5=BF=AB=E9=80=9F=
=E5=9B=9E=E5=A4=8D=EF=BC=8C=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8end

        var coin_flag=3Dfalse;
        //var prot =3D window.location.protocol;
        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E5=90=A6=E9=A6=96=E6=AC=A1=E7=82=B9=E5=87=BB=
=E6=8F=90=E9=97=AE=E6=8C=89=E9=92=AE
        var check_accept_rules_url =3D prot + =
"//ask.csdn.net/users/check_accept_rules.js";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E6=A0=87=E9=A2=98=E5=BD=95=E5=85=A5=
=E6=A1=86=E7=9A=84=E8=87=AA=E5=8A=A8=E5=AE=8C=E6=88=90
        var ask_topic_autocomplete_url =3D prot + =
"//ask.csdn.net/questions/autocomplete.js";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E5=85=89=E6=A0=87=E7=A6=BB=E5=BC=80=
=E6=A0=87=E9=A2=98=E5=90=8E=E7=9A=84=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE
        // var ask_topic_tag_suggest_url =3D " =
http://ask.csdn.net/questions/tag_autocomplete.js";
        var ask_topic_tag_suggest_proxy =3D prot + =
"//internalapi.csdn.net/proxy.html";
        var ask_topic_tag_suggest_url =3D prot + =
"//internalapi.csdn.net/myapi/ask_topic/ask_topic_tag_suggest";//?x-acl-t=
oken=3DYz3GAP4stGOIrLaIrnDed-uThp8K";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E5=8F=91=E5=B8=83=E9=97=AE=E9=A2=98=
=E7=9A=84=E5=9C=B0=E5=9D=80
        var create_question_proxy =3D prot + =
"//ask.csdn.net/proxy.html";
        var create_question_url =3D prot + =
"//ask.csdn.net/questions/create_question.json";
        //=E9=AA=8C=E8=AF=81C=E5=B8=81
        var valid_coin=3D   prot + "//ask.csdn.net/users/get_scores.js";
        //=E9=97=AE=E9=A2=98=E9=93=BE=E6=8E=A5=E8=B7=B3=E8=BD=AC
        var ask_detail_url =3D  prot + "//ask.csdn.net/questions/";
        var ajaxProxyCaches =3D {};

        var isSubmitting =3D false;


        var editor =3D new Editor();
        $( document ).data( 'editor_all', editor );
        editor.render(document.getElementById('editor_all'));

        function ajaxProxy(proxyUrl, opts) {
            var c =3D ajaxProxyCaches[proxyUrl];
            if (c =3D=3D=3D undefined) {
                c =3D ajaxProxyCaches[proxyUrl] =3D [];
                var func =3D arguments.callee;
                $('<iframe class=3D"poxy_uc" src=3D"' + proxyUrl + '" =
style=3D"display:none">').load(function () {
                    c.contentWindow =3D this.contentWindow;
                    func(proxyUrl, opts);
                }).prependTo('body');
            } else if (c.contentWindow =3D=3D=3D undefined) {
                c.push(opts);
            } else {
                do {
                    c.contentWindow.jQuery.ajax(opts);
                } while (opts =3D c.shift());
            }
        }

        //json =3D {status:false, error:1, msg: =
'=E8=AF=B7=E5=85=88=E7=99=BB=E5=BD=95'}
        //json =3D {status:false, error:2, msg: =
'=E6=82=A8=E5=B7=B2=E8=A2=ABCSDN=E9=97=AE=E7=AD=94=E7=A6=81=E8=A8=80'}
        //json =3D {status:false, error:3, msg: =
'=E6=82=A8=E5=B7=B2=E8=A2=AB=E5=B0=81=E5=8F=B7'}
        //json =3D {status:true, error:0, msg: =
'=E6=82=A8=E5=B7=B2=E7=BB=8F=E7=99=BB=E5=BD=95'}

        =
//=E6=98=AF=E5=90=A6=E9=A6=96=E6=AC=A1=E7=82=B9=E5=87=BB=E6=8F=90=E9=97=AE=

        $("#com-ask-float-block").bind('click', function(){
            =
//$('.editor-preview.editor-preview-active').removeClass('editor-preview-=
active');
            //$('.icon-preview.active').removeClass('active');
            //document.domain=3D"csdn.net";
            //pop($("body > .ask_second"));
            //editor.codemirror.getValue =3D "";
            $(".ask_second").remove();
            $("body").append(second_pop_str);
            editor =3D new Editor();
            $( document ).data( 'editor_all', editor );
            editor.render(document.getElementById('editor_all'));


            $("#askInputSecond").focus();//
            $(".CodeMirror").removeClass("CodeMirror-focused");
            $(".comm_ask_second .CodeMirror textarea").blur();
            //$(".CodeMirror-code, .CodeMirror-measure").html("");
            $.ajax({
                type: "get",
                url: check_accept_rules_url, =
//"http://ask.csdn.net/users/check_accept_rules",//=E5=88=A4=E6=96=AD=E6=98=
=AF=E5=90=A6=E7=99=BB=E5=BD=95=EF=BC=8C
                dataType: "jsonp",
                jsonp: "callback",
                success: function(obj) {

                    if (obj.error =3D=3D 0) {
                        pop($("body > .ask_second"));

                        =
$(".CodeMirror").removeClass("CodeMirror-focused");
                    } else if (obj.error =3D=3D 1) {
                        window.location.href =3D =
"https://passport.csdn.net/";
                    } else {
                        alert(obj.msg);
                    }
                },
                error: function(err) {
                    var i =3D 0;
                }
            });

        });

        function pop($popup){
            //=E9=81=AE=E7=BD=A9
            var w =3D $( document ).width();
            var h =3D $( document ).height();
            var $marker =3D $( '<div class=3D"marker"></div>' );
            if ( $.browser && $.browser.msie) {
                w =3D w - 18;
            }

            $marker.css( {
                opacity: 0.5,
                width: w + 'px',
                height: h + 'px'
            } );

            $( 'body' ).append( $marker );
            //=E4=BD=8D=E7=BD=AE=E5=8F=8A=E5=BC=B9=E5=87=BA

            //var top =3D $( window ).height() / 2 + $( window =
).scrollTop();
            //var top =3Ddocument.documentElement.clientHeight / 2 + $( =
window ).scrollTop();

            /*$popup.css( {
             top: top + 'px',
             left:"50%"

             } );*/

            setTimeout( function () {
                $popup.show();
                $popup.css( {
                    opacity: 1
                } );
                $(".CodeMirror").removeClass("CodeMirror-focused");
            }, 200 );
            =
//=E5=88=9D=E5=A7=8B=E5=8C=96=E5=9F=BA=E6=9C=AC=E7=9A=84=E4=BA=8B=E4=BB=B6=
=E7=BB=91=E5=AE=9A=E7=AD=89
            //=E5=8F=96=E6=B6=88=E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A

            var $cancel=3D$popup.find( '[nodetype=3D"cancel"]' );
            var $close =3D $popup.find( '[nodetype=3D"close"]' );
            $cancel.add($close).unbind( 'click' );
            $cancel.add($close).bind( 'click', function () {
                $("#common_ask_div_sc").css("display","none");
                $popup.css( {
                    opacity: 0
                } );
                var $btn_sub =3D $popup.find( '[nodetype=3D"ok"]' );
                $btn_sub.css("background-color", "#be0000");
                isSubmitting =3D false;
                setTimeout( function () {
                    $popup.hide();
                }, 350 );
                $( '.marker' ).remove();
                return false;
            } );
            =
//=E6=8F=90=E4=BA=A4=E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A=EF=BC=8C=E9=9C=80=
=E8=A6=81=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E7=AC=AC=E4=BA=8C=E4=
=B8=AA=E5=BC=B9=E7=AA=97

            if($popup.hasClass("ask_first")){

                //=E7=BB=91=E5=AE=9A=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2
                AskSearch({ $inputBox: $(".comm_ask_first #askInput"),
                    $container: $("body > #common_ask_div_sc"),
                    searchUrl: ask_topic_autocomplete_url, =
//"http://192.168.6.227:9403/ask_topic/autocomplete", =
//=E6=90=9C=E7=B4=A2=E7=9A=84Url
                    isFirst: true

                })
            }

            else{
                //=E8=BF=98=E8=BF=9C=E9=87=8D=E8=AE=BE=E5=80=BC
                $(".err_div").css("display", "none");
                $(" .comm_ask_second #askInputSecond").val("");
                $(" .comm_ask_second #wmd-input").val("");
                $(" .comm_ask_second span.tag").remove();
                //$(" .comm_ask_second  #ask2_tagRecomm_div =
label").remove();
                $(" .comm_ask_second  #ask2_tagRecomm_div a").remove();
                $(".comm_ask_second #chk_cb").attr("checked",false);
                $(".comm_ask_second #cb_num").attr("readonly",true);
                $(" .comm_ask_second #cb_num").val("");
                $(" .comm_ask_second #wmd-preview").empty();
                $(" .comm_ask_second [name=3D'txtSearchTags']").val("");
                /*$(" .comm_ask_second =
#wmd-preview").css("display","none");
                 $(" .comm_ask_second =
#wmd-input").css("display","block");*/


                =
//=E7=BB=99=E6=A0=87=E7=AD=BE=E5=8A=A0=E4=B8=8Afoucs=E6=95=88=E6=9E=9C
                $(" .comm_ask_second #divSearchTags =
input").focus(function(){
                    $(" .comm_ask_second =
#divSearchTags").addClass('focus');
                }).blur(function(){
                    $(" .comm_ask_second =
#divSearchTags").removeClass('focus');
                })
                //=E6=82=AC=E8=B5=8F=E7=9A=84=E5=BC=80=E5=90=AF
                $(".comm_ask_second #chk_cb").click(function(){
                    if ($(".comm_ask_second #chk_cb")[0].checked) {
                        $(".comm_ask_second =
#cb_num").attr("readonly",false)

                    }
                    else{
                        $(".comm_ask_second =
#cb_num").attr("readonly",true);
                        $(".comm_ask_second #cb_num").val("");
                        coin_flag =3D false;
                    }
                })
                var $submit =3D $popup.find( '[nodetype=3D"ok"]' );
                $submit.unbind('click');
                $submit.bind( 'click', function () {
                    var _this =3D this;
                    if (isSubmitting) return;
                    isSubmitting =3D true;
                    $(this).css("background-color", "#999");
                    // data =3D =
_this.getBackData();=E9=9C=80=E8=A6=81=E8=87=AA=E8=A1=8C=E5=BA=8F=E5=88=97=
=E5=8C=96=E5=80=BC
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D editor.codemirror.getValue();
                    /* if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     _content =3D _content.replace(/\<p\>/g, "");
                     _content =3D _content.replace(/\<\/p\>/g, "");
                     }*/
                    var _tagList =3D $(".comm_ask_second =
[name=3D'txtSearchTags']").val();
                    var _fromType =3D =
window.location.hostname;//"read_index";

                    var _isreward =3D $(" .comm_ask_second =
#chk_cb")[0].checked;

                    var _coin =3D $(" .comm_ask_second #cb_num").val();

                    //=E9=AA=8C=E8=AF=81
                    $(".err_div").css("display", "none");
                    if (!valid($(" .comm_ask_second =
#askInputSecond"),_title,"=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98",10,50)){

                        return false;
                    }


                    if( !valid($(" .comm_ask_second =
#wmd-input"),_content,"=E9=97=AE=E9=A2=98=E6=8F=8F=E8=BF=B0",30,10000)){
                        return false;
                    };
                    if( !valid( $(" .comm_ask_second =
#divSearchTags"),_tagList.split(','),"=E9=97=AE=E9=A2=98=E6=A0=87=E7=AD=BE=
",1,5)){
                        $(" .comm_ask_second =
#divSearchTags").addClass('focus');
                        return false;
                    };

                    =
//=E9=82=A3=E4=B8=AAC=E5=B8=81=E9=82=A3=E4=B8=AA=E5=A6=82=E6=9E=9C=E5=8B=BE=
=E9=80=89=E4=BA=86=E6=89=8D=E9=AA=8C=E8=AF=81=E6=98=AF=E4=B8=8D=E6=98=AF=E6=
=95=B0=E5=AD=97,=E8=BF=98=E9=9C=80=E9=AA=8C=E8=AF=81C=E5=B8=81=E7=9A=84=E5=
=80=BC=E5=A4=9F=E4=B8=8D=E5=A4=9F
                    var _cbNum =3D $(".comm_ask_second #cb_num").val();
                    if ($(".comm_ask_second #chk_cb")[0].checked) {
                        if (!/^[1-9]\d*$/.test(_cbNum)) {
                            $(".err_div").css("display", "block");
                            =
$(".err_txt").text("=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F=E5=8F=AA=E8=83=BD=
=E5=BD=95=E5=85=A5=E6=95=B0=E5=AD=97=EF=BC=81");
                            $(".comm_ask_second #cb_num").focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;
                            return false;
                        }
                    }

                    function valid(fild,fild_value,name,minL,maxL){

                        if((fild_value && fild_value[0] =3D=3D "") || =
fild_value.length=3D=3D0){
                            mess =3D '=E8=AF=B7=E8=BE=93=E5=85=A5' + =
name;
                            $(".err_div").css("display", "block");
                            $(".err_txt").text(mess);
                            fild.focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;

                            return false;
                        }
                        =
if(fild_value.length<minL||fild_value.length>maxL){
                            mess =3D =
'=E8=AF=B7=E8=BE=93=E5=85=A5=E9=95=BF=E5=BA=A6=E4=B8=BA' =
+minL+"-"+maxL+"=E7=9A=84"+name;

                            $(".err_txt").text(mess);
                            $(".err_div").css("display", "block");
                            fild.focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;

                            return false;
                        }
                        else{
                            return true;
                        }
                    }
                    =
//=E9=AA=8C=E8=AF=81C=E5=B8=81=E4=B8=8D=E5=A4=9F=E4=B8=8D=E8=AE=B8=E6=8F=90=
=E4=BA=A4
                    if(coin_flag){
                        $(".err_div").css("display", "block");
                        $(_this).css("background-color", "#be0000");
                        isSubmitting =3D false;
                        return false;
                    }
                    var tempDomain =3D document.domain;
                    document.domain =3D 'csdn.net';
                    //_fromType =3D "";
                    =
//=E7=95=99=E6=84=8F=E8=AF=A5=E6=8E=A5=E5=8F=A3=E8=AF=B7=E6=B1=82=E7=B1=BB=
=E5=9E=8B,=E5=BC=82=E6=AD=A5=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=EF=BC=8C=
=E5=9C=A8=E8=AF=A5=E6=AC=A1=E5=8A=A0=E5=85=A5=E4=BA=86=E9=AA=8C=E8=AF=81=E7=
=9A=84=E8=83=BD=E5=8A=9B=EF=BC=8C
                    //$.ajax({
                    //	type: "get",
                    ajaxProxy(create_question_proxy, {
                        type: "post",
                        data: {
                            "question[title]": _title,
                            "question[body]": _content,
                            "question[tag_list]": _tagList,
                            "question[from_type]": _fromType,
                            "question[is_reward]": _isreward,
                            "question[coin]": _coin
                        },
                        url: create_question_url,
                        dataType: "json",
                        //dataType: "jsonp",
                        //jsonp: "callback",
                        //async: false,
                        success: function(obj) {
                            document.domain =3D tempDomain;
                            if (obj.status) {
                                =
//=E8=B7=B3=E8=BD=AC=E5=88=B0=E6=96=B0=E9=A1=B5=E9=9D=A2,=E5=85=B3=E9=97=AD=
,=E9=87=8D=E8=AE=BE=E8=BF=99=E4=B8=AA=E5=80=BC=E5=BD=93=E5=89=8D=E9=A1=B5=
=E9=9D=A2
                                =
$(".comm_ask_second").css("display","none");
                                $(_this).css("background-color", =
"#be0000");
                                isSubmitting =3D false;
                                $( '.marker' ).remove();
                                var =
href=3D"//ask.csdn.net/questions/"+obj.id;
                                window.open(href, =
"target=3D_blank,location=3D1");
                                =
alert("=E4=BD=A0=E7=9A=84=E9=97=AE=E9=A2=98=E5=B7=B2=E5=8F=91=E5=B8=83=E5=
=88=B0=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E3=80=82");
                            } else {
                                $(".err_div").css("display", "block");
                                $(".err_txt").text(obj.msg);
                                $(_this).css("background-color", =
"#be0000");
                                isSubmitting =3D false;
                            }
                        },
                        error: function(err) {
                            document.domain =3D tempDomain;
                            var i =3D 0;
                        }
                    });

                    =
//=E9=9C=80=E8=A6=81=E8=B0=83=E7=94=A8=E5=85=B3=E9=97=AD=E8=BF=99=E4=B8=AA=
=E7=AA=97=E5=8F=A3
                    return false;
                } );
                //=E7=BB=91=E5=AE=9A=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2
                AskSearch({    $inputBox: $(".comm_ask_second =
#askInputSecond"),
                    $container: $("body > #common_ask_div_sc"),
                    searchUrl: ask_topic_autocomplete_url, =
//"http://192.168.6.227:9403/ask_topic/autocomplete", =
//=E6=90=9C=E7=B4=A2=E7=9A=84Url
                    isFirst: false
                });

                $(".comm_ask_second .CodeMirror textarea").bind("focus", =
function() {
                    $(".CodeMirror").addClass("CodeMirror-focused");
                });

                =
//=E5=8A=A8=E6=80=81=E5=8E=BB=E5=90=8E=E5=8F=B0=E8=8E=B7=E5=8F=96=E6=8E=A8=
=E8=8D=90=E6=A0=87=E7=AD=BEstart
                $(".comm_ask_second #askInputSecond").bind("blur", =
function(){
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D =
editor.codemirror.getValue();//$(".comm_ask_second #wmd-input").val();
                    /* if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     } else {
                     _content =3D "";
                     }*/
                    setTimeout(function(){$("#div_sc").css("display", =
"none");},400);
                    loadRecommTags( _title, _content);
                });
                $(".comm_ask_second .CodeMirror textarea").bind("blur", =
function(){
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D =
editor.codemirror.getValue();//$(".comm_ask_second #wmd-input").val();
                    /*if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     } else {
                     _content =3D "";
                     }*/
                    loadRecommTags( _title, _content);
                });
                =
//=E5=8A=A8=E6=80=81=E5=8E=BB=E5=90=8E=E5=8F=B0=E8=8E=B7=E5=8F=96=E6=8E=A8=
=E8=8D=90=E6=A0=87=E7=AD=BEend
                =
//=E5=BC=82=E6=AD=A5=E5=90=8E=E5=8F=B0=E9=AA=8C=E8=AF=81C=E5=B8=81=E8=B6=B3=
=E5=A4=9F=EF=BC=9F
                $(".comm_ask_second #cb_num").bind("blur",function(){

                    if($(".comm_ask_second #chk_cb")[0].checked){
                        $(".err_div").css("display", "none");
                        if (!/^[0-9]\d*$/.test( $(".comm_ask_second =
#cb_num").val())) {
                            $(".err_div").css("display", "block");
                            =
$(".err_txt").text("=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F=E5=8F=AA=E8=83=BD=
=E5=BD=95=E5=85=A5=E6=95=B0=E5=AD=97=EF=BC=81");
                            $(".comm_ask_second #cb_num").focus();
                            return false;
                        }
                        $.ajax({
                            type: "get",
                            url: valid_coin,
                            dataType: "jsonp",
                            jsonp: "callback",
                            async: false,
                            success: function(obj) {
                                if (obj.error=3D=3D0) {
                                    =
//=E8=BF=99=E4=B8=AA=E7=8A=B6=E6=80=81=E4=B8=8B=E8=A1=A8=E7=A4=BA=E6=8B=BF=
=E5=88=B0=E4=BA=86C=E5=B8=81
                                    if( $(".comm_ask_second =
#cb_num").val()>obj.score){
                                        $(".err_div").css("display", =
"block");
                                        =
$(".err_txt").text("=E6=82=A8=E7=9A=84C=E5=B8=81=E4=BD=99=E9=A2=9D=E4=B8=8D=
=E8=B6=B3");
                                        =
//=E9=AA=8C=E8=AF=81=E4=B8=8D=E9=80=9A=E8=BF=87=E4=B8=8D=E8=AE=B8=E6=8F=90=
=E4=BA=A4
                                        coin_flag=3Dtrue;
                                    }
                                    else{
                                        coin_flag=3Dfalse;
                                    }
                                } else {
                                    $(".err_div").css("display", =
"block");
                                    $(".err_txt").text(obj.msg);
                                    coin_flag=3Dtrue;
                                }
                            },
                            error: function(err) {
                                // =
alert("=E5=90=8E=E5=8F=B0=E5=87=BA=E9=94=99=E4=BA=86");
                            }
                        });}

                })
                =
//=E6=8F=90=E9=97=AE=E7=9A=84=E8=87=AA=E5=8A=A8TAG,=E9=9C=80=E8=A6=81=E4=BD=
=A0=E8=87=AA=E8=A1=8C=E7=B2=98=E8=B4=B4=E9=82=A3=E4=B8=AAJS=E6=96=87=E4=BB=
=B6
                Creat_Dynamic_Tag(".comm_ask_second #divSearchTags", =
ask_topic_tag_suggest_url, ".comm_ask_second =
input[name=3D'txtSearchTags']");

            }

        }//close pop function

        function ShowSecondPop() {
            // =
askFirst.popup.closeFun();=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5

            $("body > .ask_first").find( '[nodetype=3D"close"]' =
).click();//=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5=E7=AC=AC=E4=B8=80=E4=B8=AA=


            pop($("body > .ask_second"));
        }

        //=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2=E6=8F=90=E7=A4=BA
        function AskSearch(conf) {

            $("body").click(function(e){

                var target=3D  e.target;

                if($(target).closest("#common_ask_div_sc").length<1){
                    conf.$container.css("display","none");
                }

            })

            var $inputBox =3D conf.$inputBox;
            var $container =3D conf.$container;
            var searchUrl =3D conf.searchUrl;
            var isFirst =3D conf.isFirst;  =
//=E8=B0=83=E7=94=A8=E6=90=9C=E7=B4=A2=E7=9A=84=E6=98=AF=E9=A6=96=E6=AC=A1=
=E5=BC=B9=E5=87=BA=E7=AA=97=E8=BF=98=E6=98=AF=E6=8F=90=E9=97=AE=E5=BC=B9=E5=
=87=BA=E7=AA=97
            var nowItem =3D -1;
            var userInput =3D "";
            $container.css("display", "none");
            $inputBox.css("autocomplete", "off");
            $container.css("z-index", "1100");

            //$inputBox.unbind("keyup");
            $inputBox[0].onkeyup=3Dfunction(ev) {//propertychange
                var oEvent =3D ev||event;
                if(oEvent.keyCode =3D=3D 40 || oEvent.keyCode =3D=3D 38 =
|| oEvent.keyCode =3D=3D 27 || (oEvent.keyCode >=3D 113 && =
oEvent.keyCode <=3D 123) ||
                    oEvent.keyCode =3D=3D 16 || oEvent.keyCode =3D=3D 17 =
|| oEvent.keyCode =3D=3D 18 || oEvent.keyCode =3D=3D 9 || oEvent.keyCode =
=3D=3D 20){
                    return;
                }
                $container.css("opacity", 0);
                var rect =3D this.getBoundingClientRect();
                var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);
                $container.css("left", rect.left);
                $container.css("top", rect.bottom + scrTop);//rect.top + =
rect.height
                //$container.css("top", rect.bottom);
                var inVal =3D this.value;
                if ( this.value.length > 0 ) {
                    showHint(inVal,$container,$inputBox,isFirst);
                } else {
                    $container.css("display", "none");
                }
                userInput =3D inVal;

            };
            //$inputBox.unbind("keydown");
            $inputBox[0].onkeydown=3Dfunction(ev){
                var evt =3D ev||event;
                if (evt.keyCode =3D=3D 27) {
                    $container.css("display", "none");
                    $inputBox.val(userInput);
                }
                if (evt.keyCode =3D=3D 13) {
                    $container.css("display", "none");
                }
                if (evt.keyCode =3D=3D 40) {
                    nowItem ++;
                    var suggItems =3D $(".sItem", $container);
                    var itemCnt =3D suggItems.length;
                    if ( nowItem =3D=3D=3D itemCnt) {
                        nowItem =3D -1;
                    }
                    suggItems.removeClass("sItemHover");
                    if (nowItem !=3D -1) {
                        var nowSugg =3D suggItems.eq(nowItem);
                        nowSugg.addClass("sItemHover");
                        $inputBox.val($(".sfirst", nowSugg).text());
                    } else {
                        $inputBox.val(userInput);
                    }
                }
                if (evt.keyCode =3D=3D 38) {
                    nowItem --;
                    var suggItems =3D $(".sItem", $container);
                    var itemCnt =3D suggItems.length;
                    if (nowItem =3D=3D -2) {
                        nowItem =3D itemCnt - 1;
                    }
                    suggItems.removeClass("sItemHover");
                    if (nowItem !=3D -1) {
                        var nowSugg =3D suggItems.eq(nowItem);
                        nowSugg.addClass("sItemHover");
                        $inputBox.val($(".sfirst", nowSugg).text());
                    } else {
                        $inputBox.val(userInput);
                    }
                }
            };
        }
        =
//=E4=BB=A5=E4=B8=8B=E6=96=B9=E6=B3=95=E6=98=AFAskSerch=E7=9A=84=E5=8E=9F=
=E5=9E=8B=E6=96=B9=E6=B3=95=E6=8B=86=E8=A7=A3
        function showHint(inVal,$container,$inputBox,isFirst) {
            $container.css("display", "block");
            $.ajax( {
                type: "get",
                url: ask_topic_autocomplete_url, =
//"http://192.168.6.210//mcs/problem_solving/10710/1",
                data: {query: inVal, fields:"title,id,comments"},
                dataType: 'jsonp',
                jsonp: "callback",
                async: false,
                success: function (obj) {
                    if (obj !=3D null && obj.contents) {
                        fillSuggestData($container, =
obj.contents,$inputBox,isFirst);
                    }
                },
                error: function(err){
                    var i =3D 0;
                    //alert('err');
                }
            } );
        }

        function fillSuggestData ($container, items,$inputBox,isFirst) {
            if (isFirst) {
                $container.html("<div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div><div class=3D\"sFooter\"><a =
class=3D\"sFirstNewAsk\">=E6=88=91=E6=83=B3=E6=8F=90=E4=B8=80=E4=B8=AA=E6=
=96=B0=E9=97=AE=E9=A2=98</a></div>");
            } else {
                $container.html("<div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div>");
            }
            var tpl =3D '<div class=3D"sItem clearfix"><a href=3D"{2}" =
target=3D"_blank"><span class=3D"sfirst">{0}</span><span =
class=3D"ssecond">{1}</span></a></div>';

            if (items.length > 0) {
                $container.css("opacity", 1);
                //$container.css("display", "none");
            }
            for (var i =3D 0; i < items.length; i++){
                var item =3D items[i];
                var itemHtml =3D tpl.replace(/\{0\}/, item.title)
                    .replace(/\{1\}/, item.comments + =
"=E4=B8=AA=E5=9B=9E=E7=AD=94")
                    .replace(/\{2\}/, ask_detail_url + item.id);

                if (isFirst) {
                    $(".sFooter", $container).before(itemHtml);
                } else {
                    $container.append(itemHtml);
                }
            }
            if (isFirst) {
                $("#common_ask_div_sc .sFirstNewAsk").unbind("click");
                $("#common_ask_div_sc .sFirstNewAsk").bind("click", =
function(){
                    ShowSecondPop();
                });
            }
            $(".sItem", $container).each(function(i, item) {
                    var _i =3D i;
                    var _item =3D $(item);
                    _item.bind("mouseover", function() {
                        $(".sItem", =
$container).removeClass("sItemHover");
                        $(this).addClass("sItemHover");
                        nowItem =3D _i;
                    });
                    _item.bind("click", function() {
                        //$inputBox.val($(".sfirst", $(this)).text());
                        $container.css("display","none");
                    });
                }
            );
        }
        =
//=E8=8E=B7=E5=8F=96=E5=90=8E=E5=8F=B0=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=

        function  loadRecommTags( _title, _content){
            if (_title =3D=3D "" && _content=3D=3D"") return;
            var dataStr =3D JSON.stringify({title: _title, body: =
_content, size: 4});
            //$.ajax({

            var tempDomain =3D document.domain;
            document.domain =3D 'csdn.net';
            ajaxProxy(ask_topic_tag_suggest_proxy, {
                headers: {
                    'X-acl-token': 'Yz3GAP4stGOIrLaIrnDed-uThp8K'
                },
                type: "POST",
                url: ask_topic_tag_suggest_url + "?dataType=3Djson",
                data: dataStr,//{title: _title, body: _content, size: =
4},
                contentType: "application/json",
                dataType: "json",
                //dataType: "jsonp",
                //jsonp: "callback",
                //contentType:'application/x-www-form-urlencoded; =
charset=3DUTF-8',
                success: function(obj) {
                    document.domain =3D tempDomain;
                    if (obj!=3Dnull && obj.length > 0) {
                        var $dataContainer =3D $( ".comm_ask_second =
#ask2_tagRecomm_div");
                        $dataContainer.html("<span =
class=3D\"drt_tit\">=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=EF=BC=9A</span>"=
);
                        //var tpl =3D "<label =
class=3D\"se_key\">{0}</label>";
                        var tpl =3D "<a href=3D\"#\" =
class=3D\"se_key\">{0}</a>";

                        var items =3D obj;
                        for (var i =3D 0; i < items.length; i++){
                            var item =3D items[i];
                            if (item.name =3D=3D "") continue;
                            var itemHtml =3D tpl.replace(/\{0\}/, =
item.name + "&nbsp;&nbsp;=EF=BC=8B");
                            $dataContainer.append(itemHtml);
                            if (i =3D=3D 4) {
                                break;
                            }
                        }
                        try {
                            window['trackingAd']($dataContainer);
                        } catch (ex) {}
                        $(".comm_ask_second =
.se_key").each(function(i,item){
                            var _item =3D $(item);
                            _item.bind("click", function(){
                                var cTagsObj =3D $(".comm_ask_second =
input[name=3D'txtSearchTags']");
                                var cTags =3D cTagsObj.val();
                                var tagArr =3D cTags.split(',');

                                var tagText =3D _item.text();
                                var tagName =3D tagText.substring(0, =
tagText.length - 3);

                                for (var i =3D 0; i < tagArr.length; i =
++) {
                                    if (tagArr[i] =3D=3D=3D tagName) {
                                        return;
                                    }
                                }
                                var oTagStr =3D cTags;
                                if (tagArr.length >=3D 5) {
                                    //$(".err_div").css("display", =
"block");
                                    =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                                    =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                                    return;
                                    //oTagStr =3D "";
                                    //for (var i =3D 0; i < 4; i ++) {
                                    //  oTagStr +=3D tagArr[i] + ",";
                                    //}
                                    //oTagStr =3D oTagStr.substring(0, =
oTagStr.length-1);
                                }
                                var tagCon =3D $(".comm_ask_second =
#divSearchTags");
                                var tagInput =3D tagCon.find("input");

                                var preNode =3D =
tagInput[0].previousSibling;
                                if (tagArr.length >=3D 5 && preNode) {
                                    =
tagInput[0].parentNode.removeChild(preNode);
                                }
                                tagInput.before('<span =
class=3D"tag">'+'<span>'+tagName+'</span>'+'<a =
title=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE" =
href=3D"javascript:;">'+'=C3=97'+'</a>'+'</span>');

                                var newTags =3D oTagStr =3D=3D "" ? =
tagName : oTagStr + "," + tagName;
                                cTagsObj.val(newTags);
                                return false;
                            });
                        });
                    }
                },
                error: function(err){
                    document.domain =3D tempDomain;
                    var i =3D 0;
                    =
//alert('=E5=88=9D=E5=A7=8B=E5=8C=96=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=E9=
=94=99=E8=AF=AF=EF=BC=81');
                }
            });
        }

        //=E8=87=AA=E5=8A=A8Tag
        function Creat_Dynamic_Tag(conid,dataurl,subinput)
        {
            var oTagscon=3D$(conid)[0];
            var tagInput=3D$(conid).find('input')[0];

            var iNow=3D-1;
            var oldValue=3D'';
            var tags_array =3D [];

            var oUl =3D document.createElement('ul');
            oUl.className =3D 'complete_list';
            var oBody=3Ddocument.getElementsByTagName('body')[0];
            oBody.appendChild(oUl);

            tagInput.onkeyup=3Dfunction(ev)
            {
                var oEvent=3Dev || event;

                if(oEvent.keyCode=3D=3D40 || oEvent.keyCode=3D=3D38|| =
oEvent.keyCode=3D=3D13){
                    return false;
                }

                $(this).removeAttr("style");

                if(oEvent.keyCode=3D=3D8&&tagInput.value=3D=3D''){

                    oUl.style.display =3D 'none';
                    return false;
                }

                $.ajax({
                    type: "get",
                    //url:dataurl,
                    url: "https://recommend-api.csdn.net/tag/complete?",
                    //data:{'title': tagInput.value, body: =
tagInput.value, size: 4},
                    data: {'query': tagInput.value},
                    dataType:"jsonp",
                    //jsonp: "callback",
                    success: function(jsonstr){
                        =
//=E8=8E=B7=E5=8F=96input=E8=BE=93=E5=85=A5=E6=A1=86=E7=9A=84=E7=BB=9D=E5=
=AF=B9=E4=BD=8D=E7=BD=AE
                        var tagInput_pos =3D getPos(tagInput);
                        var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);

                        =
//=E5=BC=B9=E5=87=BA=E4=B8=8B=E6=8B=89=E6=A1=86=E7=9B=B8=E5=AF=B9=E4=BA=8E=
input=E8=BE=93=E5=85=A5=E6=A1=86=E5=90=91=E4=B8=8B=E5=81=8F=E7=A7=BB=E5=80=
=BC
                        var mp =3D242;
                        iNow=3D-1;
                        oldValue=3DtagInput.value;

                        var data =3D jsonstr.suggestions;

                        if(data.length!=3D0)
                        {

                            var bb =3D $( window ).height() - =
tagInput_pos.top;
                            $(oUl).empty();
                            =
//$(oUl).css({left:tagInput_pos.left,top:tagInput_pos.top+mp+scrTop})
                            =
$(oUl).css({left:tagInput_pos.left,bottom:bb});
                            for(var i=3D0;i<data.length;i++)
                            {
                                $(oUl).append('<li>'+data[i]+'</li>');
                            }
                            $(oUl).css('display','block');
                        }

                        var aLi =3D oUl.children;

                        for(var i=3D0; i<aLi.length; i++)
                        {
                            aLi[i].index=3Di;

                            aLi[i].onmouseover=3Dfunction(){

                                tagInput.value =3D this.innerHTML;

                                for(var i=3D0; i<aLi.length; i++){
                                    aLi[i].className=3D'';
                                }
                                this.className =3D 'outborder';
                                iNow=3Dthis.index;
                            }
                        }
                    }

                });
            }

            tagInput.onblur =3D function()
            {
                if(tagInput.value=3D=3D'')
                {
                    return false;
                }
                else
                {
                    if ($(subinput).val() !=3D "") {
                        tags_array =3D $(subinput).val().split(",");
                    }
                    var re=3D/[^0-9a-zA-Z\u4e00-\u9fa5\-+#]+/;
                    var re2 =3D /\-$/;
                    var re3 =3D /^\-/;
                    var str_arr =3D tagInput.value.split(re);
                    var str =3D str_arr.join("-");

                    if(str=3D=3D'-')
                    {
                        $(tagInput).css('background-color','#fbd8db');
                        return false;
                    }

                    if(re2.test(str))
                    {
                        str =3D str.substring(0,str.length-1);
                    }

                    if(re3.test(str))
                    {
                        str =3D str.substr(1);
                    }

                    if(find_in_arr(tags_array,str))
                    {
                        $(tagInput).css('background-color','#fbd8db');
                        return false;
                    }
                    var tags_len =3D tags_array.length;
                    if (tags_len >=3D 5) {
                        //$(".err_div").css("display", "block");
                        =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                        =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                        return;
                        //tags_array.splice(tags_len - 1, 1);
                        //_remove_last_tag(conid);
                    }

                    _add_tag(conid,str);
                    tagInput.value =3D '';
                    tags_array.push(str);
                    $(subinput).val(tags_array.join(','));
                    oUl.style.display =3D 'none';
                    return false;
                }
            }

            tagInput.onkeydown=3Dfunction(ev){

                var aLi =3D oUl.children;

                var oEvent=3Dev || event;

                if(oEvent.keyCode=3D=3D13||oEvent.keyCode=3D=3D188){

                    if(tagInput.value=3D=3D'')
                    {
                        return false;
                    }
                    else
                    {
                        if ($(subinput).val() !=3D "") {
                            tags_array =3D $(subinput).val().split(",");
                        }
                        var re=3D/[^0-9a-zA-Z\u4e00-\u9fa5\-+#]+/;
                        var re2 =3D /\-$/;
                        var re3 =3D /^\-/;
                        var str_arr =3D tagInput.value.split(re);
                        var str =3D str_arr.join("-");
                        if(str=3D=3D'-')
                        {
                            =
$(tagInput).css('background-color','#fbd8db');
                            return false;
                        }

                        if(re2.test(str))
                        {
                            str =3D str.substring(0,str.length-1);
                        }

                        if(re3.test(str))
                        {
                            str =3D str.substr(1);
                        }

                        if(find_in_arr(tags_array,str))
                        {
                            =
$(tagInput).css('background-color','#fbd8db');
                            return false;
                        }
                        var tags_len =3D tags_array.length;
                        if (tags_len >=3D 5) {
                            //$(".err_div").css("display", "block");
                            =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                            =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                            return;
                            //tags_array.splice(tags_len - 1, 1);
                            //_remove_last_tag(conid);
                        }

                        _add_tag(conid,str);
                        tagInput.value =3D '';
                        oUl.style.display =3D 'none';
                        tags_array.push(str);
                        $(subinput).val(tags_array.join(','));
                        return false;
                    }
                }

                if(oEvent.keyCode=3D=3D8&&tagInput.value=3D=3D''){

                    _remove_last_tag(conid);
                    oUl.style.display =3D 'none';
                    tags_array.pop();
                    $(subinput).val(tags_array.join(','));
                }

                if(oEvent.keyCode=3D=3D40){
                    iNow++;

                    if(iNow=3D=3DaLi.length){
                        iNow=3D-1;
                    }

                    for(var i=3D0; i<aLi.length; i++){
                        aLi[i].className=3D'';
                    }
                    if(iNow!=3D-1){
                        aLi[iNow].className=3D'outborder';
                        tagInput.value=3DaLi[iNow].innerHTML;
                    }else{
                        tagInput.value=3DoldValue;
                    }
                }

                if(oEvent.keyCode=3D=3D38){
                    iNow--;
                    if(iNow=3D=3D-2){
                        iNow=3DaLi.length-1;
                    }

                    for(var i=3D0; i<aLi.length; i++){
                        aLi[i].className=3D'';
                    }
                    if(iNow!=3D-1){
                        aLi[iNow].className=3D'outborder';
                        tagInput.value=3DaLi[iNow].innerHTML;
                    }else{
                        tagInput.value=3DoldValue;
                    }
                    return false;
                }
            }

            =
//=E7=82=B9=E5=87=BB=E6=AF=8F=E4=B8=AA=E6=A0=87=E7=AD=BE=E5=90=8E=E7=9A=84=
'x'=E5=88=A0=E9=99=A4=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE

            oTagscon.onclick =3D function(e)
            {
                var e =3D e || window.event;
                var target =3D e.srcElement || e.target;

                if (target.title =
=3D=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE")
                {
                    if ($(subinput).val() !=3D "") {
                        tags_array =3D $(subinput).val().split(",");
                    }
                    var cur_str =3D =
target.parentNode.children[0].innerHTML;
                    tags_array =3D remove_in_arr(tags_array,cur_str);
                    $(subinput).val(tags_array.join(','));
                    _remove_cur_tag($(target));
                    tagInput.focus();
                    $(tagInput).css('background-color','#fbd8db');
                    $(oUl).css('display','none');
                }
            }

            tagInput.onclick=3Dfunction(ev){
                var oEvent=3Dev || event;
                oEvent.cancelBubble=3Dtrue;
            }

            document.onclick =3D function()
            {
                oUl.style.display =3D 'none';
            }

            =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=8C=87=E5=AE=9A=E7=9A=84=
=E5=85=83=E7=B4=A0,=E5=B9=B6=E4=B8=94=E5=88=A0=E9=99=A4=E8=BF=99=E4=B8=AA=
=E5=85=83=E7=B4=A0
            function remove_in_arr(arr,str)
            {
                for(var i=3D0;i<arr.length;i++)
                {
                    if(arr[i]=3D=3Dstr)
                    {
                        arr.splice(i,1);
                    }
                }
                return arr;
            }
        }


        =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=8C=87=E5=AE=9A=E7=9A=84=
=E5=85=83=E7=B4=A0,=E5=B9=B6=E4=B8=94=E5=88=A0=E9=99=A4=E8=BF=99=E4=B8=AA=
=E5=85=83=E7=B4=A0
        function remove_in_arr(arr,str)
        {
            for(var i=3D0;i<arr.length;i++)
            {
                if(arr[i]=3D=3Dstr)
                {
                    arr.splice(i,1);
                }
            }
            return arr;
        }


        =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=9C=89=E6=B2=A1=E6=9C=89=
=E7=9B=B8=E5=90=8C=E7=9A=84=E5=85=83=E7=B4=A0
        function find_in_arr(arr,str)
        {
            var find =3D false;

            for(var i=3D0;i<arr.length;i++)
            {
                if(arr[i]=3D=3Dstr)
                {
                    find =3D true;
                }
            }
            return find;
        }

        //=E5=A2=9E=E5=8A=A0=E6=A0=87=E7=AD=BE =
obj=E4=B8=BA=E5=A2=9E=E5=8A=A0=E6=A0=87=E7=AD=BE=E7=9A=84=E5=AE=B9=E5=99=A8=
=EF=BC=8Cstr=E4=B8=BA=E6=A0=87=E7=AD=BE=E4=B8=AD=E7=9A=84=E6=96=87=E5=AD=97=
=E5=86=85=E5=AE=B9=E3=80=82
        function _add_tag(obj,str)
        {
            var tagCon =3D $(obj);
            var tagInput =3D tagCon.find('input');
            tagInput.before('<span =
class=3D"tag">'+'<span>'+str+'</span>'+'<a =
title=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE" =
href=3D"javascript:;">'+'=C3=97'+'</a>'+'</span>');
        }

        =
//=E5=88=A0=E9=99=A4=E6=9C=80=E5=90=8E=E4=B8=80=E4=B8=AA=E6=A0=87=E7=AD=BE=

        function _remove_last_tag(obj)
        {
            var tagCon =3D $(obj);
            tagCon.find('.tag').last().remove();
        }

        //=E5=88=A0=E9=99=A4=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE
        function _remove_cur_tag(obj)
        {
            obj.parent().remove();
        }

        function getPos(obj)
        {
            var l=3D0;
            var t=3D0;
            while(obj)
            {
                l+=3Dobj.offsetLeft;
                t+=3Dobj.offsetTop;
                obj=3Dobj.offsetParent;
            };
            return {left:l,top:t}
        };

    });
})();

------=_NextPart_000_0000_01D1170A.85812440--
